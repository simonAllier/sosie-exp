[{"failures":[],"tindex":"38b8f9f1-db0a-11e4-8788-fff844c3a8dd","variableMapping":{"counts":"size","counter":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"38baf5c2-db0a-11e4-8788-8339838ddb4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"38baf5c3-db0a-11e4-8788-bdc7e247d1fb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"38baf5c4-db0a-11e4-8788-3be7e5d9dccd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"38baf5c5-db0a-11e4-8788-2ffd34898287","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"38baf5c6-db0a-11e4-8788-1b24cdb7ef42","variableMapping":{"cap":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-1},{"failures":[39,40],"tindex":"38baf5c7-db0a-11e4-8788-cd07eba7c18c","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"38baf5c8-db0a-11e4-8788-f997b84dcffe","variableMapping":{"time":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"38baf5c9-db0a-11e4-8788-731ee350f8a5","variableMapping":{"id":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"38baf5ca-db0a-11e4-8788-f54d4f3e7e15","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"38baf5cb-db0a-11e4-8788-9323a8427e59","variableMapping":{"acceptBit":"ferryBit","motorcarTag":"highwayValue","ferryBit":"acceptBit","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"38baf5cc-db0a-11e4-8788-f7164c467cf4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,39,84,85,86,87,88,0,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,1,114,115,116,117,118,119,120,2,121,122,3,123,124,125,126,127,4,128,129,130,131,132,133,134,5,6,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,7,152,153,154,155,156,157,158,8,159,160,9,161,162,163,164,165,10,166,167,168,169,170,171,172,11,12,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,19,244,245,246,247,248,249,250,20,251,252,21,253,254,255,256,257,22,258,259,260,261,262,263,264,23,24,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,25,288,289,26,290,291,292,293,294,295,296,297,298,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,313,314,315,316,317,318,319,43,320,321,322,44,323,324,45,325,46,326,327,47,48,328,49,329,330,331,50,332,51,52,333,53,54,55,56,57,58],"tindex":"38bb43ed-db0a-11e4-8788-e7149c251ac1","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"38bb43ee-db0a-11e4-8788-1f9165d1091b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"38bb43ef-db0a-11e4-8788-fb87fd872510","variableMapping":{"storedKey":"flags","key":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-2},{"failures":[334,335,336,337,338,339,340,191,199,200,219,227,228],"tindex":"38bb43f0-db0a-11e4-8788-b9fa32636ef4","variableMapping":{"factor":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[341,342,343,344],"tindex":"38bb6b01-db0a-11e4-8788-0dfe925447d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[345],"tindex":"38bb6b02-db0a-11e4-8788-079030df40e2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-1},{"failures":[],"tindex":"38bbb923-db0a-11e4-8788-0795fe821993","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"38bbb924-db0a-11e4-8788-6febbc06789d","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[346,347,28,30,31,348,34,37],"tindex":"38bbb925-db0a-11e4-8788-319ea549fb74","variableMapping":{"r":"speed","x":"speed","absY":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"38bbb926-db0a-11e4-8788-c553c09f4e87","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"38bbb927-db0a-11e4-8788-31643bc58897","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[349,350,63,351,352,353,82,83,108,115,129,141,144,146,153,167,179,198,354,355,356,357,358,359,360,361,226,362,363,364,238,245,259,271,278,280,281,301,303,308,309,311,49,333,55],"tindex":"38bbb928-db0a-11e4-8788-5336c426e5b9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-1},{"failures":[365],"tindex":"38bbb929-db0a-11e4-8788-dfa56f4ac1a1","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[59,60,61,62,63,64,366,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,39,84,367,85,86,87,88,0,100,101,102,103,104,105,106,107,108,109,110,111,368,112,113,1,114,115,116,117,118,119,120,2,121,122,3,123,124,125,126,127,4,128,129,130,131,132,133,134,5,6,135,136,137,138,139,140,141,142,143,144,369,145,146,147,148,149,370,150,151,7,152,153,154,155,156,157,158,8,159,160,9,161,162,163,164,165,10,166,167,168,169,170,171,172,11,12,173,174,175,176,177,178,179,180,181,182,183,184,185,371,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,372,205,206,208,209,210,211,373,212,213,214,215,216,374,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,375,233,234,376,377,13,378,362,379,380,381,382,383,14,235,384,15,385,386,387,388,389,16,390,363,391,392,393,394,236,17,18,395,396,397,398,399,400,364,401,402,237,238,239,240,241,403,242,243,19,244,245,246,247,248,249,250,20,251,252,21,253,254,255,256,257,22,258,259,260,261,262,263,264,23,24,265,266,267,268,269,270,271,272,273,274,275,404,276,277,278,279,280,281,282,405,283,284,285,286,406,407,408,287,409,410,411,412,365,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,346,25,288,289,26,290,291,431,432,27,433,434,435,347,28,436,437,438,439,440,441,442,443,444,445,446,341,29,447,448,30,449,31,32,450,451,452,453,454,455,456,457,342,458,292,293,459,33,460,461,462,348,34,463,464,465,466,467,468,469,470,471,472,473,343,35,474,475,476,36,477,37,478,479,480,481,482,483,484,485,486,344,38,487,488,489,490,491,492,493,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,494,312,313,495,314,315,316,317,318,319,43,320,321,322,44,323,324,45,325,46,326,327,47,48,328,49,329,330,331,50,332,51,52,333,53,54,55,56,57,58],"tindex":"38bbe03a-db0a-11e4-8788-df92fc39af49","variableMapping":{"y":"defaultD","angle":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[496,497],"tindex":"38bbe03b-db0a-11e4-8788-bb4f64637bb2","variableMapping":{"eleDelta":"midLon","decEleSum":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[25,290],"tindex":"38bbe03c-db0a-11e4-8788-c15fe56ce6fd","variableMapping":{"id":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"38bbe03d-db0a-11e4-8788-fb7d5fa90caa","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"38bbe03e-db0a-11e4-8788-1de9e231022e","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[498],"tindex":"38bbe03f-db0a-11e4-8788-0f3f73d6c106","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"38bbe040-db0a-11e4-8788-93a3f92f0d4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-2},{"failures":[],"tindex":"38bbe041-db0a-11e4-8788-f710e7e82dab","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:430","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[31],"tindex":"38bc0752-db0a-11e4-8788-379b56efca7d","variableMapping":{"ghLocation":"trackType","osmFile":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"38bc0753-db0a-11e4-8788-4361a1b1fbbf","variableMapping":{"systemProperty":"location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[],"tindex":"38bc0754-db0a-11e4-8788-cdbb24972874","variableMapping":{"this":"osmReader"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.finishedReading()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"38bc0755-db0a-11e4-8788-0562501621b5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[39,40],"tindex":"38bc0756-db0a-11e4-8788-d75532203a7b","variableMapping":{"numTiles":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"38bc0757-db0a-11e4-8788-2d53835f3bec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[1,122,3,124,4,128,5,6,7,160,9,162,10,166,11,12,13,384,15,386,16,390,17,18,19,252,21,254,22,258,23,24,25,26],"tindex":"38bc0758-db0a-11e4-8788-959d3ea5d7fe","variableMapping":{"bytesForFlags":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"38bc0759-db0a-11e4-8788-d3ff9a630e79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[417],"tindex":"38bc075a-db0a-11e4-8788-7f31f8f17d1e","variableMapping":{"directionBitMask":"roundaboutBit","blockByDefault":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[423],"tindex":"38bc075b-db0a-11e4-8788-4bd5edc12863","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[439,451,466,479],"tindex":"38bc075c-db0a-11e4-8788-ef09de83ccb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:471","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"38bc075d-db0a-11e4-8788-c73e5ab76555","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:272","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterator com.graphhopper.util.EdgeSkipIterator = com.graphhopper.util.EdgeSkipExplorer.setBaseNode(com.graphhopper.util.EdgeIteratorState.getAdjNode())"},"status":-2},{"failures":[],"tindex":"38bc2e6e-db0a-11e4-8788-01ff0aca5445","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"38bc2e6f-db0a-11e4-8788-670649f77c97","variableMapping":{"d":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"38bc2e70-db0a-11e4-8788-2f9b168ba35d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"38bc2e71-db0a-11e4-8788-4be754614c12","variableMapping":{"high":"tmp","len":"tmp","start":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"38bc2e72-db0a-11e4-8788-751489935e06","variableMapping":{"osmFile":"entryVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"38bc2e73-db0a-11e4-8788-83a7bd044c43","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"38bc2e74-db0a-11e4-8788-41f8b0105a6c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"38bc2e75-db0a-11e4-8788-cf3a4494200a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"38bc2e76-db0a-11e4-8788-9fb2b3fd5dd1","variableMapping":{"currentEntry":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[435,28,445,31,456,462,34,472,477,37,485],"tindex":"38bc2e77-db0a-11e4-8788-bdc40b2f6b3e","variableMapping":{"str":"pavementName","i":"pavementType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:519","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.String += \"->\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[499,500,501,63,68,69,77,79,80,81,82,83,39,84,85,86,87,88,0,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,92,97,98,99,108,112,129,5,138,141,144,146,150,167,11,176,179,193,195,221,223,376,363,236,17,398,364,238,242,259,23,268,271,276,278,279,280,282,284,285,296,301,305,308,311,55],"tindex":"38bc2e78-db0a-11e4-8788-07ccc3fd175a","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"38bc2e79-db0a-11e4-8788-65f3efbe8f7b","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"defaultD","speed":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":0},{"failures":[25,290,291],"tindex":"38bc2e7a-db0a-11e4-8788-5942842ae9ec","variableMapping":{"size":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[77,78,79,80,81,82,83,39,84,85,86,87,88,0,522,105,108,109,144,146,147,238,239,276,277,278,279,280,281,282,283,284,285,286],"tindex":"38bc2e7b-db0a-11e4-8788-d72a19ab7a5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"38bc2e7c-db0a-11e4-8788-434db4364a81","variableMapping":{"latlon":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"38bc558d-db0a-11e4-8788-7922891d9534","variableMapping":{"i":"oldValue","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"oldValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[],"tindex":"38bc558e-db0a-11e4-8788-0bc3c712d4ac","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,523,524,525,526,527,77,78,79,80,81,82,83,39,84,367,85,86,87,88,528,0,502,503,504,505,506,529,530,531,522,532,100,101,102,103,104,105,106,107,108,109,110,111,112,113,1,114,115,116,117,118,119,120,2,121,122,3,123,124,125,126,127,4,128,129,130,131,132,133,134,5,6,135,136,137,138,139,140,141,142,143,144,369,145,146,147,148,149,150,151,7,152,153,154,155,156,157,158,8,159,160,9,161,162,163,164,165,10,166,167,168,169,170,171,172,11,12,173,174,175,176,177,178,179,180,181,182,183,184,185,371,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,372,205,206,207,208,209,210,211,373,212,213,214,215,216,374,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,375,233,234,376,377,13,378,362,379,380,381,382,383,14,235,384,15,385,386,387,388,389,16,390,363,391,392,393,394,236,17,18,395,396,397,398,399,400,364,401,402,237,238,239,240,241,242,243,19,244,245,246,247,248,249,250,20,251,252,21,253,254,255,256,257,22,258,259,260,261,262,263,264,23,24,265,266,267,268,269,270,271,272,273,533,534,535,536,537,538,539,274,275,276,277,278,279,280,281,282,405,283,284,285,286,406,287,25,288,289,26,290,291,292,293,294,295,296,297,298,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,313,314,315,316,317,318,319,43,320,321,322,44,323,324,45,325,46,326,327,47,48,328,49,329,330,331,50,332,51,52,333,53,54,55,56,57,58],"tindex":"38bc558f-db0a-11e4-8788-912d525be297","variableMapping":{"heights":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[25,290],"tindex":"38bc5590-db0a-11e4-8788-3330f5b3e09e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[100,102,104,540,313,314,315,43,44,323,45,325,327,333,55,56,58],"tindex":"38bc5591-db0a-11e4-8788-cb9bf15e38d8","variableMapping":{"high":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-1},{"failures":[70,77,78,39,88,0,119,121,157,159,187,206,218,234,382,235,249,251,278,281,408,410,416,417,419,421,422,423,428,541,542,346,431,27,433,435,347,28,445,446,447,30,31,456,457,458,293,33,460,462,348,34,472,473,474,36,477,37,485,486,487,498,488,489,295,296,324,45,329,331,50],"tindex":"38bc5592-db0a-11e4-8788-87391209f589","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[],"tindex":"38bc5593-db0a-11e4-8788-cdffcc4a5041","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[416],"tindex":"38bc5594-db0a-11e4-8788-97fcac507840","variableMapping":{"line":"highwayValue","key":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[433,460],"tindex":"38bc5595-db0a-11e4-8788-97417f1f1e56","variableMapping":{"size":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[496,339,340],"tindex":"38bc5596-db0a-11e4-8788-b9c5e5a544b4","variableMapping":{"numTiles":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"38bc7ca7-db0a-11e4-8788-8b9c6febe75b","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"38bc7ca8-db0a-11e4-8788-9b4eb9b5ce1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[274,275,278,279,280,281,282,284,285,312,314,43,320,323,324,45,325,46,326,327,47,48,328,49,329,330,331,50,332,51,52,333,53,54,55,56,57,58],"tindex":"38bc7ca9-db0a-11e4-8788-23ef0ddeff77","variableMapping":{"cap":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[78,79,80,81,82,83,39,84,85,86,87,0,281,286,289],"tindex":"38bc7caa-db0a-11e4-8788-89166c567671","variableMapping":{"encodingManager":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1003","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    throw new java.lang.IllegalArgumentException(((\"Contraction hierarchies preparation \" + \"requires (at the moment) only one vehicle. But was:\") + (com.graphhopper.routing.util.EncodingManager)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-1},{"failures":[543],"tindex":"38bc7cab-db0a-11e4-8788-a7bd75b5a29a","variableMapping":{"retBucket":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[496,334,335,497,336,337,544,339,340],"tindex":"38bc7cac-db0a-11e4-8788-1f2719a63924","variableMapping":{"oldValueIndex":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"38bc7cad-db0a-11e4-8788-59f3470451d0","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:155","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[],"tindex":"38bc7cae-db0a-11e4-8788-190546c44aed","variableMapping":{"newUniqueOsmId":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"38bc7caf-db0a-11e4-8788-070aab220771","variableMapping":{"ar_y":"fwdDecline","ab_y":"fwdDecline","ar_x":"fwdDecline","ab_x":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[78,79,80,81,83,39,84,85,86,87,88,528,0,277,278,279,280,281,282,283,284,286,416,418,419,421,423,431],"tindex":"38bc7cb0-db0a-11e4-8788-4f02aa4c88b2","variableMapping":{"tt":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[545,546,547],"tindex":"38bc7cb1-db0a-11e4-8788-4bc95fd8a9c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"38bc7cb2-db0a-11e4-8788-4b66c32b7ae4","variableMapping":{"fromX":"maxLat","toX":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"38bc7cb3-db0a-11e4-8788-8f90af03f0e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[323,324,45,55,56,58],"tindex":"38bc7cb4-db0a-11e4-8788-bbfe5b9c8293","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:74","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[],"tindex":"38bc7cb5-db0a-11e4-8788-312923343127","variableMapping":{"flags":"defaultL","tmpValue":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"38bc7cb6-db0a-11e4-8788-eb07ec4d1b17","variableMapping":{"from":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","end":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":0},{"failures":[543],"tindex":"38bc7cb7-db0a-11e4-8788-c7fbe9fbb2ba","variableMapping":{"periodicUpdates":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"38bc7cb8-db0a-11e4-8788-e9d441eff31c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[496,334,548,335,497,336,337,549,338,544,77,78,79,80,81,82,83,39,84,85,86,87,88,0,339,340,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,372,205,206,550,219,220,221,222,223,224,225,226,227,228,229,230,231,232,375,233,234,274,275,276,278,279,280,281,282,283,284,285,286,49,50,332,333],"tindex":"38bca3c9-db0a-11e4-8788-615a3863fe0f","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[],"tindex":"38bca3ca-db0a-11e4-8788-d18bfb05890a","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"38bca3cb-db0a-11e4-8788-9d6144441910","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:222","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"38bca3cc-db0a-11e4-8788-cdd8d6ca000a","variableMapping":{"tmpNode":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"38bca3cd-db0a-11e4-8788-7bc2e21e0e63","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,39,84,85,86,87,88,0,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,1,114,115,116,117,118,119,120,2,121,122,3,123,124,125,126,127,4,128,129,130,131,132,133,134,5,6,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,7,152,153,154,155,156,157,158,8,159,160,9,161,162,163,164,165,10,166,167,168,169,170,171,172,11,12,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,19,244,245,246,247,248,249,250,20,251,252,21,253,254,255,256,257,22,258,259,260,261,262,263,264,23,24,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,25,288,289,26,290,291,292,293,294,295,296,297,298,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,313,314,315,316,317,318,319,43,320,321,322,44,323,324,45,325,46,326,327,47,48,328,49,329,330,331,50,332,51,52,333,53,54,55,56,57,58],"tindex":"38bccade-db0a-11e4-8788-c335a88ef2c0","variableMapping":{"value":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[289,26],"tindex":"38bccadf-db0a-11e4-8788-b7d86e71b060","variableMapping":{"allBits":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[293],"tindex":"38bccae0-db0a-11e4-8788-9d3c423b90a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"38bccae1-db0a-11e4-8788-cd92107ed014","variableMapping":{"min":"factor","time":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:49","type":"CtIfImpl","sourcecode":"if (long < (double))\n    double = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-2},{"failures":[63,67,68,69,70,523,524,525,526,527,77,78,79,80,81,82,83,39,84,85,86,87,88,0,502,503,504,505,506,507,551,552,553,554,555,556,557,558,559,560,561,562,522,563,564,565,508,509,566,510,567,568,511,512,513,514,569,570,571,515,516,572,517,573,574,518,519,520,521,105,108,109,112,129,5,138,140,141,144,369,146,147,150,167,11,176,178,179,371,193,194,195,372,208,209,210,211,373,212,374,221,222,223,375,376,377,13,378,362,379,380,381,382,383,14,384,15,385,386,387,388,389,16,390,363,391,392,393,394,236,17,18,395,396,397,398,399,400,364,401,402,238,239,242,259,23,268,270,271,536,537,538,539,276,278,279,280,281,282,283,284,285,286,292,293,296,297,300,301,303,304,305,306,307,308,310,311,55],"tindex":"38bccae2-db0a-11e4-8788-a14bee1aa475","variableMapping":{"bytePos":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[293],"tindex":"38bccae3-db0a-11e4-8788-0f198d3b4cc9","variableMapping":{"weightApproximation":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"38bccae4-db0a-11e4-8788-87f15dee772e","variableMapping":{"storedKey":"directionBitMask","key":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":53,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":301,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":105,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":498,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":184,"com.graphhopper.GraphHopperAPITest.testNoLoad":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":377,"com.graphhopper.reader.OSMReaderTest.testFerry":77,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":71,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":347,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":32,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":354,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":194,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":277,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":474,"com.graphhopper.storage.MMapDataAccessTest.testSegments":560,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":8,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":527,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":563,"com.graphhopper.coll.CompressedArrayTest.testCompress":340,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":455,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":271,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":363,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":251,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":190,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":564,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":573,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":321,"com.graphhopper.GraphHopperTest.testPrepare":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":399,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":312,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":547,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":434,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":207,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":456,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":60,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":191,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":27,"com.graphhopper.util.PointListTest.testEquals":353,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":325,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":328,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":556,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":222,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":28,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":549,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":557,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":112,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":546,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":323,"com.graphhopper.GraphHopperTest.testLoadOSM":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":229,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":223,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":430,"com.graphhopper.reader.OSMReaderTest.testSort":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":446,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":147,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":509,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":266,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":238,"com.graphhopper.util.PointListTest.testReverse":352,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":400,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":307,"com.graphhopper.storage.RAMDataAccessTest.testHeader":574,"com.graphhopper.routing.DijkstraTest.initializationError":493,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":175,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":507,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":558,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":133,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":355,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":248,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":350,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":369,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":462,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":150,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":487,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":486,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":198,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":254,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":196,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":327,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":326,"com.graphhopper.coll.OSMIDMapTest.testGetLong":505,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":161,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":166,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":126,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":345,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":108,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":4,"com.graphhopper.coll.CompressedArrayTest.testCompress2":339,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":36,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":159,"com.graphhopper.GraphHopperAPITest.testLoad":274,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":368,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":92,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":252,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":19,"com.graphhopper.storage.LevelGraphStorageTest.testClone":115,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":543,"com.graphhopper.reader.OSMReaderTest.testBarriers":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":463,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":48,"com.graphhopper.util.GHUtilityTest.testCopy":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":379,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":566,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":483,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":342,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":356,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":371,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":520,"com.graphhopper.routing.PathTest.testFindInstruction":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":452,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":7,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":545,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":73,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":412,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":139,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":461,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":267,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":255,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":173,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":470,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":492,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":117,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":380,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":559,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":99,"com.graphhopper.util.InstructionListTest.testWayList2":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":230,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":272,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":548,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":433,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":488,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":292,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":360,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":119,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":572,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":565,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":436,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":351,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":510,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":160,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":47,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":243,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":82,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":508,"com.graphhopper.routing.AStarTest.initializationError":491,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":55,"com.graphhopper.coll.OSMIDMapTest.testGet":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":158,"com.graphhopper.routing.PathBidirRefTest.testExtract":298,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":365,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":439,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":504,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":202,"com.graphhopper.storage.RAMDataAccessTest.testCopy":515,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":567,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":438,"com.graphhopper.storage.RAMDataAccessTest.testSegments":519,"com.graphhopper.util.GHUtilityTest.testSort2":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":51,"com.graphhopper.reader.OSMReaderTest.testMain":79,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":109,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":349,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":440,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":341,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":397,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":121,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":124,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":142,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":122,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":33,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":91,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":127,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":88,"com.graphhopper.storage.StorablePropertiesTest.testStore":522,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":571,"com.graphhopper.storage.GraphHopperStorageTest.testClone":245,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":396,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":423,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":529,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":421,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":344,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":381,"com.graphhopper.routing.PathTest.testTime":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":482,"com.graphhopper.util.BitUtilLittleTest.testToFloat":500,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":140,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":428,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":232,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":131,"com.graphhopper.reader.OSMReaderTest.testRelation":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":390,"com.graphhopper.util.GHUtilityTest.testSortDirected":65,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":473,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":533,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":513,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":303,"com.graphhopper.GraphHopperTest.testFootOnly":285,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":361,"com.graphhopper.util.BitUtilLittleTest.testToInt":501,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":449,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":419,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":531,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":197,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":542,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":387,"com.graphhopper.search.NameIndexTest.testCreate":539,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":518,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":300,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":95,"com.graphhopper.routing.QueryGraphTest.testOneWay":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":375,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":451,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":526,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":221,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":496,"com.graphhopper.reader.OSMReaderTest.testWithBounds":87,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":521,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":343,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":570,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":177,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":288,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":391,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":413,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":541,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":113,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":476,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":458,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":169,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":218,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":163,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":242,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":45,"com.graphhopper.util.BitUtilLittleTest.testToBitString":499,"com.graphhopper.util.InstructionListTest.testWayList":68,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":269,"com.graphhopper.routing.ch.PrepareEncoderTest.testOverwrite":540,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":552,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":437,"com.graphhopper.GraphHopperAPITest.testDisconnected179":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":382,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":497,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":219,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":561,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":378,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":534,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":468,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":75,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":16,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":444,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":280,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":322,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":432,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":331,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":490,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":320,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":424,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":479,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":445,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":57,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":403,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":372,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":447,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":237,"com.graphhopper.routing.PathTest.testWayList":296,"com.graphhopper.storage.MMapDataAccessTest.testCopy":555,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":364,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":480,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":384,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":418,"com.graphhopper.coll.OSMIDMapTest.testGet2":503,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":58,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":568,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":135,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":523,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":443,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":256,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":156,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":246,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":125,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":200,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":516,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":514,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":465,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":41,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":477,"com.graphhopper.util.GHUtilityTest.testSort":64,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":554,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":394,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":544,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":442,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":450,"com.graphhopper.search.NameIndexTest.testPut":537,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":180,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":370,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":192,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":212,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":215,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":348,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":306,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":145,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":284,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":478,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":489,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":524,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":164,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":25,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":98,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":236,"com.graphhopper.routing.PathTest.testFound":294,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":286,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":346,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":137,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":475,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":441,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":9,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":538,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":235,"com.graphhopper.util.InstructionListTest.testEmptyList":66,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":250,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":569,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":49,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":484,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":427,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":414,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":457,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":52,"com.graphhopper.reader.PrinctonReaderTest.testRead":74,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":268,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":562,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":195,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":14,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":334,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":376,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":165,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":454,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":466,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":551,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":40,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":530,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":481,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":460,"com.graphhopper.reader.OSMReaderTest.testFoot":78,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":393,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":525,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":227,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":337,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":448,"com.graphhopper.reader.OSMReaderTest.testOneWay":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":228,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":21,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":24,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":174,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":453,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":512,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":464,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":389,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":317,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":550,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":314,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":422,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":315,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":358,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":511,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":385,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":302,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":240,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":528,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":535,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":96,"com.graphhopper.routing.PathBidirRefTest.testExtract2":299,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":324,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":485,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":536,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":264,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":374,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":38,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":39,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":359,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":402,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":409,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":224,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":265,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":366,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":425,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":259,"com.graphhopper.GraphHopperTest.testFootAndCar":281,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":205,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":517,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":362,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":429,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":553,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":426,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":153,"com.graphhopper.storage.StorablePropertiesTest.testLoad":532,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":54,"com.graphhopper.GraphHopperTest.testPrepareOnly":276,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":186,"com.graphhopper.GraphHopperTest.testVia":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":13,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":85,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":104,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":70,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":263,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":410,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":388,"com.graphhopper.routing.AStarBidirectionTest.initializationError":494,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":431,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":136,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":6,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":146}}]
