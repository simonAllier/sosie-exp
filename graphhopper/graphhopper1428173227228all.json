[{"failures":[],"tindex":"fed664d0-dafa-11e4-a0d0-cdbd97727f2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"fed6b2f1-dafa-11e4-a0d0-5579826b89c9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"fed6b2f2-dafa-11e4-a0d0-3bef95b5322d","variableMapping":{"initLeafSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"fed6b2f3-dafa-11e4-a0d0-25de6f849d6b","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"fed6b2f4-dafa-11e4-a0d0-8beae9a5384f","variableMapping":{"flags":"relationFlags","mask":"includeWay"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"fed6b2f5-dafa-11e4-a0d0-d11ff1f63c53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"fed6da06-dafa-11e4-a0d0-4debd6994b49","variableMapping":{"directionBitMask":"flags","blockByDefault":"forward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-2},{"failures":[29,15],"tindex":"fed6da07-dafa-11e4-a0d0-05cf91974679","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"fed6da08-dafa-11e4-a0d0-6fe6c5a40de0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"fed6da09-dafa-11e4-a0d0-db86db0942ce","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[54],"tindex":"fed8128a-dafa-11e4-a0d0-57b33b5a44e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"fed8128b-dafa-11e4-a0d0-bb894c9b17dc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"fed8128c-dafa-11e4-a0d0-b9116815e36e","variableMapping":{"bitsForEdgeFlags":"minElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"fed8128d-dafa-11e4-a0d0-8333241c015d","variableMapping":{"r":"lon","angle":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":0},{"failures":[55],"tindex":"fed9721e-dafa-11e4-a0d0-c5ad970bffde","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:434","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\\t\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"feda5c7f-dafa-11e4-a0d0-3f86c26ac578","variableMapping":{"visitedCountFrom":"com.graphhopper.coll.SparseIntIntArray.DELETED","visitedCountTo":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,28],"tindex":"feda5c80-dafa-11e4-a0d0-b5ff4040a277","variableMapping":{"red":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"feda5c81-dafa-11e4-a0d0-451da7e20f97","variableMapping":{"nodesContracted":"baseOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[96],"tindex":"feda5c82-dafa-11e4-a0d0-a19d4bc1323b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"feda5c83-dafa-11e4-a0d0-c5096c9ec84f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"feda5c84-dafa-11e4-a0d0-2faa18f4d08d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[97,98,99],"tindex":"feda5c85-dafa-11e4-a0d0-29dcbcd76568","variableMapping":{"shiftSum":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"fedb1fd6-dafa-11e4-a0d0-31bcb7a80b0b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"fedb1fd7-dafa-11e4-a0d0-5174f83fe7ef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[100,101,1,2],"tindex":"fedb1fd8-dafa-11e4-a0d0-fd41111fe07b","variableMapping":{"i":"priorityFromRelation","child":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[102,103,104,105,57,106,107,108,109,110,111,112,113,114,115,116,117,118,119,66,120,121,122,123,124,125,126,127,128,129,130,75,131,132,133,134,135,136,137,138,139,140,141,142,84,143,144,145,146,147,148,149,150,151,152,93,94,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,6,9,16,19,22,24,28,173,174,175],"tindex":"fedb1fd9-dafa-11e4-a0d0-3b6bb4a0b5a6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[103,176,177,128,139,140,6],"tindex":"fedb46ea-dafa-11e4-a0d0-1fb74abc5c7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[],"tindex":"fedb46eb-dafa-11e4-a0d0-f501cf0a96ca","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-2},{"failures":[],"tindex":"fedb46ec-dafa-11e4-a0d0-6353b66037b1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"fedb46ed-dafa-11e4-a0d0-45946d8c5a74","variableMapping":{"edgeKey1":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","edgeKey2":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:521","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"fedb46ee-dafa-11e4-a0d0-63c9c59b9e9e","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[100,178,179,180,181,182,183,184,185,186,187,188,189,190,191,101,192,193,194,195,196,1,2,17,18,20,22,23,26],"tindex":"fedb46ef-dafa-11e4-a0d0-91efaac66ea4","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"fedb46f0-dafa-11e4-a0d0-ff6ee395359b","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[197,198,199,200,201,202,203,204,205],"tindex":"fedb46f1-dafa-11e4-a0d0-7dbb68bde985","variableMapping":{"res":"spatialKey","maxBit":"bits","value":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"fedb46f2-dafa-11e4-a0d0-2d21e780ef1d","variableMapping":{"tmpNo":"minNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"fedb46f3-dafa-11e4-a0d0-1b9407101338","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"fedb46f4-dafa-11e4-a0d0-615b75852a31","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"fedb46f5-dafa-11e4-a0d0-abdd580fe2ef","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[96],"tindex":"fedb46f6-dafa-11e4-a0d0-2bb6891e1fba","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"fedb46f7-dafa-11e4-a0d0-876788f14e3a","variableMapping":{"distance":"speed","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[206,207,208,209,210,211],"tindex":"fedb46f8-dafa-11e4-a0d0-c71346ab975e","variableMapping":{"retBucket":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"fedb46f9-dafa-11e4-a0d0-31d19a16850e","variableMapping":{"speedVal":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":0},{"failures":[],"tindex":"fedb46fa-dafa-11e4-a0d0-49810ed5fe5d","variableMapping":{"elem":"this","i":"hash","child":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:172","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failures":[],"tindex":"fedb6e0b-dafa-11e4-a0d0-15e82f56f59a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[100,178,212,179,180,181,182,183,184,185,186,187,213,188,189,190,191,101,192,214,193,194,195,196,1,2,3,15,16,17,18,20,21,22,23,26,27,28],"tindex":"fedc586c-dafa-11e4-a0d0-6964580fdf5f","variableMapping":{"high":"flags","len":"value","start":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[178,181,183,184,186,188,190,192,195],"tindex":"fedc586d-dafa-11e4-a0d0-bdc4ad1d8888","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 3))\n    return \"\";\n"},"status":-1},{"failures":[207,208,215,209,210,211],"tindex":"fedc586e-dafa-11e4-a0d0-55a344aecd3c","variableMapping":{"initLeafSize":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[29,157],"tindex":"fedc586f-dafa-11e4-a0d0-7bde55fcdc80","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[188],"tindex":"fedc5870-dafa-11e4-a0d0-95eb25c27288","variableMapping":{"intVal":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-1},{"failures":[155,157,6,9,16,28],"tindex":"fedc5871-dafa-11e4-a0d0-5324fa8ed246","variableMapping":{"oldValueIndex":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"fedc5872-dafa-11e4-a0d0-b30e461f238b","variableMapping":{"name":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"fedc5873-dafa-11e4-a0d0-5523de5b9a01","variableMapping":{"max":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"fedc5874-dafa-11e4-a0d0-81a256832625","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"fedc5875-dafa-11e4-a0d0-0796f0b3608d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"fedc5876-dafa-11e4-a0d0-6bbaf36c8256","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"fedc5877-dafa-11e4-a0d0-612db814eece","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[216,217,218,170],"tindex":"fedc5878-dafa-11e4-a0d0-13ed163aee60","variableMapping":{"flags":"defaultValue","tmpValue":"defaultValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-1},{"failures":[],"tindex":"fedc5879-dafa-11e4-a0d0-d160e662daaf","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":0},{"failures":[219,220,221,222,102,56,223,103,224,225,104,105,57,226,227,228,229,230,106,107,58,108,59,60,231,61,109,232,233,62,63,234,235,236,110,237,64,65,111,238,239,112,240,241,242,113,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,176,260,261,262,263,264,265,114,266,267,268,269,270,271,272,273,177,274,275,276,277,278,279,115,280,281,282,283,284,116,285,286,287,288,289,117,290,291,292,37,38,293,294,122,295,296,128,297,298,129,130,75,299,300,301,302,303,131,132,76,133,77,78,304,79,134,305,306,80,81,307,308,309,135,310,82,83,136,311,312,137,313,314,315,138,316,139,317,140,318,319,141,142,84,320,321,322,323,324,143,144,85,145,86,87,325,88,146,326,327,89,90,328,329,330,147,331,91,92,148,332,333,149,334,335,336,150,337,338,339,340,341,342,343,344,345,346,0,151,347,348,152,349,93,350,94,95,153,154,351,352,353,354,355,356,357,160,161,358,359,360,361,162,362,163,363,364,164,217,165,365,366,367,368,97,369,370,371,218,166,167,168,169,372,373,374,375,98,376,99,377,170,378,379,380,381,382,383,171,384,385,172,386,387,388,389,4,5,6,7,8,9,10,11,12,13,14,390,15,16,17,18,19,20,21,22,23,24,25,26,27,28,173,174,175,391],"tindex":"fedc7f8a-dafa-11e4-a0d0-fd49ae96ea56","variableMapping":{"width":"indexDivisor","latSimilar":"indexDivisor","lonSimilar":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"fedc7f8b-dafa-11e4-a0d0-2f4e10f9fba9","variableMapping":{"bestPath":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:166","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[356,160,162,362,164,217,165,365,366,367,368,97,369,370,371,218,167,168,169,372,373,374,98,376,99,377,170,6,7,10,13],"tindex":"fedc7f8c-dafa-11e4-a0d0-37cc2ad230de","variableMapping":{"latSize":"tmpEdge","size":"endNode","lonSize":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[153],"tindex":"fedc7f8d-dafa-11e4-a0d0-f952e1413aef","variableMapping":{"segmentSizeInBytes":"start","length":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"fedc7f8e-dafa-11e4-a0d0-4b036665beb6","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"fedc7f8f-dafa-11e4-a0d0-91bc303b89a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[219,220,221,222,102,392,56,223,103,393,224,225,104,105,57,226,227,228,229,230,106,107,58,108,59,60,231,61,109,232,233,62,63,234,235,236,110,394,237,64,65,111,238,239,112,240,241,242,113,243,395,244,245,246,247,396,248,249,250,251,252,253,254,255,256,257,258,259,176,260,261,262,263,264,397,265,114,266,267,268,269,270,271,272,273,177,274,275,276,277,278,398,279,115,280,281,282,283,399,284,116,285,286,287,288,400,289,117,118,119,66,401,402,403,404,405,120,121,67,122,68,69,406,70,123,407,408,71,72,409,410,411,124,412,295,73,74,125,413,414,126,415,416,417,127,418,296,128,419,297,298,129,130,75,299,300,301,302,303,131,132,76,133,77,78,304,79,134,305,306,80,81,307,308,309,135,420,310,82,83,136,311,312,137,313,314,315,138,316,139,48,317,140,421,318,319,141,142,84,320,321,322,323,324,143,144,85,145,86,87,325,88,146,326,327,89,90,328,329,330,147,422,331,91,92,148,332,333,149,334,335,336,150,337,338,339,340,341,342,343,344,345,346,0,151,347,348,152,349,93,350,94,95,153,154,351,352,353,423,424,354,355,356,357,160,161,358,359,360,361,162,362,163,363,364,164,217,165,365,366,367,368,97,369,370,371,218,166,167,168,169,372,373,374,375,98,376,99,377,170,378,379,380,380,381,381,382,382,383,383,171,171,384,384,385,385,172,172,386,386,387,387,388,388,389,389,4,5,6,7,8,9,10,11,12,13,14,390,15,16,17,18,19,20,21,22,23,24,25,26,27,28,173,174,175,391],"tindex":"fedca6a0-dafa-11e4-a0d0-b7effb2b9c08","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95],"tindex":"fedca6a1-dafa-11e4-a0d0-fd3752c06279","variableMapping":{"cap":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[219,220,221,222,56,223,103,225,104,105,57,226,227,228,230,106,107,58,108,59,60,61,109,233,62,63,234,110,237,64,65,111,238,239,112,241,242,113,243,244,245,246,247,248],"tindex":"fedca6a2-dafa-11e4-a0d0-017a5fe88254","variableMapping":{"importance":"indexDivisor","hash":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-2},{"failures":[],"tindex":"fedca6a3-dafa-11e4-a0d0-1d9eebeef2c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"fedca6a4-dafa-11e4-a0d0-079d362e5292","variableMapping":{"java.lang.Double.MAX_VALUE":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"fedca6a5-dafa-11e4-a0d0-23c5f8f0d4d8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"fedca6a6-dafa-11e4-a0d0-e93159b06e4b","variableMapping":{"encoderList":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"fedca6a7-dafa-11e4-a0d0-e7480383255d","variableMapping":{"finishedTo":"defaultB","finishedFrom":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"fedca6a8-dafa-11e4-a0d0-4bf3b04e3600","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[425],"tindex":"fedca6a9-dafa-11e4-a0d0-0135d2ecfd24","variableMapping":{"val":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[426,357,160,161,358,359,360,361,162,163,363,364,164,165,365,366,367,368,97,369,370,371,218,166,167,168,169,372,373,374,375,98,376,99,377,170,5,6,7,10,11],"tindex":"fedca6aa-dafa-11e4-a0d0-bf4830d4e74e","variableMapping":{"index":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"fedca6ab-dafa-11e4-a0d0-010982a6a342","variableMapping":{"red":"tmpPrevEdge","green":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-2},{"failures":[219,220,221,222,102,392,56,223,103,393,224,225,427,104,105,57,226,227,228,229,230,106,107,58,108,59,60,231,61,109,232,233,62,63,234,235,236,110,394,237,64,65,111,238,239,112,240,241,242,113,243,114,115,116,117,118,119,66,401,402,403,404,405,120,121,67,122,68,69,406,70,123,407,408,71,72,409,410,411,124,412,295,73,74,125,413,414,126,415,416,417,127,418,296,128,419,297,298,428,129,130,75,299,300,301,302,303,131,132,76,133,77,78,304,79,134,305,306,80,81,307,308,309,135,420,310,82,83,136,311,312,137,313,314,315,138,316,139,48,317,140,421,318,319,429,141,142,84,320,321,322,323,324,143,144,85,145,86,87,325,88,146,326,327,89,90,328,329,330,147,422,331,91,92,148,332,333,149,334,335,336,150,337,430,431,183,184,432,433,213,434,188,435,436,425,54,155,437,29,156,438,439,157,440,441,442,158,443,444,445,351,446,159,447,448,96,216,449,450,3,217,165,365,366,367,368,97,369,370,371,218,166,167,168,169,372,373,374,375,98,376,99,377,170,9],"tindex":"fedccdbc-dafa-11e4-a0d0-fdc04388d8ad","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"fedccdbd-dafa-11e4-a0d0-e93f32e55f25","variableMapping":{"distance":"bwSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"fedccdbe-dafa-11e4-a0d0-89c7c219cc8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[],"tindex":"fedccdbf-dafa-11e4-a0d0-772bc11d6cbf","variableMapping":{"maxTurnCosts":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","turnRestrictionBit":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"fedccdc0-dafa-11e4-a0d0-7f957896dec3","variableMapping":{"neighborUpdates":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[451,452,453,454,455,162,364],"tindex":"fedccdc1-dafa-11e4-a0d0-97faec5264a9","variableMapping":{"factor":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-1},{"failures":[],"tindex":"fedccdc2-dafa-11e4-a0d0-4beaefda4ce8","variableMapping":{"flags":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir","tmpValue":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[446,96,4,9,13,16],"tindex":"fedccdc3-dafa-11e4-a0d0-5b7c56c2f94c","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[209,252,258,176,260,266,272,177,274,197,198,199,200,201,203,204,456,457],"tindex":"fedccdc4-dafa-11e4-a0d0-1f54cc9f7b89","variableMapping":{"midLat":"lat","spatialKey":"hash","bits":"hash","lat":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"fedccdc5-dafa-11e4-a0d0-f3184bd4e17c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[197,198,199,200,201,202,203,204,205],"tindex":"fedccdc6-dafa-11e4-a0d0-ff4acabea3eb","variableMapping":{"weight":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"fedccdc7-dafa-11e4-a0d0-35b5719b97d0","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"fedccdc8-dafa-11e4-a0d0-ffcea5b0a543","variableMapping":{"speed":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"fedccdc9-dafa-11e4-a0d0-2b30ef58a461","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1080","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[103,104,105,57,107,108,110,111,112,113,118,119,66,121,122,124,125,126,127,128,129,130,75,132,133,135,136,137,138,139,140,141,142,84,144,145,147,148,149,150,151,152,93,153,154,158,356,160,161,162,362,163,164,217,165,368,370,166,168,169,170,171,172,16,28,173,174,175],"tindex":"fedcf4da-dafa-11e4-a0d0-331d85fd9db9","variableMapping":{"cap":"flags","bytes":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"fedcf4db-dafa-11e4-a0d0-eb4c37357816","variableMapping":{"keyIndex":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-2},{"failures":[],"tindex":"fedcf4dc-dafa-11e4-a0d0-03db3efd4cb9","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","speed":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"fedcf4dd-dafa-11e4-a0d0-59f1c36188b1","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"fedcf4de-dafa-11e4-a0d0-65a5dbb805a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"fedcf4df-dafa-11e4-a0d0-236d106eea3d","variableMapping":{"finishedTo":"blockFords","finishedFrom":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"fedd1bf0-dafa-11e4-a0d0-77b0a894bbc6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"fedd1bf1-dafa-11e4-a0d0-f94857b54530","variableMapping":{"towerNodeDistance":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[93,153],"tindex":"fedd1bf2-dafa-11e4-a0d0-c9b1379d68ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[],"tindex":"fedd1bf3-dafa-11e4-a0d0-f19f2bd18ac3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:66","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":375,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":381,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":392,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":119,"com.graphhopper.reader.OSMReaderTest.testFerry":15,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":152,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":212,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":206,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":435,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":255,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":5,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":195,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":196,"com.graphhopper.storage.MMapDataAccessTest.testSegments":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":85,"com.graphhopper.coll.CompressedArrayTest.testCompress":198,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":315,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":409,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":133,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":251,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":163,"com.graphhopper.GraphHopperTest.testPrepare":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":415,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":356,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":455,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":218,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":344,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":395,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":190,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":348,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":252,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":153,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":188,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":365,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":269,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":139,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":456,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":104,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":453,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":164,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":275,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":270,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":450,"com.graphhopper.reader.OSMReaderTest.testSort":18,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":421,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":311,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":128,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":416,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":172,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":333,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":394,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":303,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":48,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":192,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":141,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":187,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":259,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":169,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":368,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":325,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":320,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":232,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":103,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":62,"com.graphhopper.coll.CompressedArrayTest.testCompress2":197,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":81,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":431,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":145,"com.graphhopper.GraphHopperAPITest.testLoad":175,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":427,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":291,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":444,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":77,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":75,"com.graphhopper.storage.LevelGraphStorageTest.testClone":227,"com.graphhopper.reader.OSMReaderTest.testBarriers":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":142,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":154,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":47,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":249,"com.graphhopper.util.GHUtilityTest.testCopy":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":403,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":114,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":207,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":400,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":189,"com.graphhopper.routing.PathTest.testFindInstruction":355,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":84,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":451,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":151,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":448,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":240,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":286,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":312,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":134,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":148,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":88,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":360,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":229,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":404,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":33,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":294,"com.graphhopper.util.InstructionListTest.testWayList2":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":276,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":335,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":352,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":419,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":106,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":86,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":97,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":130,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":144,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":96,"com.graphhopper.routing.PathBidirRefTest.testExtract":378,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":262,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":73,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":213,"com.graphhopper.storage.RAMDataAccessTest.testSegments":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":115,"com.graphhopper.util.GHUtilityTest.testSort2":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":372,"com.graphhopper.reader.OSMReaderTest.testMain":17,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":393,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":180,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":263,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":54,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":414,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":108,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":61,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":113,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":59,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":171,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":147,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":290,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":233,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":27,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":50,"com.graphhopper.storage.GraphHopperStorageTest.testClone":300,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":413,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":157,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":438,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":219,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":405,"com.graphhopper.routing.PathTest.testTime":424,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":241,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":443,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":72,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":236,"com.graphhopper.util.GHUtilityTest.testSortDirected":342,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":454,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":383,"com.graphhopper.GraphHopperTest.testFootOnly":13,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":211,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":434,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":29,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":245,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":258,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":2,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":366,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":123,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":52,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":380,"com.graphhopper.routing.QueryGraphTest.testOneWay":387,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":398,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":268,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":199,"com.graphhopper.reader.OSMReaderTest.testWithBounds":26,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":45,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":334,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":350,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":410,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":1,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":105,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":224,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":430,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":191,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":330,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":146,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":129,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":165,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":313,"com.graphhopper.util.InstructionListTest.testWayList":345,"com.graphhopper.GraphHopperAPITest.testDisconnected179":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":120,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":202,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":422,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":401,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":174,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":127,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":8,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":302,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":363,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":135,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":362,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":112,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":440,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":181,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":377,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":428,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":397,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":182,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":296,"com.graphhopper.routing.PathTest.testWayList":354,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":437,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":170,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":329,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":305,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":445,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":324,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":109,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":176,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":260,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":261,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":452,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":183,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":31,"com.graphhopper.util.GHUtilityTest.testSort":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":412,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":150,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":253,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":248,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":282,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":38,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":214,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":385,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":353,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":317,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":326,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":93,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":293,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":295,"com.graphhopper.routing.PathTest.testFound":423,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":3,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":14,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":41,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":239,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":221,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":87,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":426,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":44,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":122,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":132,"com.graphhopper.util.InstructionListTest.testEmptyList":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":371,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":168,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":436,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":373,"com.graphhopper.reader.PrinctonReaderTest.testRead":173,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":256,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":67,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":118,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":101,"com.graphhopper.reader.OSMReaderTest.testFoot":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":124,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":177,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":204,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":242,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":433,"com.graphhopper.reader.OSMReaderTest.testOneWay":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":274,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":78,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":83,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":332,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":43,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":308,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":408,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":359,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":364,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":439,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":161,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":208,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":283,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":351,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":406,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":382,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":297,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":37,"com.graphhopper.routing.PathBidirRefTest.testExtract2":379,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":217,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":277,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":310,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":399,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":22,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":418,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":446,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":271,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":136,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":441,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":307,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":184,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":402,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":449,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":442,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":321,"com.graphhopper.GraphHopperTest.testPrepareOnly":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":98,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":66,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":24,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":102,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":0,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":420,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":159,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":407,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":432,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":238,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":65,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":140}}]
