[{"failures":[],"tindex":"b5a08365-db1c-11e4-9ddd-7d7d8824c44c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[0,1,2,3],"tindex":"b5a08366-db1c-11e4-9ddd-7505d8a07f66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"b5a08367-db1c-11e4-9ddd-fde77ceac389","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"maxSpeed","speed":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,35,36,37,38,39,40,41,42,43,44,2,3],"tindex":"b5a0aa78-db1c-11e4-9ddd-c50ab7e7054b","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[45],"tindex":"b5a0aa79-db1c-11e4-9ddd-c5789fda5877","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[4,46,5,47,6,48,7,49,50,8,51,52,53,9,10,54,11,55,12,56,57,13,14,58,15,59,60,61,62,63,64,16,65,17,66,18,67,68,69,70,71,72,73,74,19,75,76,77,78,79,80,81,20,21,22,23,24,82,83,25,84,85,26,86,87,88,89,90,91,92,93,94,95,96,27,97,98,99,100,28,101,29,30,31,32,102,33,34,103,1,35,36,37,38,39,40,41,42,43,44,2,3],"tindex":"b5a0aa7a-db1c-11e4-9ddd-7147cfe2ff0c","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[104,105],"tindex":"b5a0aa7b-db1c-11e4-9ddd-6bc458e7116d","variableMapping":{"tmp":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"b5a0aa7c-db1c-11e4-9ddd-130ea800789b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"b5a0aa7d-db1c-11e4-9ddd-63694e9da155","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"b5a0aa7e-db1c-11e4-9ddd-ad6c17d30e13","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"b5a0aa7f-db1c-11e4-9ddd-576867663253","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":0},{"failures":[],"tindex":"b5a0aa80-db1c-11e4-9ddd-291068fd4e3d","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"b5a0aa81-db1c-11e4-9ddd-710e8eccf885","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[106,107,108,109,110,111,112,29,2],"tindex":"b5a0d192-db1c-11e4-9ddd-75bf495b177d","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"speed","java.lang.Double.POSITIVE_INFINITY":"speed","weight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[113,114,115,116,117,118],"tindex":"b5a0d193-db1c-11e4-9ddd-c18fa839caf5","variableMapping":{"directionBitMask":"directionBitMask","blockByDefault":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[114],"tindex":"b5a0d194-db1c-11e4-9ddd-a975d83e5212","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"b5a0d195-db1c-11e4-9ddd-f963107fe038","variableMapping":{"com.graphhopper.util.NumHelper.DEFAULT_PRECISION":"lat","this":"this","d1":"ele","d2":"ele"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[],"tindex":"b5a0d196-db1c-11e4-9ddd-7bd83e7bef87","variableMapping":{"reverseSpeed":"wayTypeEncoder","flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[],"tindex":"b5a0d197-db1c-11e4-9ddd-71ed14bc9c6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:366","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[],"tindex":"b5a0d198-db1c-11e4-9ddd-41b14585687e","variableMapping":{"need":"shift","i":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"b5a0d199-db1c-11e4-9ddd-cdfe5606cd2b","variableMapping":{"orientation":"lat","resultOrientation":"minLatTmp","baseOrientation":"lat","java.lang.Math.PI":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[136],"tindex":"b5a0d19a-db1c-11e4-9ddd-9dbcfe431cf3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-1},{"failures":[],"tindex":"b5a0d19b-db1c-11e4-9ddd-77791089f993","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[137,4,138,139,140,46,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,5,161,162,163,164,165,47,166,167,168,169,6,170,171,48,172,173,119,174,7,49,50,175,120,176,121,122,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,124,208,8,51,52,209,125,210,126,127,211,212,213,214,215,216,217,9,218,219,10,220,221,222,54,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,11,243,244,245,246,247,55,248,249,250,251,12,252,253,56,254,255,57,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,13,276,277,278,279,14,58,280,281,282,283,15,284,285,59,286,287,288,289,290,291,292,293,294,295,16,296,297,298,65,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,17,319,320,321,322,323,66,324,325,326,327,18,328,329,67,330,331,332,333,334,335,336,337,338,24,339,340,341,82,83,25,106,342,343,344,345,346,347,348,349,350,351,352,84,85,353,354,26,355,86,86,87,87,356,356,88,88,89,89,90,90,91,91,92,92,93,93,357,357,94,94,95,95,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,96,392,393,394,28,101,29,30,31,395,32,102,33,34,103,1,396,35,36,37,38,39,40,41,42,43,44,2,3,397,398,399],"tindex":"b5a0f8ac-db1c-11e4-9ddd-6b7d95fb5e45","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"b5a0f8ad-db1c-11e4-9ddd-47d85557b44e","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"usedBits","nodeId":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[],"tindex":"b5a0f8ae-db1c-11e4-9ddd-6f50cbee8a53","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"b5a0f8af-db1c-11e4-9ddd-39cdb418027a","variableMapping":{"java.lang.Integer.MAX_VALUE":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"b5a0f8b0-db1c-11e4-9ddd-690ddf37f5fa","variableMapping":{"high":"dir","len":"dir","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[],"tindex":"b5a0f8b1-db1c-11e4-9ddd-3b43e0c17398","variableMapping":{"shift":"bits","preferWayEncoder":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"b5a0f8b2-db1c-11e4-9ddd-a14738975bf2","variableMapping":{"foundIndex":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[400,401,402,28,395,34,103,1,396,35,36,38,39,41,44,2,3],"tindex":"b5a0f8b3-db1c-11e4-9ddd-7b7e8f5e7bbb","variableMapping":{"costs":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[107],"tindex":"b5a0f8b4-db1c-11e4-9ddd-29ac964c39bb","variableMapping":{"graphHopperFolder":"highwayValue","ghLocation":"highwayValue","osmFile":"highwayValue","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:470","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String)) && com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n    \n    java.lang.String = com.graphhopper.util.Helper.(com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[332],"tindex":"b5a0f8b5-db1c-11e4-9ddd-c7b3a35e04f7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-1},{"failures":[],"tindex":"b5a0f8b6-db1c-11e4-9ddd-f3530cba89b5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"b5a0f8b7-db1c-11e4-9ddd-8d1351aa6037","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"b5a0f8b8-db1c-11e4-9ddd-3fd1512e0535","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"b5a11ec9-db1c-11e4-9ddd-3ddb910a1549","variableMapping":{"numTiles":"pavementType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":0},{"failures":[4,46,141,142,149,151,163,167,6,172,183,190,204,217,9,10,54,223,224,231,233,245,249,12,254,57,256,257,264,266,278,281,15,286,16,65,299,300,307,309,321,325,18,330,332,334,335,24,346,348,350,351,26,89,92,360,361,366,368,371,372,373,382,383,384,385,386,394,29,395,1,396,37,42,3,398,399],"tindex":"b5a11eca-db1c-11e4-9ddd-b172f88abc73","variableMapping":{"lastTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"b5a11ecb-db1c-11e4-9ddd-3d800b0b519c","variableMapping":{"sacScale":"footTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[],"tindex":"b5a11ecc-db1c-11e4-9ddd-d91baac65c22","variableMapping":{"precision":"java.lang.Math.PI","lat":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"b5a11ecd-db1c-11e4-9ddd-f7d020a79eb9","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"b5a11ece-db1c-11e4-9ddd-53f0961bec92","variableMapping":{"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.storage.index.LocationIndexTreeSC.NO_SHORTCUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:947","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:187","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTreeSC.com.graphhopper.routing.util.EdgeFilter"},"status":0},{"failures":[19,20],"tindex":"b5a11ecf-db1c-11e4-9ddd-6de67a81a586","variableMapping":{"mGarbage":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"b5a11ed0-db1c-11e4-9ddd-ed92b030c25d","variableMapping":{"next":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:424","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[],"tindex":"b5a11ed1-db1c-11e4-9ddd-7916ca041fbb","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"b5a11ed2-db1c-11e4-9ddd-f994a47fa5ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[119,7,49,50,175,176,122,177,178,179,180,182,183,192,193,194,195,197,205,206,124,8,51,52,209,210,127,211,212,213,214,216,217,332,333,342,343,347,348,349,381,385,386,389,28,101,29,30,31,395,32,102,33,34,103,396,35,36,37,38,39,40,41,42,43,44,3],"tindex":"b5a11ed3-db1c-11e4-9ddd-39b3c92e1cec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.this(100, 2)"},"status":-1},{"failures":[],"tindex":"b5a11ed4-db1c-11e4-9ddd-0fda6f9b1247","variableMapping":{"a":"a","high":"key","guess":"guess","low":"guess","key":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:378","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[403,404,405,406,407,408,409,410,411],"tindex":"b5a145e5-db1c-11e4-9ddd-4f348bc046dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[412,413,414,4,46,5,47,6,171,48,7,49,50,8,51,52,415,9,10,54,11,55,12,253,56,14,293,16,65,17,66,18,329,67,416,417,24,82,83,25,106,84,85,26,355,86,87,88,89,90,92,93,95,96,27,97,98,99,100,28,29,31,32,102,33,34,103,35,36,37,38,39],"tindex":"b5a145e6-db1c-11e4-9ddd-112c8f80698b","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[53,9,68,69,70,418,71,72,73,74,19,75,76,77,419,78,79,80,81,20,27,97,98,99,100,29,30,31,32,33,34,1,35,36,37,38,39,40,41,42,43,44,2,3],"tindex":"b5a145e7-db1c-11e4-9ddd-5f3c58b736a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:218","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-1},{"failures":[],"tindex":"b5a145e8-db1c-11e4-9ddd-db9b740f558b","variableMapping":{"dX":"java.lang.Double.POSITIVE_INFINITY","dY":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"b5a145e9-db1c-11e4-9ddd-f5df9969de14","variableMapping":{"edgeKey1":"maxTurnCosts","edgeKey2":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:521","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[128,129,104,130,131,105,132,133],"tindex":"b5a145ea-db1c-11e4-9ddd-951d38a34388","variableMapping":{"min":"lon","time":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:49","type":"CtIfImpl","sourcecode":"if (long < (double))\n    double = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"b5a145eb-db1c-11e4-9ddd-e54b75c6b6be","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"b5a145ec-db1c-11e4-9ddd-25b8aa9ce000","variableMapping":{"ar_y":"fwdDecline","ab_y":"fwdDecline","ar_x":"fwdDecline","ab_x":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"b5a145ed-db1c-11e4-9ddd-3f6429e496e8","variableMapping":{"allSegments":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[137,4,138,139,140,46,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,5,161,162,163,164,165,47,166,167,168,169,6,170,171,48,172,173,119,174,7,49,50,175,120,176,121,122,177,178,179,180,182,183,184,185,186,187,189,190,192,193,194,195,197,198,199,200,201,203,204,205,206,207,124,208,8,51,52,209,125,210,126,127,211,212,213,214,216,217,9,219,10,220,221,222,54,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,11,243,244,245,246,247,55,248,249,250,251,12,252,253,56,254,255,266,14,420,421,60,61,422,423,424,425,62,63,64,288,289,290,291,292,293,294,295,16,296,297,298,65,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,17,319,320,321,322,323,66,324,325,326,327,18,328,329,67,330,331,332,333,334,335,336,337,338,24,339,340,341,82,83,25,106,342,343,344,345,346,347,348,349,350,351,352,84,85,26,355,86,87,356,88,89,90,91,92,93,357,94,95,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,96,392,393,394,28,101,29,30,31,395,32,102,33,34,103,1,396,35,36,37,38,39,40,41,42,43,44,2,3,397,398,399],"tindex":"b5a16cfe-db1c-11e4-9ddd-47be451db03d","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[400,45,28,395,34,396],"tindex":"b5a16cff-db1c-11e4-9ddd-f941e31f993a","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"b5a16d00-db1c-11e4-9ddd-d94d70f19323","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[358,366,367,374,377,378,389,391,392],"tindex":"b5a16d01-db1c-11e4-9ddd-3d45e6973c12","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"b5a16d02-db1c-11e4-9ddd-731ba25d3938","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[114,37,42],"tindex":"b5a16d03-db1c-11e4-9ddd-e7e4b967ad11","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[137,4,138,139,140,46,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,5,161,162,163,164,165,47,166,167,168,169,6,170,171,48,172,173,119,174,7,49,50,175,120,176,121,122,177,178,179,180,182,183,184,185,186,187,189,190,191,192,193,194,195,197,198,199,200,201,203,204,205,206,207,124,208,8,51,52,209,125,210,126,127,211,212,213,214,216,217,9,219,10,220,221,222,54,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,11,243,244,245,246,247,55,248,249,250,251,12,252,253,56,254,255,266,14,421,60,61,422,423,425,62,288,289,290,291,292,293,294,295,16,296,297,298,65,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,17,319,320,321,322,323,66,324,325,326,327,18,328,329,67,330,331,332,333,334,335,336,337,338,24,339,340,341,82,83,25,106,342,343,344,345,346,347,348,349,350,351,352,84,85,353,354,26,355,86,86,87,87,356,356,88,88,89,89,90,90,91,91,92,92,93,93,357,357,94,94,95,95,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,96,392,393,394,28,101,29,30,31,395,32,102,33,34,103,1,396,35,36,37,38,39,40,41,42,43,44,2,3,397,398,399],"tindex":"b5a19414-db1c-11e4-9ddd-e3edfd441654","variableMapping":{"size":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"b5a19415-db1c-11e4-9ddd-45a395c84da2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b5a19416-db1c-11e4-9ddd-7768858357f7","variableMapping":{"i":"index","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":0},{"failures":[],"tindex":"b5a19417-db1c-11e4-9ddd-251bd55f39da","variableMapping":{"index":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[],"tindex":"b5a19418-db1c-11e4-9ddd-754c85b44eff","variableMapping":{"nodeFlags":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[412,413,414,4,46,5,47,6,171,7,50,193,194,195,197,8,52,415,9,10,54,11,55,12,253,293,16,65,17,66,18,329,416,417,82,83,25,106,26,355,87,89,90,92,93,95,96,27,97,99,100,28,29,32,102,33,34,103,35,38,39],"tindex":"b5a19419-db1c-11e4-9ddd-331f873f104e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[],"tindex":"b5a1941a-db1c-11e4-9ddd-99757f197481","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":0},{"failures":[],"tindex":"b5a1941b-db1c-11e4-9ddd-5b55ebfed662","variableMapping":{"ghLocation":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"b5a1941c-db1c-11e4-9ddd-035b296956dd","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"b5a1941d-db1c-11e4-9ddd-bbd623009ade","variableMapping":{"i":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[426,427,428,429],"tindex":"b5a1941e-db1c-11e4-9ddd-a79083ffe1b1","variableMapping":{"acceptedRailways":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[430,403,431,404,117,405,432,406,407,433,434,408,409,428,410,411],"tindex":"b5a1941f-db1c-11e4-9ddd-a78c47492af9","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[84,85,435,436,437,438,439,110,440,441,442,115,443,444,445,446,447,448,449,450,426,451,452,453,454,455,456,457,458,111,459,460,461,116,462,463,464,465,466,467,468,469,427,470,471],"tindex":"b5a19420-db1c-11e4-9ddd-c33ad25b7e59","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[40],"tindex":"b5a1bb31-db1c-11e4-9ddd-0984e50933a2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[436,437,439,110,440,449,451,452,472,402,455,456,458,111,459,468,470,471,403,431,404,408,410,411,473,474,475,476,477,1,396,35,36,38,39,40,41,44,2,3],"tindex":"b5a1bb32-db1c-11e4-9ddd-fb70d4740428","variableMapping":{"osmFile":"tt","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[137,4,140,46,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,5,161,162,163,165,47,166,167,168,169,6,170,171,48,172,173,119,174,7,49,50,175,120,176,121,122,177,178,179,180,182,183,184,185,186,187,189,190,192,193,194,195,197,198,199,200,201,203,204,205,206,207,124,208,8,51,52,209,125,210,126,127,211,212,213,214,216,217,9,219,10,222,54,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,11,243,244,245,247,55,248,249,250,251,12,252,253,56,254,255,266,14,60,61,422,425,62,63,64,288,289,290,291,292,294,295,16,298,65,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,17,319,320,321,323,66,324,325,326,327,18,328,329,67,330,331,332,333,334,335,336,337,338,24,339,340,82,83,25,106,342,343,344,345,346,347,348,349,350,351,352,84,85,26,355,86,87,356,88,89,90,91,92,93,357,94,95,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,96,392,393,394,28,29,30,31,395,32,102,33,34,103,1,396,35,36,37,38,39,40,41,42,43,44,2,3,397,398,399],"tindex":"b5a1bb33-db1c-11e4-9ddd-41168eac1795","variableMapping":{"weightLong":"bytePos","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[350,351],"tindex":"b5a1bb34-db1c-11e4-9ddd-e181f6e2c66d","variableMapping":{"i":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[478],"tindex":"b5a31ac5-db1c-11e4-9ddd-73ac74eb3323","variableMapping":{"cp":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[436,437,439,440,479,472,455,456,458,459],"tindex":"b5a31ac6-db1c-11e4-9ddd-39f3d393d305","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[45],"tindex":"b5a31ac7-db1c-11e4-9ddd-5786fed28d16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"b5a31ac8-db1c-11e4-9ddd-8f7924879b63","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"b5a31ac9-db1c-11e4-9ddd-8389faed1893","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[480],"tindex":"b5a31aca-db1c-11e4-9ddd-3b6ffb850686","variableMapping":{"val":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-1},{"failures":[45],"tindex":"b5a341db-db1c-11e4-9ddd-45acfe208381","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"b5a341dc-db1c-11e4-9ddd-d9f382c16da1","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":0},{"failures":[],"tindex":"b5a341dd-db1c-11e4-9ddd-d53f136de84b","variableMapping":{"elem":"nodeLowLink","keys":"nodeIndex","i":"connectedId","key":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:180","type":"CtWhileImpl","sourcecode":"while ((int[][(int / 2)]) > int) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"b5a341de-db1c-11e4-9ddd-1155a0b4cdcd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-2},{"failures":[346,350],"tindex":"b5a341df-db1c-11e4-9ddd-d306c5ac3b85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"b5a341e0-db1c-11e4-9ddd-c7a8dc1ac48e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[366],"tindex":"b5a341e1-db1c-11e4-9ddd-7505c40204d4","variableMapping":{"high":"size","guess":"size","low":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[112],"tindex":"b5a341e2-db1c-11e4-9ddd-8980e3ce7b4f","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[481],"tindex":"b5a341e3-db1c-11e4-9ddd-398f97e0ab1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[85],"tindex":"b5a341e4-db1c-11e4-9ddd-f1d869b411f4","variableMapping":{"oldValueIndex":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"b5a341e5-db1c-11e4-9ddd-c9d9e8dbfff3","variableMapping":{"a":"empty","approx":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[],"tindex":"b5a341e6-db1c-11e4-9ddd-7d1a30c192a9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[148,183,190,204,217,230,263,306,107,481,0,85,437,452,479,472,456,471,411,477,354,372,382],"tindex":"b5a341e7-db1c-11e4-9ddd-f9931f3a613c","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"speed","com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR":"speed","weight":"speed","weightLong":"flags","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":323,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":390,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":112,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":293,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":256,"com.graphhopper.reader.OSMReaderTest.testFerry":1,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":335,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":475,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":51,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":101,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":331,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":232,"com.graphhopper.coll.CompressedArrayTest.testCompress":129,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":48,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":13,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":207,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":368,"com.graphhopper.GraphHopperTest.testPrepare":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":389,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":457,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":382,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":191,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":476,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":343,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":350,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":474,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":455,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":374,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":380,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":49,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":9,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":134,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":371,"com.graphhopper.GraphHopperTest.testLoadOSM":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":177,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":422,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":50,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":136,"com.graphhopper.reader.OSMReaderTest.testSort":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":469,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":348,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":220,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":168,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":4,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":285,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":92,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":397,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":251,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":322,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":147,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":218,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":54,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":308,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":411,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":210,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":377,"com.graphhopper.coll.OSMIDMapTest.testGetLong":99,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":376,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":242,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":315,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":16,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":317,"com.graphhopper.coll.CompressedArrayTest.testCompress2":128,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":403,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":233,"com.graphhopper.GraphHopperAPITest.testLoad":332,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":61,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":113,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":152,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":142,"com.graphhopper.storage.LevelGraphStorageTest.testClone":302,"com.graphhopper.reader.OSMReaderTest.testBarriers":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":351,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":205,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":441,"com.graphhopper.util.GHUtilityTest.testCopy":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":379,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":419,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":433,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":188,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":429,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":74,"com.graphhopper.routing.PathTest.testFindInstruction":355,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":224,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":334,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":401,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":328,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":438,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":169,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":249,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":237,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":447,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":304,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":261,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":64,"com.graphhopper.util.InstructionListTest.testWayList2":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":178,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":456,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":480,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":84,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":138,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":306,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":418,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":460,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":234,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":192,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":378,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":38,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":96,"com.graphhopper.coll.OSMIDMapTest.testGet":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":231,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":45,"com.graphhopper.routing.PathBidirRefTest.testExtract":344,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":17,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":462,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":212,"com.graphhopper.storage.RAMDataAccessTest.testCopy":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":473,"com.graphhopper.storage.RAMDataAccessTest.testSegments":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":183,"com.graphhopper.util.GHUtilityTest.testSort2":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":387,"com.graphhopper.reader.OSMReaderTest.testMain":35,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":296,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":463,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":135,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":427,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":107,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":283,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":309,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":313,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":330,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":89,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":245,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":60,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":436,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":316,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":2,"com.graphhopper.storage.StorablePropertiesTest.testStore":415,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":416,"com.graphhopper.storage.GraphHopperStorageTest.testClone":144,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":282,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":0,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":108,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":154,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":262,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":291,"com.graphhopper.routing.PathTest.testTime":354,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":407,"com.graphhopper.util.BitUtilLittleTest.testToFloat":22,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":329,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":303,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":275,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":320,"com.graphhopper.util.GHUtilityTest.testSortDirected":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":450,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":81,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":88,"com.graphhopper.GraphHopperTest.testFootOnly":34,"com.graphhopper.util.BitUtilLittleTest.testToInt":23,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":125,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":472,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":375,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":435,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":271,"com.graphhopper.search.NameIndexTest.testCreate":414,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":72,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":86,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":424,"com.graphhopper.routing.QueryGraphTest.testOneWay":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":181,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":7,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":104,"com.graphhopper.reader.OSMReaderTest.testWithBounds":44,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":19,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":426,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":268,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":276,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":479,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":299,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":430,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":448,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":477,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":244,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":238,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":46,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":373,"com.graphhopper.util.BitUtilLittleTest.testToBitString":21,"com.graphhopper.util.InstructionListTest.testWayList":83,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":461,"com.graphhopper.GraphHopperAPITest.testDisconnected179":333,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":263,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":445,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":399,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":274,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":467,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":31,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":146,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":369,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":454,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":384,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":367,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":222,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":393,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":215,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":423,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":471,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":137,"com.graphhopper.routing.PathTest.testWayList":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":267,"com.graphhopper.coll.OSMIDMapTest.testGet2":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":394,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":466,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":157,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":126,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":127,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":70,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":20,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":115,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":431,"com.graphhopper.util.GHUtilityTest.testSort":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":279,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":465,"com.graphhopper.search.NameIndexTest.testPut":412,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":254,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":187,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":208,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":197,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":200,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":110,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":85,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":198,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":392,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":346,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":63,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":14,"com.graphhopper.routing.PathTest.testFound":353,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":103,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":402,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":327,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":478,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":290,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":464,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":235,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":413,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":266,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":149,"com.graphhopper.util.InstructionListTest.testEmptyList":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":381,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":385,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":114,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":388,"com.graphhopper.reader.PrinctonReaderTest.testRead":398,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":6,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":52,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":230,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":100,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":57,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":443,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":437,"com.graphhopper.reader.OSMReaderTest.testFoot":396,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":278,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":121,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":133,"com.graphhopper.reader.OSMReaderTest.testOneWay":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":122,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":153,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":166,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":250,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":80,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":442,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":363,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":370,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":79,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":361,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":269,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":356,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":139,"com.graphhopper.routing.PathBidirRefTest.testExtract2":345,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":425,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":179,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":190,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":408,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":165,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":410,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":287,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":400,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":446,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":175,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":167,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":305,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":5,"com.graphhopper.GraphHopperTest.testFootAndCar":395,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":216,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":259,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":453,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":226,"com.graphhopper.GraphHopperTest.testPrepareOnly":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":391,"com.graphhopper.GraphHopperTest.testVia":29,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":470,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":257,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":42,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":292,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":106,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":164,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":272,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":326,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":324,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":10}}]
