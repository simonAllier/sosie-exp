[{"failures":[],"tindex":"d8ca4b6f-dbbf-11e4-98c1-b17ef0878696","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"d8cc4740-dbbf-11e4-98c1-99f1aa3704d6","variableMapping":{"cap":"flags","bytes":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[85,86,87,88,89,90,91,92],"tindex":"d8cc4741-dbbf-11e4-98c1-71472ecbcee6","variableMapping":{"res":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[93,0,1,2,94,3,95,96,97,98,4,5,99,6,7,100,101,102,103,104,105,106,107,108,109,110,9,111,112,113,114,10,11,12,13,14,15,115,16,116,17,117,118,18,19,119,120,20,121,122,123,124,22,125,126,23,127,24,128,25,26,27,129,28,130,131,29,132,133,30,31,134,32,135,33,34,35,136,36,137,138,139,140,141,37,142,38,39,40,41,42,43,143,44,144,49,50,145,146,147,148,51,149,150,52,53,54,151,55,56,57,152,58,59,153,154,155,156,60,157,158,61,62,63,159,64,65,66,160,67,161,162,163,164,68,165,166,69,70,71,167,72,73,74,168,75,169,170,76,171,172,173,174,77,175,176,78,79,80,177,81,82,83,178,84],"tindex":"d8cc4742-dbbf-11e4-98c1-933089f92927","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:137","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"d8cc4743-dbbf-11e4-98c1-c92eaaeea7c4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"d8cc4744-dbbf-11e4-98c1-fb29815a83c0","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"d8cc4745-dbbf-11e4-98c1-b7b3ce496f74","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"d8cc4746-dbbf-11e4-98c1-912a601eee98","variableMapping":{"width":"i","lonSimilar":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"d8cc6e57-dbbf-11e4-98c1-2b5063749187","variableMapping":{"i":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[],"tindex":"d8cc6e58-dbbf-11e4-98c1-c9dcfea7998f","variableMapping":{"time":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[],"tindex":"d8cc6e59-dbbf-11e4-98c1-6984f3d31425","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[179,180,181,182,5,99,6,123,125,126,24,30,31,134,32,183,135,33,34,35,136,36,139,184,37,142,38,39,40,41,42,43,185,143,44,144,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,47,203,204,205,206,207,208,209,210,211,212,213,214,215,216,48],"tindex":"d8cc6e5a-dbbf-11e4-98c1-9f93400383c0","variableMapping":{"width":"frontIndex","lonSimilar":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"d8cc6e5b-dbbf-11e4-98c1-8fdca6a318cd","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[93,0,1,2,3,95,96,217,218,4,5,99,6,7,219,220,221,222,223,8,100,224,103,106,9,111,112,113,114,10,11,12,13,14,15,115,16,116,17,117,225,118,18,19,119,120,20,121,122,123,21,124,22,125,126,23,127,24,128,25,26,27,129,28,130,131,226,29,132,140,141,184,37,142,38,41,42,185,44,144,45,46,47,48,49,50,145,146,147,148,51,149,150,52,53,54,151,55,56,57,152,58,59,153,154,155,156,60,157,158,61,62,63,159,64,65,66,160,67,161,162,163,164,68,165,166,69,70,71,167,72,73,74,168,75,169,170,76,171,172,173,174,77,175,176,78,79,80,177,81,82,83,178,84],"tindex":"d8cc6e5c-dbbf-11e4-98c1-cf63d736d3ca","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"d8cc6e5d-dbbf-11e4-98c1-3173390463e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[227,219,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"tindex":"d8cc6e5e-dbbf-11e4-98c1-0b8b50185c9f","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"d8cc6e5f-dbbf-11e4-98c1-3f0265983bfa","variableMapping":{"high":"maxTurnCosts","len":"shift","start":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"d8cc6e60-dbbf-11e4-98c1-d90dcb273180","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"d8cc6e61-dbbf-11e4-98c1-0b7535fa7273","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[33],"tindex":"d8cc9572-dbbf-11e4-98c1-2134c2cfe4e1","variableMapping":{"bytePointer":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[242,243,87,244,245,90,246],"tindex":"d8cc9573-dbbf-11e4-98c1-7dceac5cf544","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if (int < int)\n    return com.graphhopper.routing.util.EncodedValue.setValue(0, int);\n"},"status":-1},{"failures":[],"tindex":"d8cc9574-dbbf-11e4-98c1-4b0d47a95e6e","variableMapping":{"i":"speed","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":0},{"failures":[],"tindex":"d8cc9575-dbbf-11e4-98c1-c91a63712a6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:79","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"d8cc9576-dbbf-11e4-98c1-83145494e49b","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":0},{"failures":[],"tindex":"d8cc9577-dbbf-11e4-98c1-b5abd14c8307","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No OSM file specified\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[247,248,179,180,95,96,99,6,186,187,188,190],"tindex":"d8cc9578-dbbf-11e4-98c1-9d909f1add9f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[4,6,147,249,250,251,252,253,254,155,255,256,257,258,259,260,163,261,262,263,264,265,266,173,267,268,269,270,271,272],"tindex":"d8cc9579-dbbf-11e4-98c1-c715653412b2","variableMapping":{"size":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-1},{"failures":[],"tindex":"d8cc957a-dbbf-11e4-98c1-d5a6df4dd01a","variableMapping":{"high":"noOfStates","len":"noOfStates","start":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[273,247,93,248,274,179,180,275,0,1,2,94,3,95,96,4,5,99,6,7,276,277,220,8,111,112,113,114,10,11,12,13,14,278,15,115,16,116,17,117,225,118,18,19,119,120,20,121,122,123,21,124,22,125,126,23,127,24,128,25,26,27,129,28,279,279,280,280,281,281,282,282,130,130,283,283,284,284,131,131,285,285,286,286,287,287,288,288,289,226,29,132,133,30,31,134,32,183,135,33,34,246,35,136,36,137,138,139,140,141,290,291,292,293,294,295,184,37,142,38,39,40,41,296,42,43,185,143,297,44,144,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,45,313,186,187,188,189,314,190,315,316,317,318,319,320,46,191,321,192,193,194,195,322,196,323,197,198,199,200,201,324,202,47,203,204,325,205,326,206,207,208,209,327,210,328,211,212,213,214,215,329,216,48,330,331,49,332,333,50,334,335,336,145,146,147,337,148,51,338,339,149,150,340,52,341,249,342,250,53,343,54,251,252,344,345,346,151,347,55,253,254,56,348,57,152,349,350,351,58,352,353,354,59,355,356,357,153,154,155,358,156,60,359,360,157,158,361,61,362,255,363,256,62,364,63,257,258,365,366,367,159,368,64,259,260,65,369,66,160,370,371,372,67,373,374,161,162,163,375,164,68,376,377,165,166,378,69,379,261,380,262,70,381,71,263,264,382,383,384,167,385,72,265,266,73,386,74,168,387,388,389,75,390,169,391,392,393,170,394,395,396,76,397,398,399,171,172,173,400,174,77,401,402,175,176,403,78,404,267,405,268,79,406,80,269,270,407,408,409,177,410,81,271,272,82,411,83,178,412,413,414,84,415],"tindex":"d8ccbc8b-dbbf-11e4-98c1-59e92c04b2d4","variableMapping":{"heights":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10).flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[],"tindex":"d8ccbc8c-dbbf-11e4-98c1-d1a09b082413","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"d8ccbc8d-dbbf-11e4-98c1-adf21f7cbe9e","variableMapping":{"size":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"d8ccbc8e-dbbf-11e4-98c1-392915250e68","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:114","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[21],"tindex":"d8ccbc8f-dbbf-11e4-98c1-01bd60d2a785","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[217,242,416,218,417,87,418,219,229,240,221,419,90,420],"tindex":"d8ccbc90-dbbf-11e4-98c1-994f5e31fcc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[93,421,422,423,1,26,280,285,288,29,133,31,134,32,183,135,33,34,35,136,36,137,139,184,38,39,41,43,302,304,192,206,49,50,344,253,152,59,365,259,160,424,425,382,72,265,168,426,427,428,429,430,76,407,271,178,431,432,433,434,435],"tindex":"d8ccbc91-dbbf-11e4-98c1-17b2f4af3c2f","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[436],"tindex":"d8ccbc92-dbbf-11e4-98c1-d52b24b5a6eb","variableMapping":{"eleDelta":"lastPrio","decEleSum":"lastPrio","fullDist2D":"lastPrio","decDist2DSum":"lastPrio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"d8ccbc93-dbbf-11e4-98c1-b3346f1a4b9d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[416,418,240,420],"tindex":"d8ccbc94-dbbf-11e4-98c1-d3fea1bcab51","variableMapping":{"bytePos":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"d8ccbc95-dbbf-11e4-98c1-e59b33d62a88","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"d8ccbc96-dbbf-11e4-98c1-4597e848c57d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"d8ccbc97-dbbf-11e4-98c1-fb4cf9359023","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[89,437],"tindex":"d8ccbc98-dbbf-11e4-98c1-a1aad8fe0a34","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"d8ccbc99-dbbf-11e4-98c1-c3a2bd31501b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"d8ccbc9a-dbbf-11e4-98c1-4910f3772419","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"d8cce2ab-dbbf-11e4-98c1-09a701bc57a2","variableMapping":{"bytesForFlags":"nextTurnBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[438,439,239,440,441,105,109],"tindex":"d8cce2ac-dbbf-11e4-98c1-c3cd6efda75c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"d8cce2ad-dbbf-11e4-98c1-fd45a9f6b24d","variableMapping":{"encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":0},{"failures":[],"tindex":"d8cce2ae-dbbf-11e4-98c1-7d4ad8adfad7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"d8cce2af-dbbf-11e4-98c1-45257e2532fc","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[273,247,93,248,274,179,180,0,1,2,94,3,95,96,97,217,242,442,443,444,445,438,446,98,218,243,447,417,87,448,449,450,451,452,439,453,4,5,99,6,7,276,227,219,228,229,230,232,237,238,239,241,454,244,455,456,457,277,220,221,245,458,419,90,459,460,461,462,463,440,464,222,465,466,223,8,467,100,468,441,224,101,102,103,104,105,106,107,108,109,110,9,469,111,112,113,114,10,11,12,13,14,278,15,115,16,116,17,117,225,118,18,19,119,120,20,121,122,123,21,124,22,125,126,23,127,24,128,25,26,27,129,28,279,280,282,130,283,284,131,285,286,287,288,226,29,132,133,30,31,134,32,183,135,33,34,35,136,36,137,138,139,140,141,290,184,37,142,38,39,40,41,42,43,185,143,44,144,307,308,309,310,312,45,186,187,188,189,190,315,316,317,318,320,46,191,321,192,193,194,195,322,196,323,197,198,199,200,201,202,47,203,204,205,326,206,207,208,209,327,210,328,211,212,213,214,215,216,48,49,332,333,50,336,145,146,147,337,148,51,338,339,149,150,52,341,249,342,250,53,343,54,251,252,346,151,55,253,254,56,348,57,152,350,351,58,352,354,59,357,153,154,155,358,156,60,359,360,157,158,61,362,255,363,256,62,364,63,257,258,367,159,64,259,260,65,369,66,160,371,372,67,373,161,162,163,375,164,68,376,377,165,166,69,379,261,380,262,70,381,71,263,264,384,167,72,265,266,73,386,74,168,388,389,75,390,169,392,393,170,396,76,399,171,172,173,400,174,77,401,402,175,176,78,404,267,405,268,79,406,80,269,270,409,177,81,271,272,82,411,83,178,413,414,84,415],"tindex":"d8cce2b0-dbbf-11e4-98c1-6313bbba6d59","variableMapping":{"size":"nextWayBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"d8cce2b1-dbbf-11e4-98c1-a5bbd0eaee1e","variableMapping":{"segmentSizeInBytes":"com.graphhopper.util.EdgeIterator.NO_EDGE","index":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"d8cce2b2-dbbf-11e4-98c1-2f0d79376932","variableMapping":{"heights":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:77","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":0},{"failures":[],"tindex":"d8cce2b3-dbbf-11e4-98c1-2f830464ef44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"d8cd09c4-dbbf-11e4-98c1-c386dcdd3276","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[470,471,472,191,323,197,205,328,211,473,474,475,476,477,478,479],"tindex":"d8cd09c5-dbbf-11e4-98c1-73a597063dad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"d8cd09c6-dbbf-11e4-98c1-25f7ad9278bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[242,444,447,451,228,229,237,458,462],"tindex":"d8cd09c7-dbbf-11e4-98c1-812a39c81559","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[93,114,10,11,12,13,14,278,15,16,116,17,117,118,18,19,119,120,20,121,122,123,21,124,22,125,126,23,127,24,128,25,26,27,129,28,184,37,142,38,41,42,185,203,204,325,206,208,209,210,212,213,214,215,216,48,391,393,395],"tindex":"d8cd09c8-dbbf-11e4-98c1-2f337105b89c","variableMapping":{"size":"index","index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[242,444,447,87,451,228,229,237,458,90,462],"tindex":"d8cd09c9-dbbf-11e4-98c1-05e8be2684e5","variableMapping":{"dir":"pavementName","tr":"tr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:269","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"sharp_right\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[123,125,126,24,31,134,32,142,38,39,40,41,43,185,44,144,480,472,191,192,193,194,195,196,323,197,198,199,200,201,202,47,203,204,205,206,207,208,209,210,328,211,212,213,214,215,216,48],"tindex":"d8cd09ca-dbbf-11e4-98c1-a722127c007d","variableMapping":{"currentBucket":"err","currentIndex":"x1","bucketSize":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"d8cd09cb-dbbf-11e4-98c1-db1daf738f96","variableMapping":{"reverseSpeed":"this","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[217,242,417,87,229,457,419,90],"tindex":"d8cd09cc-dbbf-11e4-98c1-15562f6313df","variableMapping":{"resultOrientation":"speed","orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"d8cd09cd-dbbf-11e4-98c1-5549ea191f32","variableMapping":{"key":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[179,180,181,182],"tindex":"d8cd09ce-dbbf-11e4-98c1-47c94282a3ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"d8cd09cf-dbbf-11e4-98c1-353110abc7ac","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[481],"tindex":"d8cd09d0-dbbf-11e4-98c1-7518cbd6bda1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1063","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"d8cd09d1-dbbf-11e4-98c1-e9319cf783bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[438,417,448,439,227,239,419,459,440,33],"tindex":"d8cd09d2-dbbf-11e4-98c1-e3e77ec36e6d","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"d8cd09d3-dbbf-11e4-98c1-83684b0e8fd6","variableMapping":{"line":"encoderList"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[4,276],"tindex":"d8cd09d4-dbbf-11e4-98c1-110a34c4c084","variableMapping":{"i":"removed","to":"removed","lonSize":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d8cd30e5-dbbf-11e4-98c1-cb26fd845e3d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"d8cd30e6-dbbf-11e4-98c1-f3148b41b1b0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"d8cd30e7-dbbf-11e4-98c1-c788839dac76","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"d8cd30e8-dbbf-11e4-98c1-319d203a14ae","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[113,10,15,115,117,225,118,18,19,119,120,20,121,122,123,21,22,125,126,23,127,24,25,26,27,129,28,142,38,39,40,41,43,185,44],"tindex":"d8cd30e9-dbbf-11e4-98c1-1f139b62c2d3","variableMapping":{"reverse":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:618","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Not yet supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"d8cd30ea-dbbf-11e4-98c1-4f8c40bb3329","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"d8cd30eb-dbbf-11e4-98c1-0baa61a35f3a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"d8cfa1ec-dbbf-11e4-98c1-afe90030f353","variableMapping":{"distance":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV","maxSpeed":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"d8cfa1ed-dbbf-11e4-98c1-875cc1fa2735","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[93,3,95,4,99,7,276,10,11,15,16,117,118,124,126,28,130,131,140,141,142,44,49,50,145,146,147,150,151,56,152,58,59,153,154,155,158,159,65,160,67,161,162,163,166,167,73,168,75,76,171,172,173,176,177,82,178,84],"tindex":"d8cfa1ee-dbbf-11e4-98c1-cd87ec5bd458","variableMapping":{"res":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"d8cfa1ef-dbbf-11e4-98c1-c11f04485606","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"d8cfa1f0-dbbf-11e4-98c1-25d20b6501a5","variableMapping":{"high":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-2},{"failures":[],"tindex":"d8cfa1f1-dbbf-11e4-98c1-8bd2f72ab71a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"d8cfa1f2-dbbf-11e4-98c1-c1949de4438e","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[184,41,42,43,143,482,49,50,59,394,76],"tindex":"d8cfa1f3-dbbf-11e4-98c1-d9f19efc9862","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"d8cfa1f4-dbbf-11e4-98c1-b111495f3119","variableMapping":{"bitsForEdgeFlags":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[242,443,444,446,243,447,87,450,451,453,228,229,232,237,241,244,456,245,458,90,461,462,464,31,134,183,33,34,36],"tindex":"d8cfa1f5-dbbf-11e4-98c1-0d06f89915f4","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"d8cfc906-dbbf-11e4-98c1-638c15812968","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d8cfc907-dbbf-11e4-98c1-43204a2647a3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[],"tindex":"d8cfc908-dbbf-11e4-98c1-2bf2c639789e","variableMapping":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"d8cfc909-dbbf-11e4-98c1-eb180e09fd28","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[217,242,416,218,417,87,418,219,229,240,221,419,90,420],"tindex":"d8cfc90a-dbbf-11e4-98c1-9b569adba0fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"d8cfc90b-dbbf-11e4-98c1-35ebec0ee995","variableMapping":{"numTiles":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"d8cfc90c-dbbf-11e4-98c1-934a2cc303d5","variableMapping":{"high":"scDirMask","len":"dir","start":"scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[],"tindex":"d8cfc90d-dbbf-11e4-98c1-ff471550893f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[457],"tindex":"d8cfc90e-dbbf-11e4-98c1-3fb1d7b83091","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"d8cfc90f-dbbf-11e4-98c1-67fba734dbe3","variableMapping":{"factor":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":0},{"failures":[],"tindex":"d8cfc910-dbbf-11e4-98c1-07d28d1e7aad","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"finishedTo","v":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"d8cfc911-dbbf-11e4-98c1-bd932ec76e45","variableMapping":{"clonedG":"this","edgeEntryBytes":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1070","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.int) != (int))\n    throw new java.lang.IllegalStateException(((((\"edgeEntryBytes cannot be different for cloned graph. \" + \"Cloned: \") + (com.graphhopper.storage.GraphHopperStorage.int)) + \" vs \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":128,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":280,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":97,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":162,"com.graphhopper.reader.OSMReaderTest.testFerry":133,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":95,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":417,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":207,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":37,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":340,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":292,"com.graphhopper.coll.CompressedArrayTest.testCompress":471,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":372,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":12,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":382,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":16,"com.graphhopper.GraphHopperTest.testPrepare":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":387,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":113,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":313,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":444,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":180,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":205,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":242,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":122,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":193,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":351,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":87,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":49,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":478,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":171,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":117,"com.graphhopper.GraphHopperTest.testLoadOSM":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":194,"com.graphhopper.reader.OSMReaderTest.testSort":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":452,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":99,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":334,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":369,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":59,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":476,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":388,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":131,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":57,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":410,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":360,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":332,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":145,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":403,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":238,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":210,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":126,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":209,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":119,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":173,"com.graphhopper.coll.OSMIDMapTest.testGetLong":305,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":337,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":406,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":76,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":269,"com.graphhopper.coll.CompressedArrayTest.testCompress2":470,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":219,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":52,"com.graphhopper.GraphHopperAPITest.testLoad":44,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":466,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":362,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":155,"com.graphhopper.storage.LevelGraphStorageTest.testClone":174,"com.graphhopper.reader.OSMReaderTest.testBarriers":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":68,"com.graphhopper.util.GHUtilityTest.testCopy":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":235,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":319,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":438,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":434,"com.graphhopper.routing.PathTest.testFindInstruction":132,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":443,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":147,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":3,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":468,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":412,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":316,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":66,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":56,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":250,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":396,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":455,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":401,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":376,"com.graphhopper.util.InstructionListTest.testWayList2":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":199,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":338,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":447,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":482,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":277,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":355,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":175,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":341,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":20,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":154,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":183,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":26,"com.graphhopper.coll.OSMIDMapTest.testGet":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":150,"com.graphhopper.routing.PathBidirRefTest.testExtract":111,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":441,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":304,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":407,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":213,"com.graphhopper.storage.RAMDataAccessTest.testCopy":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":352,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":265,"com.graphhopper.storage.RAMDataAccessTest.testSegments":433,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":47,"com.graphhopper.util.GHUtilityTest.testSort2":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":23,"com.graphhopper.reader.OSMReaderTest.testMain":31,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":450,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":102,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":335,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":78,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":181,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":268,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":84,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":86,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":130,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":404,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":221,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":80,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":137,"com.graphhopper.storage.StorablePropertiesTest.testStore":330,"com.graphhopper.storage.GraphHopperStorageTest.testClone":156,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":109,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":107,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":363,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":169,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":377,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":393,"com.graphhopper.routing.PathTest.testTime":226,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":234,"com.graphhopper.util.BitUtilLittleTest.testToFloat":422,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":413,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":469,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":201,"com.graphhopper.reader.OSMReaderTest.testRelation":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":264,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":409,"com.graphhopper.util.GHUtilityTest.testSortDirected":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":463,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":429,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":282,"com.graphhopper.GraphHopperTest.testFootOnly":185,"com.graphhopper.util.BitUtilLittleTest.testToInt":423,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":105,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":187,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":327,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":19,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":480,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":70,"com.graphhopper.search.NameIndexTest.testCreate":301,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":432,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":279,"com.graphhopper.routing.QueryGraphTest.testOneWay":286,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":324,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":475,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":192,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":473,"com.graphhopper.reader.OSMReaderTest.testWithBounds":36,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":440,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":261,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":349,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":383,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":244,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":172,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":227,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":446,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":346,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":45,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":53,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":153,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":118,"com.graphhopper.util.BitUtilLittleTest.testToBitString":421,"com.graphhopper.util.InstructionListTest.testWayList":1,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":448,"com.graphhopper.GraphHopperAPITest.testDisconnected179":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":165,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":375,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":141,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":75,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":39,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":359,"com.graphhopper.routing.util.EncodedValueTest.testSwap":85,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":116,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":159,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":115,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":178,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":231,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":451,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":129,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":453,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":354,"com.graphhopper.routing.PathTest.testWayList":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":389,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":379,"com.graphhopper.coll.OSMIDMapTest.testGet2":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":28,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":82,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":345,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":364,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":223,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":339,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":211,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":460,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":228,"com.graphhopper.util.GHUtilityTest.testSort":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":385,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":442,"com.graphhopper.search.NameIndexTest.testPut":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":58,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":358,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":318,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":326,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":190,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":309,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":419,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":307,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":333,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":230,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":294,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":465,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":343,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":4,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":425,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":72,"com.graphhopper.routing.PathTest.testFound":289,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":143,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":457,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":83,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":481,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":392,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":249,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":300,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":69,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":158,"com.graphhopper.util.InstructionListTest.testEmptyList":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":236,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":215,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":125,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":101,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":445,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":127,"com.graphhopper.reader.PrinctonReaderTest.testRead":140,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":160,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":208,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":149,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":378,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":474,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":161,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":54,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":89,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":245,"com.graphhopper.reader.OSMReaderTest.testFoot":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":167,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":288,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":323,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":414,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":477,"com.graphhopper.reader.OSMReaderTest.testOneWay":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":197,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":255,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":260,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":348,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":428,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":71,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":13,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":472,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":11,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":310,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":427,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":8,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":380,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":281,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":138,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":356,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":353,"com.graphhopper.routing.PathBidirRefTest.testExtract2":112,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":225,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":200,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":237,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":298,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":64,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":240,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":390,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":467,"com.graphhopper.util.SimpleIntDequeTest.testPush":182,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":312,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":195,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":65,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":402,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":110,"com.graphhopper.GraphHopperTest.testFootAndCar":40,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":365,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":267,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":164,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":454,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":148,"com.graphhopper.storage.StorablePropertiesTest.testLoad":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":25,"com.graphhopper.GraphHopperTest.testPrepareOnly":184,"com.graphhopper.GraphHopperTest.testVia":142,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":320,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":163,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":35,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":170,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":94,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":368,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":100,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":381,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":98,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":411,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":272,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":50}}]
