[{"failures":[0,1,2,3,4,5],"tindex":"50e70f18-db3f-11e4-b172-6d96f72734cb","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"50e7d269-db3f-11e4-b172-cd047bd77159","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[6,7,8,9,10,11,12,13,14,15],"tindex":"50e7d26a-db3f-11e4-b172-4dcfe1f7a8f7","variableMapping":{"java.lang.Double.NaN":"prio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:104","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[16,17,18,19],"tindex":"50e7d26b-db3f-11e4-b172-69fa9fa0c88d","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"50e7f97c-db3f-11e4-b172-eddce5e19784","variableMapping":{"a_lon_deg":"maxLatTmp","factor":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"50e7f97d-db3f-11e4-b172-7956cd934377","variableMapping":{"r":"midLon","x":"midLon","absY":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"50e7f97e-db3f-11e4-b172-13b60860cb71","variableMapping":{"start":"index","this":"this","onStack":"onStack","nodeIndex":"nodeLowLink","connectedId":"index","nodeLowLink":"nodeIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":0},{"failures":[],"tindex":"50e7f97f-db3f-11e4-b172-7f705199236b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[32],"tindex":"50e7f980-db3f-11e4-b172-2fdcd342f320","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"50e7f981-db3f-11e4-b172-0bac7baef530","variableMapping":{"size":"wayBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"50e7f982-db3f-11e4-b172-43a2bb566168","variableMapping":{"sacScale":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"50e82093-db3f-11e4-b172-3dacb1cca576","variableMapping":{"iterTo":"iterState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:348","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-2},{"failures":[],"tindex":"50e82094-db3f-11e4-b172-1b04405379d8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"50e82095-db3f-11e4-b172-1d4757a076ef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,22,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,23,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,0,1,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,2,3,423,4,424,425,426,427,428,429,430,431,432,433,434,435,436,5,437,437,438,438,439,439,440,440,441,441,442,442,443,443,444,444,445,445,446,446,447,447,448,448],"tindex":"50e847a6-db3f-11e4-b172-7dbd0705a21c","variableMapping":{"segmentSizeInBytes":"tmp","indexDivisor":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[50,55,449,450,451,452,453,454],"tindex":"50e847a7-db3f-11e4-b172-7db75e5873d7","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"restrictedValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"50e86eb8-db3f-11e4-b172-a5587a8d4667","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"50e86eb9-db3f-11e4-b172-3dc586bc04b1","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[455,456,457],"tindex":"50edecfa-db3f-11e4-b172-03d8d2e039b6","variableMapping":{"bit":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"50edecfb-db3f-11e4-b172-4d1db219c8c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isBool(long, int);\n}"},"status":-2},{"failures":[36,37,38,42,44,45,46,47,48,49,50,51,52,53,54,458,55,56,57,58,459,59,60,460,461,462,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,98,113,139,140,141,142,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,22,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,23,180,181,182,183,184,185,186,187,188,189,190,191,193,194,234,235,236,237,238,240,241,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,329,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,463,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,0,1,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,2,3,423,4,424,425,426,427,428,429,430,431,432,433,434,435,436,5,437,437,438,438,439,439,440,440,441,441,442,442,443,443,444,444,445,445,446,446,447,447,448,448],"tindex":"50edecfc-db3f-11e4-b172-23d8d58c5925","variableMapping":{"heights":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[59,89,97,99,100,102,106,107,114,115,240,248,256,258,259,261,265,266,273,274,291,299,301,302,304,308,309,316,317,336,344,346,347,349,353,354,361,362,391,393,394],"tindex":"50ee140d-db3f-11e4-b172-d35527dd3e06","variableMapping":{"oldPriorities":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,46,47,48,50,53,54,55,56,57,80,464,455,465,457],"tindex":"50ee140e-db3f-11e4-b172-d38a14be346c","variableMapping":{"nodeId":"directionBitMask","nodeIdOffset":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[38,42,47,53,466,467,468,469,470,7,471,472,473,9,10,474,475,476,477,12,13,478,479,480,481,15,482,483,484],"tindex":"50ee140f-db3f-11e4-b172-61b73c8e4584","variableMapping":{"flags":"flags","mask":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"50ee1410-db3f-11e4-b172-93e285ed6513","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"50ee1411-db3f-11e4-b172-1bf5d6038529","variableMapping":{"closed":"found"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:181","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":0},{"failures":[],"tindex":"50ee1412-db3f-11e4-b172-33914806404c","variableMapping":{"lazyUpdates":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":0},{"failures":[],"tindex":"50ee3b23-db3f-11e4-b172-977fc1dcc0ee","variableMapping":{"speed":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[485,486,487,488,436],"tindex":"50ee3b24-db3f-11e4-b172-259fa8813eab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[487,488],"tindex":"50ee6235-db3f-11e4-b172-c960ab438d6e","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"50ee6236-db3f-11e4-b172-65db94341f1b","variableMapping":{"lastKey":"shift","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"50ee6237-db3f-11e4-b172-bd8592caad12","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"50ee6238-db3f-11e4-b172-3791df710598","variableMapping":{"nameIndexRef":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[46,489,465],"tindex":"50ee6239-db3f-11e4-b172-c51fb9312eec","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"50ee623a-db3f-11e4-b172-45777d998978","variableMapping":{"dist":"minLon","com.graphhopper.util.DistanceCalcEarth.R":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[80,456],"tindex":"50ee623b-db3f-11e4-b172-a3e6134a9275","variableMapping":{"message":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"50ee623c-db3f-11e4-b172-fb3817638a51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"50ee623d-db3f-11e4-b172-1f714069f5c4","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"lon2","java.lang.Double.POSITIVE_INFINITY":"lon2","weight":"lat2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[],"tindex":"50ee623e-db3f-11e4-b172-3ffcb921840d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:538","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        double double = com.graphhopper.routing.util.EncodedValue.getValue(long);\n        if (double == 0)\n            return ((double)(com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n        return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.getDouble(long, int);\n}"},"status":-2},{"failures":[],"tindex":"50ee623f-db3f-11e4-b172-5b31a47e8b98","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:65","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,53,54,458,55,56,57,58,459,59,490,491,492,80,449,466,467,32,493,450,494,495,464,496,489,497,455,465,498,499,468,469,451,500,501,502,503,504,470,505,16,506,7,457,507,471,508,472,509,452,510,511,512,513,473,514,17,9,515,10,516,474,475,476,517,453,518,519,520,521,522,477,523,18,524,12,397,525,13,526,478,479,480,527,454,528,529,530,531,532,481,533,19,534,15,482,483,484],"tindex":"50ee8950-db3f-11e4-b172-992274cec55a","variableMapping":{"value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:104","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"50ee8951-db3f-11e4-b172-37e8a7ed0412","variableMapping":{"maxLatTmp":"lon","minLatTmp":"lon","lat":"midLon","hash":"spatialKey"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-2},{"failures":[487,488],"tindex":"50ee8952-db3f-11e4-b172-6fd0610c1a62","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[20,21,165,167,168,184,186,187,24,25,27,29,30,535,536,31],"tindex":"50ee8953-db3f-11e4-b172-f730114c1fcf","variableMapping":{"distInMeter":"maxLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[537,78,79,538,539,540,403,404],"tindex":"50ee8954-db3f-11e4-b172-f34f7639cf76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"50ee8955-db3f-11e4-b172-1fa43b7d66f0","variableMapping":{"type":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:198","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"50ee8956-db3f-11e4-b172-c336ae2260f8","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[541,542,543],"tindex":"50ee8957-db3f-11e4-b172-e3f8e84421c3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"50ee8958-db3f-11e4-b172-c9ed88b0c2e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[],"tindex":"50ee8959-db3f-11e4-b172-ed9e70da6c9e","variableMapping":{"deltaX":"minLatTmp","maxX":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"50ee895a-db3f-11e4-b172-7b0b1f06ea2c","variableMapping":{"encoderList":"entryVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"50eeb06b-db3f-11e4-b172-6f13cb0e33a3","variableMapping":{"width":"maxCount","lonSimilar":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[35,36,37,38,39,41,42,46,47,48,50,53,54,55,56,57,58,59,80,482,483,484],"tindex":"50eeb06c-db3f-11e4-b172-856dc23f2c6d","variableMapping":{"includeWay":"flags","edgeEncoders":"edgeEncoders","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:245","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[0,1,4,424,433],"tindex":"50eeb06d-db3f-11e4-b172-493ba2f1ba9d","variableMapping":{"reverse":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:618","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Not yet supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"50eeb06e-db3f-11e4-b172-d7aae7fac1d0","variableMapping":{"keyIndex":"skippedEdge1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[],"tindex":"50eeb06f-db3f-11e4-b172-9bac72164de7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 1))"},"status":-2},{"failures":[32,489,465,16,17,18,19],"tindex":"50eeb070-db3f-11e4-b172-c134f80d1a5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:173","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n        return true;\n    \n}"},"status":-1},{"failures":[],"tindex":"50eeb071-db3f-11e4-b172-97a06ed9bcdf","variableMapping":{"mKeys":"arr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:62","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"50eeb072-db3f-11e4-b172-f3b6e525531d","variableMapping":{"values":"elem","index":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:325","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return int[][int];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[35,36,39,40],"tindex":"50eeb073-db3f-11e4-b172-d53bcac63143","variableMapping":{"initLeafSize":"tmpPrevEdge","maxLeafEntries":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-2},{"failures":[16,17,18,19],"tindex":"50eeb074-db3f-11e4-b172-2d88707187e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[44,45,69,70,73,77,78,79,88,89,91,92,96,103,105,111,113,116,118,123,145,152,175,194,242,247,248,250,251,255,262,264,270,272,275,277,282,285,290,291,293,294,298,305,307,313,315,318,320,325,327,330,335,336,338,339,343,350,352,358,360,363,365,370,388,389,391,392,393,394,395,399,400,0,405,406,407,408,409,410,411,412,413,417,418,419,420,422,2,3,423,4,426,427,428,429,430,432,434,436,5,441],"tindex":"50eeb075-db3f-11e4-b172-f725de3bc60f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"50eeb076-db3f-11e4-b172-eb8bbf9cfcb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"50eeb077-db3f-11e4-b172-05c8f54f6a87","variableMapping":{"mGarbage":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"50eeb078-db3f-11e4-b172-b30fc62ed8d2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"50eeb079-db3f-11e4-b172-1bf44520ee1c","variableMapping":{"java.lang.Double.NaN":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","com.graphhopper.reader.OSMReader.EMPTY":"mpInteger","id":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:482","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[32],"tindex":"50eeb07a-db3f-11e4-b172-7968eb173b01","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"50eeb07b-db3f-11e4-b172-c54d02f17eb7","variableMapping":{"deltaX":"fwdIncline","tmp":"fwdIncline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"50eed78c-db3f-11e4-b172-f176872b0b89","variableMapping":{"res":"backwardBit","maxBit":"backwardBit","value":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":0},{"failures":[],"tindex":"50eed78d-db3f-11e4-b172-058c6e6c9a35","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"50eed78e-db3f-11e4-b172-c9bf1fe05af4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[398],"tindex":"50eed78f-db3f-11e4-b172-e9993d8f060a","variableMapping":{"strLen":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","res":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:192","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[33,35,36,37,39,40,41,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,460,461,462,63,64,65,66,67,73,77,78,79,80,83,84,85,86,161,162,163,180,181,182,242,285,327,330,372,397,398,403,404,2,437,438,440,441,442,443,444,445,447,448],"tindex":"50eed790-db3f-11e4-b172-e749a0ea3a08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"50eed791-db3f-11e4-b172-f3d254742f7a","variableMapping":{"nodeFlags":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"50eed792-db3f-11e4-b172-093bcfeadd80","variableMapping":{"mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"50eed793-db3f-11e4-b172-9d5a352938ee","variableMapping":{"java.lang.Double.NaN":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"50eed794-db3f-11e4-b172-790101ba5b3c","variableMapping":{"lazyUpdates":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[449],"tindex":"50eed795-db3f-11e4-b172-77beef11d9d6","variableMapping":{"eof":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"50eed796-db3f-11e4-b172-774c3e460ba5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[113],"tindex":"50eed797-db3f-11e4-b172-27e107b4d21b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"50eed798-db3f-11e4-b172-0bc9ef6ddd04","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"50eed799-db3f-11e4-b172-2902839cef02","variableMapping":{"currEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":0},{"failures":[],"tindex":"50eed79a-db3f-11e4-b172-bb5aebaa7def","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"50eed79b-db3f-11e4-b172-698c7036ea70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"50eed79c-db3f-11e4-b172-27cc25100801","variableMapping":{"intIndex":"shift","len":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"50eed79d-db3f-11e4-b172-b588e8736619","variableMapping":{"tmpNo":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"50eed79e-db3f-11e4-b172-8761e6cb69c4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"50eefeaf-db3f-11e4-b172-0550d05ab932","variableMapping":{"high":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[35,36,37,38,39,41,46,58,80,98,257,300,345,544,545,493,495,489,497,455,546,499,469,505,457,471,472,514,515,475,476,523,398,525,479,480,533,484,402,403,0,1,413,415,416],"tindex":"50eefeb0-db3f-11e4-b172-6547207fed35","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-1},{"failures":[],"tindex":"50eefeb1-db3f-11e4-b172-595677aebd96","variableMapping":{"precision":"lat","lat":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-2},{"failures":[33,34,35,36,37,39,40,41,42,46,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,126,129,130,132,133,135,136,137,138,209,212,213,215,216,218,219,220,221,327,372],"tindex":"50eefeb2-db3f-11e4-b172-fbb4115b85e3","variableMapping":{"java.lang.Integer.MAX_VALUE":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[33,34,35,36,37,39,40,41,42,46,48,49,50,51,52,53,54,55,56,57,58,59,63,64,65,66,67,126,129,130,132,133,135,136,137,138,209,212,213,215,216,218,219,220,221,327,372],"tindex":"50eefeb3-db3f-11e4-b172-8da1d4989290","variableMapping":{"nextTowerId":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[35,36,38,39,43,47,50,52,53,55,547,81,82,154,155,156,159,161,163,166,169,170,171,172,174,176,177,180,182,183,185,188,189,190,191,193,194,388,389,392,393,394,412,416,417,420],"tindex":"50eefeb4-db3f-11e4-b172-21a73ca6f052","variableMapping":{"length":"tmp","factor":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[33,35,39,40,41,43,48,51,52,63,64,65,66,67,73,77,78,79,80,84,85,86,113,127,161,163,180,182,210,239,242,246,267,273,278,280,285,289,310,316,321,323,327,330,334,355,361,366,368,387,403,404,2,438,444,445,448],"tindex":"50ef25c5-db3f-11e4-b172-57069391c248","variableMapping":{"width":"indexDivisor","i":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[46,58,59,497,455,505,457,548,549,514,523,533],"tindex":"50ef25c6-db3f-11e4-b172-bb805aec7b20","variableMapping":{"time":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[33,39,40,41,43,239,242,285,327,330,550],"tindex":"50ef25c7-db3f-11e4-b172-71dcbd9d8aed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"50ef25c8-db3f-11e4-b172-21c191be30ac","variableMapping":{"flags":"mask","nodeFlags":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"50ef25c9-db3f-11e4-b172-c98ff526b2ce","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[393,394],"tindex":"50ef25ca-db3f-11e4-b172-c75ab62eb665","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[],"tindex":"50ef25cb-db3f-11e4-b172-55cef8eea9c0","variableMapping":{"flags":"acceptBit","tmpValue":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":421,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":438,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":239,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":457,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":88,"com.graphhopper.reader.OSMReaderTest.testFerry":46,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":69,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":70,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":475,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":509,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":181,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":34,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":537,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":481,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":15,"com.graphhopper.storage.MMapDataAccessTest.testSegments":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":344,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":62,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":125,"com.graphhopper.coll.CompressedArrayTest.testCompress":21,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":513,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":324,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":108,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":300,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":178,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":126,"com.graphhopper.util.AngleCalcTest.testOrientation":538,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":434,"com.graphhopper.GraphHopperTest.testPrepare":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":420,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":424,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":488,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":516,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":413,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":153,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":473,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":82,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":245,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":179,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":395,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":472,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":515,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":405,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":299,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":162,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":369,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":327,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":380,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":535,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":246,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":487,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":5,"com.graphhopper.GraphHopperTest.testLoadOSM":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":169,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":163,"com.graphhopper.reader.OSMReaderTest.testSort":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":523,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":393,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":331,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":319,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":285,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":121,"com.graphhopper.storage.RAMDataAccessTest.testHeader":217,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":444,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":60,"com.graphhopper.storage.MMapDataAccessTest.testHeader":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":365,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":372,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":381,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":271,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":229,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":200,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":296,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":328,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":339,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":548,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":478,"com.graphhopper.reader.OSMNodeTest.testSetTags":492,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":505,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":185,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":417,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":480,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":408,"com.graphhopper.coll.OSMIDMapTest.testGetLong":66,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":348,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":354,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":263,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":242,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":265,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":540,"com.graphhopper.coll.CompressedArrayTest.testCompress2":20,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":309,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":499,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":345,"com.graphhopper.GraphHopperAPITest.testLoad":388,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":199,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":449,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":301,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":291,"com.graphhopper.storage.LevelGraphStorageTest.testClone":250,"com.graphhopper.reader.OSMReaderTest.testBarriers":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":335,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":396,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":231,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":176,"com.graphhopper.util.GHUtilityTest.testCopy":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":410,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":131,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":194,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":503,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":150,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":220,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":8,"com.graphhopper.routing.PathTest.testFindInstruction":404,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":336,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":485,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":68,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":467,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":279,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":526,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":320,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":305,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":211,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":363,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":430,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":531,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":93,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":288,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":383,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":207,"com.graphhopper.util.InstructionListTest.testWayList2":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":534,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":170,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":325,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":474,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":550,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":368,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":549,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":397,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":254,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":214,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":127,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":346,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":154,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":409,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":51,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":2,"com.graphhopper.coll.OSMIDMapTest.testGet":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":343,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":225,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":32,"com.graphhopper.routing.PathBidirRefTest.testExtract":399,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":65,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":518,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":226,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":189,"com.graphhopper.storage.RAMDataAccessTest.testCopy":212,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":114,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":471,"com.graphhopper.storage.RAMDataAccessTest.testSegments":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":453,"com.graphhopper.util.GHUtilityTest.testSort2":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":418,"com.graphhopper.reader.OSMReaderTest.testMain":48,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":243,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":464,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":353,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":536,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":18,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":190,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":270,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":332,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":257,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":261,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":282,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":258,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":358,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":525,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":264,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":58,"com.graphhopper.storage.StorablePropertiesTest.testStore":387,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":210,"com.graphhopper.storage.GraphHopperStorageTest.testClone":293,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":117,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":465,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":497,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":94,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":237,"com.graphhopper.routing.PathTest.testTime":402,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":502,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":280,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":251,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":546,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":107,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":269,"com.graphhopper.reader.OSMReaderTest.testRelation":458,"com.graphhopper.util.GHUtilityTest.testSortDirected":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":533,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":137,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":440,"com.graphhopper.GraphHopperTest.testFootOnly":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":508,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":155,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":489,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":184,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":377,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":483,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":406,"com.graphhopper.reader.OSMElementTest.testSetTags":491,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":543,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":103,"com.graphhopper.search.NameIndexTest.testCreate":86,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":218,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":437,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":203,"com.graphhopper.routing.QueryGraphTest.testOneWay":446,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":173,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":510,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":161,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":24,"com.graphhopper.reader.OSMReaderTest.testWithBounds":57,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":221,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":19,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":367,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":392,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":109,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":482,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":247,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":244,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":498,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":532,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":9,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":357,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":350,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":289,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":445,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":1,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":233,"com.graphhopper.util.InstructionListTest.testWayList":78,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":322,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":374,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":517,"com.graphhopper.GraphHopperAPITest.testDisconnected179":389,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":95,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":359,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":160,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":529,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":106,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":522,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":37,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":295,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":361,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":435,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":542,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":415,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":433,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":541,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":500,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":477,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":192,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":197,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":202,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":284,"com.graphhopper.storage.MMapDataAccessTest.testCopy":378,"com.graphhopper.routing.PathTest.testWayList":403,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":496,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":456,"com.graphhopper.coll.OSMIDMapTest.testGet2":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":4,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":134,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":275,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":460,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":356,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":521,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":306,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":544,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":186,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":187,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":213,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":454,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":486,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":468,"com.graphhopper.util.GHUtilityTest.testSort":74,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":166,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":452,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":520,"com.graphhopper.search.NameIndexTest.testPut":84,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":149,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":141,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":205,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":479,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":443,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":398,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":329,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":451,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":461,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":351,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":228,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":391,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":206,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":113,"com.graphhopper.routing.PathTest.testFound":401,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":43,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":484,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":128,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":277,"com.graphhopper.util.AngleCalcTest.testAtan2":539,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":519,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":347,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":85,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":223,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":98,"com.graphhopper.util.InstructionListTest.testEmptyList":76,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":208,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":412,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":504,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":416,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":494,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":514,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":419,"com.graphhopper.reader.PrinctonReaderTest.testRead":44,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":321,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":182,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":342,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":25,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":87,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":352,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":512,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":528,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":373,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":501,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":13,"com.graphhopper.reader.OSMReaderTest.testFoot":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":111,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":448,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":462,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":167,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":281,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":507,"com.graphhopper.reader.OSMReaderTest.testOneWay":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":168,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":302,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":317,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":364,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":511,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":136,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":527,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":105,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":429,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":426,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":455,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":135,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":427,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":390,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":101,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":439,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":287,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":459,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":204,"com.graphhopper.routing.PathBidirRefTest.testExtract2":400,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":171,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":470,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":222,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":83,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":315,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":143,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":506,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":124,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":466,"com.graphhopper.util.SimpleIntDequeTest.testPush":547,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":530,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":164,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":318,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":253,"com.graphhopper.GraphHopperTest.testFootAndCar":38,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":310,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":469,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":193,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":91,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":375,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":431,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":338,"com.graphhopper.storage.StorablePropertiesTest.testLoad":463,"com.graphhopper.GraphHopperTest.testPrepareOnly":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":422,"com.graphhopper.GraphHopperTest.testVia":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":524,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":89,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":55,"com.graphhopper.reader.OSMElementTest.testHasTag":490,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":238,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":80,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":314,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":545,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":104,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":493,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":276,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":274,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":330}}]
