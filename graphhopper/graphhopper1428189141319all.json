[{"failures":[0,1,2],"tindex":"0c886839-db20-11e4-8787-f58c07ee6229","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-1},{"failures":[],"tindex":"0c89529a-db20-11e4-8787-63b9b5b54b30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[3],"tindex":"0c89529b-db20-11e4-8787-b78974498e01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"0c89529c-db20-11e4-8787-af93f0edbdba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"0c89529d-db20-11e4-8787-71b481dbd688","variableMapping":{"width":"size","i":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:147","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"0c89529e-db20-11e4-8787-550d2290a539","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"0c89529f-db20-11e4-8787-cd98d1344de8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[],"tindex":"0c8952a0-db20-11e4-8787-3708498182c5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"0c8979b1-db20-11e4-8787-3fef8481752c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[],"tindex":"0c8979b2-db20-11e4-8787-47f15cea5ad9","variableMapping":{"nodeFlags":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-2},{"failures":[],"tindex":"0c8979b3-db20-11e4-8787-774e36c6abd8","variableMapping":{"size":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-2},{"failures":[],"tindex":"0c8979b4-db20-11e4-8787-7f0afa448dc3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[4,5],"tindex":"0c8979b5-db20-11e4-8787-31de25bb2d8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"0c8979b6-db20-11e4-8787-c317e67ac5d1","variableMapping":{"edgeTo":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","edgeFrom":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-2},{"failures":[],"tindex":"0c8979b7-db20-11e4-8787-6f0352f031d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"0c8979b8-db20-11e4-8787-af0d5a5aad29","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":0},{"failures":[6,7,8,9,10,11,12,1,13,14,15,16,17,18,19,20,21,22,23,24,2,25,26,27,28,29,30,31],"tindex":"0c8979b9-db20-11e4-8787-3f06294dccce","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[32],"tindex":"0c8979ba-db20-11e4-8787-e93496dd61c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"0c8979bb-db20-11e4-8787-2775d327052b","variableMapping":{"high":"relBitMask","highKey":"relBitMask","key":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"0c8979bc-db20-11e4-8787-898ccdcea985","variableMapping":{"properties":"properties"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:107","type":"CtReturnImpl","sourcecode":"return !(java.util.Map<java.lang.String, java.lang.Object>.isEmpty())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"0c8979bd-db20-11e4-8787-0534fb701ad5","variableMapping":{"encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"0c8979be-db20-11e4-8787-adc60816d13a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"0c8979bf-db20-11e4-8787-fdfe823bb93e","variableMapping":{"key":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[33,34,35],"tindex":"0c89a0d0-db20-11e4-8787-b986620e0a71","variableMapping":{"allSegments":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[36,37,38,39,40,9,11],"tindex":"0c89a0d1-db20-11e4-8787-c5e4b93d5e3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:173","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n        return true;\n    \n}"},"status":-1},{"failures":[],"tindex":"0c89a0d2-db20-11e4-8787-7f8bda3a6c6b","variableMapping":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"0c89a0d3-db20-11e4-8787-89dc229d2dea","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"0c89a0d4-db20-11e4-8787-1f95f24c344b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[60,33,34,61,62],"tindex":"0c89a0d5-db20-11e4-8787-319f99fb551d","variableMapping":{"edgeId":"i","nextEdge":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[63,23],"tindex":"0c89a0d6-db20-11e4-8787-93fd6d4e9d56","variableMapping":{"err":"maxCount","dLat":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[64,65,66,67,68,69,70,6,71,72,73,74,75,76,77,78,32,79,80,81,82,83,84,85,86,87,88,7,9,10,89,90,91,92,93,94,95,96,97,98,3,21,2,25,26,27,28,30,99,100,101,102,103,104],"tindex":"0c89a0d7-db20-11e4-8787-5d05b5da0462","variableMapping":{"val":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-1},{"failures":[],"tindex":"0c89a0d8-db20-11e4-8787-91d67ff15eea","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:61","type":"CtReturnImpl","sourcecode":"return \"PREPARE+\" + (com.graphhopper.routing.util.Weighting.toString())"},"status":0},{"failures":[],"tindex":"0c89a0d9-db20-11e4-8787-4bdd88584c55","variableMapping":{"high":"size","guess":"size","low":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[105,68,106,69,107,108,109,110,111,112,113,114,70,36,115],"tindex":"0c89a0da-db20-11e4-8787-e99c29f578a0","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"0c89a0db-db20-11e4-8787-e5aee9081c11","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"0c89a0dc-db20-11e4-8787-e972f1833a73","variableMapping":{"turnCostIndex":"high","NO_TURN_ENTRY":"low"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"0c89a0dd-db20-11e4-8787-5b64d9eaa1e4","variableMapping":{"i":"paveType","allBits":"paveType","hash":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-2},{"failures":[72,80,16],"tindex":"0c89c7ee-db20-11e4-8787-67e00170af4a","variableMapping":{"time":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"0c89c7ef-db20-11e4-8787-15dc7e0a15b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[92,96,116,117],"tindex":"0c89c7f0-db20-11e4-8787-55ce9b6af3d1","variableMapping":{"mainEdgeState":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-1},{"failures":[118,16],"tindex":"0c89c7f1-db20-11e4-8787-95cce0c338c9","variableMapping":{"width":"encoderCount","lonSimilar":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"0c89c7f2-db20-11e4-8787-c7f52391b81a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[107,111,70,71,119,120,121,74,122,75,123,124,77,125,79,126,127,128,82,129],"tindex":"0c89c7f3-db20-11e4-8787-f38c5c0cd5e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:462","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[32],"tindex":"0c89c7f4-db20-11e4-8787-851fbe0b8255","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[130,131,33,132,133,91,92,134,135,136,137,138,139,140,61,93,141,94,95,142,143,144,145,146,147,148,149,150,96,2,25,26,27,28,30,99,100,151],"tindex":"0c89c7f5-db20-11e4-8787-b12a3b6e4ee4","variableMapping":{"segmentSizeInBytes":"from","index":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[152],"tindex":"0c89c7f6-db20-11e4-8787-97022e7603f5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"0c89c7f7-db20-11e4-8787-7514ef2fcebf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"0c89c7f8-db20-11e4-8787-33f4f9158edf","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"hash","speed":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":0},{"failures":[],"tindex":"0c89c7f9-db20-11e4-8787-071f05184c67","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"0c89c7fa-db20-11e4-8787-03e621f4705b","variableMapping":{"osmFile":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[69,114,153,73,154,155,76,156,157,81,158],"tindex":"0c89ef0b-db20-11e4-8787-c9c58cbaae7d","variableMapping":{"neighborUpdates":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"0c89ef0c-db20-11e4-8787-7387d44ff13e","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"0c89ef0d-db20-11e4-8787-1321784ea355","variableMapping":{"size":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"0c89ef0e-db20-11e4-8787-c92b210e7ed0","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"size","valueIfKeyNotFound":"size","i":"size","mValues":"elem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"0c89ef0f-db20-11e4-8787-8f3168ba3111","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(5, 5, 0)"},"status":-2},{"failures":[130,131,33,132,133,91,92,134,135,136,137,138,139,140,61,93,94,95,142,143,144,145,147,148,149,150,96,2,25,26,27,28,30,99,100],"tindex":"0c89ef10-db20-11e4-8787-fb69cf885ce7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[159,160,161],"tindex":"0c89ef11-db20-11e4-8787-5f886e273c89","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"0c89ef12-db20-11e4-8787-af6f3310bf06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"0c89ef13-db20-11e4-8787-736ad2c1a8cf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"0c89ef14-db20-11e4-8787-a9ded9b14730","variableMapping":{"distance":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[9,3],"tindex":"0c89ef15-db20-11e4-8787-f5fee5bbaa1e","variableMapping":{"distance":"durationInHours","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[69,114,153,73,154,155,156,157,81,158],"tindex":"0c89ef16-db20-11e4-8787-0b39b327c341","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[162,163,164],"tindex":"0c89ef17-db20-11e4-8787-25e33fa2b729","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"0c89ef18-db20-11e4-8787-5be7abac3822","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"0c89ef19-db20-11e4-8787-85ffa2648a81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":0},{"failures":[68,69,114,153,154,155,76,156,157,158],"tindex":"0c89ef1a-db20-11e4-8787-f59b1ce9cb51","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[63,165,23,166,167,168,5],"tindex":"0c89ef1b-db20-11e4-8787-637f5dccf0e4","variableMapping":{"shift":"capacity","flags":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[169,170,171],"tindex":"0c89ef1c-db20-11e4-8787-71efb703b93f","variableMapping":{"tt":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"0c8a162d-db20-11e4-8787-59a7eea4222e","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","com.graphhopper.routing.util.EncodingManager.FOOT":"com.graphhopper.routing.util.EncodingManager.FOOT","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.FOOT","entryVal":"entry","com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"0c8a162e-db20-11e4-8787-ed94381288a3","variableMapping":{"time":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"0c8a162f-db20-11e4-8787-1393cf1ad41f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"0c8a1630-db20-11e4-8787-579d10ed4ac4","variableMapping":{"neighborUpdates":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"0c8a1631-db20-11e4-8787-e711a66237c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"0c8a1632-db20-11e4-8787-8bb67dc13733","variableMapping":{"err":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"0c8a1633-db20-11e4-8787-910733e3be1d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[172],"tindex":"0c8a1634-db20-11e4-8787-bbb66a2e5f70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-1},{"failures":[173,174,175,176,64,177,32,148,178,179,180,181,182,183,184,185,186,187,98,188,3,12,1,13,14,189,15,16,17,18,19,20,21,23,190,191,192,193,24,2,25,26,27,28,29,30,99,31,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"tindex":"0c8a1635-db20-11e4-8787-4bf2f4304ee2","variableMapping":{"locs":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[193,31],"tindex":"0c8a1636-db20-11e4-8787-dfe613f4b051","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:307","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"0c8a1637-db20-11e4-8787-8397e8b1262c","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"0c8a1638-db20-11e4-8787-c129175d9591","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"0c8a1639-db20-11e4-8787-9d09000b4d52","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":0},{"failures":[],"tindex":"0c8a163a-db20-11e4-8787-95425e1360aa","variableMapping":{"high":"mask","guess":"mask","low":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"0c8a163b-db20-11e4-8787-753e11e6c106","variableMapping":{"mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[],"tindex":"0c8a163c-db20-11e4-8787-d9624432f98d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"0c8a163d-db20-11e4-8787-afda81956e87","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"0c8a163e-db20-11e4-8787-1b48405d3e9b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[273],"tindex":"0c8a3d4f-db20-11e4-8787-09a2ff72d303","variableMapping":{"y":"speed","angle":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"0c8a3d50-db20-11e4-8787-8760f26b28e5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[138,149],"tindex":"0c8a3d51-db20-11e4-8787-139884193c25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"0c8a3d52-db20-11e4-8787-0309e88cb9e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[],"tindex":"0c8a3d53-db20-11e4-8787-e9fe1194f4d9","variableMapping":{"neighborUpdates":"y2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"0c8a3d54-db20-11e4-8787-8126cea8bca8","variableMapping":{"edgePointer":"nodeBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"0c8a3d55-db20-11e4-8787-59e923a931c9","variableMapping":{"encoded":"mask","backwardBit":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"0c8b27b6-db20-11e4-8787-b555a1936b3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:78","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.Integer, java.lang.Integer> java.util.Map<java.lang.Integer, java.lang.Integer> = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks()"},"status":-2},{"failures":[274,275,173,276,277,278,279,280,174,175,176,64,281,282,283,162,284,63,165,163,164,177,32,285,286,287,130,288,131,289,290,291,60,292,33,132,293,294,34,133,91,92,134,135,136,137,138,139,140,61,93,141,94,95,142,143,144,145,146,147,148,149,150,96,178,178,179,179,295,295,180,180,181,181,182,182,183,183,184,184,185,185,296,296,186,186,187,187,297,97,98,188,3,12,1,13,14,189,15,16,17,18,19,20,21,23,298,299,300,193,24,2,25,26,27,28,29,30,99,31,100,151,301,302,303,304,305,306,307,308,203,204,205,206,309,207,310,311,312,313,314,315,316,44,317,208,209,210,318,45,319,46,47,320,321,322,323,324,325,326,327,328,329,48,330,211,212,213,331,49,332,50,51,333,334,335,336,337,338,339,216,340,341,217,218,342,343,219,344,345,346,220,347,348,349,350,351,352,101,353,354,355,356,357,358,359,360,361,221,362,363,364,365,222,223,366,367,368,369,224,370,225,226,371,372,373,227,228,374,375,229,376,377,378,230,379,380,381,382,383,384,102,166,385,386,387,388,389,390,167,391,231,392,393,394,395,232,233,168,396,397,398,234,399,235,236,400,401,402,403,404,405,406,407,408,409,410,411,412,103,413,414,415,416,417,418,419,420,421,422,423,424,425,426,238,427,428,429,430,431,432,433,434,435,436,437,35,438,116,439,117,251,440,441,252,253,442,443,254,444,445,446,255,447,448,449,450,451,452,104,453,454,455,456,457,458,459,460,461,256,462,463,464,465,466,257,467,468,469,470,258,471,259,260,472,473],"tindex":"0c8b27b7-db20-11e4-8787-a9a7f02b4f29","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[130,131,33,132,133,91,92,134,135,136,137,138,139,140,61,93,141,94,95,142,143,144,145,146,147,148,149,150,96,2,25,26,27,28,30,99,100,151],"tindex":"0c8b27b8-db20-11e4-8787-6dd1986b6761","variableMapping":{"red":"from","green":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[474],"tindex":"0c8b27b9-db20-11e4-8787-41dbbca3ee26","variableMapping":{"importance":"val","hash":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"0c8b27ba-db20-11e4-8787-837b3fc55429","variableMapping":{"ref":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":0},{"failures":[162,164],"tindex":"0c8b27bb-db20-11e4-8787-7d87e8d4df99","variableMapping":{"turnCostIndex":"i","nextTurnCostIndex":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":146,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":179,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":65,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":251,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":403,"com.graphhopper.reader.OSMReaderTest.testFerry":3,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":282,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":283,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":107,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":212,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":24,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":473,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":352,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":239,"com.graphhopper.coll.CompressedArrayTest.testCompress":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":113,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":290,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":422,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":102,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":329,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":240,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":293,"com.graphhopper.GraphHopperTest.testPrepare":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":433,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":130,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":93,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":174,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":308,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":114,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":279,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":71,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":140,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":209,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":216,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":57,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":254,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":133,"com.graphhopper.GraphHopperTest.testLoadOSM":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":210,"com.graphhopper.reader.OSMReaderTest.testSort":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":74,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":218,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":243,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":397,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":227,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":434,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":184,"com.graphhopper.storage.RAMDataAccessTest.testHeader":268,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":300,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":369,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":465,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":381,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":340,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":347,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":67,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":219,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":452,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":77,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":332,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":142,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":331,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":136,"com.graphhopper.coll.OSMIDMapTest.testGetLong":201,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":445,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":361,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":458,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":252,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":460,"com.graphhopper.coll.CompressedArrayTest.testCompress2":41,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":391,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":75,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":101,"com.graphhopper.GraphHopperAPITest.testLoad":100,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":166,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":377,"com.graphhopper.storage.LevelGraphStorageTest.testClone":255,"com.graphhopper.reader.OSMReaderTest.testBarriers":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":139,"com.graphhopper.util.GHUtilityTest.testCopy":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":407,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":36,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":314,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":271,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":110,"com.graphhopper.routing.PathTest.testFindInstruction":188,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":462,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":345,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":87,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":281,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":471,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":126,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":311,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":398,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":388,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":367,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":356,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":441,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":172,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":448,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":408,"com.graphhopper.util.InstructionListTest.testWayList2":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":429,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":321,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":153,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":177,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":228,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":450,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":241,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":353,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":138,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":376,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":189,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":148,"com.graphhopper.coll.OSMIDMapTest.testGet":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":351,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":40,"com.graphhopper.routing.PathBidirRefTest.testExtract":286,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":200,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":334,"com.graphhopper.storage.RAMDataAccessTest.testCopy":264,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":372,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":427,"com.graphhopper.storage.RAMDataAccessTest.testSegments":270,"com.graphhopper.util.GHUtilityTest.testSort2":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":143,"com.graphhopper.reader.OSMReaderTest.testMain":1,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":360,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":335,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":7,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":431,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":104,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":456,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":472,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":181,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":79,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":459,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":21,"com.graphhopper.storage.StorablePropertiesTest.testStore":215,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":263,"com.graphhopper.storage.GraphHopperStorageTest.testClone":230,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":430,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":10,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":386,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":35,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":409,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":439,"com.graphhopper.routing.PathTest.testTime":97,"com.graphhopper.routing.util.EncodingManagerTest.testFixWayName":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":124,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":259,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":447,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":421,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":463,"com.graphhopper.util.GHUtilityTest.testSortDirected":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":82,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":249,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":180,"com.graphhopper.GraphHopperTest.testFootOnly":99,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":9,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":204,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":237,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":417,"com.graphhopper.search.NameIndexTest.testCreate":197,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":269,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":178,"com.graphhopper.routing.QueryGraphTest.testOneWay":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":324,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":54,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":208,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":52,"com.graphhopper.reader.OSMReaderTest.testWithBounds":20,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":39,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":262,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":182,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":414,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":423,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":444,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":442,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":170,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":363,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":357,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":229,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":92,"com.graphhopper.util.InstructionListTest.testWayList":175,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":399,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":169,"com.graphhopper.GraphHopperAPITest.testDisconnected179":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":410,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":127,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":299,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":436,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":26,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":380,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":294,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":159,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":394,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":393,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":161,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":343,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":461,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":150,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":337,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":373,"com.graphhopper.routing.PathTest.testWayList":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":413,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":474,"com.graphhopper.coll.OSMIDMapTest.testGet2":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":96,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":246,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":468,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":362,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":389,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":349,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":50,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":51,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":265,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":333,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":155,"com.graphhopper.util.GHUtilityTest.testSort":276,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":426,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":66,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":121,"com.graphhopper.search.NameIndexTest.testPut":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":371,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":378,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":313,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":330,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":207,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":80,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":32,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":301,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":341,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":191,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":358,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":162,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":238,"com.graphhopper.routing.PathTest.testFound":297,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":31,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":78,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":470,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":120,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":354,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":196,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":103,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":261,"com.graphhopper.util.InstructionListTest.testEmptyList":280,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":95,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":70,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":144,"com.graphhopper.reader.PrinctonReaderTest.testRead":298,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":213,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":350,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":53,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":402,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":446,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":359,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":118,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":123,"com.graphhopper.reader.OSMReaderTest.testFoot":12,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":187,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":46,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":56,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":260,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":105,"com.graphhopper.reader.OSMReaderTest.testOneWay":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":47,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":385,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":168,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":368,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":111,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":248,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":171,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":419,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":291,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":131,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":289,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":304,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":285,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":415,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":295,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":22,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":374,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":5,"com.graphhopper.routing.PathBidirRefTest.testExtract2":287,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":156,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":322,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":194,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":232,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":305,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":125,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":16,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":437,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":318,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":396,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":449,"com.graphhopper.GraphHopperTest.testFootAndCar":27,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":231,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":454,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":76,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":338,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":266,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":406,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":147,"com.graphhopper.GraphHopperTest.testPrepareOnly":193,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":404,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":18,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":117,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":64,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":395,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":86,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":418,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":6,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":469,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":467,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":217}}]
