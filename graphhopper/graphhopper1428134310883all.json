[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"6359598f-daa0-11e4-9ae4-f754977d1300","variableMapping":{"max":"lon","time":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:52","type":"CtIfImpl","sourcecode":"if (long > (double))\n    double = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[10],"tindex":"635b7c70-daa0-11e4-9ae4-ef33d8bd0f2b","variableMapping":{"bytePos":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"635b7c71-daa0-11e4-9ae4-37dbde788e8a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"635b7c72-daa0-11e4-9ae4-0d0e58db358a","variableMapping":{"oldValueIndex":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"635b7c73-daa0-11e4-9ae4-5f9bc6f2019d","variableMapping":{"need":"nodeA","i":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[11,12,13,14],"tindex":"635b7c74-daa0-11e4-9ae4-09eb067e1fad","variableMapping":{"midLat":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"635b7c75-daa0-11e4-9ae4-0b210cd6a52a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"635b7c76-daa0-11e4-9ae4-d5d7ff1e0090","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"635b7c77-daa0-11e4-9ae4-f90eef19e8d6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[0,1,2,3,4,5,7,8,15,16,9,17,18,19,20,21,22,23,24,25],"tindex":"635b7c78-daa0-11e4-9ae4-fb8f89cc0178","variableMapping":{"i":"i","to":"i","lonSize":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"635ba389-daa0-11e4-9ae4-f132a2da593c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:302","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.close()"},"status":0},{"failures":[],"tindex":"635ba38a-daa0-11e4-9ae4-71cc1e8b52d7","variableMapping":{"systemProperty":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[0,1,2,3,5,7,8,15,16,9,17,18,19,20,21,22,23,24,25],"tindex":"635ba38b-daa0-11e4-9ae4-5d43e25f4c41","variableMapping":{"initializedCounter":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"635ba38c-daa0-11e4-9ae4-ddc9299b31f3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[26],"tindex":"635ba38d-daa0-11e4-9ae4-5f20e65a34e1","variableMapping":{"compressionLevel":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"635ba38e-daa0-11e4-9ae4-c7eda267b1e6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"635ba38f-daa0-11e4-9ae4-61626bbfad56","variableMapping":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"635ba390-daa0-11e4-9ae4-a3b84e70139f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[],"tindex":"635bcaa1-daa0-11e4-9ae4-4d7d76bfa806","variableMapping":{"err":"from","dLat":"from","tmpErr":"from","x1":"from","sLon":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":0},{"failures":[27,28],"tindex":"635bcaa2-daa0-11e4-9ae4-0f6f146775ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"635bcaa3-daa0-11e4-9ae4-dfe02b4fd7f1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[29,30,31],"tindex":"635bcaa4-daa0-11e4-9ae4-371584278ae6","variableMapping":{"keyIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"635bcaa5-daa0-11e4-9ae4-71f1634926a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:449","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[48],"tindex":"635bf1b6-daa0-11e4-9ae4-91fd4295b5d4","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"635bf1b7-daa0-11e4-9ae4-1d37084867b1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"635bf1b8-daa0-11e4-9ae4-61d641842b57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[29],"tindex":"635bf1b9-daa0-11e4-9ae4-8b3e43323de0","variableMapping":{"currentBucket":"removed","currentIndex":"minOnewayNetworkSize","bucketSize":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[49,50,51,52,53],"tindex":"635c18ca-daa0-11e4-9ae4-31e1419d56ea","variableMapping":{"eleDelta":"costs","decEleSum":"costs","fullDist2D":"costs","decDist2DSum":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[],"tindex":"635c18cb-daa0-11e4-9ae4-65a8f6c5563f","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"635c18cc-daa0-11e4-9ae4-45f36e16cc0d","variableMapping":{"time":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"635c18cd-daa0-11e4-9ae4-21057fc25479","variableMapping":{"periodicUpdates":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":0},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,10,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,48,86,87,88,89,90,91,92,93,94,95,96],"tindex":"635c18ce-daa0-11e4-9ae4-97da6ca2cc55","variableMapping":{"distance":"speedVal","maxSpeed":"speedVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"635c18cf-daa0-11e4-9ae4-bfe7d3bdd2bd","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[97],"tindex":"635c3fe0-daa0-11e4-9ae4-5dbb61cdd606","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:72","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"PBF blob contains incomplete compressed data.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[98,58,99,100,101,102,103,104,105,106,107,108,109,53,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,21,134,135,136,137,138,139,140,141,142,143,25,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"635c3fe1-daa0-11e4-9ae4-6bf0f1e4740e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[156],"tindex":"635c3fe2-daa0-11e4-9ae4-0dfc7870f30b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"635c3fe3-daa0-11e4-9ae4-2d3305f9095e","variableMapping":{"workerThreads":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[90,104,105,106,107,108,109,53,110,111,112,113,91,114,115,116,117,118,119,120,121,122,123,124,125,157,158,159,160,161,162,163,150,151,152,164,153,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"tindex":"635c66f4-daa0-11e4-9ae4-877b8548c195","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"635c66f5-daa0-11e4-9ae4-33d3bcc6a0b2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"635c66f6-daa0-11e4-9ae4-69257a355f90","variableMapping":{"maxMCSpeed":"java.lang.Math.PI","speed":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"635c66f7-daa0-11e4-9ae4-fbac53e70e33","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[183,90],"tindex":"635c66f8-daa0-11e4-9ae4-a3d0c0777876","variableMapping":{"str":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:434","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\\t\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"635c8e09-daa0-11e4-9ae4-cb436b48ae73","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[102,103,184,185,186,187,127,128],"tindex":"635c8e0a-daa0-11e4-9ae4-636b072dc4ae","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[188,27,28],"tindex":"635c8e0b-daa0-11e4-9ae4-6315ee51350e","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"635c8e0c-daa0-11e4-9ae4-4f86268d8d7d","variableMapping":{"start":"scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"635c8e0d-daa0-11e4-9ae4-cb2b0eb0ae6f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"635c8e0e-daa0-11e4-9ae4-e33537c127a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"635c8e0f-daa0-11e4-9ae4-6f601cfaefa4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"635c8e10-daa0-11e4-9ae4-71b10e058627","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[115,121,122,123,125,159,160,169,189,175,176],"tindex":"635c8e11-daa0-11e4-9ae4-bd853990747a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"635c8e12-daa0-11e4-9ae4-f32536333d7a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"635c8e13-daa0-11e4-9ae4-b9b4afc4d3ab","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"635c8e14-daa0-11e4-9ae4-fbdd2d60f036","variableMapping":{"nodeFlags":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-2},{"failures":[],"tindex":"635c8e15-daa0-11e4-9ae4-f3146fc0eba6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[0,1,2,3,5,7,8,15,16,17,18,19,20,21,22,23,24,25],"tindex":"635c8e16-daa0-11e4-9ae4-639777ff6e85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"635c8e17-daa0-11e4-9ae4-fbf0a7f88df7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"635cb528-daa0-11e4-9ae4-d962eb0f6be2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[190,191,192,193,194,195,196,197,198,199,200,61,11,201,10,104,105,106,107,108,109,110,111,113,115,116,117,118,119,120,121,122,123,124,125,202,203,204,205,206,12,13,92,207,158,159,160,208,209,210,211,212,213,130,214,131,140,215,141,216,217,169,218,219,220,221,222,223,176,224,225,226,227,228,229,230,231,232,233],"tindex":"635cb529-daa0-11e4-9ae4-917e4375b288","variableMapping":{"length":"index","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:129","type":"CtIfImpl","sourcecode":"if ((byte[][].int) > 0)\n    throw new java.lang.IllegalStateException(\"already initialized\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[102,103,114],"tindex":"635cb52a-daa0-11e4-9ae4-5392cb99302f","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"635cb52b-daa0-11e4-9ae4-cb71f52b15a5","variableMapping":{"size":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[29,103,234,235,236,237,238,239,240,241,242,243,244,245,246,247,210,248,249,250,251,252,253,254,220,255,256,257,258,259,260,261,226,262],"tindex":"635cb52c-daa0-11e4-9ae4-113152f30679","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"635cb52d-daa0-11e4-9ae4-a17cbb7e6bba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"635cb52e-daa0-11e4-9ae4-d307af43a765","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"635cb52f-daa0-11e4-9ae4-c5fb656e32eb","variableMapping":{"graphHopperFolder":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":0},{"failures":[263,264,265,266,267,48,183],"tindex":"635cb530-daa0-11e4-9ae4-07fc33f95de6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[54,55,56,57,59],"tindex":"635cb531-daa0-11e4-9ae4-c5ccb57e882f","variableMapping":{"oldValueIndex":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"635cb532-daa0-11e4-9ae4-bdad35bde189","variableMapping":{"towerNodeDistance":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"635cb533-daa0-11e4-9ae4-c7dc31e8ecc2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-2},{"failures":[],"tindex":"635cb534-daa0-11e4-9ae4-a9c8ad5f8325","variableMapping":{"this":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:216","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException((\"Cannot call getName on shortcut \" + com.graphhopper.storage.GraphHopperStorage.EdgeIterable.(getEdge())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[48,183,90],"tindex":"635cb535-daa0-11e4-9ae4-8b9d2f120af3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"635cb536-daa0-11e4-9ae4-b79a1fb2ad3a","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxTurnCosts","edge":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[],"tindex":"635cdc47-daa0-11e4-9ae4-4baf3cb2c27d","variableMapping":{"empty":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"635cdc48-daa0-11e4-9ae4-bdc7e1bec320","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"635cdc49-daa0-11e4-9ae4-9d75a28f3976","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"635cdc4a-daa0-11e4-9ae4-c3111c953e9c","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[183],"tindex":"635cdc4b-daa0-11e4-9ae4-7326804c6c08","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[2],"tindex":"635cdc4c-daa0-11e4-9ae4-fd3dd339a6ea","variableMapping":{"lastKey":"hash","key":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"635cdc4d-daa0-11e4-9ae4-b5c3a602c4de","variableMapping":{"elem":"nodeLowLink","size":"start","keys":"nodeLowLink","i":"start","key":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (int[][(int / 2)]) > int ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-2},{"failures":[],"tindex":"635cdc4e-daa0-11e4-9ae4-0ba3e1131d34","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[268,269,270,271,272,273,274,188,275,276,277,278,279,55,280,281,282,283,284,285,286,98,287,57,58,99,288,289,100,290,291,190,292,293,59,194,197,294,295,61,11,64,29,101,102,103,30,73,76,296,85,297,298,48,299,86,87,183,300,301,90,104,105,106,107,109,53,110,111,112,113,91,302,114,303,304,116,117,118,119,120,121,122,123,125,206,12,13,92,184,185,305,207,306,307,234,157,308,309,310,93,311,312,313,158,314,315,316,317,159,160,208,318,242,162,319,320,321,94,322,323,324,163,325,326,211,327,169,218,328,249,171,329,330,331,95,332,333,334,172,335,336,221,337,338,339,176,224,340,256,178,341,342,343,96,344,345,346,347,348,349,227,350,154,155],"tindex":"635cdc4f-daa0-11e4-9ae4-6f812fcaaca4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:137","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[65,351,67,68,69,352,71,72,73,79,80,81,83,84,85,86,89,117,118,119,120,121,123],"tindex":"635cdc50-daa0-11e4-9ae4-293cdb012343","variableMapping":{"orientation":"maxSpeed","resultOrientation":"maxSpeed","baseOrientation":"maxSpeed","java.lang.Math.PI":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"635cdc51-daa0-11e4-9ae4-5bcbdbeb8788","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[],"tindex":"635cdc52-daa0-11e4-9ae4-694352fb6838","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"635cdc53-daa0-11e4-9ae4-679708043502","variableMapping":{"bitsForEdgeFlags":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"635cdc54-daa0-11e4-9ae4-097ca95d7a0b","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:149","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[],"tindex":"635cdc55-daa0-11e4-9ae4-fd0330b788bf","variableMapping":{"maxTurnCosts":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"635cdc56-daa0-11e4-9ae4-a52adf0b82d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:272","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterator com.graphhopper.util.EdgeSkipIterator = com.graphhopper.util.EdgeSkipExplorer.setBaseNode(com.graphhopper.util.EdgeIteratorState.getAdjNode())"},"status":-2},{"failures":[],"tindex":"635d0367-daa0-11e4-9ae4-51c5fe9de1f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"635d0368-daa0-11e4-9ae4-591b8121f06a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[64,66,70,85,86,87,91,117,92],"tindex":"635d0369-daa0-11e4-9ae4-2510f1681fca","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"maxSpeed","speed":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-1},{"failures":[],"tindex":"635d036a-daa0-11e4-9ae4-23aa109b4c60","variableMapping":{"latSize":"dLat","lonSize":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[270,57],"tindex":"635d036b-daa0-11e4-9ae4-8b6110bac60c","variableMapping":{"finishedTo":"finishedFrom","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"635d036c-daa0-11e4-9ae4-c14ba3e787e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"635d036d-daa0-11e4-9ae4-357302d78441","variableMapping":{"freeIndex":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[115,121,122,123,125,159,160,169,189,175,176],"tindex":"635d036e-daa0-11e4-9ae4-c58306782f01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"635d036f-daa0-11e4-9ae4-53ed1d009d55","variableMapping":{"nodeId":"mask","nodeIdOffset":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[353,263,354,264,265,355,266,356,267,298,48,183],"tindex":"635d0370-daa0-11e4-9ae4-a31777a9cb1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[357],"tindex":"635d0371-daa0-11e4-9ae4-97025fa97fde","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"635d2a82-daa0-11e4-9ae4-b54f6ef4503d","variableMapping":{"origEdgeId":"x2","mainEdges":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":311,"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":347,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":192,"com.graphhopper.search.NameIndexTest.testCreate":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":290,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":64,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":307,"com.graphhopper.reader.OSMReaderTest.testFerry":90,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":184,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":185,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":191,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":66,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":214,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":116,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":140,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":39,"com.graphhopper.reader.OSMReaderTest.testWithBounds":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":264,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":101,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":236,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":78,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":272,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":340,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":95,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":276,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":299,"com.graphhopper.GraphHopperTest.testPrepare":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":100,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":268,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":333,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":198,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":55,"com.graphhopper.util.InstructionListTest.testWayList":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":56,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":206,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":42,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":128,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":18,"com.graphhopper.GraphHopperAPITest.testDisconnected179":155,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":30,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":309,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":65,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":286,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":215,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":304,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":103,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":317,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":15,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":119,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":152,"com.graphhopper.routing.util.EncodedValueTest.testSwap":156,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":224,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":279,"com.graphhopper.GraphHopperTest.testLoadOSM":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":141,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":334,"com.graphhopper.reader.OSMReaderTest.testSort":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":102,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":161,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":275,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":227,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":34,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":261,"com.graphhopper.storage.RAMDataAccessTest.testHeader":168,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":35,"com.graphhopper.storage.MMapDataAccessTest.testHeader":174,"com.graphhopper.routing.PathTest.testWayList":61,"com.graphhopper.storage.MMapDataAccessTest.testCopy":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":298,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":180,"com.graphhopper.coll.OSMIDMapTest.testGet2":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":59,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":166,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":348,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":208,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":47,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":84,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":329,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":133,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":20,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":344,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":71,"com.graphhopper.util.GHUtilityTest.testSort":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":283,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":9,"com.graphhopper.coll.OSMIDMapTest.testGetLong":204,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":282,"com.graphhopper.search.NameIndexTest.testPut":231,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":327,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":247,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":176,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":70,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":196,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":10,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":123,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":254,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":94,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":63,"com.graphhopper.GraphHopperAPITest.testLoad":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":292,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":250,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":29,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":249,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":26,"com.graphhopper.storage.LevelGraphStorageTest.testClone":178,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":31,"com.graphhopper.reader.OSMReaderTest.testBarriers":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":158,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":89,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":125,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":50,"com.graphhopper.util.GHUtilityTest.testCopy":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":308,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":139,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":356,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":266,"com.graphhopper.routing.PathTest.testFindInstruction":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":33,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":244,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":232,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":93,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":77,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":305,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":98,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":137,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":336,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":301,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":81,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":296,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":274,"com.graphhopper.reader.PrinctonReaderTest.testRead":303,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":354,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":131,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":97,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":320,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":3,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":323,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":355,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":45,"com.graphhopper.util.InstructionListTest.testWayList2":13,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":352,"com.graphhopper.reader.OSMReaderTest.testFoot":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":145,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":313,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":24,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":229,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":337,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":25,"com.graphhopper.reader.OSMReaderTest.testOneWay":114,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":189,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":351,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":201,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":251,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":342,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":216,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":255,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":220,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":243,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":312,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":328,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":330,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":108,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":273,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":190,"com.graphhopper.coll.OSMIDMapTest.testGet":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":321,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":87,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":278,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":271,"com.graphhopper.routing.PathBidirRefTest.testExtract":294,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":32,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":135,"com.graphhopper.storage.RAMDataAccessTest.testCopy":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":241,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":240,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":149,"com.graphhopper.util.GHUtilityTest.testSort2":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":288,"com.graphhopper.reader.OSMReaderTest.testMain":105,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":177,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":297,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":246,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":16,"com.graphhopper.routing.PathBidirRefTest.testExtract2":295,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":263,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":85,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":346,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":315,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":146,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":230,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":259,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":172,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":53,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":350,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":194,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":257,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":69,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":181,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":345,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":91,"com.graphhopper.util.SimpleIntDequeTest.testPush":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":188,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":142,"com.graphhopper.storage.GraphHopperStorageTest.testClone":171,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":335,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":300,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":86,"com.graphhopper.GraphHopperTest.testFootAndCar":120,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":219,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":338,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":267,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":83,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":138,"com.graphhopper.routing.PathTest.testTime":60,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":157,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":341,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":162,"com.graphhopper.GraphHopperTest.testPrepareOnly":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":291,"com.graphhopper.GraphHopperTest.testVia":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":234,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":72,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":339,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":193,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":92,"com.graphhopper.GraphHopperTest.testFootOnly":124,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":76,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":40,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":110,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":48,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":19,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":281,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":262,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":160}}]
