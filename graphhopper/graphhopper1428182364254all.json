[{"failures":[],"tindex":"45c44e62-db10-11e4-ae6f-01cad090d2a7","variableMapping":{"y1":"i","y2":"i","x1":"element","x2":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[0,1],"tindex":"45c47573-db10-11e4-ae6f-7b096a37702c","variableMapping":{"acceptBit":"flags1","internalFlags":"flags2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-1},{"failures":[],"tindex":"45c47574-db10-11e4-ae6f-ed82b9cbbef3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"45c47575-db10-11e4-ae6f-35906f8b87ed","variableMapping":{"strLen":"mSize","bLen":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"45c47576-db10-11e4-ae6f-2558bb17ba6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"45c47577-db10-11e4-ae6f-15ce3ca03870","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"45c47578-db10-11e4-ae6f-a31937cb9403","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47],"tindex":"45c47579-db10-11e4-ae6f-75744fe7afa1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[48,49,50,51],"tindex":"45c4757a-db10-11e4-ae6f-31cdd0f0b3d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"45c4757b-db10-11e4-ae6f-c7f3592b5378","variableMapping":{"segmentsToMap":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":0},{"failures":[],"tindex":"45c4757c-db10-11e4-ae6f-5f8fcaa2c421","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"45c4757d-db10-11e4-ae6f-41eba5ef1758","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[40,44],"tindex":"45c49c8e-db10-11e4-ae6f-4da4b49c1171","variableMapping":{"weightApproximation":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"45c49c8f-db10-11e4-ae6f-05cdc4b83372","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"45c49c90-db10-11e4-ae6f-cd020d0381d2","variableMapping":{"y":"angle","angle":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[52,53,54,55,56,57,58,59,60,38,39,40,41,42,43,45,46,61,62,47],"tindex":"45c49c91-db10-11e4-ae6f-757965b0adae","variableMapping":{"minResolutionInMeter":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"45c49c92-db10-11e4-ae6f-57299f2deabc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"45c49c93-db10-11e4-ae6f-e5499e5bbf15","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"45c49c94-db10-11e4-ae6f-5d78671ca487","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"45c49c95-db10-11e4-ae6f-4504a26d47a7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"45c49c96-db10-11e4-ae6f-511f691f8b49","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[63,64,65,66,1,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,23,24,27,96,97],"tindex":"45c49c97-db10-11e4-ae6f-4dbbdae507ca","variableMapping":{"segmentsToMap":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[],"tindex":"45c49c98-db10-11e4-ae6f-dbc3c2461ed2","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"45c49c99-db10-11e4-ae6f-b74c103a3f3c","variableMapping":{"length":"bufferIndex","factor":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[],"tindex":"45c49c9a-db10-11e4-ae6f-d9c3a1898f74","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"45c49c9b-db10-11e4-ae6f-c3a415c071bd","variableMapping":{"red":"subNetworks"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[98,99,100,101,102,103,71,83,93,26,29],"tindex":"45c4c3ac-db10-11e4-ae6f-193c3673c145","variableMapping":{"high":"dir","highKey":"dir","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"45c4c3ad-db10-11e4-ae6f-330a15f239ca","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"45c4c3ae-db10-11e4-ae6f-af5741d8e465","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"45c4c3af-db10-11e4-ae6f-b391702d252a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"45c4c3b0-db10-11e4-ae6f-4f6a2327a007","variableMapping":{"val":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:109","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[104],"tindex":"45c4c3b1-db10-11e4-ae6f-474efb46edda","variableMapping":{"factor":"maxSpeed","value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"45c4c3b2-db10-11e4-ae6f-577381c393ae","variableMapping":{"foundIndex":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"45c4c3b3-db10-11e4-ae6f-25c61deba1bb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[105],"tindex":"45c4c3b4-db10-11e4-ae6f-39228079d0d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[20,106,105,107,108,23,109],"tindex":"45c4c3b5-db10-11e4-ae6f-238f378cc927","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"45c4c3b6-db10-11e4-ae6f-d3aade9ec235","variableMapping":{"min":"decDist2DSum","dist":"decEleSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":0},{"failures":[],"tindex":"45c4c3b7-db10-11e4-ae6f-e3f370d7ef63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"45c4c3b8-db10-11e4-ae6f-b997a52e91df","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"closed","v":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"45c4c3b9-db10-11e4-ae6f-478d9db3a138","variableMapping":{"max":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","tmpSize":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-2},{"failures":[110,111,112,113,114,115,94,27,96,28,116],"tindex":"45c4c3ba-db10-11e4-ae6f-0b5627fda9f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[117,118],"tindex":"45c4c3bb-db10-11e4-ae6f-e946aafae7a7","variableMapping":{"flags":"relBitMask","nodeFlags":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"45c4eacc-db10-11e4-ae6f-739810257f38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"45c4eacd-db10-11e4-ae6f-279b7eb60fe4","variableMapping":{"tmp":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-2},{"failures":[],"tindex":"45c4eace-db10-11e4-ae6f-cb6b627b6ead","variableMapping":{"newSegs":"segments","length":"delta","segmentSizePower":"length","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":0},{"failures":[],"tindex":"45c4eacf-db10-11e4-ae6f-a101c3895a76","variableMapping":{"pos":"shift","mSize":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[119,120,2,121,3,122,123,124,125,126,127,4,5,128,129,130,131,132,133,6,134,7,135,136,137,138,139,140,8,9,141,142,143,144,145,146,147,148,149,64,150,151,152,153,154,155,14,156,15,157,158,159,160,161,162,16,17,163,164,165,166,167],"tindex":"45c4ead0-db10-11e4-ae6f-216974ebd9c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"45c4ead1-db10-11e4-ae6f-6f4c9a7e6f29","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"45c4ead2-db10-11e4-ae6f-81107ee6f110","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[168,169,170,171,172,173,174,175,176],"tindex":"45c4ead3-db10-11e4-ae6f-d9905bd93c17","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[110,120,2,177,123,126,178,130,112,113,133,6,179,136,139,180,143,181,10,182,183,184,185,186,115,155,14,187,158,161,163,166,20,188,107,169,189,190,117,191,118,192,172,108,193,194,103,71,81,83,84,93,26,195,29],"tindex":"45c4ead4-db10-11e4-ae6f-3daf36f0ba0d","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"45c4ead5-db10-11e4-ae6f-27c447934bde","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[196,168,197,169,170,198,192,199,171,200,172,173,201,174,202,175,203,204,205,176,206,195,29,30,207,208,209,32,33,36,109,37],"tindex":"45c4ead6-db10-11e4-ae6f-adee519024e9","variableMapping":{"initialized":"partOfCycleRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"45c510e7-db10-11e4-ae6f-ebfe3501706f","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return \"destinations: \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[21],"tindex":"45c510e8-db10-11e4-ae6f-017f9a72818a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[119,110,210,211,212,213,120,2,214,215,216,217,218,219,177,121,98,220,3,221,122,123,222,124,125,223,224,225,226,126,227,127,4,5,178,128,228,129,229,230,231,130,131,52,232,233,234,235,236,53,237,54,55,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,63,266,267,57,268,269,270,271,272,58,273,59,60,274,275,276,277,278,279,280,111,112,281,132,113,282,283,284,285,133,6,286,287,288,289,290,291,179,134,99,292,7,293,135,136,294,137,138,295,296,297,298,139,299,140,8,9,180,141,300,142,301,302,303,143,144,304,181,10,305,306,307,308,309,310,182,311,100,312,11,313,314,183,315,316,317,318,319,320,321,184,322,323,12,13,185,324,325,326,327,328,329,186,330,64,150,331,151,332,114,152,153,115,333,334,335,154,155,14,336,337,338,339,340,341,187,156,101,342,15,343,157,158,344,159,160,345,346,347,348,161,349,162,16,17,163,164,350,165,351,352,353,166,167,354,355,356,357,358,359,360,361,362,363,364,365,366,367,20,368,369,370,371,18,372,373,19,374,375,376,377,104,378,193,194,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,387,387,388,388,389,389,390,390,391,391,392,393,65,394,66,395,396,397,1,398,67,68,69,70,103,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,23,24,25,26,27,96,28,97,116,195,29,30,207,31,208,209,32,33,34,35,36,109,37,399,400,401],"tindex":"45c510e9-db10-11e4-ae6f-8de547f7fc90","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[110,213,120,2,215,216,219,177,98,123,124,126,127,178,228,129,130,112,113,285,133,6,287,288,291,179,99,136,137,139,140,180,300,142,143,304,181,10,306,307,310,182,100,183,316,184,323,185,325,326,186,64,332,115,154,155,14,337,338,341,187,101,158,159,161,162,163,350,165,166,354,356,357,358,361,365,366,367,20,370,371,18,372,19,374,21,22,402,403,104,191,193,194,379,384,387,392,393,65,394,66,395,396,1,398,67,68,69,70,103,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,23,24,25,26,27,96,28,97,29,30,31,32,33,34,35,36,37,400,401],"tindex":"45c510ea-db10-11e4-ae6f-f1f33cf20f99","variableMapping":{"segmentSizeInBytes":"shift","capacity":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[52,54,55,56,57,59,60,38,39,40,41,43,45,46,61,62],"tindex":"45c510eb-db10-11e4-ae6f-9d1d22790b3f","variableMapping":{"factor":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"45c537fc-db10-11e4-ae6f-23a03ba0ec42","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[197,169,192,200,172,202,204,205],"tindex":"45c537fd-db10-11e4-ae6f-71665b49a668","variableMapping":{"fwdFaster":"speed","incDist2DSum":"speed","fwdSlower":"speed","fullDist2D":"speed","restDist2D":"speed","speed":"speed","decDist2DSum":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[168,170,171,173,174,202,175,205,176],"tindex":"45c537fe-db10-11e4-ae6f-cf006c40a676","variableMapping":{"cp":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:122","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[110,210,215,127,253,254,255,256,258,404,405,112,113,282,287,140,306,323,406,407,146,408,114,115,333,337,409,410,411,412,94,95,23,24,25,26,27,96,28,97,116,195,29,30,207,31,208,209,32,33,34,35,36,109,37],"tindex":"45c537ff-db10-11e4-ae6f-c5b999c0bd28","variableMapping":{"currentEntry":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"45c53800-db10-11e4-ae6f-7bece2ee6cf8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"45c53801-db10-11e4-ae6f-055de76a888e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"45c53802-db10-11e4-ae6f-57fdaa928207","variableMapping":{"pointIndex":"start","index":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[],"tindex":"45c53803-db10-11e4-ae6f-ffa0c984f70b","variableMapping":{"shift":"bits","preferWayEncoder":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[98,99,100,101,413,414],"tindex":"45c53804-db10-11e4-ae6f-014326d41557","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[196,197,169,198,192,199,200,172,201,202,203,204,205,206],"tindex":"45c53805-db10-11e4-ae6f-c3d070617376","variableMapping":{"bits":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[],"tindex":"45c53806-db10-11e4-ae6f-c1cdd031c3c2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[192,29,37],"tindex":"45c53807-db10-11e4-ae6f-fd9cfb807e47","variableMapping":{"i":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"45c53808-db10-11e4-ae6f-dd7c92f59258","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[110,213,120,2,219,177,98,126,178,129,130,244,251,265,280,112,113,285,133,6,291,179,99,139,180,142,143,304,181,10,310,182,100,184,185,326,186,115,154,155,14,341,187,101,161,163,165,166,188,191,192,71,75,78,81,83,84,93,26,29,32,37],"tindex":"45c55f19-db10-11e4-ae6f-9d50063ac8ce","variableMapping":{"usedBits":"usedBits","encoderCount":"usedBits","nextRelBit":"encoderCount","encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[373,19],"tindex":"45c55f1a-db10-11e4-ae6f-996bfc6503fc","variableMapping":{"latSimilar":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[],"tindex":"45c55f1b-db10-11e4-ae6f-85d54bf5688c","variableMapping":{"val":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[120,2,98,126,178,129,130,244,251,265,280,133,6,99,139,180,142,143,181,10,100,184,185,326,186,155,14,101,161,163,165,166,354,356,357,20,18,374,375,376,403,384,387,392,65,394,1,398,67,70,103,71,82,83,84,93,23,24,25,26,27,28,97,29,30,31,32,33,36,400,401],"tindex":"45c55f1c-db10-11e4-ae6f-3b934873abf2","variableMapping":{"size":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[119,110,210,211,212,415,213,120,2,214,215,216,217,218,219,177,121,98,220,3,221,122,123,222,124,125,223,224,225,226,126,227,127,4,5,178,128,228,129,229,230,231,130,131,244,251,265,266,280,112,281,132,113,282,283,284,416,285,133,6,286,287,288,289,290,291,179,134,99,292,7,293,135,136,294,137,138,295,296,297,298,139,299,140,8,9,180,141,300,142,301,302,303,143,144,304,181,10,305,306,307,308,309,310,182,311,100,312,11,313,314,183,315,316,317,318,319,320,321,184,322,323,12,13,185,324,325,326,327,328,329,186,330,64,150,331,151,332,114,152,153,115,333,334,335,417,154,155,14,336,337,338,339,340,341,187,156,101,342,15,343,157,158,344,159,160,345,346,347,348,161,349,162,16,17,163,164,350,165,351,352,353,166,167,354,355,356,357,358,361,364,365,366,367,20,370,371,18,372,373,19,374,375,418,419,376,420,188,421,422,423,102,424,425,106,21,426,427,428,105,107,22,429,402,430,403,431,432,377,104,433,434,196,435,168,197,169,436,437,438,439,440,441,442,443,444,170,445,48,446,198,189,190,447,448,192,449,450,199,451,171,200,172,452,453,454,455,456,457,458,459,460,173,461,49,462,201,463,464,174,202,465,466,467,468,469,470,471,175,472,50,473,203,474,204,475,205,476,477,478,479,480,481,482,176,483,51,206,378,193,194,379,384,387,392,393,484,65,394,66,395,396,397,1,398,67,68,69,70,103,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,23,24,25,26,27,96,28,97,116,485,400,401],"tindex":"45c6979d-db10-11e4-ae6f-c78becb04d3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"45c6979e-db10-11e4-ae6f-11d7cd2305c5","variableMapping":{"todoBytes":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[205],"tindex":"45c6979f-db10-11e4-ae6f-05f5cde39892","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"45c697a0-db10-11e4-ae6f-19bb4541df9c","variableMapping":{"size":"com.graphhopper.util.EdgeIterator.NO_EDGE","delta":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"45c697a1-db10-11e4-ae6f-c38847fadd18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"45c697a2-db10-11e4-ae6f-8fbdc9cf3068","variableMapping":{"tmpNode":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"45c697a3-db10-11e4-ae6f-094af23bf3ba","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"45c697a4-db10-11e4-ae6f-131c4815c55f","variableMapping":{"eleDelta":"bwSlower","decEleSum":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"45c6beb5-db10-11e4-ae6f-154e295ea3b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[119,110,210,211,212,415,213,120,2,214,215,216,217,218,219,177,121,98,220,3,221,122,123,222,124,125,223,224,225,226,126,227,127,4,5,178,128,228,129,229,230,231,130,131,244,251,265,280,112,281,132,113,282,283,284,416,285,133,6,286,287,288,289,290,291,179,134,99,292,7,293,135,136,294,137,138,295,296,297,298,139,299,140,8,9,180,141,300,142,301,302,303,143,144,304,181,10,305,306,307,308,309,310,182,311,100,312,11,313,314,183,315,316,317,318,319,320,321,184,322,323,12,13,185,324,325,326,327,328,329,186,330,64,150,331,151,332,114,152,153,115,333,334,335,417,154,155,14,336,337,338,339,340,341,187,156,101,342,15,343,157,158,344,159,160,345,346,347,348,161,349,162,16,17,163,164,350,165,351,352,353,166,167,486,373,418,419,376,420,188,421,422,423,102,424,425,106,21,426,427,428,105,107,22,429,402,430,403,431,432,377,104,433,434,196,435,168,197,169,436,437,438,439,440,441,442,443,444,170,445,48,446,198,447,117,487,191,118,192,449,450,199,451,171,200,172,452,453,454,455,456,457,458,459,460,173,461,49,462,201,463,464,174,202,465,466,467,468,469,470,471,175,472,50,473,203,474,204,475,205,476,477,478,479,480,481,482,176,483,51,206,488,489,380,103,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,490,491,26,116,195,29,30,207,31,208,209,32,33,34,35,36,109,37],"tindex":"45c6beb6-db10-11e4-ae6f-753c3745e459","variableMapping":{"tmpNo":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"45c6beb7-db10-11e4-ae6f-8fd3c61a1087","variableMapping":{"allBits":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"45c6beb8-db10-11e4-ae6f-a1a344d22743","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"45c6beb9-db10-11e4-ae6f-9f4ebb6a517e","variableMapping":{"speed":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[396,73,90,492,493,494,495,496],"tindex":"45c6beba-db10-11e4-ae6f-77f623f2e522","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[392,393,65,394,66,1,398,67,68,69,70,103,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,23,24,27,96,97],"tindex":"45c6bebb-db10-11e4-ae6f-57bb779e2b91","variableMapping":{"high":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-1},{"failures":[],"tindex":"45c6e5cc-db10-11e4-ae6f-e5812ef7b7e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"45c6e5cd-db10-11e4-ae6f-01f0a1f7d8b9","variableMapping":{"foundIndex":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[464],"tindex":"45c6e5ce-db10-11e4-ae6f-d7f2aa2ba3b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"45c6e5cf-db10-11e4-ae6f-f3980e900572","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[497,498,499,500,366,367,194,379],"tindex":"45c6e5d0-db10-11e4-ae6f-0dc7ee46391e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"45c6e5d1-db10-11e4-ae6f-91ac3b1fa599","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[501],"tindex":"45c6e5d2-db10-11e4-ae6f-8514827d3a2e","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[191,192,29],"tindex":"45c6e5d3-db10-11e4-ae6f-2bddf9852de1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"45c6e5d4-db10-11e4-ae6f-99a82aa47423","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":88,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":381,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":108,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":114,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":181,"com.graphhopper.reader.OSMReaderTest.testFerry":195,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":357,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":200,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":476,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":270,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":95,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":497,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":134,"com.graphhopper.coll.CompressedArrayTest.testCompress":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":482,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":66,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":319,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":98,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":267,"com.graphhopper.util.AngleCalcTest.testOrientation":498,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":67,"com.graphhopper.GraphHopperTest.testPrepare":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":327,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":392,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":496,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":451,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":80,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":365,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":252,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":176,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":369,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":374,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":450,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":78,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":234,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":303,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":112,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":61,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":154,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":495,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":70,"com.graphhopper.GraphHopperTest.testLoadOSM":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":238,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":235,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":448,"com.graphhopper.reader.OSMReaderTest.testSort":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":461,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":282,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":128,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":110,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":328,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":387,"com.graphhopper.storage.RAMDataAccessTest.testHeader":410,"com.graphhopper.routing.DijkstraTest.initializationError":488,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":399,"com.graphhopper.storage.MMapDataAccessTest.testHeader":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":300,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":349,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":407,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":218,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":484,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":281,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":168,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":472,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":273,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":84,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":266,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":75,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":293,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":295,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":344,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":115,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":160,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":500,"com.graphhopper.coll.CompressedArrayTest.testCompress2":38,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":223,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":464,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":99,"com.graphhopper.GraphHopperAPITest.testLoad":354,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":417,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":418,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":220,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":2,"com.graphhopper.storage.LevelGraphStorageTest.testClone":337,"com.graphhopper.reader.OSMReaderTest.testBarriers":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":375,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":307,"com.graphhopper.util.GHUtilityTest.testCopy":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":280,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":470,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":249,"com.graphhopper.routing.PathTest.testFindInstruction":379,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":479,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":6,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":492,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":356,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":422,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":351,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":435,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":228,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":180,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":135,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":443,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":191,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":489,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":339,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":308,"com.graphhopper.util.InstructionListTest.testWayList2":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":239,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":130,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":289,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":171,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":111,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":302,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":377,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":292,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":76,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":120,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":208,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":411,"com.graphhopper.routing.AStarTest.initializationError":491,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":179,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":406,"com.graphhopper.routing.PathBidirRefTest.testExtract":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":423,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":455,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":275,"com.graphhopper.storage.RAMDataAccessTest.testCopy":409,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":204,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":454,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":244,"com.graphhopper.util.GHUtilityTest.testSort2":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":85,"com.graphhopper.reader.OSMReaderTest.testMain":30,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":333,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":456,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":49,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":276,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":106,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":325,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":101,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":157,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":166,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":342,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":139,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":434,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":159,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":109,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":131,"com.graphhopper.storage.GraphHopperStorageTest.testClone":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":324,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":105,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":221,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":64,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":50,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":309,"com.graphhopper.routing.PathTest.testTime":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":469,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":352,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":431,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":318,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":348,"com.graphhopper.reader.OSMReaderTest.testRelation":485,"com.graphhopper.util.GHUtilityTest.testSortDirected":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":445,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":383,"com.graphhopper.GraphHopperTest.testFootOnly":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":475,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":58,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":433,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":183,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":380,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":408,"com.graphhopper.routing.QueryGraphTest.testOneWay":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":242,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":233,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":40,"com.graphhopper.reader.OSMReaderTest.testWithBounds":36,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":413,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":301,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":372,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":385,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":320,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":117,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":155,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":463,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":444,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":206,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":298,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":136,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":213,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":71,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":229,"com.graphhopper.util.InstructionListTest.testWayList":366,"com.graphhopper.routing.ch.PrepareEncoderTest.testOverwrite":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":453,"com.graphhopper.GraphHopperAPITest.testDisconnected179":355,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":310,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":441,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":401,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":186,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":460,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":25,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":217,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":68,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":449,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":82,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":490,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":398,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":429,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":466,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":284,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":92,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":415,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":201,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":119,"com.graphhopper.routing.PathTest.testWayList":194,"com.graphhopper.storage.MMapDataAccessTest.testCopy":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":329,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":426,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":501,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":93,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":412,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":459,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":222,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":419,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":59,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":158,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":60,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":414,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":438,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":494,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":174,"com.graphhopper.util.GHUtilityTest.testSort":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":322,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":143,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":416,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":268,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":258,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":261,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":197,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":104,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":259,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":465,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":190,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":18,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":323,"com.graphhopper.routing.PathTest.testFound":378,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":116,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":192,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":350,"com.graphhopper.util.AngleCalcTest.testAtan2":499,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":331,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":457,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":7,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":493,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":100,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":177,"com.graphhopper.util.InstructionListTest.testEmptyList":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":471,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":83,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":403,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":424,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":483,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":86,"com.graphhopper.reader.PrinctonReaderTest.testRead":400,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":129,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":271,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":291,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":304,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":439,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":481,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":487,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":468,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":196,"com.graphhopper.reader.OSMReaderTest.testFoot":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":184,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":391,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":54,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":353,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":474,"com.graphhopper.reader.OSMReaderTest.testOneWay":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":55,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":3,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":5,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":480,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":437,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":395,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":69,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":107,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":394,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":313,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":382,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":211,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":148,"com.graphhopper.routing.PathBidirRefTest.testExtract2":371,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":240,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":251,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":127,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":473,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":330,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":420,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":236,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":178,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":340,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":402,"com.graphhopper.GraphHopperTest.testFootAndCar":26,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":224,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":202,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":306,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":447,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":89,"com.graphhopper.GraphHopperTest.testPrepareOnly":94,"com.graphhopper.GraphHopperTest.testVia":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":250,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":10,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":34,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":332,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":20,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":227,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":188,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":315,"com.graphhopper.routing.AStarBidirectionTest.initializationError":486,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":432,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":164,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":17,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":113}}]
