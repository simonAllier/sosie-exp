[{"failures":[],"tindex":"a4131e1f-db8f-11e4-818d-95cc59665d6a","variableMapping":{"y1":"decDist2DSum","x1":"incDist2DSum","y2":"fwdIncline","x2":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7],"tindex":"a41456a0-db8f-11e4-818d-53e17e3ab9ba","variableMapping":{"bytePos":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"a41456a1-db8f-11e4-818d-7f3833b4544e","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"a41456a2-db8f-11e4-818d-a14459b56279","variableMapping":{"high":"noOfStates","len":"noOfStates","start":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[8],"tindex":"a41456a3-db8f-11e4-818d-2fe0da51ae11","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"a4147db4-db8f-11e4-818d-25a38758bdd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"status":-1},{"failures":[],"tindex":"a4147db5-db8f-11e4-818d-a18b628cdb85","variableMapping":{"high":"encoded","highKey":"encoded","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[44,45,46,47,48,49],"tindex":"a4147db6-db8f-11e4-818d-f374060f9ee5","variableMapping":{"key":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:76","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"a4147db7-db8f-11e4-818d-61955b327680","variableMapping":{"counts":"y1","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:38","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.max(1, ((int) / 3))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"a4147db8-db8f-11e4-818d-3d2fb2967c1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[50,51],"tindex":"a4147db9-db8f-11e4-818d-fbf27d37267e","variableMapping":{"elem":"elem","size":"element","keys":"elem","i":"element","key":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (int[][(int / 2)]) > int ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"a4147dba-db8f-11e4-818d-03c75c323b2b","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,0,87,88,89,90,91,92,33,93,94,95,96,97,98,37,41,99,42,100,101,102,103],"tindex":"a4147dbb-db8f-11e4-818d-49497a1dba8b","variableMapping":{"size":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"a4147dbc-db8f-11e4-818d-15ebe7e792f6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[104],"tindex":"a4147dbd-db8f-11e4-818d-a575661bc43a","variableMapping":{"flags":"defaultValue","scDirMask":"defaultValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"a4147dbe-db8f-11e4-818d-cf14cb388f14","variableMapping":{"scDirMask":"encoded","flags":"encoded","dir":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[0,105,106,107,98,108,37,38,39,40,41,99,42,43,100,109,110,101,111,112,102,103,48,113,114,115,116,7,117],"tindex":"a414a4cf-db8f-11e4-818d-7d1b44a947d5","variableMapping":{"bits":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"a414a4d0-db8f-11e4-818d-17515dfa39b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[118,119],"tindex":"a414f2f1-db8f-11e4-818d-730d38f13d8f","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"a414f2f2-db8f-11e4-818d-8941bc1ef5c0","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[8,120,121,4,122,123,124,125,126,127,128,129],"tindex":"a414f2f3-db8f-11e4-818d-4901bf0a745f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[130],"tindex":"a414f2f4-db8f-11e4-818d-0f5c3b593426","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[131],"tindex":"a414f2f5-db8f-11e4-818d-dbc71ac19c67","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[132,133,134,135],"tindex":"a4151a06-db8f-11e4-818d-8d075d592b45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"a4151a07-db8f-11e4-818d-61c9292af01b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"a4151a08-db8f-11e4-818d-cdd1faeed90e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[0,1,2,3,136,137,6,37,7],"tindex":"a4151a09-db8f-11e4-818d-01182fc12061","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[138],"tindex":"a4151a0a-db8f-11e4-818d-256eb910795f","variableMapping":{"red":"minNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[139,140,141,142,143,58,144,145,146,147,148,149,70,150,151,152,153,154,155,156,157,158,159,160,161,162,78,163,164,138,165,117],"tindex":"a4151a0b-db8f-11e4-818d-a9c5c55bf02a","variableMapping":{"retBucket":"start","bucketSize":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[],"tindex":"a4151a0c-db8f-11e4-818d-b738faeeaccf","variableMapping":{"equalNormedDelta":"lat","currNormedDist":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:883","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[4,109],"tindex":"a4151a0d-db8f-11e4-818d-9752b9798f58","variableMapping":{"str":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[166,167,168,169,170,171,172,173,174,175,176],"tindex":"a4151a0e-db8f-11e4-818d-c97db8feecac","variableMapping":{"from":"paveType","end":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[55,56,177,139,178,179,180,181,59,182,66,67,68,183,145,184,185,186,187,71,188,189,190,151,191,192,193,194,195,196,75,76,197,158,198,199,200,201,79,202,9,203,204,164,205,206,207,90,10,11,208,12,13,209,14,15,16,20,23,210,27,28,36,110,117,211,212],"tindex":"a415411f-db8f-11e4-818d-d1e72fdd7128","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[213,55,214,215,216,56,177,139,217,218,219,220,221,222,178,140,179,141,142,223,224,225,226,227,143,228,57,229,230,180,231,232,58,144,181,233,234,59,235,60,236,182,237,238,239,61,240,62,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,63,274,64,275,276,277,278,279,280,281,282,283,284,285,66,286,67,287,288,289,68,183,145,290,291,292,293,294,295,184,146,185,147,148,296,297,298,299,300,149,301,69,302,303,186,304,305,70,150,187,306,307,71,308,72,309,188,310,192,73,311,132,312,313,314,315,316,134,135,317,318,319,320,321,322,323,74,324,325,75,326,327,328,76,197,158,329,330,331,332,333,334,198,159,199,160,161,335,336,337,338,339,162,340,77,341,342,200,343,344,78,163,201,345,346,79,347,80,348,202,349,9,350,203,204,351,352,353,83,354,355,356,84,85,86,0,357,358,359,360,164,361,138,165,205,206,362,363,131,87,88,364,89,365,366,207,367,368,90,91,369,370,92,10,371,11,208,372,373,374,375,12,13,209,376,377,14,15,16,17,18,19,20,21,22,23,24,25,210,26,27,28,29,30,31,378,32,33,34,35,36,98,108,37,38,39,40,41,99,42,43,100,109,110,101,111,112,102,103,48,113,114,115,116,7,117,49,211,212],"tindex":"a4156830-db8f-11e4-818d-7148507b5e32","variableMapping":{"segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[105,175],"tindex":"a4156831-db8f-11e4-818d-01f43ee1b491","variableMapping":{"edgeId":"nextRelBit","nextEdge":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"a4156832-db8f-11e4-818d-f39edae5ce31","variableMapping":{"graphHopperFolder":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:670","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"a417d933-db8f-11e4-818d-65b1f9315399","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[379,168,380,381,382,171,383,384,385,173,386,174,387,388,176,389],"tindex":"a417d934-db8f-11e4-818d-bbfda833b8b1","variableMapping":{"factor":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"a417d935-db8f-11e4-818d-753c9154c47b","variableMapping":{"line":"name","key":"location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[381,384,388,390],"tindex":"a417d936-db8f-11e4-818d-7b447624518f","variableMapping":{"segmentSizeInBytes":"speed","indexDivisor":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[8],"tindex":"a417d937-db8f-11e4-818d-2311ac081a9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"a417d938-db8f-11e4-818d-abca3ca92948","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"a417d939-db8f-11e4-818d-275ecbd799a8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"a417d93a-db8f-11e4-818d-79e3e34f1709","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[40,43,110],"tindex":"a417d93b-db8f-11e4-818d-07bebb9ba83d","variableMapping":{"shift":"directionBitMask","tmpValue":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"a417d93c-db8f-11e4-818d-99fcd73759f4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[391,52,53,54,213,55,214,215,216,392,56,177,139,217,218,219,220,221,222,178,140,179,141,142,223,224,225,226,227,143,228,57,229,230,180,231,232,58,144,181,233,234,59,235,60,236,182,237,238,239,61,240,62,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,393,258,259,260,261,394,262,263,264,265,266,267,268,269,270,271,272,273,63,274,64,275,276,277,278,279,280,281,282,283,284,285,65,395,396,66,397,286,67,287,288,289,398,68,183,145,290,291,292,293,294,295,184,146,185,147,148,296,297,298,299,300,149,301,69,302,303,186,304,305,70,150,187,306,307,71,308,72,309,188,310,189,190,151,399,400,401,402,403,404,191,152,192,153,154,405,406,407,408,409,155,410,411,412,413,193,414,73,156,157,194,415,416,195,417,418,419,196,420,319,320,321,322,323,74,324,325,75,326,327,328,421,76,197,158,329,330,331,332,333,334,198,159,199,160,161,335,336,337,338,339,162,340,77,341,342,200,343,344,78,163,201,345,346,79,347,80,348,202,349,422,423,424,425,426,427,428,429,9,350,203,204,351,352,353,83,354,355,356,84,85,86,0,357,358,359,360,164,361,138,165,205,206,362,363,131,430,431,87,88,364,364,89,89,365,365,366,366,207,207,367,367,368,368,90,90,91,91,369,369,370,370,92,92,10,371,11,208,372,373,374,375,12,13,209,376,377,14,15,16,17,18,19,20,21,22,23,24,25,210,26,27,28,29,30,31,378,32,33,34,35,36,93,94,95,96,97,98,108,37,38,39,40,41,432,99,42,43,100,433,109,110,101,111,112,102,103,48,113,434,114,115,116,7,435,117,49,436,437,438,439,440,211,212],"tindex":"a41938cd-db8f-11e4-818d-6f340e8ff050","variableMapping":{"str":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[132,134],"tindex":"a41938ce-db8f-11e4-818d-1daf65a7b6ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[213,55,214,215,216,392,56,177,139,217,218,219,220,221,222,178,140,179,141,142,223,224,225,226,227,143,228,57,229,230,180,231,232,58,144,181,233,234,59,235,60,236,182,237,238,239,61,240,62,241,242,243,244,245,246,247,248,249,441,250,251,252,253,254,255,442,256,257,258,259,260,261,394,262,263,264,265,266,443,267,268,269,270,271,272,273,63,274,64,275,276,277,278,279,280,281,282,283,444,284,285,66,397,286,67,287,288,289,398,68,183,145,290,291,292,293,294,295,184,146,185,147,148,296,297,298,299,300,149,301,69,302,303,186,304,305,70,150,187,306,307,71,308,72,309,188,310,189,190,151,399,400,401,402,403,404,191,152,192,153,154,405,406,407,408,409,155,410,411,412,413,193,414,73,156,157,194,415,416,195,417,418,419,196,420,319,320,321,322,323,74,324,325,75,326,327,328,421,76,197,158,329,330,331,332,333,334,198,159,199,160,161,335,336,337,338,339,162,340,77,341,342,200,343,344,78,163,201,345,346,79,347,80,348,202,349,9,350,445,203,204,351,352,353,83,354,446,355,356,84,85,86,0,357,358,359,360,447,164,361,138,165,205,206,448,449,362,450,451,452,453,8,454,455,456,1,457,120,121,458,2,3,4,459,460,44,461,462,5,363,131,463,464,465,466,166,136,167,45,467,468,469,470,379,471,122,472,168,380,123,381,473,474,475,476,477,107,478,479,480,481,169,137,170,47,482,483,484,485,382,486,124,487,171,383,125,384,488,489,385,172,173,490,491,492,386,493,126,494,174,387,127,388,495,496,130,497,498,175,390,499,500,501,502,128,503,176,389,129,504,505,430,431,87,88,506,364,89,365,366,207,367,368,90,91,369,370,92,10,371,507,11,208,372,373,374,375,12,13,209,376,377,14,15,16,17,18,19,20,21,22,23,24,25,210,26,27,28,29,30,31,378,32,33,34,35,36,508,509,98,108,37,38,39,40,41,432,99,42,43,100,433,109,110,101,111,112,102,103,48,113,434,114,115,116,7,117,211,212],"tindex":"a41b349f-db8f-11e4-818d-110ecd95d403","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[136,167,107,137,170,173,497,175],"tindex":"a41b34a0-db8f-11e4-818d-bd89dcee42e9","variableMapping":{"tmp":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"a41b34a1-db8f-11e4-818d-f7912f8360d0","variableMapping":{"wayType":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 3))\n    return \"\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"a41b34a2-db8f-11e4-818d-6f3c79c9a283","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"a41b34a3-db8f-11e4-818d-553cd53b21c2","variableMapping":{"bits":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-2},{"failures":[],"tindex":"a41b34a4-db8f-11e4-818d-9745aad9aafe","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"a41b34a5-db8f-11e4-818d-ed2b49d40469","variableMapping":{"factor":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"a41b34a6-db8f-11e4-818d-8de93445c773","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"a41b5bb7-db8f-11e4-818d-656b7342057b","variableMapping":{"nodeB":"shift","edgeId":"shift","nodeA":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":0},{"failures":[],"tindex":"a41bd0e8-db8f-11e4-818d-e9d1075de2ad","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a41bf7f9-db8f-11e4-818d-d1a91c2779ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"a41bf7fa-db8f-11e4-818d-2d7b8a0b3365","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a41bf7fb-db8f-11e4-818d-21b1de4bdc11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"a41bf7fc-db8f-11e4-818d-11d522f87751","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"a41bf7fd-db8f-11e4-818d-e51fb31d4b0a","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[],"tindex":"a41bf7fe-db8f-11e4-818d-4b2b06970998","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[],"tindex":"a41bf7ff-db8f-11e4-818d-1f978347eb44","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"usedBits","nextEdge":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":-2},{"failures":[48],"tindex":"a41bf800-db8f-11e4-818d-5de4e33fb8da","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"a41bf801-db8f-11e4-818d-6df0da306e1d","variableMapping":{"logMessages":"longTripsSpeed","logMessagesPercentage":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:158","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":0},{"failures":[],"tindex":"a41bf802-db8f-11e4-818d-ab78681e2169","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"a41c4623-db8f-11e4-818d-2356643a39b9","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"a41c4624-db8f-11e4-818d-15512f93627a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"a41c4625-db8f-11e4-818d-9b4cb20d09d1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"a41ce266-db8f-11e4-818d-e3adcb541f39","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-2},{"failures":[],"tindex":"a41ce267-db8f-11e4-818d-bbb4b423155d","variableMapping":{"bytePointer":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":0},{"failures":[],"tindex":"a41ce268-db8f-11e4-818d-7355f9ad8aa1","variableMapping":{"dLat":"nextNodeBit","dLon":"nextNodeBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"a41ce269-db8f-11e4-818d-67fa81a62415","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"a41ce26a-db8f-11e4-818d-038de2d3453d","variableMapping":{"lazyUpdates":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":0},{"failures":[],"tindex":"a41ce26b-db8f-11e4-818d-11d3849e169b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"a41ce26c-db8f-11e4-818d-cdcdf374714f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"a41ce26d-db8f-11e4-818d-416936df04a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"a41ce26e-db8f-11e4-818d-6be258219653","variableMapping":{"foundIndex":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":0},{"failures":[],"tindex":"a41ce26f-db8f-11e4-818d-bf49268f0427","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"a41ce270-db8f-11e4-818d-5d561a27b4f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[269,271,320,322,324],"tindex":"a41ce271-db8f-11e4-818d-e94a1e7e0c50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"a41ce272-db8f-11e4-818d-478e028a73c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[510,511],"tindex":"a41ce273-db8f-11e4-818d-8b93e11c16cb","variableMapping":{"edgePointer":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[139,140,141,143,58,145,146,147,149,70,151,152,153,155,156,324,158,159,160,162,78],"tindex":"a41ce274-db8f-11e4-818d-e9807d95365d","variableMapping":{"currentEntry":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[469,484,491,500],"tindex":"a41ce275-db8f-11e4-818d-f55e4d708dc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:471","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"a41ce276-db8f-11e4-818d-9528cb38333c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"a41ce277-db8f-11e4-818d-a3f6d28ce665","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[139,141,142,224,143,228,58,144,145,147,148,297,149,301,70,150,151,153,154,406,155,410,156,157,158,160,161,336,162,340,78,163,164,165],"tindex":"a41d0988-db8f-11e4-818d-f31c454607ee","variableMapping":{"ret":"mSize","retBucket":"mSize","i":"mSize","bucketSize":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"a41d0989-db8f-11e4-818d-659828473002","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[512,109],"tindex":"a41d098a-db8f-11e4-818d-e93903c005b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[136,167,107,137,170,173,497,175,48],"tindex":"a41d098b-db8f-11e4-818d-112d74cdcac5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[],"tindex":"a41d098c-db8f-11e4-818d-8db9f711459c","variableMapping":{"res":"mask","value":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"a41d098d-db8f-11e4-818d-b712cbd84495","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[448,455,468,483,490,499,112,114],"tindex":"a41d309e-db8f-11e4-818d-17565fccfddb","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"intendedValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[44,465,166,167,45,470,168,473,105,46,106,480,169,170,47,485,171,488,172,173,492,174,495,175,501,176,504,104,48,434],"tindex":"a41d309f-db8f-11e4-818d-cd64d60887da","variableMapping":{"size":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[361,138,165,98,108,37,38,39,41,99,42,43],"tindex":"a41d30a0-db8f-11e4-818d-9d2581f9d7d9","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-1},{"failures":[464,465,166,136,167,168,381,473,106,107,479,480,169,137,170,171,384,488,385,172,173,174,388,495,497,175,390,176,504,109,110,101,111,102,103,48,113,116,7,117],"tindex":"a41d30a1-db8f-11e4-818d-cf86babbe359","variableMapping":{"indi":"speed","dir":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:272","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalStateException((\"Indication not found \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":344,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":378,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":6,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":74,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":254,"com.graphhopper.GraphHopperAPITest.testNoLoad":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":190,"com.graphhopper.reader.OSMReaderTest.testFerry":109,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":204,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":351,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":137,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":390,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":274,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":108,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":146,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":440,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":503,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":236,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":411,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":209,"com.graphhopper.GraphHopperTest.testPrepare":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":10,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":227,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":119,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":481,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":25,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":84,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":393,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":176,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":358,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":205,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":175,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":479,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":23,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":240,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":309,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":170,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":66,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":76,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":14,"com.graphhopper.GraphHopperTest.testLoadOSM":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":246,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":62,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":477,"com.graphhopper.reader.OSMReaderTest.testSort":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":383,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":287,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":233,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":55,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":511,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":418,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":90,"com.graphhopper.routing.DijkstraTest.initializationError":505,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":307,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":343,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":221,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":507,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":397,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":68,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":159,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":495,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":277,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":28,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":270,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":275,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":19,"com.graphhopper.coll.OSMIDMapTest.testGetLong":96,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":296,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":301,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":338,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":75,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":162,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":228,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":385,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":185,"com.graphhopper.GraphHopperAPITest.testLoad":9,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":421,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":313,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":448,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":141,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":139,"com.graphhopper.storage.LevelGraphStorageTest.testClone":330,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":512,"com.graphhopper.reader.OSMReaderTest.testBarriers":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":183,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":206,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.util.GHUtilityTest.testCopy":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":401,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":126,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":129,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":442,"com.graphhopper.routing.PathTest.testFindInstruction":88,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":501,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":145,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":203,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":453,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":347,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":466,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":234,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":187,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":297,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":374,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":122,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":506,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":332,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":402,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":318,"com.graphhopper.util.InstructionListTest.testWayList2":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":247,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":182,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":510,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":169,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":72,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":474,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":480,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":363,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":334,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":406,"com.graphhopper.storage.RAMDirectoryTest.testSynched":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":147,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":21,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":177,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":102,"com.graphhopper.routing.AStarTest.initializationError":509,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":33,"com.graphhopper.coll.OSMIDMapTest.testGet":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":184,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":8,"com.graphhopper.routing.PathBidirRefTest.testExtract":359,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":77,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":484,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":156,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":497,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":483,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":251,"com.graphhopper.util.GHUtilityTest.testSort2":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":29,"com.graphhopper.reader.OSMReaderTest.testMain":101,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":326,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":485,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":125,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":282,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":1,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":416,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":199,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":336,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":104,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":202,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":160,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":186,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":464,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":339,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":7,"com.graphhopper.storage.StorablePropertiesTest.testStore":65,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":81,"com.graphhopper.storage.GraphHopperStorageTest.testClone":218,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":4,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":423,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":2,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":223,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":127,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":403,"com.graphhopper.routing.PathTest.testTime":431,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":493,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":80,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":331,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":462,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":249,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":410,"com.graphhopper.reader.OSMReaderTest.testRelation":434,"com.graphhopper.util.GHUtilityTest.testSortDirected":355,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":380,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":427,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":366,"com.graphhopper.GraphHopperTest.testFootOnly":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":498,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":121,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":259,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":425,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":276,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":407,"com.graphhopper.search.NameIndexTest.testCreate":54,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":364,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":316,"com.graphhopper.routing.QueryGraphTest.testOneWay":369,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":441,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":500,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":61,"com.graphhopper.reader.OSMReaderTest.testWithBounds":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":308,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":361,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":412,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":454,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":105,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":197,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":504,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":303,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":268,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":298,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":56,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":16,"com.graphhopper.util.InstructionListTest.testWayList":85,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":482,"com.graphhopper.GraphHopperAPITest.testDisconnected179":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":404,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":399,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":379,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":212,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":155,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":196,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":487,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":39,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":220,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":376,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":478,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":26,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":508,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":13,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":459,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":491,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":289,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":35,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":392,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":444,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":133,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":488,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":213,"com.graphhopper.routing.PathTest.testWayList":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":419,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":492,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":153,"com.graphhopper.coll.OSMIDMapTest.testGet2":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":36,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":201,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":436,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":124,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":226,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":449,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":278,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":468,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":172,"com.graphhopper.util.GHUtilityTest.testSort":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":499,"com.graphhopper.search.NameIndexTest.testPut":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":188,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":398,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":255,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":273,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":262,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":265,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":136,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":131,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":263,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":286,"com.graphhopper.storage.MMapDirectoryTest.testSynched":426,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":490,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":437,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":475,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":299,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":164,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":317,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":73,"com.graphhopper.routing.PathTest.testFound":430,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":100,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":107,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":346,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":496,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":321,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":382,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":148,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":53,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":192,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":178,"com.graphhopper.util.InstructionListTest.testEmptyList":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":494,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":27,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":461,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":456,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":389,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":455,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":30,"com.graphhopper.reader.PrinctonReaderTest.testRead":211,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":59,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":64,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":295,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":189,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":329,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":469,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":46,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":424,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":465,"com.graphhopper.reader.OSMReaderTest.testFoot":110,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":193,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":244,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":348,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":130,"com.graphhopper.reader.OSMReaderTest.testOneWay":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":245,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":142,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":144,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":306,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":502,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":467,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":409,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":373,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":208,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":266,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":362,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":405,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":365,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":215,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":435,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":429,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":134,"com.graphhopper.routing.PathBidirRefTest.testExtract2":360,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":248,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":257,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":391,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":232,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":443,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":388,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":420,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":450,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":241,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":181,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":446,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":333,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":460,"com.graphhopper.GraphHopperTest.testFootAndCar":40,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":57,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":173,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":400,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":476,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":291,"com.graphhopper.storage.StorablePropertiesTest.testLoad":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":32,"com.graphhopper.GraphHopperTest.testPrepareOnly":98,"com.graphhopper.GraphHopperTest.testVia":37,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":151,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":114,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":323,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":0,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":231,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":451,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":408,"com.graphhopper.routing.AStarBidirectionTest.initializationError":447,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":5,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":345,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":163,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":67}}]
