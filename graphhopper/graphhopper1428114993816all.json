[{"failures":[0,1,2,3,4],"tindex":"68a75be8-da73-11e4-8b71-013aef5dd5c6","variableMapping":{"tmpNo":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[],"tindex":"68a75be9-da73-11e4-8b71-f72850dce45d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13],"tindex":"68a75bea-da73-11e4-8b71-c1e442b4f4c0","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"68a75beb-da73-11e4-8b71-73dcfe0ff77b","variableMapping":{"high":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"68a75bec-da73-11e4-8b71-61db665e3712","variableMapping":{"allSegments":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,5,77,78,79,80,6,7,81,82,83,84,85,8,86,10,25,87,88,89,90,91,11,12,92,13,93,94,95,96,97,98,99,2,100,4,101,102],"tindex":"68a75bed-da73-11e4-8b71-abe20b53d484","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"68a782fe-da73-11e4-8b71-ad13a17666eb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[103,72,104],"tindex":"68a782ff-da73-11e4-8b71-ff7e1a4c025b","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"68a78300-da73-11e4-8b71-9b127b9d10e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[105,106,107,108,109,110,111,96,112],"tindex":"68a78301-da73-11e4-8b71-17fa45b0c7be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"68a78302-da73-11e4-8b71-4b1cb0bd412d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"68a78303-da73-11e4-8b71-4b228309f534","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"68a78304-da73-11e4-8b71-69db55fbb6d6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"68a78305-da73-11e4-8b71-a9c44f2cc377","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"68a78306-da73-11e4-8b71-8d4aae2b8703","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[37,113,114,115,116,117,118,119,45,120,121,122,123,124,125,126,53,127,128,129,130,131,132,133,61,134,135,136,137,138,139,140,141,69],"tindex":"68a78307-da73-11e4-8b71-53e7070d5dd4","variableMapping":{"from":"key","end":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-1},{"failures":[],"tindex":"68a78308-da73-11e4-8b71-2b622358c4bc","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.PREFER","intendedValues":"preferHighwayTags","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:457","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"68a78309-da73-11e4-8b71-fde8d1c88d28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"68a7830a-da73-11e4-8b71-e5e07d781ead","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1002","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[142,143,144,145,146,147,148,68,149,69,0,1,2,150,3,4,151],"tindex":"68a7d12b-da73-11e4-8b71-c963a5446da9","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"endIndexPlusOne","speed":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[30],"tindex":"68a7d12c-da73-11e4-8b71-2153e3409d99","variableMapping":{"high":"hash","guess":"hash","low":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[5,7,84,85,93],"tindex":"68a7d12d-da73-11e4-8b71-33451d3e35f1","variableMapping":{"compressionLevel":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"68a7d12e-da73-11e4-8b71-39830be8f917","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[84,85,87,152,93],"tindex":"68a7d12f-da73-11e4-8b71-b7a732452609","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[103,96,0,1,2,3,4],"tindex":"68a7d130-da73-11e4-8b71-298c199d4493","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"68a7d131-da73-11e4-8b71-8fac6d517a61","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[35,153,154,155,36,37,156,157,158,159,38,39,160,40,161,41,162,42,43,163,44,45,164,165,166,167,46,47,168,48,169,49,170,50,51,171,172,52,53,173,174,175,176,54,55,177,56,178,57,179,58,59,180,181,182,60,61,183,184,185,186,62,63,187,64,188,65,189,66,67,190,191,192,193,105,194,195,196,141,68,69,197,70,71,72,198,73,199,74,75,200,76,201,202,5,77,78,79,80,203,204,6,7,81,205,82,83,84,85,8,86,206,9,10,207,208,25,87,209,152,88,89,90,91,11,210,12,92,13,211,93,212,213,94,95,214,215,96,97,98,0,216,217,99,218,2,100,150,4,219,151,220,221,101,222,223,102],"tindex":"68a84662-da73-11e4-8b71-ed892fe4c847","variableMapping":{"lastKey":"forwardBit","key":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"68a84663-da73-11e4-8b71-7d22570a5d0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[35,224,225,226,153,227,228,229,154,230,231,232,155,36,37,233,156,157,234,235,158,159,236,38,113,114,237,115,39,238,160,116,117,239,240,241,40,242,161,118,119,41,243,162,42,244,245,246,43,247,142,143,144,248,145,249,250,251,15,252,253,254,255,256,16,257,17,18,258,259,260,261,262,263,19,264,265,266,267,268,20,269,21,22,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,46,169,299,171,300,301,302,172,52,53,303,173,174,304,305,175,176,306,54,127,128,307,129,55,308,177,130,131,309,310,311,56,312,178,132,133,57,313,179,58,314,315,316,59,317,180,318,181,319,320,321,182,60,61,322,183,184,323,324,185,186,325,62,134,135,326,136,63,327,187,137,138,328,329,330,64,331,188,139,140,65,332,189,66,333,334,335,67,336,337,338,190,339,340,341,191,192,193,105,194,146,147,195,196,141,68,149,69,197,342,199,343,75,201,202,5,77,78,79,80,203,204,344,6,7,81,205,82,83,84,85,8,86,206,9,10,207,208,25,87,209,152,88,89,90,91,11,210,12,92,13,211,93,212,213,345,346,347,348,94,349,350,95,351,352,353,354,214,215,96,97,98,0,216,217,99,218,1,355,104,2,100,356,150,357,3,4,219,151,220,221,112,101,222,223,102,358],"tindex":"68a8bb94-da73-11e4-8b71-ef0a3e2a924b","variableMapping":{"bytePos":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-1},{"failures":[38,46,54,62,70,71,72,73,199,74,2,100,4,101],"tindex":"68a8bb95-da73-11e4-8b71-b5469a450ccf","variableMapping":{"strLen":"shift","res":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:192","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[359,360,361,362,6,82],"tindex":"68a8bb96-da73-11e4-8b71-c31740ed0a44","variableMapping":{"initLeafSize":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-1},{"failures":[363],"tindex":"68a8bb97-da73-11e4-8b71-b365229a41af","variableMapping":{"shift":"oldRelationFlags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"68a8bb98-da73-11e4-8b71-ff3ada1a99a0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"68a909b9-da73-11e4-8b71-87a088796b6b","variableMapping":{"newUniqueOsmId":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[364,365,366,367],"tindex":"68a909ba-da73-11e4-8b71-81421d1e26cd","variableMapping":{"high":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"68a909bb-da73-11e4-8b71-0b15881427ee","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[368,369,370,371,372,373,374,375,376,377],"tindex":"68a909bc-da73-11e4-8b71-794465cd192b","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"68a909bd-da73-11e4-8b71-dfddcf372189","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[373],"tindex":"68a909be-da73-11e4-8b71-17bb8bdde117","variableMapping":{"algo":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"68a909bf-da73-11e4-8b71-65f9c3439430","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[75],"tindex":"68a909c0-da73-11e4-8b71-4f7d23839c2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"68a909c1-da73-11e4-8b71-d9f101b7f693","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"68a909c2-da73-11e4-8b71-e34cb98cbfa6","variableMapping":{"latSize":"length","size":"length","lonSize":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"68a909c3-da73-11e4-8b71-754726a0be66","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"68a909c4-da73-11e4-8b71-03e3d490b562","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-2},{"failures":[5,6,7,83,84,85,8,9,10,11,12,92,13,93],"tindex":"68a909c5-da73-11e4-8b71-99fd87eea33a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[378],"tindex":"68a909c6-da73-11e4-8b71-a531cf11469b","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:200","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[75,87],"tindex":"68a909c7-da73-11e4-8b71-6bef202b65af","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-1},{"failures":[],"tindex":"68a909c8-da73-11e4-8b71-2349521d08b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"68a909c9-da73-11e4-8b71-89aa4ee587b3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"68a92fda-da73-11e4-8b71-d148e9509aa3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:451","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"68a92fdb-da73-11e4-8b71-7166554b0233","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"68a92fdc-da73-11e4-8b71-bd588310604e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"68a92fdd-da73-11e4-8b71-9f7f81a39fda","variableMapping":{"weightLong":"acceptBit","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"68a92fde-da73-11e4-8b71-f71f811cdf06","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[35,153,154,157,38,39,160,161,41,162,43,165,46,47,168,169,49,170,51,171,174,54,55,177,178,57,179,59,180,181,184,62,63,187,188,65,189,67,190,191,192,193,194,141,197,70,71,73,199,74,75,76,201,78,79,80,203,204,6,82,8,86,10,87,152,90,11,12,92,13,93,102],"tindex":"68a92fdf-da73-11e4-8b71-ade2c331f3e9","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[154,36,37,158,159,38,39,40,41,43,263,275,281,287,44,45,166,167,46,47,48,49,51,171,52,53,175,176,54,55,56,57,59,180,181,60,61,185,186,62,63,64,65,67,105,379,380,106,381,382,383,384,368,107,369,370,385,386,387,371,388,372,389,390,391,392,373,374,393,394,108,70,103,109,110,72,395,396,397,74,398,399,75,400,401,375,111,376,377,402,403,404,405,406,76,201,84,85,87,209,152,88,89,93,96,0,104,2,4,112,101],"tindex":"68a92fe0-da73-11e4-8b71-2519bc23c939","variableMapping":{"lastTime":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"68a92fe1-da73-11e4-8b71-d1aed9922dc2","variableMapping":{"newUniqueOsmId":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"68a92fe2-da73-11e4-8b71-9b6f3b049b62","variableMapping":{"high":"bits","len":"bits","start":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[78,6,82,85,86,152,91,12,92,13,93,96],"tindex":"68a92fe3-da73-11e4-8b71-516f9cc0b802","variableMapping":{"from":"tmpPrevEdge","hash":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"68a92fe4-da73-11e4-8b71-e9d0b923b7ff","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"68a92fe5-da73-11e4-8b71-79a76b7a2ce9","variableMapping":{"angle":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"68a92fe6-da73-11e4-8b71-61e0891f209e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"68a92fe7-da73-11e4-8b71-a9b3c3ec1b7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"68a92fe8-da73-11e4-8b71-33b3c66c4d93","variableMapping":{"segmentSizePower":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"68a92fe9-da73-11e4-8b71-7b5a81260037","variableMapping":{"com.graphhopper.reader.pbf.PbfFieldDecoder.COORDINATE_SCALING_FACTOR":"java.lang.Double.POSITIVE_INFINITY","coordLatitudeOffset":"flags","rawLatitude":"flags","coordGranularity":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfFieldDecoder:51","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.pbf.PbfFieldDecoder.double) * ((long) + ((int) * long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"68a956fa-da73-11e4-8b71-5f8530bf2b74","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"68a956fb-da73-11e4-8b71-bd631be200fd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[78,6,82,10,87,12,13,93],"tindex":"68a956fc-da73-11e4-8b71-81a9c2e0e301","variableMapping":{"intIndex":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:577","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) << 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[],"tindex":"68a956fd-da73-11e4-8b71-cbbfdd63766b","variableMapping":{"node":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[],"tindex":"68a956fe-da73-11e4-8b71-07a2163a3d25","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"68a956ff-da73-11e4-8b71-07a04789358e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[35,224,225,226,153,227,228,229,154,230,231,232,155,36,37,233,156,157,234,235,158,159,236,38,113,114,237,115,39,238,160,116,117,239,240,241,40,242,161,118,119,41,243,162,42,244,245,246,43,247,407,142,143,144,248,145,249,250,251,15,252,253,254,255,256,16,257,17,18,258,259,260,261,262,263,19,264,265,266,267,268,20,269,21,22,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,295,296,297,298,46,169,299,171,300,301,302,172,52,53,303,173,174,304,305,175,176,306,54,127,128,307,129,55,308,177,130,131,309,310,311,56,312,178,132,133,57,313,179,58,314,315,316,59,317,180,318,181,319,320,321,182,60,61,322,183,184,323,324,185,186,325,62,134,135,326,136,63,327,187,137,138,328,329,330,64,331,188,139,140,65,332,189,66,333,334,335,67,336,337,338,190,339,340,341,191,192,193,105,194,146,147,195,196,141,68,149,69,197,342,199,343,75,408,76,201,202,5,77,78,79,80,203,204,344,6,7,81,205,82,83,84,85,8,86,206,9,10,207,208,25,87,209,152,88,89,90,91,11,210,12,92,13,211,93,212,213,345,345,346,346,347,347,348,348,94,94,349,349,350,350,95,95,351,351,352,352,353,353,354,354,214,215,96,97,98,0,216,217,99,218,1,355,104,2,100,356,150,357,3,4,219,151,220,221,112,101,222,223,102,358],"tindex":"68a95700-da73-11e4-8b71-bd01fe6cf302","variableMapping":{"err":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"68a95701-da73-11e4-8b71-43744d1739e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"68a95702-da73-11e4-8b71-8dd11d12332d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"68a95703-da73-11e4-8b71-6936d966f7f1","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:240","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException((\"Cannot call setWayGeometry on shortcut \" + com.graphhopper.storage.GraphHopperStorage.EdgeIterable.(getEdge())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"68a95704-da73-11e4-8b71-e38864b61277","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[107,385,389,378,393,409,108,109,111,402,96,112],"tindex":"68a95705-da73-11e4-8b71-9df11f5cd307","variableMapping":{"str":"str","nodeCount":"kmInteger","base":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1344","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.RuntimeException((\"Base node problem with edge \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[370,372,374,377],"tindex":"68a97e16-da73-11e4-8b71-edd519800b5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:400","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[364,365,366,367],"tindex":"68a97e17-da73-11e4-8b71-99c2145903d4","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[373,374],"tindex":"68a97e18-da73-11e4-8b71-cd0843c33788","variableMapping":{"sacScale":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[],"tindex":"68a97e19-da73-11e4-8b71-c15410689bae","variableMapping":{"versionHint":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"68a97e1a-da73-11e4-8b71-9326433ef140","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[228,37,236,113,114,115,116,117,118,119,289,295,53,306,127,128,129,130,131,132,133,61,325,134,135,136,137,138,139,140,141,149,69,101],"tindex":"68a97e1b-da73-11e4-8b71-49381c0ff0b9","variableMapping":{"lastKey":"capacity","key":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"68a97e1c-da73-11e4-8b71-5d29d6b3cdc7","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[35,224,225,226,153,227,228,229,154,230,231,232,155,36,37,233,156,157,234,235,158,159,236,38,113,114,237,115,39,238,160,116,117,239,240,241,40,242,161,118,119,41,243,162,42,244,245,246,43,247,407,142,143,144,248,145,249,250,251,15,252,253,254,255,256,16,257,17,18,258,259,260,261,262,263,19,264,265,266,267,268,20,269,21,22,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,295,296,297,298,46,169,299,171,300,301,302,172,52,53,303,173,174,304,305,175,176,306,54,127,128,307,129,55,308,177,130,131,309,310,311,56,312,178,132,133,57,313,179,58,314,315,316,59,317,180,318,181,319,320,321,182,60,61,322,183,184,323,324,185,186,325,62,134,135,326,136,63,327,187,137,138,328,329,330,64,331,188,139,140,65,332,189,66,333,334,335,67,336,337,338,190,339,340,341,191,192,193,105,194,146,147,195,196,141,68,149,69,197,342,199,343,75,408,76,201,202,5,77,78,79,80,203,204,344,6,7,81,205,82,83,84,85,8,86,206,9,10,207,208,25,87,209,152,88,89,90,91,11,210,12,92,13,211,93,212,213,345,345,346,346,347,347,348,348,94,94,349,349,350,350,95,95,351,351,352,352,353,353,354,354,214,215,96,97,98,0,216,217,99,218,1,355,104,2,100,356,150,357,3,4,219,151,220,221,112,101,222,223,102,358],"tindex":"68a97e1d-da73-11e4-8b71-1daed87fa918","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"68a97e1e-da73-11e4-8b71-013652313366","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"turnRestrictionBit","roundaboutBit":"turnRestrictionBit","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","value":"restricted","forwardBit":"turnRestrictionBit","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[],"tindex":"68a97e1f-da73-11e4-8b71-add276ce0030","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[84,85,87,152,93],"tindex":"68a97e20-da73-11e4-8b71-a9bd9e5d9691","variableMapping":{"bytePos":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"68a97e21-da73-11e4-8b71-0baeb3fe9caf","variableMapping":{"nodeB":"length","edgeId":"length","nodeA":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[378],"tindex":"68a97e22-da73-11e4-8b71-711c6a0d551c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[],"tindex":"68a9a533-da73-11e4-8b71-773868df37c0","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"68a9a534-da73-11e4-8b71-f79b87968e6b","variableMapping":{"silent":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"68a9a535-da73-11e4-8b71-1301781473de","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"68a9a536-da73-11e4-8b71-c993930342c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[],"tindex":"68a9a537-da73-11e4-8b71-7d22eba5f0f4","variableMapping":{"weight":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-2},{"failures":[],"tindex":"68a9a538-da73-11e4-8b71-c9d89fd8ef96","variableMapping":{"freeIndex":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"68a9a539-da73-11e4-8b71-1335b6668c88","variableMapping":{"i":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[249,250,15,252,253,254,255,256,16,257,17,18,258,259,260,261,410,262,263,19,264,265,266,267,268,20,269,21,22,270,271,272,273,411,274,275,25,88,89,11,214,215,96,97,98,0,216,217,99,218,1,104,2,100,356,150,357,3,4,219,151,220,221,112,101,102,358],"tindex":"68a9a53a-da73-11e4-8b71-7d2c7ec1b26c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":210,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":346,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":106,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":227,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":44,"com.graphhopper.reader.OSMReaderTest.testFerry":104,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":195,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":196,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":107,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":254,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":215,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":377,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":325,"com.graphhopper.coll.CompressedArrayTest.testCompress":24,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":80,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":228,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":81,"com.graphhopper.GraphHopperTest.testPrepare":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":5,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":177,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":87,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":191,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":407,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":374,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":147,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":232,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":373,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":383,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":208,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":266,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":180,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":32,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":155,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":361,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":83,"com.graphhopper.GraphHopperTest.testLoadOSM":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":270,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":267,"com.graphhopper.reader.OSMReaderTest.testSort":356,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":385,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":149,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":319,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":313,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":171,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":30,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":95,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":189,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":242,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":305,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":224,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":184,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":182,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":236,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":390,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":389,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":257,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":9,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":326,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":322,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":238,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":154,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":116,"com.graphhopper.coll.CompressedArrayTest.testCompress2":23,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":131,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":387,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":62,"com.graphhopper.GraphHopperAPITest.testLoad":102,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":291,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":127,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":53,"com.graphhopper.storage.LevelGraphStorageTest.testClone":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":60,"com.graphhopper.reader.OSMReaderTest.testBarriers":150,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":165,"com.graphhopper.util.GHUtilityTest.testCopy":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":207,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":263,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":366,"com.graphhopper.routing.PathTest.testFindInstruction":202,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":61,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":359,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":194,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":398,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":244,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":283,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":179,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":65,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":204,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":229,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":200,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":234,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":302,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":298,"com.graphhopper.util.InstructionListTest.testWayList2":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":271,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":59,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":334,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":379,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":384,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":343,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":134,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":10,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":52,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":186,"com.graphhopper.routing.PathBidirRefTest.testExtract":212,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":125,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":392,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":275,"com.graphhopper.util.GHUtilityTest.testSort2":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":90,"com.graphhopper.reader.OSMReaderTest.testMain":100,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":137,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":33,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":364,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":40,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":320,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":38,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":115,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":43,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":94,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":64,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":400,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":160,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":112,"com.graphhopper.storage.GraphHopperStorageTest.testClone":173,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":109,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":307,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":35,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":365,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":226,"com.graphhopper.routing.PathTest.testTime":76,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":245,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":157,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":124,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":241,"com.graphhopper.reader.OSMReaderTest.testRelation":363,"com.graphhopper.util.GHUtilityTest.testSortDirected":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":402,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":348,"com.graphhopper.GraphHopperTest.testFootOnly":218,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":103,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":16,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":47,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":345,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":294,"com.graphhopper.routing.QueryGraphTest.testOneWay":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":411,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":265,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":26,"com.graphhopper.reader.OSMReaderTest.testWithBounds":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":367,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":333,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":349,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":399,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":404,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":36,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":231,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":394,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":71,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":63,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":172,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":85,"com.graphhopper.util.InstructionListTest.testWayList":192,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":314,"com.graphhopper.GraphHopperAPITest.testDisconnected179":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":166,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":19,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":123,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":51,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":98,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":304,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":205,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":56,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":7,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":370,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":211,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":410,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":386,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":299,"com.graphhopper.routing.PathTest.testWayList":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":120,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":93,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":329,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":308,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":396,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":17,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":39,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":18,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":258,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":360,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":371,"com.graphhopper.util.GHUtilityTest.testSort":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":269,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":381,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":67,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":303,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":252,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":285,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":145,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":278,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":111,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":276,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":318,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":327,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":141,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":297,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":169,"com.graphhopper.routing.PathTest.testFound":408,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":1,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":406,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":162,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":225,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":135,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":46,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":176,"com.graphhopper.util.InstructionListTest.testEmptyList":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":25,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":261,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":409,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":393,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":91,"com.graphhopper.reader.PrinctonReaderTest.testRead":222,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":58,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":255,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":185,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":163,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":187,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":401,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":48,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":21,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":31,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":22,"com.graphhopper.reader.OSMReaderTest.testOneWay":101,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":128,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":133,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":332,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":168,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":203,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":79,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":279,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":253,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":347,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":301,"com.graphhopper.routing.PathBidirRefTest.testExtract2":213,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":295,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":272,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":287,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":372,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":178,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":4,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":397,"com.graphhopper.util.SimpleIntDequeTest.testPush":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":268,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":57,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":198,"com.graphhopper.GraphHopperTest.testFootAndCar":0,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":309,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":114,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":12,"com.graphhopper.GraphHopperTest.testPrepareOnly":214,"com.graphhopper.GraphHopperTest.testVia":96,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":45,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":151,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":153,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":105,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":312,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":74,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":219,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":391,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":243,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":119,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":181}}]
