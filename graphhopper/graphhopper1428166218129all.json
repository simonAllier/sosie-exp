[{"failures":[0,1,2,3,4,5],"tindex":"ad6d95fa-daea-11e4-84f1-41eb52e2da2a","variableMapping":{"i":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"ad77810b-daea-11e4-84f1-f594b7db359b","variableMapping":{"low":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:692","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"ad77810c-daea-11e4-84f1-859414dfe9d5","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"java.lang.Double.POSITIVE_INFINITY","java.lang.Double.POSITIVE_INFINITY":"speed","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"ad77810d-daea-11e4-84f1-9f1cb8181c01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[6],"tindex":"ad77a81e-daea-11e4-84f1-df32e7f1cba5","variableMapping":{"osmFileStr":"tt","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:379","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"OSM file cannot be empty.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"ad77a81f-daea-11e4-84f1-c15c1e6f6101","variableMapping":{"err":"mSize","dLat":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"ad77a820-daea-11e4-84f1-5d303fff1c89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17],"tindex":"ad77a821-daea-11e4-84f1-6b55374293b1","variableMapping":{"newName":"pavementName","name":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[18,19],"tindex":"ad77a822-daea-11e4-84f1-7140d2a569b5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-1},{"failures":[],"tindex":"ad77a823-daea-11e4-84f1-45e59024fcbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"ad77a824-daea-11e4-84f1-4939c53c1e32","variableMapping":{"tmp":"backSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,0,43,1,44,45,46,47,3,48,49,50,51,52,53,54,55,56],"tindex":"ad77a825-daea-11e4-84f1-abb19546c299","variableMapping":{"currentBucket":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"ad77a826-daea-11e4-84f1-3b23d8417fac","variableMapping":{"nodeId":"noOfStates","mainNodes":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":-1},{"failures":[57,58,0,43,59,1,44,60,61,62,63,64,2,65,66,45,67,68,46,69,47,70,71,72,3,73,74,75,76],"tindex":"ad77a827-daea-11e4-84f1-0f1226a462fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"ad77a828-daea-11e4-84f1-33a8730d7341","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[],"tindex":"ad77a829-daea-11e4-84f1-eb432086a9b9","variableMapping":{"java.lang.Integer.MAX_VALUE":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[20,21,0,59,1,61,62,77,78,79,80,81,82,83,84,19,85,51,52,86,87,53,88,89,90,91,92,93,94,95,96,97,98,99,76],"tindex":"ad77a82a-daea-11e4-84f1-cf9aff894b04","variableMapping":{"need":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"ad77cf3b-daea-11e4-84f1-f5001268376e","variableMapping":{"red":"toSize","green":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[100,101,102,103],"tindex":"ad77cf3c-daea-11e4-84f1-2b2685cf7dbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"ad77f64d-daea-11e4-84f1-b5b1465f73b0","variableMapping":{"unpavedBit":"flags","shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[104],"tindex":"ad77f64e-daea-11e4-84f1-599bace55807","variableMapping":{"acceptedRailways":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"ad77f64f-daea-11e4-84f1-c5762e16c5ca","variableMapping":{"periodicUpdates":"wayType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":0},{"failures":[18],"tindex":"ad77f650-daea-11e4-84f1-6dce0b21f734","variableMapping":{"directionBitMask":"flags","shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[57,1,62,63,64,2,65,66,67,68,69,71,72,3,75,105,106],"tindex":"ad77f651-daea-11e4-84f1-8f305f0a89bc","variableMapping":{"costs":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"ad781d62-daea-11e4-84f1-49b38a636a87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"ad781d63-daea-11e4-84f1-a10c91821f00","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"ad781d64-daea-11e4-84f1-f3ef1d0bc609","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[107,108],"tindex":"ad781d65-daea-11e4-84f1-efe5e094c056","variableMapping":{"keyIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"ad781d66-daea-11e4-84f1-4966ced208bb","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"ad781d67-daea-11e4-84f1-616d445c36cb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[],"tindex":"ad781d68-daea-11e4-84f1-ed8d1e17784d","variableMapping":{"r":"com.graphhopper.util.AngleCalc.PI3_4","x":"com.graphhopper.util.AngleCalc.PI3_4","absY":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"ad781d69-daea-11e4-84f1-8958e102dce2","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","nextEdge":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-2},{"failures":[109],"tindex":"ad781d6a-daea-11e4-84f1-4d59431d5f12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"ad781d6b-daea-11e4-84f1-7df98af4ad7d","variableMapping":{"encodingManager":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":0},{"failures":[],"tindex":"ad781d6c-daea-11e4-84f1-d51926775c3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"ad781d6d-daea-11e4-84f1-bdee27a4bc72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"ad781d6e-daea-11e4-84f1-219ba3c569c8","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":0},{"failures":[],"tindex":"ad781d6f-daea-11e4-84f1-3da1eaeb069c","variableMapping":{"high":"scDirMask","highKey":"scDirMask","key":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"ad781d70-daea-11e4-84f1-c9c16604bccd","variableMapping":{"size":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"ad781d71-daea-11e4-84f1-d53c9d9c1c3e","variableMapping":{"weightApproximation":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[6],"tindex":"ad781d72-daea-11e4-84f1-f19e2dfef488","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[7],"tindex":"ad781d73-daea-11e4-84f1-6b9358b28d27","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"ad781d74-daea-11e4-84f1-9dca9dd8917c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[110],"tindex":"ad784485-daea-11e4-84f1-034f03427748","variableMapping":{"cp":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:113","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[20,21,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,57,58,0,43,44,60,62,185,186,187,188,189,190,191,192,193,107,48,49,50,108,18,4,194,195,196,197,77,78,79,80,81,198,82,83,199,84,19,200,85,51,52,86,87,53,201,88,89,90,91,92,202,203,93,204,205,206,94,95,207,208,209,210,96,211,97,98,99,212,213,214],"tindex":"ad784486-daea-11e4-84f1-8932d4abef10","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-1},{"failures":[73,7],"tindex":"ad784487-daea-11e4-84f1-8b45431f8866","variableMapping":{"id":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"ad784488-daea-11e4-84f1-cb7c756dd588","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[215,73,74,7,216,10,13,217,16],"tindex":"ad784489-daea-11e4-84f1-df7b24e51aa6","variableMapping":{"cap":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"ad78448a-daea-11e4-84f1-d199727241a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[7,8,9,10,11,12,13,14,15,16,17],"tindex":"ad78448b-daea-11e4-84f1-25632b22d041","variableMapping":{"str":"surfaceTag","counter":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.String += \", \";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[],"tindex":"ad78448c-daea-11e4-84f1-e9a82e9ebe16","variableMapping":{"segmentSizeInBytes":"shift","capacity":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[64,218],"tindex":"ad78448d-daea-11e4-84f1-e5490d968b36","variableMapping":{"currentEntry":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"ad78448e-daea-11e4-84f1-579ca2c57ed3","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"ad78448f-daea-11e4-84f1-47af07886eca","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[20,21,219,22,220,23,221,24,222,223,25,26,27,28,29,149,224,225,30,31,226,32,227,33,228,34,229,230,35,36,37,38,39,150,0,43,59,1,44,61,62,65,66,45,84,51,52,53],"tindex":"ad786ba0-daea-11e4-84f1-f5a472dad87c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"ad786ba1-daea-11e4-84f1-b92ab5505c39","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:95","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[6]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"ad786ba2-daea-11e4-84f1-bba4b36431d4","variableMapping":{"cap":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"ad786ba3-daea-11e4-84f1-130caa315ae7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:413","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId())"},"status":-2},{"failures":[],"tindex":"ad786ba4-daea-11e4-84f1-07e5ed638c6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"ad786ba5-daea-11e4-84f1-5b3599b0176d","variableMapping":{"workerThreads":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"ad786ba6-daea-11e4-84f1-8d47841d1198","variableMapping":{"compressionLevel":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":0},{"failures":[64,72,3,5],"tindex":"ad786ba7-daea-11e4-84f1-8becbcb4ae6d","variableMapping":{"key":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[111,231,232,233,114,115,116,234,235,236,122,123,237,124,125,238,239,126,128,129,240,133,134,241,242,140,141,142,143,243,244,146,147,245,246,247,102,103,154,155,248,249,161,162,163,164,250,251,167,168,252],"tindex":"ad786ba8-daea-11e4-84f1-07d62cff6cde","variableMapping":{"index":"bytePos","entriesPerSegment":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"ad786ba9-daea-11e4-84f1-f5273b8a438e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"ad786baa-daea-11e4-84f1-d341d671148c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[57,58,0,43,59,1,44,60,61,62,63,64,2,65,66,45,67,68,46,69,47,70,71,72,3,73,74,75,76],"tindex":"ad786bab-daea-11e4-84f1-5bb121ea91b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"ad786bac-daea-11e4-84f1-3ffbee96a4d3","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"factor","java.lang.Double.POSITIVE_INFINITY":"factor","weight":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-2},{"failures":[],"tindex":"ad786bad-daea-11e4-84f1-ef766b912a76","variableMapping":{"red":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"ad786bae-daea-11e4-84f1-7b4dd444f92a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[20,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,57,58,0,43,59,1,44,60,61,62,185,186,2,65,45,46,69,47,70,71,3,187,188,189,190,191,192,193,253,107,48,50,108,18,4,194,5,254,195,196,197,77,78,79,80,81,198,82,83,199,84,19,200,85,51,52,86,87,53,201,88,89,90,91,92,202,203,93,204,205,206,94,95,207,208,209,210,96,211,97,98,99,76,212,213,214],"tindex":"ad7892bf-daea-11e4-84f1-1b3881f9bd2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-1},{"failures":[],"tindex":"ad7892c0-daea-11e4-84f1-4546f40c76ca","variableMapping":{"path":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.getMillis()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[233,116,234,255,235,236,237,256,238,239,134,241,257,242,258,259,260,243,244,155,248,261,249,262,263,264,250,251,171,265,266,267,268,269,270,271,272,3,107,49,50],"tindex":"ad7892c1-daea-11e4-84f1-31e7b4fdda36","variableMapping":{"oldPriorities":"mKeys"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[5],"tindex":"ad7892c2-daea-11e4-84f1-7f991820b3af","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"ad7892c3-daea-11e4-84f1-ed8b2c94da90","variableMapping":{"instruction":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[20,21,273,111,231,274,232,112,275,233,276,113,277,278,279,280,114,115,116,281,117,118,282,283,119,120,234,121,255,235,284,236,122,285,123,237,256,286,287,288,124,289,125,238,239,126,290,127,128,291,292,293,129,240,130,294,295,131,296,297,298,299,132,133,134,300,135,136,301,302,137,138,241,139,257,242,303,258,140,304,141,259,260,305,306,307,142,308,143,243,244,144,309,145,146,310,311,312,147,245,313,314,315,316,317,318,148,219,319,22,220,23,221,320,24,222,223,25,26,27,28,321,29,149,30,31,322,226,323,32,227,33,228,324,34,229,230,35,36,37,38,325,39,150,326,40,41,327,328,42,329,330,331,332,333,334,151,335,152,336,337,338,339,153,154,155,340,156,157,341,342,158,159,248,160,261,249,343,262,161,344,162,263,264,345,346,347,163,348,164,250,251,165,349,166,167,350,351,352,168,252,169,170,171,353,172,173,354,355,174,175,265,176,266,267,356,268,177,357,178,269,270,358,359,360,179,361,180,271,272,181,362,182,183,363,364,365,184,366,57,58,0,43,59,1,44,367,60,61,62,63,368,185,186,64,2,65,66,45,67,68,46,69,215,47,70,71,72,3,369,370,371,372,187,373,374,188,375,376,377,378,379,189,190,380,381,382,383,191,192,193,384,385,75,386,387,107,48,49,50,108,388,389,390,391,7,392,393,394,395,396,397,398,8,399,400,401,402,403,18,404,405,216,406,9,407,10,408,409,410,411,412,413,414,415,416,11,417,418,419,420,421,422,6,4,423,424,194,425,426,5,427,254,428,195,429,430,431,196,105,197,432,106,104,433,434,435,12,13,436,437,438,439,440,441,442,14,443,444,445,446,447,448,217,449,15,450,16,451,452,453,454,455,456,457,458,459,17,460,461,462,463,464,77,78,79,80,81,198,82,83,199,84,19,200,85,51,52,86,87,53,201,88,89,90,91,92,202,203,465,93,204,205,206,94,466,95,207,208,209,210,96,54,55,211,467,97,98,99,76,212,213,468,469,214,470,471,472],"tindex":"ad78b9d4-daea-11e4-84f1-e9514b4e80e7","variableMapping":{"acceptBit":"defaultL","ferryBit":"defaultL","footTag":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[],"tindex":"ad78b9d5-daea-11e4-84f1-d94932a502a5","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return \"destination: \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"ad78b9d6-daea-11e4-84f1-8d8626973047","variableMapping":{"resultOrientation":"r","orientation":"r","java.lang.Math.PI":"r"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":0},{"failures":[],"tindex":"ad78b9d7-daea-11e4-84f1-4b9277281a5a","variableMapping":{"factor":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"ad78b9d8-daea-11e4-84f1-719dd6c7a64b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[75,390,7,407,10,13,450,16],"tindex":"ad78b9d9-daea-11e4-84f1-37bf72635ef0","variableMapping":{"speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[18],"tindex":"ad78b9da-daea-11e4-84f1-53530bdb7565","variableMapping":{"min":"restDist2D","dist":"fwdIncline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"ad78b9db-daea-11e4-84f1-27bbabafa787","variableMapping":{"precision":"speed","lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":0},{"failures":[],"tindex":"ad78b9dc-daea-11e4-84f1-5d585279b3e3","variableMapping":{"dx":"maxLatTmp","dy":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[116,255,235,236,237,256,238,239,134,257,242,258,259,260,243,244,155,261,249,262,263,264,250,251,171,266,267,268,269,270,271,272,107,50],"tindex":"ad78b9dd-daea-11e4-84f1-032098d090ce","variableMapping":{"tmpNo":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"ad78b9de-daea-11e4-84f1-fd07b1ec4e47","variableMapping":{"otherEncoder":"this","flags":"flags","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-2},{"failures":[219,320,222,223,225,226,324,229,230,473,474,475,476,477,478,479,480,481,482],"tindex":"ad78e0ef-daea-11e4-84f1-4dde0dc40d46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[219,320,222,223,225,226,324,229,230,473,474,483,475,476,477,478,479,481,482],"tindex":"ad78e0f0-daea-11e4-84f1-61d9f237876f","variableMapping":{"shift":"hash","tmpValue":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[6],"tindex":"ad78e0f1-daea-11e4-84f1-05484820d3b1","variableMapping":{"sacScale":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"ad78e0f2-daea-11e4-84f1-5b550b9493d6","variableMapping":{"entries":"elem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:187","type":"CtLocalVariableImpl","sourcecode":"int int = int[][0]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"ad78e0f3-daea-11e4-84f1-05d1168fcce4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"ad78e0f4-daea-11e4-84f1-5ffcfee20b0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:311","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"|\")"},"status":0},{"failures":[390,7,392,405,407,10,419,435,13,445,448,450,16,462],"tindex":"ad78e0f5-daea-11e4-84f1-45af15fe4a03","variableMapping":{"segmentSizePower":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[399,417,484,425,426,443,460],"tindex":"ad78e0f6-daea-11e4-84f1-4b2a0c86a4ac","variableMapping":{"weight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[0,77,78,79,80,81,82,83,84,19,85,51,52,86,87,53,88,90,91,92,202,93,207,96],"tindex":"ad78e0f7-daea-11e4-84f1-6b9b8723071a","variableMapping":{"speed":"distance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"ad78e0f8-daea-11e4-84f1-c5968f8e5c42","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[485,486,487,488,489,490,275,113,277,114,286,238,128,292,293,130,131,296,132,305,243,146,311,312,22,220,23,32,227,33,491,152,336,153,345,250,167,351,352,180,492,493,494,495,57,58,0,43,59,1,44,60,61,62,63,64,2,65,66,45,67,68,46,69,47,70,71,72,3,369,370,372,187,373,374,188,375,377,378,192,193,403,18,89,97,98,99,76,214],"tindex":"ad78e0f9-daea-11e4-84f1-ade38104e3bb","variableMapping":{"from":"length","lonSize":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:299","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"ad78e0fa-daea-11e4-84f1-1ff7ff159b38","variableMapping":{"type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":201,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":370,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":275,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":484,"com.graphhopper.GraphHopperAPITest.testNoLoad":273,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":170,"com.graphhopper.reader.OSMReaderTest.testFerry":64,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":212,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":392,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":227,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":58,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":241,"com.graphhopper.coll.CompressedArrayTest.testCompress":482,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":398,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":205,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":358,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":160,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":208,"com.graphhopper.GraphHopperTest.testPrepare":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":363,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":202,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":19,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":55,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":108,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":448,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":199,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":220,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":312,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":16,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":130,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":478,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":96,"com.graphhopper.GraphHopperTest.testLoadOSM":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":25,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":23,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":385,"com.graphhopper.reader.OSMReaderTest.testSort":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":460,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":49,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":296,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":349,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":152,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":476,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":364,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":188,"com.graphhopper.routing.DijkstraTest.initializationError":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":145,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":289,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":342,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":294,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":132,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":446,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":34,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":228,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":81,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":116,"com.graphhopper.coll.OSMIDMapTest.testGetLong":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":303,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":300,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":285,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":113,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":237,"com.graphhopper.coll.CompressedArrayTest.testCompress2":481,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":264,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":435,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":139,"com.graphhopper.GraphHopperAPITest.testLoad":20,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":280,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":430,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":261,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":155,"com.graphhopper.storage.LevelGraphStorageTest.testClone":117,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":218,"com.graphhopper.reader.OSMReaderTest.testBarriers":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":173,"com.graphhopper.util.GHUtilityTest.testCopy":214,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":150,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":441,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":317,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":400,"com.graphhopper.routing.PathTest.testFindInstruction":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":395,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":134,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":106,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":211,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":291,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":406,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":166,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":144,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":468,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":258,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":415,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":253,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":382,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":282,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":354,"com.graphhopper.util.InstructionListTest.testWayList2":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":26,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":168,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":301,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":311,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":386,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":403,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":119,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":490,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":257,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":82,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":154,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":67,"com.graphhopper.routing.AStarTest.initializationError":464,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":89,"com.graphhopper.coll.OSMIDMapTest.testGet":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":138,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":104,"com.graphhopper.routing.PathBidirRefTest.testExtract":189,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":454,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":271,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":453,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":149,"com.graphhopper.util.GHUtilityTest.testSort2":469,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":86,"com.graphhopper.reader.OSMReaderTest.testMain":65,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":277,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":455,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":461,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":6,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":297,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":121,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":236,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":129,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":187,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":142,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":405,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":123,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":72,"com.graphhopper.storage.StorablePropertiesTest.testStore":491,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":489,"com.graphhopper.storage.GraphHopperStorageTest.testClone":156,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":362,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":5,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":425,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":444,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":355,"com.graphhopper.routing.PathTest.testTime":191,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":440,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":292,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":429,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":328,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":28,"com.graphhopper.reader.OSMReaderTest.testRelation":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":270,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":288,"com.graphhopper.util.GHUtilityTest.testSortDirected":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":417,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":372,"com.graphhopper.GraphHopperTest.testFootOnly":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":391,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":40,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":424,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":324,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":80,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":404,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":177,"com.graphhopper.search.NameIndexTest.testCreate":488,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":369,"com.graphhopper.routing.QueryGraphTest.testOneWay":376,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":321,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":475,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":22,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":473,"com.graphhopper.reader.OSMReaderTest.testWithBounds":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":418,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":310,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":359,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":433,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":73,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":115,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":278,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":416,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":401,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":307,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":151,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":140,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":153,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":78,"com.graphhopper.util.InstructionListTest.testWayList":98,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":350,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":452,"com.graphhopper.GraphHopperAPITest.testDisconnected179":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":174,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":413,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":186,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":184,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":459,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":59,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":341,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":243,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":209,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":447,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":85,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":381,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":207,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":427,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":437,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":91,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":339,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":325,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":463,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":335,"com.graphhopper.routing.PathTest.testWayList":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":365,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":266,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":423,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":109,"com.graphhopper.coll.OSMIDMapTest.testGet2":493,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":92,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":458,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":344,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":431,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":302,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":122,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":410,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.util.GHUtilityTest.testSort":470,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":361,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":480,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":393,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":457,"com.graphhopper.search.NameIndexTest.testPut":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":299,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":340,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":323,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":42,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":331,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":407,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":374,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":18,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":329,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":436,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":432,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":304,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":107,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":180,"com.graphhopper.routing.PathTest.testFound":383,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":63,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":75,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":127,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":110,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":274,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":456,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":242,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":487,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":176,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":159,"com.graphhopper.util.InstructionListTest.testEmptyList":467,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":84,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":442,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":399,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":421,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":87,"com.graphhopper.reader.PrinctonReaderTest.testRead":185,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":33,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":265,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":474,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":169,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":411,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":216,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":179,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":378,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":222,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":293,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":389,"com.graphhopper.reader.OSMReaderTest.testOneWay":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":223,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":249,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":251,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":396,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":409,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":206,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":426,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":204,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":332,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":196,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":356,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":371,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":337,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":102,"com.graphhopper.routing.PathBidirRefTest.testExtract2":190,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":148,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":485,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":164,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":333,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":445,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":46,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":366,"com.graphhopper.util.SimpleIntDequeTest.testPush":56,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":95,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":221,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":165,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":471,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":283,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":254,"com.graphhopper.GraphHopperTest.testFootAndCar":1,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":345,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":235,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":172,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":384,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":428,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":135,"com.graphhopper.GraphHopperTest.testPrepareOnly":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":88,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":171,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":47,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":112,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":76,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":348,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":197,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":357,"com.graphhopper.routing.AStarBidirectionTest.initializationError":380,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":402,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":290,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":239,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":131}}]
