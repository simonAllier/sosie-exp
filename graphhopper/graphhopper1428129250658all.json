[{"failures":[],"tindex":"9bd2dcef-da94-11e4-9134-f1d899ef9abb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"9bd3a040-da94-11e4-9134-8d32053741f2","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"defaultD","speed":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[137,274,282,444,452],"tindex":"9bd3a041-da94-11e4-9134-69634614bcff","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"nodeA","id":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"9bd3a042-da94-11e4-9134-679bf32cad2d","variableMapping":{"slice":"maxSpeed","azimuth":"maxSpeed","cp":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:126","type":"CtIfImpl","sourcecode":"if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[314],"tindex":"9bd3a043-da94-11e4-9134-db6975b9e4e2","variableMapping":{"initLeafSize":"minNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[301],"tindex":"9bd3a044-da94-11e4-9134-df09fead4d7d","variableMapping":{"eleDelta":"maxSpeed","decEleSum":"maxSpeed","fullDist2D":"backSpeed","decDist2DSum":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"9bd3a045-da94-11e4-9134-5b3409823e97","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"9bd3a046-da94-11e4-9134-e5a450344511","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[19,20,21,22,24,25,26,28,29,30,31,459,32,273,274,275,276,277,278,280,281,283,296,298,299,301,303,318],"tindex":"9bd3a047-da94-11e4-9134-c71ef261ca49","variableMapping":{"tt":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[460,461,38,41,42,84,85,87,88,134,154,157,158,159,160,161,162,167,184,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,462,272,278,281,283],"tindex":"9bd3a048-da94-11e4-9134-91e32bb6ff43","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-1},{"failures":[0,1,463,464],"tindex":"9bd3a049-da94-11e4-9134-a5512b4ea08b","variableMapping":{"size":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"9bd3a04a-da94-11e4-9134-c111ad9a57ae","variableMapping":{"need":"nodeEntryBytes","i":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[0,1,463,464,19,22,24,25,28,137,138,142,144,147,150,151,152,153,155,158,159,162,172,174,177,180,181,182,183,185,269,270,274,275,277,278,283,313,314,315,448,449,452],"tindex":"9bd3c75b-da94-11e4-9134-f777f003c7a3","variableMapping":{"capacity":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[324,362],"tindex":"9bd3c75c-da94-11e4-9134-5fd3e061b380","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"9bd3c75d-da94-11e4-9134-4994a01afde3","variableMapping":{"this":"estimatedLength","lat":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:141","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-2},{"failures":[4,15,33,35,36,41,44,46,47,48,49,50,51,52,53,54,55,58,59,61,62,64,65,66,67,70,72,73,74,75,77,78,80,82,83,137,138,140,142,143,144,145,147,148,149,150,151,152,153,155,156,272,273,274,275,278,280,282,420,421,423,424,425,426,427,428,429,430,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"9bd3c75e-da94-11e4-9134-65d766db26e7","variableMapping":{"arrayLength":"I_SKIP_EDGE1","maxGeoRef":"I_SKIP_EDGE1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"9bd3c75f-da94-11e4-9134-e98ea9ab0850","variableMapping":{"node":"skippedEdge2","lg":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:299","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraphStorage.getLevel(int)) != 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,465,18,19,20,21,22,23,24,25,26,28,29,30,31,32,466,467,468,469,470,471,472,473,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,198,213,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,280,281,282,283,287,312,313,314,315,316,317,355,356,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,420,421,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"9bd3c760-da94-11e4-9134-8382a3513b17","variableMapping":{"bytePos":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"9bd3c761-da94-11e4-9134-af666d534142","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[474,475,476,477,478,427],"tindex":"9bd3c762-da94-11e4-9134-65f56e6467f1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"9bd3ee73-da94-11e4-9134-dda9a3c79c64","variableMapping":{"index":"bytePos","entriesPerSegment":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:99","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"9bd3ee74-da94-11e4-9134-31eefae92d1b","variableMapping":{"sayText":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:450","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) <= 0)) {\n    return java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":0},{"failures":[479,480,481,482,483,484,485,486,487,488,141,171],"tindex":"9bd3ee75-da94-11e4-9134-6d8dd44d1f3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[0,1,2,3,4,5,7,9,10,11,12,13,14,16,17,465,33,36,40,41,44,46,47,48,49,50,51,53,55,58,59,60,61,62,63,64,65,66,69,70,72,73,74,75,77,80,81,82,83,84,85,86,87,90,92,93,94,95,96,97,99,101,104,105,106,107,108,109,110,111,112,115,116,118,119,120,121,123,126,127,128,129,130,131,132,133,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,194,196,199,200,201,202,203,204,205,206,207,210,211,213,214,215,216,218,221,222,223,224,225,226,229,231,232,233,234,235,236,238,240,243,244,245,246,247,248,249,250,251,254,255,257,258,259,260,262,265,266,267,268,269,270,312,313,314,315,316,317,405,406,407,408,410,411,412,413,414,415,416,417,418,421,423,424,425,426,427,428,429,431,432,433,434,435,437,438,439,440,441,442,443,444,445,446,449,450,451,452,453,454,455,456,457,458],"tindex":"9bd3ee76-da94-11e4-9134-bddadc0250a0","variableMapping":{"fullyLoaded":"forward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1079","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"9bd3ee77-da94-11e4-9134-e18b7a929445","variableMapping":{"path":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.getMillis()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[],"tindex":"9bd3ee78-da94-11e4-9134-e373c30d9a27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,465,489,490,491,492,492,493,493,18,19,20,21,22,23,24,25,26,27,28,29,30,31,459,32,494,495,496,497,498,499,500,460,461,501,502,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,503,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,504,505,462,506,507,508,509,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,287,312,313,314,315,316,317,355,356,401,402,403,404,405,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,420,421,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"9bd41589-da94-11e4-9134-550f29aeb3c5","variableMapping":{"type":"type","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:130","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[],"tindex":"9bd4158a-da94-11e4-9134-f928cf7e512e","variableMapping":{"shift":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:213","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[502,38,41,84,87,226,272,278,280,281,283],"tindex":"9bd4158b-da94-11e4-9134-9d99dfa92eff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"9bd4158c-da94-11e4-9134-07cb0c66cf31","variableMapping":{"nextTowerId":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[356],"tindex":"9bd4158d-da94-11e4-9134-81b359b98eb5","variableMapping":{"r":"bwSlower","x":"bwSlower","absY":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"9bd4158e-da94-11e4-9134-81610c3567eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"9bd4158f-da94-11e4-9134-e3e2980b066c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[302,510,511],"tindex":"9bd41590-da94-11e4-9134-cbe107e96ac3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-1},{"failures":[],"tindex":"9bd41591-da94-11e4-9134-e540212ad86f","variableMapping":{"factor":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"9bd41592-da94-11e4-9134-1f754013e116","variableMapping":{"midLat":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[12,52,98,193,237,274,277,283,288,289,291,293,296,297,299,301,308,311,318,320,324,325,336,341,343,352,358,362,363,374,380,382,391,395,403,436,447,448,458],"tindex":"9bd41593-da94-11e4-9134-892476ce3131","variableMapping":{"val":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[323,325,335,343,351,361,363,373,381,382,390],"tindex":"9bd41594-da94-11e4-9134-0b5dcf145a88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"9bd41595-da94-11e4-9134-4bd74d5aad83","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394],"tindex":"9bd41596-da94-11e4-9134-5dc783046fd9","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"9bd43ca7-da94-11e4-9134-d7a5fea71fab","variableMapping":{"systemProperty":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[312,316],"tindex":"9bd43ca8-da94-11e4-9134-5f5293afda17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"9bd43ca9-da94-11e4-9134-6bdfa2a97777","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","bikeTag":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"9bd43caa-da94-11e4-9134-33ccb07541d1","variableMapping":{"hasOther":"blockFords","hasRel":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[378],"tindex":"9bd43cab-da94-11e4-9134-df9e98a725ab","variableMapping":{"sayText":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:450","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) <= 0)) {\n    return java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"9bd43cac-da94-11e4-9134-0f25f1e9ae9d","variableMapping":{"high":"i","guess":"child","low":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[18,19,20,21,23,24,25,26,30,31,32,512,513,321,323,324,325,335,339,341,343,351,354,359,361,362,363,373,377,381,382,390,394],"tindex":"9bd43cad-da94-11e4-9134-878f3d70a478","variableMapping":{"lastKey":"encoded","key":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"9bd43cae-da94-11e4-9134-6fde4a1fadfd","variableMapping":{"high":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","len":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","start":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"9bd43caf-da94-11e4-9134-39676e39d9ee","variableMapping":{"len":"hash","start":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[18,19,20,21,23,24,26,30,31,32,272,277,282,283,288,291,311],"tindex":"9bd43cb0-da94-11e4-9134-f90ab0be7e9d","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"9bd43cb1-da94-11e4-9134-e5daf56a7b16","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"9bd43cb2-da94-11e4-9134-3bd4997cd01d","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[512,513,321,330,339,347,354,359,368,377,385,394],"tindex":"9bd43cb3-da94-11e4-9134-e5e1066cdfd3","variableMapping":{"flags":"value","tmpValue":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"9bd43cb4-da94-11e4-9134-27ce2323d97f","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[323,325,335,343,351,361,363,373,381,382,390],"tindex":"9bd43cb5-da94-11e4-9134-2586ca8a5a7a","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[25,311,321,323,324,325,335,339,341,343,351,354,359,361,362,363,373,377,381,382,390,394],"tindex":"9bd43cb6-da94-11e4-9134-0b1ff1c2bb57","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[],"tindex":"9bd463c7-da94-11e4-9134-739956e671e6","variableMapping":{"endIndexPlusOne":"shift","frontIndex":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"9bd463c8-da94-11e4-9134-93f9490e0be0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[475,423,425,429,431,433],"tindex":"9bd463c9-da94-11e4-9134-1b6868b6af63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"9bd463ca-da94-11e4-9134-afb6a4210646","variableMapping":{"workerThreads":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":0},{"failures":[],"tindex":"9bd463cb-da94-11e4-9134-abfdcae15370","variableMapping":{"time":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"9bd463cc-da94-11e4-9134-f1f9cb6f7c7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,465,489,490,491,18,19,20,21,22,23,24,25,26,27,28,29,30,31,459,32,494,495,496,497,498,499,500,460,461,501,502,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,503,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,198,213,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,504,506,507,508,509,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,287,312,313,314,315,316,317,355,356,401,402,403,404,405,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,420,421,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"9bd59c4d-da94-11e4-9134-570ddcbe5f6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"9bd59c4e-da94-11e4-9134-770fc5c8a2d1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"9bd59c4f-da94-11e4-9134-71ef7ef689c7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"9bd59c50-da94-11e4-9134-d910ee711121","variableMapping":{"pointIndex":"endNode","index":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[356],"tindex":"9bd5c361-da94-11e4-9134-735dafaa37e6","variableMapping":{"eleDelta":"bwFaster","decEleSum":"bwFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"9bd5c362-da94-11e4-9134-7fe82488e3ea","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-2},{"failures":[19,20,21,22,24,25,26,28,29,30,31,459,32,274,275,276,277,278,281,283,299],"tindex":"9bd5c363-da94-11e4-9134-0f350ce97716","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[19,24,25,272,277,282,288,291,292,298,299,303,324,327,337,353,362,365,375,379,392],"tindex":"9bd5c364-da94-11e4-9134-29b57164b3e5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"9bd5c365-da94-11e4-9134-e93c8f79ebf5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"9bd5c366-da94-11e4-9134-5164455b12d4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[311,320,323,325,335,343,351,358,361,363,373,380,381,390],"tindex":"9bd5c367-da94-11e4-9134-7bfb6050cfee","variableMapping":{"location":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[311,324,325,341,343,362,363,382],"tindex":"9bd5c368-da94-11e4-9134-9193c00ff25e","variableMapping":{"tmp":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"9bd5c369-da94-11e4-9134-fb53d69695ff","variableMapping":{"filter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:112","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[],"tindex":"9bd5c36a-da94-11e4-9134-8b5148b8e3b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[4,9,10,11,13,14,15,16,33,37,41,46,47,48,50,51,54,55,57,62,64,70,72,75,77,78,82,84,87,92,93,94,96,97,100,101,103,108,110,116,118,121,123,124,128,136,156,169,186,187,188,189,191,192,195,196,198,203,205,211,213,216,218,219,223,226,231,232,233,235,236,239,240,242,247,249,255,257,260,262,263,267,269,272,273,274,275,278,280,282,286,287,289,293,297,300,307,312,316,320,341,356,358,380,395,402,403,404,405,406,411,414,420,421,423,424,425,426,427,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"9bd5c36b-da94-11e4-9134-37624dfbda6e","variableMapping":{"intLow":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","intHigh":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[48,58,59,61,66,73,74,94,104,105,107,112,119,120,189,199,200,202,207,214,215,233,243,244,246,251,258,259,315],"tindex":"9bd5c36c-da94-11e4-9134-9d90ad03cd9b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-1},{"failures":[323,325,335,343,351,361,363,373,381,382,390],"tindex":"9bd5c36d-da94-11e4-9134-77d8b920f95a","variableMapping":{"size":"pavementType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"9bd5c36e-da94-11e4-9134-0311c7ff5c0f","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1378","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.checkInit()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-2},{"failures":[479,480,482,484,485,514,515,487,488,140,146,148,149,516,170,176,178,179],"tindex":"9bd5c36f-da94-11e4-9134-076ea1f4585f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"9bd5ea80-da94-11e4-9134-773f8167c63a","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"9bd5ea81-da94-11e4-9134-d161f31f371c","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[18,517],"tindex":"9bd5ea82-da94-11e4-9134-d3194d4a2a57","variableMapping":{"index":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[2,4,15,33,34,35,36,37,38,39,40,41,42,44,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,272,274,275,278,280,282,420,421,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"9bd5ea83-da94-11e4-9134-d18dad3f98d2","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"9bd5ea84-da94-11e4-9134-e1829bfdbf38","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[],"tindex":"9bd5ea85-da94-11e4-9134-779abf44e57a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[13,14,15,16,17,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,136,138,156,169,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,274,275,276,277,278,281,282,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,401,402,403,404,405,406,411,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"9bd5ea86-da94-11e4-9134-7333191ba2dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"9bd5ea87-da94-11e4-9134-334cce00822f","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"9bd5ea88-da94-11e4-9134-63a24c035c27","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"9bd5ea89-da94-11e4-9134-1d047a052203","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[41,71,84,87,117,148,178,212,226,256],"tindex":"9bd6119a-da94-11e4-9134-cfc8e5c15193","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[],"tindex":"9bd6119b-da94-11e4-9134-45ddc0cc76e8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[479,481,483],"tindex":"9bd6119c-da94-11e4-9134-f53e6efa9483","variableMapping":{"r":"midLon","angle":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[301],"tindex":"9bd6119d-da94-11e4-9134-3d920d999abd","variableMapping":{"eleDelta":"backSpeed","decEleSum":"backSpeed","fullDist2D":"maxSpeed","decDist2DSum":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"9bd6119e-da94-11e4-9134-59d5867a8cf4","variableMapping":{"elem":"elem","keys":"keys","i":"size","key":"key","child":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:170","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n    int = int;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,28,29,30,31,32,461,38,41,42,84,87,88,226,227,272,273,274,275,276,277,278,280,281,282,283],"tindex":"9bd6119f-da94-11e4-9134-c1f70f330ec1","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[323,325,335,343,351,361,363,373,381,382,390],"tindex":"9bd611a0-da94-11e4-9134-5f9cbb5b43a2","variableMapping":{"cp":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:122","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[],"tindex":"9bd611a1-da94-11e4-9134-03bc0e3dd861","variableMapping":{"value":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":72,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":453,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":38,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":511,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":132,"com.graphhopper.GraphHopperAPITest.testNoLoad":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":188,"com.graphhopper.reader.OSMReaderTest.testFerry":18,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":324,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":143,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":273,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":102,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":493,"com.graphhopper.coll.CompressedArrayTest.testCompress":488,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":350,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":266,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":208,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":431,"com.graphhopper.GraphHopperTest.testPrepare":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":452,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":420,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":478,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":322,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":445,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":503,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":351,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":1,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":44,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":140,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":343,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":437,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":443,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":173,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":325,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":84,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":514,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":46,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":477,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":434,"com.graphhopper.GraphHopperTest.testLoadOSM":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":174,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":310,"com.graphhopper.reader.OSMReaderTest.testSort":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":336,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":88,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":261,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":226,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":221,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":414,"com.graphhopper.routing.DijkstraTest.initializationError":400,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":123,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":71,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":238,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":85,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":361,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":92,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":394,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":391,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":147,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":449,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":145,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":440,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":439,"com.graphhopper.coll.OSMIDMapTest.testGetLong":497,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":106,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":112,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":63,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":41,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":65,"com.graphhopper.coll.CompressedArrayTest.testCompress2":487,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":251,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":380,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":103,"com.graphhopper.GraphHopperAPITest.testLoad":269,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":45,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":468,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":285,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":243,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":233,"com.graphhopper.storage.LevelGraphStorageTest.testClone":50,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":517,"com.graphhopper.reader.OSMReaderTest.testBarriers":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":364,"com.graphhopper.util.GHUtilityTest.testCopy":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":442,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":156,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":388,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":134,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":353,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":347,"com.graphhopper.routing.PathTest.testFindInstruction":404,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":94,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":474,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":15,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":291,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":360,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":262,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":247,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":121,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":371,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":399,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":193,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":229,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":473,"com.graphhopper.util.InstructionListTest.testWayList2":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":181,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":267,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":323,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":321,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":395,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":355,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":202,"com.graphhopper.storage.RAMDirectoryTest.testSynched":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":157,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":441,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":23,"com.graphhopper.routing.AStarTest.initializationError":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":455,"com.graphhopper.coll.OSMIDMapTest.testGet":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":101,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":292,"com.graphhopper.routing.PathBidirRefTest.testExtract":405,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":67,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":329,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":496,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":214,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":328,"com.graphhopper.util.GHUtilityTest.testSort2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":450,"com.graphhopper.reader.OSMReaderTest.testMain":20,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":330,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":515,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":337,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":218,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":57,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":61,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":463,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":82,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":58,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":358,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":467,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":64,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":31,"com.graphhopper.storage.StorablePropertiesTest.testStore":461,"com.graphhopper.storage.GraphHopperStorageTest.testClone":235,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":303,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":500,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":301,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":392,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":194,"com.graphhopper.routing.PathTest.testTime":402,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":387,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":80,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":308,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":183,"com.graphhopper.reader.OSMReaderTest.testRelation":27,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":207,"com.graphhopper.util.GHUtilityTest.testSortDirected":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":374,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":505,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":410,"com.graphhopper.GraphHopperTest.testFootOnly":282,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":342,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":158,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":299,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":460,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":146,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":513,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":438,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":421,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":203,"com.graphhopper.search.NameIndexTest.testCreate":509,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":407,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":470,"com.graphhopper.routing.QueryGraphTest.testOneWay":416,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":184,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":482,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":346,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":492,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":172,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":479,"com.graphhopper.reader.OSMReaderTest.testWithBounds":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":200,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":313,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":209,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":293,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":512,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":47,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":372,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":354,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":169,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":108,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":231,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":436,"com.graphhopper.util.InstructionListTest.testWayList":10,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":327,"com.graphhopper.GraphHopperAPITest.testDisconnected179":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":195,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":483,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":369,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":206,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":334,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":276,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":237,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":432,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":319,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":447,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":397,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":430,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":304,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":384,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":335,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":90,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":154,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":469,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":339,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":225,"com.graphhopper.routing.PathTest.testWayList":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":199,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":298,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":510,"com.graphhopper.coll.OSMIDMapTest.testGet2":495,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":458,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":75,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":333,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":248,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":99,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":236,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":62,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":366,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":476,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":381,"com.graphhopper.util.GHUtilityTest.testSort":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":212,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":486,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":332,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":345,"com.graphhopper.search.NameIndexTest.testPut":507,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":128,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":234,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":133,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":141,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":162,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":165,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":471,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":362,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":413,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":86,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":383,"com.graphhopper.storage.MMapDirectoryTest.testSynched":504,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":396,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":490,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":456,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":312,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":472,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":213,"com.graphhopper.routing.PathTest.testFound":401,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":283,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":311,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":77,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":378,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":331,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":105,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":475,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":508,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":198,"com.graphhopper.util.InstructionListTest.testEmptyList":8,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":444,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":389,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":448,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":352,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":451,"com.graphhopper.reader.PrinctonReaderTest.testRead":16,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":144,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":197,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":480,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":187,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":110,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":367,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":359,"com.graphhopper.reader.OSMReaderTest.testFoot":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":211,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":418,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":491,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":178,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":485,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":340,"com.graphhopper.reader.OSMReaderTest.testOneWay":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":179,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":244,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":259,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":122,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":348,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":205,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":426,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":516,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":423,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":433,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":424,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":201,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":409,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":228,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":459,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":462,"com.graphhopper.routing.PathBidirRefTest.testExtract2":406,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":435,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":182,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":390,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":506,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":257,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":393,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":224,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":288,"com.graphhopper.util.SimpleIntDequeTest.testPush":464,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":370,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":429,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":175,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":260,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":6,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":305,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":252,"com.graphhopper.GraphHopperTest.testFootAndCar":277,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":191,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":309,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":96,"com.graphhopper.storage.StorablePropertiesTest.testLoad":501,"com.graphhopper.GraphHopperTest.testPrepareOnly":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":454,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":135,"com.graphhopper.GraphHopperTest.testVia":274,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":189,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":28,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":37,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":12,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":256,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":289,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":204,"com.graphhopper.routing.AStarBidirectionTest.initializationError":419,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":318,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":76,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":74,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":87}}]
