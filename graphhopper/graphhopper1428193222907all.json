[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"8dac518e-db29-11e4-b21e-a165782cb02f","variableMapping":{"lastKey":"flags","key":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[40,41,42,43,44,45],"tindex":"8dadff3f-db29-11e4-b21e-b3c186d9e68a","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[46,47],"tindex":"8dadff40-db29-11e4-b21e-8df08ed83181","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[],"tindex":"8dadff41-db29-11e4-b21e-398c5a3f4456","variableMapping":{"intIndex":"length","len":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"8dadff42-db29-11e4-b21e-fb658be0e915","variableMapping":{"edgePointer":"nodeBitMask","edgeEntryBytes":"shift","nextEdge":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"8dadff43-db29-11e4-b21e-6d8db373c850","variableMapping":{"mask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"8dadff44-db29-11e4-b21e-f763fc9ba4bd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"8dadff45-db29-11e4-b21e-cf4c41a8904c","variableMapping":{"index":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"8dadff46-db29-11e4-b21e-5d2271f6ff8f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"8dadff47-db29-11e4-b21e-65f024a2adce","variableMapping":{"ret":"i","retBucket":"allBits","i":"i","storedKey":"hash","bucketSize":"allBits","key":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"8dae2658-db29-11e4-b21e-613c52b73777","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[109,49,50,110,0,51,52,111,1,112,113,114,115,2,116,117,118,119,120,3,121,122,123,124,125,126,89,90,62,66,67,70,91,92,93,94,127,95,96,97,98,99,100,128,129,101,130,131,132,133,134,102,135,103,104,136,137,138,139,140,141,142,105,143,144,145,146,147,106,148,107,108,149,150,151,152,153,154,155],"tindex":"8dae2659-db29-11e4-b21e-43f57d0266b0","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[89,90,91,92,93,94,127,95,96,99,130,143],"tindex":"8dae265a-db29-11e4-b21e-d53fe3058d02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"8dae265b-db29-11e4-b21e-17cc6e948092","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[89,90,91,92,94,95,96,98,100,101,102,103,104,105,106,107,108],"tindex":"8dae265c-db29-11e4-b21e-a3790f90a2f7","variableMapping":{"speed":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"8dae265d-db29-11e4-b21e-f5740b8e1bdb","variableMapping":{"endIndexPlusOne":"capacity","frontIndex":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8dae265e-db29-11e4-b21e-5bfca70697d0","variableMapping":{"i":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":0},{"failures":[115,156],"tindex":"8dae265f-db29-11e4-b21e-6fe99ad00171","variableMapping":{"arg":"str","index":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:109","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"8dae2660-db29-11e4-b21e-7dd1b3e9af64","variableMapping":{"com.graphhopper.util.Constants.VERSION_LOCATION_IDX":"maxTurnCosts","com.graphhopper.util.Constants.VERSION_GEOMETRY":"speedBits","com.graphhopper.util.Constants.VERSION_EDGE":"maxTurnCosts","com.graphhopper.util.Constants.VERSION_NAME_IDX":"speedBits","com.graphhopper.util.Constants.VERSION_NODE":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:67","type":"CtReturnImpl","sourcecode":"return ((((((((com.graphhopper.util.Constants.int) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":0},{"failures":[],"tindex":"8dae2661-db29-11e4-b21e-3fc13ee09f64","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"8dae2662-db29-11e4-b21e-87d60e20ad89","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"8dae2663-db29-11e4-b21e-3f4757c203e5","variableMapping":{"hasOther":"storing","hasRel":"storing"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[157,158],"tindex":"8dae4d74-db29-11e4-b21e-354b292234bd","variableMapping":{"keyIndex":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"8dae4d75-db29-11e4-b21e-1b3a5cf9e869","variableMapping":{"importance":"i","hash":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"8dae4d76-db29-11e4-b21e-7bd353920791","variableMapping":{"java.lang.Double.NaN":"java.lang.Double.POSITIVE_INFINITY","com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","id":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:482","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"8dae4d77-db29-11e4-b21e-9ffb41297c1d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[109,48,49,50,110,0,51,52,111,1,112,113,114,159,160,161,162,163,164,165,166,167,168,169,115,2,116,117,118,119,120,3,121,4,122,123,124,125,170,126,171,172,173,174,175,176,177,178,179,180,181,182,5,183,184,185,186,187,188,189,190,191,6,192,7,8,9,10,193,194,195,11,196,197,198,199,12,200,201,202,13,203,14,15,16,204,17,205,206,207,18,208,209,19,210,211,212,213,20,21,214,215,22,216,217,218,219,23,220,221,222,24,223,25,224,26,225,226,227,27,228,229,230,28,231,232,29,233,234,235,236,157,158,237,238,30,239,31,32,33,34,240,241,242,35,243,244,245,246,36,247,248,249,37,250,251,252,253,254,255,256,257,258,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,259,77,260,78,79,80,81,82,83,84,261,85,86,87,88,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,40,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,129,142,305,306,155,307,308,309,310,311,312,313,314,315,316,317,41,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,43,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,44,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438],"tindex":"8dae4d78-db29-11e4-b21e-95389a5fb43e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:211","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-1},{"failures":[55,58,59,70,72,74,259,84,261],"tindex":"8dae4d79-db29-11e4-b21e-ddf76bb160da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"8dae4d7a-db29-11e4-b21e-c3b10da752bc","variableMapping":{"value":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[],"tindex":"8dae4d7b-db29-11e4-b21e-c7be74805fbb","variableMapping":{"capacity":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"8dae748c-db29-11e4-b21e-7598ba49ef49","variableMapping":{"from":"size","hash":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[89,90,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"8dae748d-db29-11e4-b21e-b9f908564b10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"8dae748e-db29-11e4-b21e-fb74d3423e71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"8dae748f-db29-11e4-b21e-dd28cefd3b94","variableMapping":{"tmp":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"8dae7490-db29-11e4-b21e-a5f8e7d9044b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[14,16],"tindex":"8dae7491-db29-11e4-b21e-8bca846420af","variableMapping":{"high":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"8dae7492-db29-11e4-b21e-6ff5cc0ed8d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:500","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[258],"tindex":"8dae7493-db29-11e4-b21e-ffcaea8e5751","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[191,8,9,202,213,21,222,25,26,225,238,32,33,249],"tindex":"8dae7494-db29-11e4-b21e-0b54601263e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[89,90,92,94,95,96,97,98,100,101,102,104,105,106,108],"tindex":"8dae7495-db29-11e4-b21e-77a8be5ad21c","variableMapping":{"max":"maxLonTmp","time":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:52","type":"CtIfImpl","sourcecode":"if (long > (double))\n    double = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[6,14,30],"tindex":"8dae7496-db29-11e4-b21e-f7960d83d4a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[439,440,441],"tindex":"8dae7497-db29-11e4-b21e-032501bbec7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"8dae7498-db29-11e4-b21e-9988c6f3b967","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"8dae7499-db29-11e4-b21e-6dd30daceaa5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[],"tindex":"8dae9baa-db29-11e4-b21e-8be5a91df7e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"8dae9bab-db29-11e4-b21e-c753d193fbc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[115,180],"tindex":"8dae9bac-db29-11e4-b21e-57ad6a6214fe","variableMapping":{"str":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"8dae9bad-db29-11e4-b21e-f1ddcb75edd1","variableMapping":{"index":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":0},{"failures":[189],"tindex":"8dae9bae-db29-11e4-b21e-f1117365b7e0","variableMapping":{"angle":"eleDelta","com.graphhopper.util.AngleCalc.PI3_4":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"8dae9baf-db29-11e4-b21e-ff372c86d2a5","variableMapping":{"intIndex":"length","len":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"8dae9bb0-db29-11e4-b21e-617bbf152a46","variableMapping":{"directionBitMask":"ferryBit","flags":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"8dae9bb1-db29-11e4-b21e-8fff957cd1e6","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[0,171,172,173,174,175,176,177,178,179,180,181,182,5,183,184,185,203,204,17,205,206,207,18,208,209,19,210,211,212,213,20,21,223,25,224,26,225,258,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,40,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,142,305,306,155,307,308,309,310,311,312,313,314,315,316,317,41,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,43,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,44,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438],"tindex":"8dae9bb2-db29-11e4-b21e-117edb08d7e2","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"8dae9bb3-db29-11e4-b21e-a73ddd17f939","variableMapping":{"optionName":"com.graphhopper.routing.util.EncodingManager.WAY_ERR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AlgorithmOptions:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(((\"Option \\'\" + java.lang.String) + \"\\' must NOT be null\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[0,2,18],"tindex":"8dae9bb4-db29-11e4-b21e-a13f121a071a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[115,176,156],"tindex":"8daec2c5-db29-11e4-b21e-33a3e9cec396","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[109,51,111,112,263,264,140,442,443,444,445,446,447,448,449,153,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,450,451,394,397,398,452],"tindex":"8daec2c6-db29-11e4-b21e-91244e77008e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-1},{"failures":[],"tindex":"8daec2c7-db29-11e4-b21e-9dce4afb74a5","variableMapping":{"time":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"8daec2c8-db29-11e4-b21e-a5be3012f013","variableMapping":{"reverseSpeed":"preferWayEncoder","flags":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[89,90,91,92,93,94,127,95,96,99],"tindex":"8daec2c9-db29-11e4-b21e-9167db59b96d","variableMapping":{"weightApproximation":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"8daec2ca-db29-11e4-b21e-25120b8679aa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8daec2cb-db29-11e4-b21e-77019626d548","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"8daec2cc-db29-11e4-b21e-a57524314685","variableMapping":{"retBucket":"shift","bucketSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[126,235,236],"tindex":"8daec2cd-db29-11e4-b21e-4d2e67375f16","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[3,8,193,201,221,223,232,32,240,248],"tindex":"8daec2ce-db29-11e4-b21e-bffb122dd5c3","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"8daec2cf-db29-11e4-b21e-810ac3e8291c","variableMapping":{"silent":"synched"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"8daec2d0-db29-11e4-b21e-cd87ccbfe0f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[439,53,453,440,441,78,80,81,82,84,85,87],"tindex":"8daec2d1-db29-11e4-b21e-db26d491693f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"8daec2d2-db29-11e4-b21e-ada917829e05","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"8daec2d3-db29-11e4-b21e-5dd4979565de","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[109,0,1,112,115,2,116,117,118,119,120,3,121,122,123,124,125,126,171,172,173,174,175,176,177,178,179,180,181,182,5,183,184,185,203,15,454,17,205,206,207,18,208,209,19,210,211,455,456,457,458,459,460,258,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,40,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,142,305,306,155,307,308,309,310,311,312,313,314,315,316,317,41,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,43,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,44,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438],"tindex":"8daee9e4-db29-11e4-b21e-77a623c18375","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[109,48,49,50,110,0,51,52,111,1,112,115,2,116,117,118,119,120,3,121,122,123,124,125,126,461,462,263,264,272,293,443,444,445,446,448,311,332,463,464,344,347,348,356,377,465,466,394,397,398,406,467,468,469,470],"tindex":"8daee9e5-db29-11e4-b21e-cd263d19b46d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"8daee9e6-db29-11e4-b21e-af30ed629dee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:405","type":"CtLocalVariableImpl","sourcecode":"gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = new gnu.trove.map.hash.TLongObjectHashMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>()"},"status":-2},{"failures":[],"tindex":"8db02267-db29-11e4-b21e-099735f19e22","variableMapping":{"turnCostIndex":"tmpEdge","NO_TURN_ENTRY":"tmpEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-2},{"failures":[454],"tindex":"8db02268-db29-11e4-b21e-a36cad68386c","variableMapping":{"intVal":"shift","degree":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[191,192,196,197,12,200,202,13,213,21,216,217,23,220,222,24,228,28,231,29,238,239,243,244,36,247,249,37],"tindex":"8db02269-db29-11e4-b21e-4f613337e543","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"8db0226a-db29-11e4-b21e-59ab50eff767","variableMapping":{"flags":"weightLong","mask":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-2},{"failures":[439,53,453,440,441],"tindex":"8db0226b-db29-11e4-b21e-e7a658e418a9","variableMapping":{"bitsForEdgeFlags":"minElem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"8db0226c-db29-11e4-b21e-656e1794bdc6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[0,1,2],"tindex":"8db0226d-db29-11e4-b21e-1be93c6a3469","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"8db0226e-db29-11e4-b21e-6d5daaf35b29","variableMapping":{"factor":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8db0226f-db29-11e4-b21e-ad56a9f1b142","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[176],"tindex":"8db02270-db29-11e4-b21e-c9c86e77e9ce","variableMapping":{"factor":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[471],"tindex":"8db02271-db29-11e4-b21e-abae642b5643","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:74","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet instanceof com.graphhopper.coll.GHBitSetImpl) {\n    ((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this);\n} else {\n    int int = java.util.BitSet.size();\n    com.graphhopper.coll.GHBitSet.ensureCapacity(int);\n    for (int int = java.util.BitSet.nextSetBit(0) ; int >= 0 ; int = java.util.BitSet.nextSetBit((int + 1))) {\n        com.graphhopper.coll.GHBitSet.add(int);\n    }\n}"},"status":-2},{"failures":[170],"tindex":"8db02272-db29-11e4-b21e-c3ed17f20df5","variableMapping":{"origEdgeId":"encoderCount","mainEdges":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-1},{"failures":[174],"tindex":"8db02273-db29-11e4-b21e-bffcdea5ace2","variableMapping":{"acceptBit":"roundaboutBit","ferryBit":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[50,110,51,111,161,472,165,115,116,117,118,119,120,3,121,122,123,124,125,126,473,252,474,475,476,73,263,288,294,299,131,144,327,332,333,338,463,477,478,479,344,347,372,378,383,480,481,397,422,428,433,467,482,483,484],"tindex":"8db04984-db29-11e4-b21e-d575e518d472","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"8db04985-db29-11e4-b21e-e52ca550fe03","variableMapping":{"fromX":"maxLat","toX":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[201,221,232,248],"tindex":"8db04986-db29-11e4-b21e-cbc796b2c936","variableMapping":{"directionBitMask":"acceptBit","flags":"ferryBit","dir":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"8db04987-db29-11e4-b21e-bf742d6b539e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-2},{"failures":[],"tindex":"8db04988-db29-11e4-b21e-0374b439ba21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"8db04989-db29-11e4-b21e-5b3d0cbedcec","variableMapping":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[],"tindex":"8db0498a-db29-11e4-b21e-9b3353615d2e","variableMapping":{"g":"graph","start":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:226","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-2},{"failures":[],"tindex":"8db0498b-db29-11e4-b21e-77e96d893513","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"8db0498c-db29-11e4-b21e-f3fb565b1ed8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:394","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[258,54,55,58,59,70,72,73,74,76,259,84,261,88],"tindex":"8db0498d-db29-11e4-b21e-3bf2b6e9ca4b","variableMapping":{"max":"from","tmpSize":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"8db0498e-db29-11e4-b21e-8fc211ca8a3e","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8db0498f-db29-11e4-b21e-2de5e25b922d","variableMapping":{"nodeId":"roundaboutBit","nodeIdOffset":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"8db04990-db29-11e4-b21e-39ebc3fecf84","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[],"tindex":"8db04991-db29-11e4-b21e-d397f206cb5f","variableMapping":{"resultOrientation":"minLat","orientation":"java.lang.Double.MAX_VALUE","java.lang.Math.PI":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":427,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":71,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":474,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":308,"com.graphhopper.reader.OSMReaderTest.testFerry":115,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":166,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":167,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":32,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":132,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":48,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":362,"com.graphhopper.coll.CompressedArrayTest.testCompress":90,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":230,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":80,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":327,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":85,"com.graphhopper.GraphHopperTest.testPrepare":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":259,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":285,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":441,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":63,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":160,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":28,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":400,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":157,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":61,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":278,"com.graphhopper.coll.BitSetImplTest.testCopy":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":145,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":344,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":97,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":402,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":440,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":88,"com.graphhopper.GraphHopperTest.testLoadOSM":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":146,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":204,"com.graphhopper.reader.OSMReaderTest.testSort":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":247,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":348,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":297,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":263,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":340,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":255,"com.graphhopper.storage.RAMDataAccessTest.testHeader":464,"com.graphhopper.routing.DijkstraTest.initializationError":459,"com.graphhopper.storage.MMapDataAccessTest.testHeader":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":382,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":426,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":462,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":275,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":345,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":352,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":412,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":220,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":135,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":67,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":129,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":57,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":371,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":418,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":397,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":420,"com.graphhopper.coll.CompressedArrayTest.testCompress2":89,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":287,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":43,"com.graphhopper.GraphHopperAPITest.testLoad":113,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":401,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":205,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":279,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":270,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":156,"com.graphhopper.storage.LevelGraphStorageTest.testClone":406,"com.graphhopper.reader.OSMReaderTest.testBarriers":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":353,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":60,"com.graphhopper.util.GHUtilityTest.testCopy":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":218,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":232,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":442,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":479,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":27,"com.graphhopper.routing.PathTest.testFindInstruction":253,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":354,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":439,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":19,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":164,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":192,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":298,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":380,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":366,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":198,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":454,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":457,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":408,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":313,"com.graphhopper.util.InstructionListTest.testWayList2":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":150,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":303,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":30,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":188,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":264,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":410,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":34,"com.graphhopper.storage.RAMDirectoryTest.testSynched":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":363,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":59,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":269,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":119,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":467,"com.graphhopper.routing.AStarTest.initializationError":460,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":361,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":461,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":210,"com.graphhopper.routing.PathBidirRefTest.testExtract":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":242,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":422,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":473,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":137,"com.graphhopper.storage.RAMDataAccessTest.testCopy":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":388,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":241,"com.graphhopper.storage.RAMDataAccessTest.testSegments":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":68,"com.graphhopper.reader.OSMReaderTest.testMain":116,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":398,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":370,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":98,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":173,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":349,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":44,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":416,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":39,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":437,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":254,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":413,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":375,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":191,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":465,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":419,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":125,"com.graphhopper.storage.StorablePropertiesTest.testStore":451,"com.graphhopper.storage.GraphHopperStorageTest.testClone":272,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":178,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":281,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":389,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":314,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":392,"com.graphhopper.routing.PathTest.testTime":251,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":217,"com.graphhopper.util.BitUtilLittleTest.testToFloat":472,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":435,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":407,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":184,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":447,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":152,"com.graphhopper.reader.OSMReaderTest.testRelation":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":326,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":200,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":484,"com.graphhopper.GraphHopperTest.testFootOnly":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":224,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":176,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":444,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":450,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":102,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":322,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":477,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":458,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":466,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":153,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":91,"com.graphhopper.reader.OSMReaderTest.testWithBounds":124,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":201,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":328,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":14,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":403,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":199,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":374,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":177,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":367,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":268,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":475,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":54,"com.graphhopper.util.InstructionListTest.testWayList":161,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":240,"com.graphhopper.GraphHopperAPITest.testDisconnected179":114,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":315,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":376,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":196,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":169,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":342,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":110,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":274,"com.graphhopper.routing.util.EncodedValueTest.testSwap":38,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":378,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":237,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":291,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":65,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":261,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":181,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":433,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":350,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":75,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":37,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":262,"com.graphhopper.routing.PathTest.testWayList":252,"com.graphhopper.storage.MMapDataAccessTest.testCopy":469,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":341,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":76,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":468,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":373,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":245,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":284,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":206,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":359,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":103,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":417,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":104,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":45,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":194,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":453,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":331,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":99,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":244,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":130,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":448,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":480,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":189,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":346,"com.graphhopper.storage.MMapDirectoryTest.testSynched":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":214,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":187,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":368,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":233,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":481,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":415,"com.graphhopper.routing.PathTest.testFound":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":332,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":17,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":112,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":432,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":364,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":53,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":41,"com.graphhopper.util.InstructionListTest.testEmptyList":159,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":219,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":66,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":171,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":231,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":69,"com.graphhopper.reader.PrinctonReaderTest.testRead":168,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":133,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":360,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":307,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":369,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":6,"com.graphhopper.reader.OSMReaderTest.testFoot":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":330,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":476,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":107,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":436,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":108,"com.graphhopper.reader.OSMReaderTest.testOneWay":126,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":280,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":295,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":381,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":228,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":483,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":193,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":81,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":87,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":79,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":482,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":207,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":320,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":170,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":265,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":452,"com.graphhopper.routing.PathBidirRefTest.testExtract2":257,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":151,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":305,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":293,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":449,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":222,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":3,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":147,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":296,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":409,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":182,"com.graphhopper.GraphHopperTest.testFootAndCar":0,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":288,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":414,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":21,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":141,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":311,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":72,"com.graphhopper.GraphHopperTest.testPrepareOnly":109,"com.graphhopper.GraphHopperTest.testVia":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":309,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":122,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":393,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":163,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":292,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":208,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":323,"com.graphhopper.routing.AStarBidirectionTest.initializationError":456,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":185,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":431,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":429,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":347}}]
