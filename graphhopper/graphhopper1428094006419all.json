[{"failures":[],"tindex":"8bc9c425-da42-11e4-90f4-17801d63c857","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"8bcb4ac6-da42-11e4-90f4-1319ee055840","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"8bcb4ac7-da42-11e4-90f4-5f53804da273","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"8bcb4ac8-da42-11e4-90f4-27b39fb618f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"8bcb4ac9-da42-11e4-90f4-8fc6eda8daf6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"8bcb4aca-da42-11e4-90f4-4779ab9fbf79","variableMapping":{"value":"removed","numberOfBits":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-2},{"failures":[0,1,2],"tindex":"8bcb4acb-da42-11e4-90f4-338ebfbea270","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"8bcb71dc-da42-11e4-90f4-c9b2fa52d5f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"8bcb71dd-da42-11e4-90f4-7dcf264d158a","variableMapping":{"segmentSizeInBytes":"maxCount","index":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":0},{"failures":[3],"tindex":"8bcb71de-da42-11e4-90f4-610dfd06a171","variableMapping":{"systemProperty":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"8bcb71df-da42-11e4-90f4-f9959f86049d","variableMapping":{"wayIndex":"nextNodeBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:263","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"8bcb71e0-da42-11e4-90f4-cfa7b02f9883","variableMapping":{"latSize":"skippedEdge1","size":"skippedEdge1","lonSize":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":0},{"failures":[4,5,0,6],"tindex":"8bcb71e1-da42-11e4-90f4-159e757a34f3","variableMapping":{"osmFile":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[],"tindex":"8bcb71e2-da42-11e4-90f4-159fd39cb88e","variableMapping":{"angle":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[],"tindex":"8bcb71e3-da42-11e4-90f4-d9acdd57928a","variableMapping":{"baseUrl":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[7,8],"tindex":"8bcb71e4-da42-11e4-90f4-fdea5236b445","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"8bcb71e5-da42-11e4-90f4-c351c68e8ede","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"8bcb71e6-da42-11e4-90f4-ebe4f689e864","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[],"tindex":"8bcb71e7-da42-11e4-90f4-37b2ffb14e3b","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"8bcb71e8-da42-11e4-90f4-59d5ea4791c2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,4,22,23,24,25,26,27,28,29,30,31,32,5,0,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,47,48,49,50,51,52,53,54,1,2,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"tindex":"8bcb98f9-da42-11e4-90f4-81038d85378c","variableMapping":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[11,18],"tindex":"8bcb98fa-da42-11e4-90f4-016c03c07d61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,4,22,23,24,25,26,27,28,29,30,31,32,5,0,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,47,48,49,50,51,52,53,54,1,2,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,319,118,119,120,121,122,123,320,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,321,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,322,323,324,325,326,327,328,329,330,331,332,169,333,334,335,336,337,338,339,340,341,342,343,344,345,346,170,347,348,349,350,351,352,353,354,355,356,357,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,358,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,359],"tindex":"8bcb98fb-da42-11e4-90f4-dfdcc31458e8","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"8bcbc00c-da42-11e4-90f4-f1722fc1ee27","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"8bcbc00d-da42-11e4-90f4-6fdf7db3dd22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"8bcbc00e-da42-11e4-90f4-1d00f2c23977","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"8bcbc00f-da42-11e4-90f4-276e57f45580","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"8bcbc010-da42-11e4-90f4-27dee9a68845","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,4,22,23,24,25,26,27,28,29,30,31,32,5,0,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,54,1,2,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"tindex":"8bcbc011-da42-11e4-90f4-c99f8fb45122","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"8bcbc012-da42-11e4-90f4-9bd27a919ba9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[11,12,13,14,15,17,18,59,61,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,112,113],"tindex":"8bcbe723-da42-11e4-90f4-235107fc0bb3","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-1},{"failures":[28,360,361,362,363,364,365,366,367,3,368,369,370,371,372,373,374,375,376,377,378,379,380,381],"tindex":"8bcbe724-da42-11e4-90f4-2f2fe10b29a6","variableMapping":{"nanoTime":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[9,11,15,16,17,19,23,26,27,382,383,384,35,41,42,45,48,49,93,100,101,102,103,106,385,386,387,388,389,128,130,154,156,176,179,183,204,210,215,217,221,223,227,248,254,259,261,266,270,291,297,302,304,390,391,392],"tindex":"8bcbe725-da42-11e4-90f4-9b3ede8ccb94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,4,22,23,24,25,26,27,28,29,30,31,32,5,393,0,360,361,362,394,363,364,365,395,366,7,396,8,397,398,399,400,401,402,6,403,367,3,368,404,369,370,371,372,373,405,374,406,375,376,377,378,379,407,380,408,381,409,103],"tindex":"8bcbe726-da42-11e4-90f4-49410756f8f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"8bcbe727-da42-11e4-90f4-9df643e1e10a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"8bcbe728-da42-11e4-90f4-5db0c222362e","variableMapping":{"offset":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"8bcbe729-da42-11e4-90f4-693982c06f96","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"err","nodeId":"sLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-2},{"failures":[10,11,12,13,15,16,17,18,4,23,24,25,26,27,28,29,30,31,32,5,0,410,411,412,413,414,382,383,384,35,42,45,48,49,93,100,101,102,103,106,385,386,387,388,389,128,130,144,145,146,147,148,154,156,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,170,347,348,349,350,351,352,353,354,355,356,357,179,183,204,210,215,217,415,416,221,358,223,227,248,254,259,261,266,270,291,297,302,304,417,418,419,420],"tindex":"8bcbe72a-da42-11e4-90f4-e9f01b7c38d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"8bcbe72b-da42-11e4-90f4-8544314b0192","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[11,12,13,14,15,17,18,20,21,4,22,23,25,28,29,30,31,32,0,38,41,421,422,423,424,398,399,6,425,53,55,56,426,427,428,59,61,62,67,68,69,72,73,74,78,81,84,86,87,96,103,109,111,112,322,323,324,331,169,345,349,352,356,179,183,184,185,192,194,207,212,215,219,221,223,227,228,229,236,238,251,256,259,263,266,270,271,272,279,281,294,299,302,306],"tindex":"8bcbe72c-da42-11e4-90f4-e1e036897547","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[4,400],"tindex":"8bcc0e3d-da42-11e4-90f4-e98cf12e91a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[11,12,15,61,67,72,74,75,76,77,78,80,81,83,84,85,86,87,88,89,90,92,93,94,95,96,113],"tindex":"8bcc0e3e-da42-11e4-90f4-43e543c72090","variableMapping":{"alreadyRun":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"8bcc0e3f-da42-11e4-90f4-4b22285a3f26","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[2],"tindex":"8bcc0e40-da42-11e4-90f4-a72c237edfe0","variableMapping":{"workerThreads":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[1,2,97,98,105,107,109,110],"tindex":"8bcc0e41-da42-11e4-90f4-a92a55c59400","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[58],"tindex":"8bcc0e42-da42-11e4-90f4-23d1a5ba3732","variableMapping":{"delta_lat":"fwdDecline","r_lat":"fwdDecline","a_lat":"fwdDecline","delta_lon":"fwdDecline","r_lon":"fwdDecline","a_lon":"fwdDecline","norm":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[],"tindex":"8bccf8a3-da42-11e4-90f4-a5a418a6ea35","variableMapping":{"tmp":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"8bccf8a4-da42-11e4-90f4-d953b944ff9b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"8bccf8a5-da42-11e4-90f4-cfec791eead6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"8bccf8a6-da42-11e4-90f4-599bcbe3e389","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:502","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[4,5,0,400,6],"tindex":"8bccf8a7-da42-11e4-90f4-6b3b4176bcd5","variableMapping":{"val":"motorcarTag","existing":"motorcarTag","key":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[],"tindex":"8bccf8a8-da42-11e4-90f4-5957d354d265","variableMapping":{"algo":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[9,10,11,12,15,16,18,61,63,67,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,149,171],"tindex":"8bccf8a9-da42-11e4-90f4-cf8b26a2fad9","variableMapping":{"reverseOrder":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:126","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[28,362,364,367,3,372,373,378,379],"tindex":"8bccf8aa-da42-11e4-90f4-6b0f139e05fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[429,430,431],"tindex":"8bccf8ab-da42-11e4-90f4-bf3ff3241ddf","variableMapping":{"maxMCSpeed":"costs","speed":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[],"tindex":"8bcd1fbc-da42-11e4-90f4-bb00c57dc77b","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"8bcd1fbd-da42-11e4-90f4-cb92cdb99f3a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"8bcd1fbe-da42-11e4-90f4-e3cc5789432b","variableMapping":{"high":"minutes","guess":"minutes","low":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":0},{"failures":[],"tindex":"8bcd1fbf-da42-11e4-90f4-6b0e68e61772","variableMapping":{"size":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[9,19,23],"tindex":"8bcd1fc0-da42-11e4-90f4-01c723e56a5b","variableMapping":{"str":"key","name":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[20,21,38,41,48,432,433,434,425,435,436,53,55,56,61,62,67,69,72,73,74,83,84,86,87,96,106,109,111,112,119,125,142,168,322,323,324,330,331,169,337,345,349,352,356,175,179,183,184,185,191,192,194,199,207,212,215,219,221,223,227,228,229,235,236,238,243,251,256,259,263,266,270,271,272,278,279,281,286,294,299,302,306],"tindex":"8bcd1fc1-da42-11e4-90f4-8797d3b62a79","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"8bcd1fc2-da42-11e4-90f4-21be645e95aa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8bcd1fc3-da42-11e4-90f4-9301bc6a4522","variableMapping":{"calcMean":"empty","eleCalcMean":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:75","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[],"tindex":"8bcd1fc4-da42-11e4-90f4-d9581880c1e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[28,437],"tindex":"8bcd1fc5-da42-11e4-90f4-9fdfd101ff5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"8bcd1fc6-da42-11e4-90f4-7f4812fb2d14","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[8],"tindex":"8bcd1fc7-da42-11e4-90f4-2788cd705bef","variableMapping":{"len":"acceptBit","start":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[362],"tindex":"8bcd1fc8-da42-11e4-90f4-7507897af39b","variableMapping":{"bytePos":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"8bcd1fc9-da42-11e4-90f4-7f5647b8247e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"8bcd1fca-da42-11e4-90f4-efd0fcf6480a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"8bcd1fcb-da42-11e4-90f4-5576b9351286","variableMapping":{"ar_y":"minLat","ab_y":"minLat","ar_x":"minLat","ab_x":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"8bcd1fcc-da42-11e4-90f4-098b24628c01","variableMapping":{"neighborUpdates":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":0},{"failures":[9,11,12,13,15,17,18,4,23,24,25,26,27,28,29,30,31,32,5,0,35,39,42,45,48,93,101,102,106,438,439,440,385,386,387,388,389,128,130,154,156,322,342,170,347,352,355,179,183,204,210,215,218,441,221,223,227,248,254,259,262,266,270,291,297,302,305,442,443,444,445,446,447,418,448,449,450,451,452,453,420,311,316,317,318],"tindex":"8bcd1fcd-da42-11e4-90f4-691d0ef3f2b9","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[135,161],"tindex":"8bcd46de-da42-11e4-90f4-7b023533b714","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":-1},{"failures":[170],"tindex":"8bcd46df-da42-11e4-90f4-afa060d16353","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"8bcd46e0-da42-11e4-90f4-fd65a6e86b24","variableMapping":{"conn":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:92","type":"CtInvocationImpl","sourcecode":"java.net.HttpURLConnection.setDoOutput(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[454],"tindex":"8bcd46e1-da42-11e4-90f4-ab30c2a4195d","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-1},{"failures":[],"tindex":"8bcd46e2-da42-11e4-90f4-87cad29791e0","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-2},{"failures":[65,67,71,82,455],"tindex":"8bcd46e3-da42-11e4-90f4-2bf1185b8179","variableMapping":{"index":"size","entrySize":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:294","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"8bcd46e4-da42-11e4-90f4-1dbad613aa61","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[53,2,324,333,334,336,340,341,347,348,185,195,196,198,202,203,210,211,229,239,240,242,246,247,254,255,272,282,283,285,289,290,297,298],"tindex":"8bcd46e5-da42-11e4-90f4-c1be3f079d9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"8bcd46e6-da42-11e4-90f4-1d0ed643cc18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"8bcd46e7-da42-11e4-90f4-f1434d50b608","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,4,22,23,24,25,26,27,28,29,30,31,32,5,0,412,413,414,456,382,383,384,34,35,37,38,39,40,41,42,44,45,48,49,57,58,93,100,101,102,103,106,385,386,387,388,389,128,129,130,154,155,156,170,176,179,180,183,204,210,215,218,441,221,223,224,227,248,254,259,262,266,267,270,291,297,302,305,442,443,457,446,448,449,458,452,392],"tindex":"8bcd46e8-da42-11e4-90f4-4790505da0aa","variableMapping":{"oldValueIndex":"todoBytes","lastKey":"todoBytes","key":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[361,363,364,365,367,3,368,371,373,374,377,379,380],"tindex":"8bcd46e9-da42-11e4-90f4-7503ff21d55a","variableMapping":{"i":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"8bcd46ea-da42-11e4-90f4-2719b77952f2","variableMapping":{"maxTurnCosts":"maxTurnCosts","costs":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":0},{"failures":[],"tindex":"8bcd46eb-da42-11e4-90f4-1b1c1129dc23","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"8bcd46ec-da42-11e4-90f4-43ba1a7ebce5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"8bcd46ed-da42-11e4-90f4-a997afff9651","variableMapping":{"red":"index","green":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":0},{"failures":[],"tindex":"8bcd46ee-da42-11e4-90f4-49da65cad6de","variableMapping":{"from":"index","hash":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":0},{"failures":[],"tindex":"8bcd6cff-da42-11e4-90f4-0733bb717389","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"8bcd6d00-da42-11e4-90f4-e9fdc8e532e8","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[363,364,365,3,368,371,373,374,377,379,380],"tindex":"8bcd6d01-da42-11e4-90f4-094b3afe678a","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"8bcd6d02-da42-11e4-90f4-79b8ee64709a","variableMapping":{"bytesForFlags":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[58],"tindex":"8bcd6d03-da42-11e4-90f4-a7dbd36523e6","variableMapping":{"tmp":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"8bcd6d04-da42-11e4-90f4-ed7c6a3c99b3","variableMapping":{"endIndexPlusOne":"maxTurnCosts","frontIndex":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[],"tindex":"8bcd6d05-da42-11e4-90f4-83e3ffd21626","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"hash","entityType":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":209,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":91,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":176,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":409,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":323,"com.graphhopper.reader.OSMReaderTest.testFerry":4,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":109,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":372,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":155,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":10,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":220,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":237,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":411,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":417,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":63,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":342,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":151,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":458,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":69,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":353,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":59,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":83,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":100,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":143,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":368,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":98,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":55,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":81,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":129,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":221,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":183,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":72,"com.graphhopper.GraphHopperTest.testLoadOSM":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":136,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":130,"com.graphhopper.reader.OSMReaderTest.testSort":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":1,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":224,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":443,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":300,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":354,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":41,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":258,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":441,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":208,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":277,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":358,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":377,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":227,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":159,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":87,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":150,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":77,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":185,"com.graphhopper.coll.OSMIDMapTest.testGetLong":388,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":247,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":200,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":179,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":202,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":290,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":238,"com.graphhopper.GraphHopperAPITest.testLoad":112,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":311,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":423,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":282,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":272,"com.graphhopper.storage.LevelGraphStorageTest.testClone":187,"com.graphhopper.reader.OSMReaderTest.testBarriers":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":228,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":431,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":80,"com.graphhopper.util.GHUtilityTest.testCopy":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":327,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":168,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":319,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":404,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":453,"com.graphhopper.routing.PathTest.testFindInstruction":49,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":229,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":111,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":396,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":216,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":115,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":301,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":286,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":65,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":242,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":189,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":328,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":318,"com.graphhopper.util.InstructionListTest.testWayList2":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":349,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":137,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":371,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":370,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":57,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":267,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":191,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":430,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":239,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":79,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":271,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":26,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":93,"com.graphhopper.coll.OSMIDMapTest.testGet":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":236,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":8,"com.graphhopper.routing.PathBidirRefTest.testExtract":50,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":204,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":163,"com.graphhopper.storage.RAMDataAccessTest.testCopy":448,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":347,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":427,"com.graphhopper.storage.RAMDataAccessTest.testSegments":452,"com.graphhopper.util.GHUtilityTest.testSort2":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":88,"com.graphhopper.reader.OSMReaderTest.testMain":23,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":406,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":207,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":351,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":194,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":198,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":219,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":38,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":251,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":310,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":201,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":5,"com.graphhopper.storage.StorablePropertiesTest.testStore":392,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":391,"com.graphhopper.storage.GraphHopperStorageTest.testClone":274,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":350,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":6,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":284,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":401,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":171,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":395,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":329,"com.graphhopper.routing.PathTest.testTime":47,"com.graphhopper.util.BitUtilLittleTest.testToFloat":439,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":217,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":188,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":139,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":341,"com.graphhopper.util.GHUtilityTest.testSortDirected":108,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":447,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":37,"com.graphhopper.GraphHopperTest.testFootOnly":18,"com.graphhopper.util.BitUtilLittleTest.testToInt":440,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":400,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":158,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":337,"com.graphhopper.search.NameIndexTest.testCreate":384,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":451,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":34,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":314,"com.graphhopper.routing.QueryGraphTest.testOneWay":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":140,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":128,"com.graphhopper.reader.OSMReaderTest.testWithBounds":32,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":420,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":408,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":343,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":360,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":184,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":394,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":369,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":250,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":125,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":243,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":270,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":74,"com.graphhopper.util.BitUtilLittleTest.testToBitString":438,"com.graphhopper.util.InstructionListTest.testWayList":101,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":303,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":415,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":405,"com.graphhopper.GraphHopperAPITest.testDisconnected179":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":330,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":325,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":2,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":356,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":70,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":294,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":68,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":374,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":166,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":375,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":265,"com.graphhopper.routing.PathTest.testWayList":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":333,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":399,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":454,"com.graphhopper.coll.OSMIDMapTest.testGet2":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":96,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":212,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":249,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":287,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":234,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":275,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":160,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":161,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":449,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":428,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":363,"com.graphhopper.util.GHUtilityTest.testSort":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":346,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":426,"com.graphhopper.search.NameIndexTest.testPut":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":263,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":273,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":117,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":153,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":122,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":378,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":58,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":120,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":422,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":413,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":53,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":317,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":197,"com.graphhopper.routing.PathTest.testFound":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":170,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":19,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":362,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":214,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":173,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":240,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":383,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":169,"com.graphhopper.util.InstructionListTest.testEmptyList":99,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":279,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":82,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":86,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":424,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":89,"com.graphhopper.reader.PrinctonReaderTest.testRead":20,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":302,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":156,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":332,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":322,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":245,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":437,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":376,"com.graphhopper.reader.OSMReaderTest.testFoot":22,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":345,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":134,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":218,"com.graphhopper.reader.OSMReaderTest.testOneWay":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":135,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":283,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":298,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":257,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":446,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":407,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":71,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":402,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":62,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":123,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":445,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":335,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":36,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":268,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":393,"com.graphhopper.routing.PathBidirRefTest.testExtract2":51,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":315,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":73,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":138,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":365,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":456,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":296,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":320,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":357,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":131,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":299,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":190,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":291,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":364,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":167,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":326,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":429,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":231,"com.graphhopper.GraphHopperTest.testPrepareOnly":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":92,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":324,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":30,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":175,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":103,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":295,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":433,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":338,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":403,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":213,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":211,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":223}}]
