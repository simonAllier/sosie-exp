[{"failures":[],"tindex":"bff3b2e4-db85-11e4-9dc1-45dc6cc9727b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"bff51275-db85-11e4-9dc1-bd7b1ec2d699","variableMapping":{"a_lon_deg":"maxLon","factor":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"bff53986-db85-11e4-9dc1-93dd62823709","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failures":[4,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,20,21,22,23,24,25,26,27,28,29,30,31,32,163,33,37,38,39,40,41,42,43,44,45,46,47],"tindex":"bff53987-db85-11e4-9dc1-c14df644f42e","variableMapping":{"high":"acceptBit","guess":"acceptBit","low":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"bff53988-db85-11e4-9dc1-0732668d102a","variableMapping":{"segmentSizePower":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[164,165,166,167,168,169,170,171,172,173],"tindex":"bff53989-db85-11e4-9dc1-9992baab7377","variableMapping":{"bytePos":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-1},{"failures":[],"tindex":"bff5398a-db85-11e4-9dc1-5944008c0acf","variableMapping":{"message":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"bff5398b-db85-11e4-9dc1-0bbde5f7d83c","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[26,174,175,58,59,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,87,193,194,195,196,197,198,89,91,93,96,97,110,112,114,117,118],"tindex":"bff5398c-db85-11e4-9dc1-79ecbeea059b","variableMapping":{"arrayLength":"indexDivisor","maxGeoRef":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"bff5398d-db85-11e4-9dc1-f1436f80c35a","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[199,200,144,201,202,203,153,204,205,154,155,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,7,227,228,229,42,46,230,231,232,233,70,182,234,71,72,235,236,237,73,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,74,258,259,260,261,262,75,263,264,265,266,76,267,77,78,268,269,270,79,80,271,272,273,81,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,82,294,295,296,297,298,83,299,300,301,302,84,303,85,86,304,305,306,183,184,307,185,308,309,310,311,312,186,313,314,187,315,188,189,316,190,191,317,318,319,320,192,321,87,193,194,322,195,323,196,324,325,326,197,198,327,328,329,330,331,100,332,333,101,102,334,335,336,103,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,104,357,358,359,360,361,105,362,363,364,365,106,366,107,108,367,368],"tindex":"bff5609e-db85-11e4-9dc1-f321173961a7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[369,132,136,149],"tindex":"bff5609f-db85-11e4-9dc1-05120a965034","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"bff560a0-db85-11e4-9dc1-2355a817b776","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"bff560a1-db85-11e4-9dc1-b9231be77976","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"bff560a2-db85-11e4-9dc1-798c21adf586","variableMapping":{"edgeId":"i","nextEdge":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,43,44,45,46,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,68,70,71,79,101],"tindex":"bff6c033-db85-11e4-9dc1-b9ac7c1b9e1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[216,164,165,370,371,372,373,374,375,376,377,378,166,167,168,169,171,172,379,380,173],"tindex":"bff6c034-db85-11e4-9dc1-c3565c1b53d1","variableMapping":{"shift":"hash","tmpValue":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"bff6c035-db85-11e4-9dc1-23c34d9e388c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"bff6c036-db85-11e4-9dc1-9969581a689e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"bff6c037-db85-11e4-9dc1-6b22f88b51bc","variableMapping":{"resultOrientation":"fwdFaster","orientation":"fwdFaster","java.lang.Math.PI":"fwdFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[37,47],"tindex":"bff6c038-db85-11e4-9dc1-ad1ff354b1ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"bff6c039-db85-11e4-9dc1-a9bb3a067033","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:143","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"},"status":-2},{"failures":[381],"tindex":"bff6c03a-db85-11e4-9dc1-63e292f978d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[],"tindex":"bff6c03b-db85-11e4-9dc1-0719649ef240","variableMapping":{"incEleSum":"minLat","incDist2DSum":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"bff6e74c-db85-11e4-9dc1-559a6128ae9f","variableMapping":{"keys":"keys","i":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":0},{"failures":[],"tindex":"bff6e74d-db85-11e4-9dc1-43af28ddf391","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:159","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"bff6e74e-db85-11e4-9dc1-9d31e109cfb9","variableMapping":{"bytePos":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[4,127,156,160,32],"tindex":"bff6e74f-db85-11e4-9dc1-65f6d1e7976b","variableMapping":{"fwdFaster":"speed","incDist2DSum":"speed","fwdSlower":"speed","fullDist2D":"speed","restDist2D":"speed","speed":"speed","decDist2DSum":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"bff6e750-db85-11e4-9dc1-27744d4f12b2","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT_STORE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[4,382],"tindex":"bff6e751-db85-11e4-9dc1-c7316e580a3e","variableMapping":{"str":"str","name":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"bff6e752-db85-11e4-9dc1-c5b895c7c99d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[4,121,122,383,123,384,385,386,387,124,388,125,126,127,389,128,390,129,130,131,132,391,392,393,394,133,395,134,396,135,136,397,137,138,398,399,400,401,139,402,140,403,141,142,143,5,404,145,405,146,147,148,149,406,407,408,409,150,410,151,411,152,201,153,154,155,412,413,156,157,158,159,160,161,162,414,20,21,22,23,24,25,26,27,28,415,29,30,31,32,163,33,416,417,37,38,39,40,41,42,43,44,45,46,47],"tindex":"bff6e753-db85-11e4-9dc1-d5d9efde6efb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[418,216,224,10,39,42],"tindex":"bff6e754-db85-11e4-9dc1-3f8aad651947","variableMapping":{"minLon":"lat","maxLat":"lat","minLat":"lat","maxLon":"lat","lon":"lat","lat":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:158","type":"CtReturnImpl","sourcecode":"return (((double < (double)) && (double >= (double))) && (double < (double))) && (double >= (double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-1},{"failures":[],"tindex":"bff6e755-db85-11e4-9dc1-1f57553c5075","variableMapping":{"origEdgeId":"com.graphhopper.util.EdgeIterator.NO_EDGE","mainEdges":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[207,217],"tindex":"bff6e756-db85-11e4-9dc1-fd4b92acbb19","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[6],"tindex":"bff6e757-db85-11e4-9dc1-f789702ced89","variableMapping":{"resultOrientation":"fullDist2D","orientation":"fullDist2D","java.lang.Math.PI":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[123,124,129,131,133,137,138,139,146,148,150],"tindex":"bff6e758-db85-11e4-9dc1-47e87f593dfa","variableMapping":{"str":"wayTypeName","nodeCount":"wayType","base":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1344","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.RuntimeException((\"Base node problem with edge \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[122,123,130,131,138,147,148],"tindex":"bff6e759-db85-11e4-9dc1-370754ded915","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[419,420,0,421,422,423,424,425,1,2,3,4,426,427,428,429,430,431,432,381,433,5,6,203,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,7,227,228,229,8,8,9,9,450,450,10,10,11,11,12,12,13,13,14,14,15,15,451,451,16,16,17,17,452,453,18,19,20,21,22,23,24,25,26,27,28,415,29,30,31,32,163,33,454,455,456,174,175,34,35,36,37,38,39,40,41,42,43,44,45,46,47,457,458,48,49,50,51,52,53,54,55,56,459,460,461,462,463,464,230,465,57,58,59,60,176,61,466,467,468,469,470,471,231,371,472,62,63,64,473,372,474,373,374,475,476,477,478,479,480,232,481,482,483,375,484,65,66,67,485,376,486,377,378,487,488,489,490,491,492,233,68,493,494,177,495,496,178,497,179,498,499,180,181,500,501,69,70,182,234,71,72,235,236,73,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,74,258,259,260,261,262,75,263,264,265,266,76,267,77,78,268,269,502,270,79,80,271,272,81,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,82,294,295,296,297,298,83,299,300,301,302,84,303,85,86,304,305,503,504,505,506,507,508,509,510,511,512,513,514,515,516,306,183,184,307,185,308,309,310,311,312,186,313,314,187,315,188,189,316,190,191,317,318,319,320,192,321,87,193,194,322,195,323,196,324,325,326,197,198,88,89,90,517,91,92,518,93,94,95,96,97,98,99,327,328,329,330,331,100,332,333,101,102,334,335,103,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,104,357,358,359,360,361,105,362,363,364,365,106,366,107,108,367,368,519,520,521,522,523,524,525,526,527,528,529,530,109,110,111,531,112,113,532,114,115,116,117,118,119,120],"tindex":"bff70e6a-db85-11e4-9dc1-ef6ceecf34d4","variableMapping":{"err":"segmentSizeInBytes","dLat":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"bff70e6b-db85-11e4-9dc1-25c2bf44e44d","variableMapping":{"eleDelta":"speed","decEleSum":"speed","fullDist2D":"speed","decDist2DSum":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":0},{"failures":[438,440,444,446,447,448,449,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,7,227,228,229,37,38,39,40,43,44,46],"tindex":"bff70e6c-db85-11e4-9dc1-ad4b342874cd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[0,1,2,3,427,428,429,430,431,432,381,434,435,438,439,440,441,442,444,446,448,449,207,209,210,213,217,218,222,224,226,7,227,229,11,454,457,458,70,71,238,239,242,246,253,255,260,262,264,266,268,79,274,275,278,282,289,291,296,298,300,302,304,183,184,308,312,189,190,192,87,322,323,197,101,337,338,341,345,352,354,359,361,363,365,367],"tindex":"bff70e6d-db85-11e4-9dc1-b7935d2470f8","variableMapping":{"tmpDegreeCounter":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[144],"tindex":"bff70e6e-db85-11e4-9dc1-ed34d5c9e867","variableMapping":{"high":"encoded","guess":"encoded","low":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[144],"tindex":"bff7357f-db85-11e4-9dc1-ab46c7c3f7c8","variableMapping":{"weightLong":"encoded","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[533,39,40,41,42,43,45,46,457,458],"tindex":"bff73580-db85-11e4-9dc1-8f7b74c028e2","variableMapping":{"sacScale":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-1},{"failures":[429,381,433],"tindex":"bff73581-db85-11e4-9dc1-afeaaad468bb","variableMapping":{"segmentSizeInBytes":"start","index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"bff73582-db85-11e4-9dc1-1f864d5de0d3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"bff73583-db85-11e4-9dc1-cf12ea36fc71","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[419,420,0,421,422,423,424,425,1,2,3,4,426,427,428,429,430,431,432,381,433,5,6,203,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,7,227,228,229,8,9,450,10,11,12,13,14,15,451,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,454,455,456,37,38,39,40,41,42,43,44,45,46,47,457,458,459,460,461,462,464,230,57,58,59,60,61,466,467,468,469,471,231,371,472,62,63,64,473,372,474,373,374,475,476,477,478,480,232,481,482,483,375,484,65,66,67,485,376,486,377,378,487,488,489,490,492,233,70,234,71,72,235,236,73,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,74,258,259,260,261,262,75,263,264,265,266,76,267,77,78,268,269,270,79,80,271,272,81,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,82,294,295,296,297,298,83,299,300,301,302,84,303,85,86,304,305,507,508,511,514,313,87,327,328,329,330,331,100,332,333,101,102,334,335,103,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,104,357,358,359,360,361,105,362,363,364,365,106,366,107,108,367,368],"tindex":"bff73584-db85-11e4-9dc1-d782206f08c2","variableMapping":{"node":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"bff73585-db85-11e4-9dc1-91f651e6f866","variableMapping":{"red":"removed","green":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"bff73586-db85-11e4-9dc1-1bb937c69441","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:398","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) == null)\n    throw new java.lang.IllegalStateException(\"Graph not initialized\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":0},{"failures":[],"tindex":"bff73587-db85-11e4-9dc1-6d5757277cd6","variableMapping":{"minResolutionInMeter":"locs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[331],"tindex":"bff73588-db85-11e4-9dc1-fd8235fbb5e5","variableMapping":{"size":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-1},{"failures":[419,420,0,421,422,423,424,425,1,2,3,4,426,427,428,429,430,431,432,381,433,5,6,203,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,7,227,228,229,8,8,9,9,450,450,10,10,11,11,12,12,13,13,14,14,15,15,451,451,16,16,17,17,452,453,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,454,455,456,37,39,40,41,42,43,44,45,46,47,457,458,459,460,461,462,464,230,465,57,58,59,60,61,466,467,468,469,471,231,371,472,62,63,64,473,372,474,373,374,475,476,477,478,480,232,481,482,483,375,484,65,66,67,485,376,486,377,378,487,488,489,490,492,233,70,234,71,72,235,248,270,79,80,271,284,514,313,329,100,333,101,102,334,347],"tindex":"bff75c99-db85-11e4-9dc1-1d93fa4baeac","variableMapping":{"red":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"bff75c9a-db85-11e4-9dc1-e3c42d120d41","variableMapping":{"endIndexPlusOne":"maxTurnCosts","frontIndex":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[],"tindex":"bff75c9b-db85-11e4-9dc1-55b4f64797c8","variableMapping":{"turnCostIndex":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","NO_TURN_ENTRY":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"bff75c9c-db85-11e4-9dc1-e1c75905c979","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"bff75c9d-db85-11e4-9dc1-d3fcb80e920d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"bff75c9e-db85-11e4-9dc1-b9ffe00da035","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:502","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[164,165,166,167,168,169,170,171,172,173],"tindex":"bff75c9f-db85-11e4-9dc1-3ff47b0e9608","variableMapping":{"fwdFaster":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"bff75ca0-db85-11e4-9dc1-7b9f31a3a767","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[534,535,536,2,3,7,9,12,15,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,37,40,41,43,45,46,52,53,54,55,56,64,67,68,70,71,73,74,75,76,78,79,81,82,83,84,86,508,514,515,516,306,318,87,193,196,326,91,92,93,96,97,98,99,101,103,104,105,106,108,112,113,114,117,118,119,120],"tindex":"bff75ca1-db85-11e4-9dc1-955ff0c80511","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[207],"tindex":"bff75ca2-db85-11e4-9dc1-8d0c99b55811","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeFlagEncoder.reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"bff75ca3-db85-11e4-9dc1-db56656fb07c","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[429,381,433],"tindex":"bff75ca4-db85-11e4-9dc1-e56de9cc76cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[],"tindex":"bff81ff5-db85-11e4-9dc1-b7cfda844b73","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-2},{"failures":[0,1,2,3,427,428,429,430,431,432,381,434,435,438,439,440,441,442,444,446,448,449,207,209,210,211,212,213,214,215,216,217,221,222,223,224,226,7,227,228,229,11,454,455,457,458,230,231,232,233,70,71,238,239,241,242,246,253,255,260,262,264,266,268,79,274,275,277,278,282,289,291,296,298,300,302,304,183,184,185,308,312,189,190,192,87,322,323,197,101,337,338,340,341,345,352,354,359,361,363,365,367],"tindex":"bff81ff6-db85-11e4-9dc1-9dcd7df633a4","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[216,221,224,24,42,46,457,458,164,165,370,371,62,64,473,372,474,373,374,475,476,477,478,480,232,481,482,375,65,67,485,376,486,377,378,487,488,489,490,492,233,166,167,168,169,171,172,379,380,173],"tindex":"bff81ff7-db85-11e4-9dc1-694c43de5ce1","variableMapping":{"bm":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[123,124,129,131,133,137,138,139,146,148,150],"tindex":"bff81ff8-db85-11e4-9dc1-17b5f29d34f4","variableMapping":{"line":"pavementName","lon":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String.substring(3, 4).charAt(0)) == 'W')\n    int = -int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[438,448,208,226,7,227,229,329,331],"tindex":"bff84709-db85-11e4-9dc1-2d32e572439c","variableMapping":{"turnCosts":"weight","weight":"weight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[126,128,129,131,133,135,141,144,145,146,148,150,152,204,42,230,231,232,233,245,281,311,344],"tindex":"bff8470a-db85-11e4-9dc1-4598f53f1dc5","variableMapping":{"high":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[419,420,0,421,422,423,424,425,1,2,3,4,426,427,428,429,430,431,432,381,433,5,6,203,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,7,227,228,229,8,8,9,9,450,450,10,10,11,11,12,12,13,13,14,14,15,15,451,451,16,16,17,17,452,453,18,19,20,21,22,23,24,25,26,27,28,415,29,30,31,32,163,33,454,455,456,174,174,175,175,34,35,36,37,38,39,40,41,42,43,537,44,45,46,47,538,457,458,48,49,50,51,52,53,54,55,56,459,460,461,462,463,464,230,465,57,58,59,60,176,61,466,467,468,469,470,471,231,371,472,62,63,64,473,372,474,373,374,475,476,477,478,479,480,232,481,482,483,375,484,65,66,67,485,376,486,377,378,487,488,489,490,491,492,233,69,539,540,70,182,234,71,72,235,236,237,73,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,74,258,259,260,261,262,75,263,264,265,266,76,267,77,78,268,269,541,542,502,270,79,80,271,272,273,81,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,82,294,295,296,297,298,83,299,300,301,302,84,303,85,86,304,305,543,544,503,306,183,184,307,185,308,309,310,311,312,186,313,314,187,315,188,189,316,190,191,317,318,319,320,192,321,87,193,194,322,195,323,196,324,325,326,197,198,327,328,329,330,331,100,332,333,101,102,334,335,336,103,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,104,357,358,359,360,361,105,362,363,364,365,106,366,107,108,367,368],"tindex":"bff8470b-db85-11e4-9dc1-a3207653d347","variableMapping":{"dataAccess":"location","com.graphhopper.storage.DAType.MMAP":"type","com.graphhopper.storage.DAType.UNSAFE_STORE":"type","type":"type","com.graphhopper.storage.DAType.RAM_STORE":"type","com.graphhopper.storage.DAType.RAM":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:165","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"MMAP\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[],"tindex":"bff8470c-db85-11e4-9dc1-cde91e24d44b","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"bff8470d-db85-11e4-9dc1-69ffbb2690bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"bff8470e-db85-11e4-9dc1-0f3ccaeb9b52","variableMapping":{"speedVal":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":0},{"failures":[],"tindex":"bff8470f-db85-11e4-9dc1-d5d0cbdf198d","variableMapping":{"need":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[545,20],"tindex":"bff86e20-db85-11e4-9dc1-3133662688b6","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"bff86e21-db85-11e4-9dc1-f75a43cc8593","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[429,381,433],"tindex":"bff86e22-db85-11e4-9dc1-b139e8cee4cc","variableMapping":{"tmpEntries":"component"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[],"tindex":"bff86e23-db85-11e4-9dc1-13ff2d8770b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"bff86e24-db85-11e4-9dc1-21a143691eed","variableMapping":{"nodeFlags":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-2},{"failures":[],"tindex":"bff86e25-db85-11e4-9dc1-ed61ac122cf1","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"bff86e26-db85-11e4-9dc1-0defb108df2a","variableMapping":{"size":"nodes","from":"nodes","end":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":0},{"failures":[419,420,0,421,422,423,424,425,1,2,3,4,426,427,428,429,430,431,432,381,433,5,6,203,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,7,227,228,229,8,8,9,9,450,450,10,10,11,11,12,12,13,13,14,14,15,15,451,451,16,16,17,17,452,453,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,454,455,456,37,39,40,41,42,43,44,45,46,47,457,458,459,460,461,462,464,230,465,57,58,59,60,61,466,467,468,469,471,231,371,472,62,63,64,473,372,474,373,374,475,476,477,478,480,232,481,482,483,375,484,65,66,67,485,376,486,377,378,487,488,489,490,492,233,70,234,71,72,235,236,73,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,74,258,259,260,261,262,75,263,264,265,266,76,267,77,78,268,269,270,79,80,271,272,81,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,82,294,295,296,297,298,83,299,300,301,302,84,303,85,86,304,305,504,505,506,507,508,509,510,511,513,514,515,516,313,87,327,328,329,330,331,100,332,333,101,102,334,335,103,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,104,357,358,359,360,361,105,362,363,364,365,106,366,107,108,367,368],"tindex":"bff86e27-db85-11e4-9dc1-91337da42d82","variableMapping":{"shift":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"bff86e28-db85-11e4-9dc1-47c08f9fd83d","variableMapping":{"nodeFlags":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":-2},{"failures":[4,121,546,122,123,388,127,389,130,131,395,397,138,402,144,6,404,147,148,410,547,202,153,204,154,206,156,159,160,161,548,207,208,217,219,220,229,453,18,20,32,39,42,46,248,284,313,347],"tindex":"bff86e29-db85-11e4-9dc1-6be7bc6808b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[549],"tindex":"bff8953a-db85-11e4-9dc1-e987f4d02104","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"bff8953b-db85-11e4-9dc1-594d5f5d6df0","variableMapping":{"factor":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":0},{"failures":[],"tindex":"bff8953c-db85-11e4-9dc1-5f1237677d1c","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"bff8953d-db85-11e4-9dc1-c5121018cff2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"bff8953e-db85-11e4-9dc1-c1647eed4cc9","variableMapping":{"silent":"edgeBased"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"bffa1bdf-db85-11e4-9dc1-81f844141ad5","variableMapping":{"red":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-2},{"failures":[6],"tindex":"bffa1be0-db85-11e4-9dc1-a359f19c48f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[4,426,427,428,127,199,533,547,550,201,202,203,153,204,205,154,155,206,412,413,156,157,158,159,551,160,161,162,552,553,554,555,548,434,435,436,437,556,438,439,440,441,442,443,444,445,446,447,448,449,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,7,227,228,229,11,452,453,18,19,454,455,38,39,40,41,42,43,44,45,47,230,231,232,482,233,70,182,234,71,72,235,236,237,73,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,74,258,259,260,261,262,75,263,264,265,266,76,267,77,78,268,269,270,79,80,271,272,273,81,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,82,294,295,296,297,298,83,299,300,301,302,84,303,85,86,304,305,306,183,184,307,185,308,309,310,311,312,186,313,314,187,315,188,189,316,190,191,317,318,319,320,192,321,87,193,194,322,195,323,196,324,325,326,197,198,327,328,329,330,331,100,332,333,101,102,334,335,336,103,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,104,357,358,359,360,361,105,362,363,364,365,106,366,107,108,367,368],"tindex":"bffa1be1-db85-11e4-9dc1-0904f588c59f","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-1},{"failures":[234,270,505,513,514,333],"tindex":"bffa1be2-db85-11e4-9dc1-9b3295254f83","variableMapping":{"bytePos":"todoBytes","indexDivisor":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:311","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[429,381,433],"tindex":"bffa1be3-db85-11e4-9dc1-7d9307ce869a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:98","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"status":-1},{"failures":[],"tindex":"bffa1be4-db85-11e4-9dc1-831425e9af64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[],"tindex":"bffa1be5-db85-11e4-9dc1-75105dccd98e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[127,199,557,200,144,201,202,203,153,204,205,154,155,206,412,413,156,157,158,159,551,160,161,162,552,553,554,555,548,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"bffa1be6-db85-11e4-9dc1-5f94ba9e21e9","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-1},{"failures":[436,445,207,208,229],"tindex":"bffa42f7-db85-11e4-9dc1-e5cd6fe48566","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":361,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":225,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":100,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":121,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":468,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":183,"com.graphhopper.reader.OSMReaderTest.testFerry":20,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":427,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":428,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":130,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":66,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":38,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":152,"com.graphhopper.storage.MMapDataAccessTest.testSegments":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":247,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":88,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":175,"com.graphhopper.coll.CompressedArrayTest.testCompress":165,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":86,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":318,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":483,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":89,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":446,"com.graphhopper.GraphHopperTest.testPrepare":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":324,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":436,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":390,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":217,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":465,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":124,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":424,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":375,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":381,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":389,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":505,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":215,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":283,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":497,"com.graphhopper.coll.BitSetImplTest.testCopy":549,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":63,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":131,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":538,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":70,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":179,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":379,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":449,"com.graphhopper.GraphHopperTest.testLoadOSM":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":475,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":510,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":64,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":533,"com.graphhopper.reader.OSMReaderTest.testSort":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":395,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":72,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":92,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":301,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":79,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":325,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":14,"com.graphhopper.storage.RAMDataAccessTest.testHeader":116,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":456,"com.graphhopper.storage.MMapDataAccessTest.testHeader":499,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":266,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":498,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":360,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":526,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":509,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":280,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":556,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":182,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":146,"com.graphhopper.reader.OSMNodeTest.testSetTags":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":73,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":346,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":141,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":486,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":482,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":485,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":537,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":212,"com.graphhopper.coll.OSMIDMapTest.testGetLong":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":211,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":338,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":257,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":353,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":101,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":355,"com.graphhopper.coll.CompressedArrayTest.testCompress2":164,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":397,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":248,"com.graphhopper.GraphHopperAPITest.testLoad":457,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":336,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":508,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":201,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":285,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":275,"com.graphhopper.storage.LevelGraphStorageTest.testClone":340,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":545,"com.graphhopper.reader.OSMReaderTest.testBarriers":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":238,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":433,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":528,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":481,"com.graphhopper.util.GHUtilityTest.testCopy":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":308,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":518,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":233,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":125,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":470,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":119,"com.graphhopper.routing.PathTest.testFindInstruction":19,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":239,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":154,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":426,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":405,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":467,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":302,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":289,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":531,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":264,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":252,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":442,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":200,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":342,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":309,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":180,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":516,"com.graphhopper.util.InstructionListTest.testWayList2":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":322,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":476,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":304,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":129,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":540,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":77,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":128,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":547,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":5,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":80,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":344,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":532,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":90,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":93,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":188,"com.graphhopper.storage.RAMDirectoryTest.testSynched":543,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":249,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":213,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":274,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":25,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":7,"com.graphhopper.coll.OSMIDMapTest.testGet":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":246,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":522,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":155,"com.graphhopper.routing.PathBidirRefTest.testExtract":434,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":54,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":392,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":523,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":488,"com.graphhopper.storage.RAMDataAccessTest.testCopy":112,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":269,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":193,"com.graphhopper.storage.RAMDataAccessTest.testSegments":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":232,"com.graphhopper.util.GHUtilityTest.testSort2":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":222,"com.graphhopper.reader.OSMReaderTest.testMain":22,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":102,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":256,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":380,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":134,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":489,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":156,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":323,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":347,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":351,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":367,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":11,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":404,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":507,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":354,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":32,"com.graphhopper.storage.StorablePropertiesTest.testStore":69,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":111,"com.graphhopper.storage.GraphHopperStorageTest.testClone":277,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":162,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":544,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":160,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":287,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":310,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":330,"com.graphhopper.routing.PathTest.testTime":453,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":401,"com.graphhopper.util.BitUtilLittleTest.testToFloat":535,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":107,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":341,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":548,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":478,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":317,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":358,"com.graphhopper.reader.OSMReaderTest.testRelation":415,"com.graphhopper.util.GHUtilityTest.testSortDirected":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":410,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":542,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":98,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":10,"com.graphhopper.GraphHopperTest.testFootOnly":46,"com.graphhopper.util.BitUtilLittleTest.testToInt":536,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":383,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":159,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":503,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":376,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":143,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":496,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":210,"com.graphhopper.reader.OSMElementTest.testSetTags":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":480,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":189,"com.graphhopper.search.NameIndexTest.testCreate":51,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":117,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":8,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":512,"com.graphhopper.routing.QueryGraphTest.testOneWay":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":479,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":386,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":62,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":166,"com.graphhopper.reader.OSMReaderTest.testWithBounds":31,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":120,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":521,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":151,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":267,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":430,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":319,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":142,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":337,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":136,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":126,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":259,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":551,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":253,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":81,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":208,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":530,"com.graphhopper.util.BitUtilLittleTest.testToBitString":534,"com.graphhopper.util.InstructionListTest.testWayList":2,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":303,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":494,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":132,"com.graphhopper.GraphHopperAPITest.testDisconnected179":458,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":311,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":371,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":500,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":408,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":455,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":191,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":504,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":197,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":41,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":279,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":447,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":296,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":445,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":552,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":399,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":236,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":228,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":273,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":491,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":506,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":511,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":135,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":270,"com.graphhopper.routing.PathTest.testWayList":18,"com.graphhopper.storage.MMapDataAccessTest.testCopy":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":326,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":314,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":382,"com.graphhopper.coll.OSMIDMapTest.testGet2":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":229,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":95,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":363,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":258,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":290,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":244,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":278,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":378,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":113,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":487,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":406,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":137,"com.graphhopper.util.GHUtilityTest.testSort":421,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":495,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":474,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":546,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":394,"com.graphhopper.search.NameIndexTest.testPut":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":268,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":276,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":469,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":484,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":61,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":461,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":514,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":147,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":6,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":459,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":398,"com.graphhopper.storage.MMapDirectoryTest.testSynched":541,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":35,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":550,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":254,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":525,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":429,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":515,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":87,"com.graphhopper.routing.PathTest.testFound":452,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":47,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":144,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":365,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":517,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":393,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":250,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":50,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":520,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":313,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":109,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":282,"com.graphhopper.util.InstructionListTest.testEmptyList":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":216,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":490,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":220,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":555,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":388,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":412,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":223,"com.graphhopper.reader.PrinctonReaderTest.testRead":454,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":84,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":501,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":67,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":245,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":56,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":306,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":407,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":493,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":557,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":145,"com.graphhopper.reader.OSMReaderTest.testFoot":21,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":17,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":192,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":108,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":373,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":369,"com.graphhopper.reader.OSMReaderTest.testOneWay":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":374,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":286,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":299,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":265,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":387,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":97,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":190,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":441,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":370,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":529,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":438,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":448,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":439,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":462,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":203,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":527,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":315,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":450,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":163,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":271,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":502,"com.graphhopper.routing.PathBidirRefTest.testExtract2":435,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":513,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":207,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":139,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":477,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":519,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":48,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":298,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":463,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":403,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":27,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":198,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":464,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":409,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":473,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":300,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":553,"com.graphhopper.GraphHopperTest.testFootAndCar":42,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":82,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":349,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":492,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":185,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":199,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":177,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":554,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":218,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":524,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":241,"com.graphhopper.storage.StorablePropertiesTest.testLoad":539,"com.graphhopper.GraphHopperTest.testPrepareOnly":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":226,"com.graphhopper.GraphHopperTest.testVia":39,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":471,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":184,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":29,"com.graphhopper.reader.OSMElementTest.testHasTag":416,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":331,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":4,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":297,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":204,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":316,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":127,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":364,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":362,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":71}}]
