[{"failures":[],"tindex":"b1f614f5-da2f-11e4-b89d-b1b88a98048b","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"b1f6b136-da2f-11e4-b89d-c38d2dd9621e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"b1f6b137-da2f-11e4-b89d-ed06c7f8af2e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-2},{"failures":[],"tindex":"b1f6d848-da2f-11e4-b89d-db4936a97b8f","variableMapping":{"version":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"b1f6d849-da2f-11e4-b89d-19bf01568a7c","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[13,14,15,16,17,19,34,48,117,118,119,120,121,1,122,123,124,125,126,3,127,128,129,6,130,131,132,9,133,134,135],"tindex":"b1f6d84a-da2f-11e4-b89d-37398910c902","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":-1},{"failures":[13,16,22,23,29,34,35,48,136,137,135],"tindex":"b1f6d84b-da2f-11e4-b89d-516dd2c68dfa","variableMapping":{"nodeFlags":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[13,14,15,16,19,23,24,29,35,138,44,45,46,47,139,140,141,142,143,144,145,146,53,147,148,149,150,151,152,78,153,154,155,156,157,158,159,160,161,162,163,83,164,85,165,166,167,168,169,170,171,172,173,174,175,90,176,92,93,177,178,179,180,181,182,183,184,185,186,187,98,188,189,190,191,192,193,194,195,196,197,198,103,104,199,200,201,202,203,204,205,206,207,106,208,209,210,211,212,213,214,215,216,217,218,219,220,221,110,113],"tindex":"b1f6d84c-da2f-11e4-b89d-d1f94ef8dff1","variableMapping":{"initialBits":"backwardBit","allBits":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[222,223,224,225],"tindex":"b1f6d84d-da2f-11e4-b89d-c7ebf4fc021f","variableMapping":{"bytesForFlags":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"b1f6d84e-da2f-11e4-b89d-a98525bf9945","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"b1f6d84f-da2f-11e4-b89d-6315afd26500","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"b1f6d850-da2f-11e4-b89d-5349f7f08673","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:451","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"b1f6d851-da2f-11e4-b89d-7f8ab64593fa","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"b1f6ff62-da2f-11e4-b89d-7754142d8371","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[11,12,13,14,17,18,20,245,246,138,247,248,44,45,46,47,249,139,140,250,141,251,252,143,144,145,146,53,147,148,149,150,253,254,255,256,151,152,78,80,153,154,257,155,258,259,157,158,159,160,161,162,163,83,164,85,87,165,166,260,167,261,262,169,170,171,172,173,174,175,90,176,92,93,95,177,178,263,179,264,265,181,182,183,184,185,186,187,98,188,189,266,267,190,191,268,192,193,269,194,195,196,270,198,271,272,126,273,103,274,275,276,277,104,105,199,278,200,201,279,280,202,281,282,283,203,284,204,285,286,205,287,206,288,207,106,208,289,209,210,211,212,213,214,215,216,217,218,219,290,220,221,110,113],"tindex":"b1f6ff63-da2f-11e4-b89d-7b787aa69799","variableMapping":{"latIndex":"backwardBit","lonIndex":"roundaboutBit","lonUnits":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:92","type":"CtReturnImpl","sourcecode":"return (long * (int)) + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[],"tindex":"b1f6ff64-da2f-11e4-b89d-270b07f97857","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"b1f6ff65-da2f-11e4-b89d-15bcd8200822","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[124],"tindex":"b1f6ff66-da2f-11e4-b89d-4f849e2a2f31","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[192,195,291],"tindex":"b1f6ff67-da2f-11e4-b89d-9fe440863639","variableMapping":{"ref":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"b1f6ff68-da2f-11e4-b89d-d92581000e20","variableMapping":{"systemProperty":"location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[271,1,292,293,2,123,294,295,296,4,128,297,273,298,299,300,7,131,301,302,274,303,304,305,10,134,306,307],"tindex":"b1f6ff69-da2f-11e4-b89d-73601bc16544","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"b1f6ff6a-da2f-11e4-b89d-1f2518ce07b5","variableMapping":{"tmp":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"b1f6ff6b-da2f-11e4-b89d-3d3b89942f23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,250,53,55,308,61,309,310,62,311,63,64,65,66,312,313,314,315,316,317,318,319,255,320,321,67,68,69,322,323,324,325,326,327,328,329,256,330,331,71,332,333,334,77,78,79,257,85,86,260,173,92,93,94,263,185,335,336,189,266,283,285,286,206],"tindex":"b1f7267c-da2f-11e4-b89d-49348c44bcac","variableMapping":{"from":"bytePos","hash":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"b1f7267d-da2f-11e4-b89d-f5f86f4c89ff","variableMapping":{"str":"valueStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:463","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"b1f7267e-da2f-11e4-b89d-c1dee59b5328","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"b1f7267f-da2f-11e4-b89d-b970e486fb37","variableMapping":{"need":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":-1},{"failures":[],"tindex":"b1f72680-da2f-11e4-b89d-9940e26f6076","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[22,337],"tindex":"b1f72681-da2f-11e4-b89d-cbebf2d8fd7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"b1f72682-da2f-11e4-b89d-4fb87a0a07f3","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":0},{"failures":[],"tindex":"b1f72683-da2f-11e4-b89d-69e678909a59","variableMapping":{"osmFile":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"b1f72684-da2f-11e4-b89d-151bb5514ccd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,58,60,64,65,66,67,68,69,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"b1f72685-da2f-11e4-b89d-c58f9c1d2734","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"b1f72686-da2f-11e4-b89d-3dd6799773ca","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[22,337],"tindex":"b1f72687-da2f-11e4-b89d-a1bc8c9e386d","variableMapping":{"str":"str","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:82","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[13,14,17,266,278,200,201,279,280,281,282,203,284,204,285,286,205,287,206,106,289,209,212,217,221],"tindex":"b1f72688-da2f-11e4-b89d-1735e7d16c69","variableMapping":{"eof":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[226,227,237,238,239,338,240,241,244],"tindex":"b1f74d99-da2f-11e4-b89d-93680acece65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[222,224,225],"tindex":"b1f74d9a-da2f-11e4-b89d-07004215ca9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[13,34,48,119,120,121,125,129,132],"tindex":"b1f74d9b-da2f-11e4-b89d-75cea18e389c","variableMapping":{"java.lang.Double.NaN":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:104","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"b1f74d9c-da2f-11e4-b89d-f53e7a761387","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[192,195],"tindex":"b1f74d9d-da2f-11e4-b89d-5363b707eb6e","variableMapping":{"width":"node","lonSimilar":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"b1f74d9e-da2f-11e4-b89d-8d5ea7f15885","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[11,17,18,19,21,77,78,85,92,93,339],"tindex":"b1f74d9f-da2f-11e4-b89d-4fc779d30661","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"b1f74da0-da2f-11e4-b89d-0927081b8eaf","variableMapping":{"cap":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[29,340],"tindex":"b1f74da1-da2f-11e4-b89d-f998a94a07df","variableMapping":{"edgeCount":"encoderCount","lastEdgeIndex":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"b1f74da2-da2f-11e4-b89d-3199d30aa747","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"b1f74da3-da2f-11e4-b89d-f3a25a50faa1","variableMapping":{"deltaX":"java.lang.Math.PI","maxX":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"b1f74da4-da2f-11e4-b89d-4ddda48fda32","variableMapping":{"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.storage.index.LocationIndexTreeSC.NO_SHORTCUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:947","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:187","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTreeSC.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[199],"tindex":"b1f74da5-da2f-11e4-b89d-8fa2c28e7995","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[13,14,15,16,19,23,24,29,35,138,44,45,46,47,139,140,141,143,144,145,146,53,147,148,149,150,151,152,78,153,154,155,157,158,159,160,161,162,163,83,164,85,165,166,167,169,170,171,172,173,174,175,90,176,92,93,177,178,179,181,182,183,184,185,186,187,98,188,189,190,191,192,193,194,195,196,197,198,103,277,104,199,200,201,202,203,204,205,206,207,106,208,209,210,211,212,213,214,215,216,217,218,219,220,221,110,113],"tindex":"b1f74da6-da2f-11e4-b89d-0f3b1bdd2845","variableMapping":{"segmentSizeInBytes":"shift","capacity":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[13,14,17,18,341,278,200,201,279,280,202,281,282,283,203,284,204,285,286,205,287,206,288,207,106,208,289,209,211,212,213,214,215,216,342,217,219,290,220,221],"tindex":"b1f774b7-da2f-11e4-b89d-f3ca5786fc2b","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"b1f774b8-da2f-11e4-b89d-97e66d119d87","variableMapping":{"bits":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[140,343,344,345,346,347,348,154,349,350,351,82,352,166,353,354,355,89,356,178,357,358,359,97,360,194],"tindex":"b1f774b9-da2f-11e4-b89d-e1685519f8fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"b1f774ba-da2f-11e4-b89d-f96d003c26b2","variableMapping":{"store":"integ"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"b1f774bb-da2f-11e4-b89d-2f18f2940897","variableMapping":{"precision":"r","lat":"r"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":0},{"failures":[],"tindex":"b1f774bc-da2f-11e4-b89d-bbba8b814248","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,48,136,137,135],"tindex":"b1f774bd-da2f-11e4-b89d-95baa12f5dd9","variableMapping":{"lastTime":"includeWay"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"b1f774be-da2f-11e4-b89d-3b7b4a512741","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[11,12,13,14,15,16,17,361,18,19,20,21,362,245,246,22,23,24,25,26,27,28,29,30,363,31,32,33,34,364,35,365,366,367,36,37,38,39,40,41,42,43,138,247,248,368,369,44,370,371,372,45,46,47,48,373,374,49,50,51,52,249,139,140,375,250,141,142,376,251,252,343,143,344,345,377,378,144,379,145,380,381,382,383,384,146,385,53,346,347,147,386,148,149,387,388,389,150,390,391,392,393,394,395,253,396,397,398,399,400,254,401,61,309,310,62,311,63,228,402,64,65,66,312,229,313,230,231,314,315,316,317,319,255,320,321,403,233,404,67,68,69,322,234,323,235,236,324,325,326,327,329,256,405,406,407,408,409,410,411,412,151,413,414,415,152,77,348,416,78,79,417,418,419,80,153,154,420,257,155,156,421,258,259,349,157,350,351,422,423,158,424,159,425,426,81,427,428,160,429,161,82,352,162,430,163,83,431,432,84,164,433,434,85,86,435,436,437,87,165,166,438,260,167,168,439,261,262,353,169,354,355,440,441,170,442,171,443,444,88,445,446,172,447,173,89,356,174,448,175,90,449,450,91,176,451,92,452,453,93,94,454,455,456,95,177,178,457,263,179,180,458,264,265,357,181,358,359,459,460,182,461,183,462,463,96,464,465,184,466,185,97,360,186,467,187,98,468,469,99,188,470,101,471,339,189,266,190,192,193,269,194,195,291,102,103,275,276,472,277,104,105,199,278,200,201,279,280,202,281,282,283,203,284,204,285,286,205,287,206,288,207,106,208,289,209,210,211,212,213,214,215,216,342,217,218,219,290,220,221,107,107,108,108,473,473,109,109,110,110,111,111,112,112,113,113,114,114,474,474,115,115,116,116],"tindex":"b1f79bcf-da2f-11e4-b89d-4f0dfdc4fcae","variableMapping":{"name":"_location","refName":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:449","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[0,2,3,4,5,6,7,8,9,10],"tindex":"b1f79bd0-da2f-11e4-b89d-d3cf04961d3f","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[192,195,291],"tindex":"b1f79bd1-da2f-11e4-b89d-6778d8fb114c","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"start","edgeTo":"start","edgeFrom":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[13,16,23,35,196,197],"tindex":"b1f79bd2-da2f-11e4-b89d-217d28a44456","variableMapping":{"pointer":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[226,227,237,475,239,338,240,241],"tindex":"b1f79bd3-da2f-11e4-b89d-ab901831eadc","variableMapping":{"precision":"lat","lat":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"b1f79bd4-da2f-11e4-b89d-bb1a474aa8fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"b1f79bd5-da2f-11e4-b89d-45c58196b080","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"b1f79bd6-da2f-11e4-b89d-a976c79a6b99","variableMapping":{"possibleToAdd":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:85","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPlace method.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":0},{"failures":[192,195,291],"tindex":"b1f79bd7-da2f-11e4-b89d-9d107b28a965","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:99","type":"CtContinueImpl","sourcecode":"continue nextState"},"status":-1},{"failures":[],"tindex":"b1f79bd8-da2f-11e4-b89d-0131d70630df","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[199,278,106,208,209,221],"tindex":"b1f79bd9-da2f-11e4-b89d-b5a838ee8b43","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"b1f79bda-da2f-11e4-b89d-39be6baede11","variableMapping":{"cap":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"b1f79bdb-da2f-11e4-b89d-93769dd29ef3","variableMapping":{"versionHint":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"b1f79bdc-da2f-11e4-b89d-895d2cc362c1","variableMapping":{"defaultUTurnCost":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","turnCosts":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","edgeId":"val","prevOrNextEdgeId":"mpInteger","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[3,136],"tindex":"b1f7c2ed-da2f-11e4-b89d-933826d804b8","variableMapping":{"bytePos":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,245,246,22,23,24,25,26,27,28,29,30,31,32,33,34,35,365,138,247,248,368,369,44,370,371,372,45,46,47,48,373,374,143,53,391,392,393,394,395,253,396,397,398,399,400,254,61,309,310,62,63,228,402,64,65,66,312,229,313,230,231,314,315,316,317,319,255,320,321,403,233,404,67,68,69,322,234,323,235,236,324,325,326,327,329,256,476,477,330,478,479,480,331,481,482,483,484,151,413,414,415,152,77,348,416,78,79,417,418,80,153,154,420,257,155,156,421,258,259,349,157,350,351,422,423,158,424,159,425,426,81,427,428,160,429,161,82,352,162,430,163,83,431,432,84,164,433,434,85,86,435,436,87,165,166,438,260,167,168,439,261,262,353,169,354,355,440,441,170,442,171,443,444,88,445,446,172,447,173,89,356,174,448,175,90,449,450,91,176,451,92,453,93,94,454,455,95,177,178,457,263,179,180,458,264,265,357,181,358,359,459,460,182,461,183,462,463,96,464,465,184,466,185,97,360,186,467,187,98,468,469,99,188,470,189,266,190,192,193,269,194,195,291,102,103,275,276,104,105,199,278,200,201,279,280,202,281,282,283,203,284,204,285,286,205,287,206,288,207,106,208,289,209,210,211,212,213,214,215,216,342,217,218,219,290,220,221,107,108,473,109,110,111,112,113,114,474,115,116],"tindex":"b1f7c2ee-da2f-11e4-b89d-8f8399b1f882","variableMapping":{"segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"b1f7c2ef-da2f-11e4-b89d-7bb8d6f081dd","variableMapping":{"size":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"b1f7c2f0-da2f-11e4-b89d-0110aa0d6e56","variableMapping":{"lat":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:65","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,245,246,22,23,24,25,26,27,28,29,30,31,32,33,34,35,365,138,247,248,368,369,44,370,371,372,45,46,47,48,373,374,143,53,391,392,393,394,395,253,396,397,398,399,400,254,401,61,309,310,62,63,228,402,64,65,66,312,229,313,230,231,314,315,316,317,319,255,320,321,403,233,404,67,68,69,322,234,323,235,236,324,325,326,327,329,256,477,330,478,479,480,481,482,483,484,151,413,414,415,152,77,348,416,78,79,417,418,80,153,154,420,257,155,156,421,258,259,349,157,350,351,422,423,158,424,159,425,426,81,427,428,160,429,161,82,352,162,430,163,83,431,432,84,164,433,434,85,86,435,436,87,165,166,438,260,167,168,439,261,262,353,169,354,355,440,441,170,442,171,443,444,88,445,446,172,447,173,89,356,174,448,175,90,449,450,91,176,451,92,453,93,94,454,455,95,177,178,457,263,179,180,458,264,265,357,181,358,359,459,460,182,461,183,462,463,96,464,465,184,466,185,97,360,186,467,187,98,468,469,99,188,470,189,266,190,192,193,269,194,195,291,102,103,275,276,472,277,104,105,199,278,200,201,279,280,202,281,282,283,203,284,204,285,286,205,287,206,288,207,106,208,289,209,210,211,212,213,214,215,216,342,217,218,219,290,220,221,107,107,108,108,473,473,109,109,110,110,111,111,112,112,113,113,114,114,474,474,115,115,116,116],"tindex":"b1f7ea01-da2f-11e4-b89d-cb6c42a161ca","variableMapping":{"lastTime":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"b1f7ea02-da2f-11e4-b89d-493fda9a2907","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[363,485,6,486,9,136,137],"tindex":"b1f7ea03-da2f-11e4-b89d-472977971301","variableMapping":{"pos":"code","mSize":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"b1f7ea04-da2f-11e4-b89d-d341b613c013","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"b1f7ea05-da2f-11e4-b89d-03a48f13e045","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","edgeTo":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","edgeFrom":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[35,140,345,378,380,381,346,347,154,351,423,425,426,82,352,166,355,441,443,444,89,356,178,359,460,462,463,97,360,192,269,194],"tindex":"b1f7ea06-da2f-11e4-b89d-83f319bdca30","variableMapping":{"segmentsToMap":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[363,0,1,487,2,295,3,488,4,297,489,490,485,5,6,491,7,302,486,8,9,492,10,307,136,137],"tindex":"b1f7ea07-da2f-11e4-b89d-756833899ca4","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,493,54,494,55,56,57,58,308,59,60,495,496,61,309,310,62,63,64,65,66,67,68,69,497,70,498,71,72,73,74,332,75,76,499,500,77,78,79,80,81,82,83,432,84,85,86,87,88,89,90,450,91,92,93,94,95,96,97,98,469,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"b1f7ea08-da2f-11e4-b89d-d5569bf33066","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[0,1,2,3,4,5,7,8,10],"tindex":"b1f7ea09-da2f-11e4-b89d-75708c75c838","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[29,501,502,503,340],"tindex":"b1f7ea0a-da2f-11e4-b89d-cf33d08aeffd","variableMapping":{"deltaX":"costs","maxX":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"b1f8111b-da2f-11e4-b89d-7554b4792fb3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[222,224,225],"tindex":"b1f8111c-da2f-11e4-b89d-473564146a27","variableMapping":{"factor":"lastPrio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"b1f8111d-da2f-11e4-b89d-a5b9e0be6b78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-2},{"failures":[192,195,291],"tindex":"b1f8111e-da2f-11e4-b89d-ad88d9b9c789","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:98","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"status":-1},{"failures":[224,283,216,217,220],"tindex":"b1f8111f-da2f-11e4-b89d-dd1a90cd87fb","variableMapping":{"size":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"b1f81120-da2f-11e4-b89d-7177aff5014e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"b1f81121-da2f-11e4-b89d-970b702e8785","variableMapping":{"originalEdgesCount":"removed","edgeDifference":"removed","contractedNeighbors":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"b1f81122-da2f-11e4-b89d-6506b01d2121","variableMapping":{"ret":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","retBucket":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","i":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","storedKey":"forwardBit","bucketSize":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","key":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"b1f81123-da2f-11e4-b89d-6370c136188e","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[223,504],"tindex":"b1f81124-da2f-11e4-b89d-0396002c1a7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[16,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,249,139,140,375,250,141,142,376,251,252,343,143,344,345,377,378,144,379,145,380,381,382,383,384,146,385,53,346,347,147,386,148,149,387,388,389,150,390,253,254,255,256,151,413,414,415,152,77,348,416,78,79,417,418,419,80,153,154,420,257,155,156,421,258,259,349,157,350,351,422,423,158,424,159,425,426,81,427,428,160,429,161,82,352,162,430,163,83,431,432,84,164,433,434,85,86,435,436,437,87,165,166,438,260,167,168,439,261,262,353,169,354,355,440,441,170,442,171,443,444,88,445,446,172,447,173,89,356,174,448,175,90,449,450,91,176,451,92,452,453,93,94,454,455,456,95,177,178,457,263,179,180,458,264,265,357,181,358,359,459,460,182,461,183,462,463,96,464,465,184,466,185,97,360,186,467,187,98,468,469,99,188,470,505,506,267,190,507,191,508,509,510,268,269,117,511,118,119,196,512,513,270,120,121,197,514,515,501,198,516,517,271,0,1,518,519,487,292,293,520,122,2,123,521,294,295,522,126,523,3,524,525,526,488,296,527,127,4,128,528,297,529,273,485,298,5,129,6,502,530,531,532,491,299,300,533,130,7,131,534,301,302,102,103,535,274,486,303,8,132,9,503,536,537,538,492,304,305,539,133,10,134,540,306,307,541,136,340,542,137,135,543,199,278,200,201,279,280,202,281,282,283,203,284,204,285,286,205,287,206,288,207,106,208,289,209,544,107,545,546],"tindex":"b1f83835-da2f-11e4-b89d-936cc51c8efd","variableMapping":{"tmpNo":"nextTurnBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"b1f83836-da2f-11e4-b89d-1d1efc53bebc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":161,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":288,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":77,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":125,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":139,"com.graphhopper.reader.OSMReaderTest.testFerry":22,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":247,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":129,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":524,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":68,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":12,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":433,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":357,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":367,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":493,"com.graphhopper.coll.CompressedArrayTest.testCompress":227,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":127,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":214,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":382,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":169,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":403,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":54,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":219,"com.graphhopper.GraphHopperTest.testPrepare":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":387,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":210,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":298,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":203,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":401,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":4,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":374,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":233,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":273,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":477,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":282,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":65,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":92,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":242,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":80,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":221,"com.graphhopper.GraphHopperTest.testLoadOSM":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":314,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":479,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":66,"com.graphhopper.reader.OSMReaderTest.testSort":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":131,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":269,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":94,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":448,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":85,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":388,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":113,"com.graphhopper.storage.RAMDataAccessTest.testHeader":332,"com.graphhopper.routing.DijkstraTest.initializationError":545,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":365,"com.graphhopper.storage.MMapDataAccessTest.testHeader":336,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":187,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":429,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":334,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":439,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":452,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":95,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":349,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":323,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":441,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":321,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":322,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":280,"com.graphhopper.coll.OSMIDMapTest.testGetLong":42,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":279,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":463,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":424,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":78,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":425,"com.graphhopper.coll.CompressedArrayTest.testCompress2":226,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":444,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":271,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":181,"com.graphhopper.GraphHopperAPITest.testLoad":189,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":419,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":478,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":506,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":354,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":166,"com.graphhopper.storage.LevelGraphStorageTest.testClone":257,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":337,"com.graphhopper.reader.OSMReaderTest.testBarriers":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":177,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":503,"com.graphhopper.util.GHUtilityTest.testCopy":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":256,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":520,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":528,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":499,"com.graphhopper.routing.PathTest.testFindInstruction":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":488,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":178,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":222,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":138,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":509,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":303,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":397,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":175,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":186,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":368,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":216,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":460,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":539,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":542,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":544,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":142,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":436,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":484,"com.graphhopper.util.InstructionListTest.testWayList2":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":315,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":176,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":5,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":339,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":469,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":485,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":102,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":258,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":494,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":502,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":378,"com.graphhopper.storage.RAMDirectoryTest.testSynched":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":358,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":61,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":202,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":27,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":55,"com.graphhopper.routing.AStarTest.initializationError":505,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":106,"com.graphhopper.coll.OSMIDMapTest.testGet":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":265,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":333,"com.graphhopper.routing.PathBidirRefTest.testExtract":275,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":510,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":41,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":532,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":325,"com.graphhopper.storage.RAMDataAccessTest.testCopy":71,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":470,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":346,"com.graphhopper.storage.RAMDataAccessTest.testSegments":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":531,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":255,"com.graphhopper.util.GHUtilityTest.testSort2":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":205,"com.graphhopper.reader.OSMReaderTest.testMain":24,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":462,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":491,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":534,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":119,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":454,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":157,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":423,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":164,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":490,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":110,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":184,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":274,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":330,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":159,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":34,"com.graphhopper.storage.StorablePropertiesTest.testStore":101,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":498,"com.graphhopper.storage.GraphHopperStorageTest.testClone":260,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":197,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":410,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":120,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":440,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":151,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":521,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":376,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":415,"com.graphhopper.routing.PathTest.testTime":277,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":293,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":432,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":155,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":516,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":317,"com.graphhopper.reader.OSMReaderTest.testRelation":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":381,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":428,"com.graphhopper.util.GHUtilityTest.testSortDirected":371,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":504,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":134,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":406,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":495,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":109,"com.graphhopper.GraphHopperTest.testFootOnly":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":523,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":309,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":513,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":412,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":234,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":535,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":144,"com.graphhopper.search.NameIndexTest.testCreate":52,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":75,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":107,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":331,"com.graphhopper.routing.QueryGraphTest.testOneWay":474,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":318,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":239,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":526,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":64,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":237,"com.graphhopper.reader.OSMReaderTest.testWithBounds":33,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":500,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":540,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":111,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":468,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":383,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":136,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":153,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":417,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":517,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":133,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":297,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":465,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":182,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":87,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":278,"com.graphhopper.util.InstructionListTest.testWayList":46,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":449,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":530,"com.graphhopper.GraphHopperAPITest.testDisconnected179":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":251,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":338,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":466,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":375,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":407,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":304,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":246,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":380,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":476,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":150,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":15,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":168,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":310,"com.graphhopper.routing.util.EncodedValueTest.testSwap":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":290,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":172,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":529,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":204,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":546,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":218,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":83,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":514,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":519,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":455,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":289,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":437,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":328,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":480,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":302,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":434,"com.graphhopper.routing.PathTest.testWayList":104,"com.graphhopper.storage.MMapDataAccessTest.testCopy":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":389,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":487,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":344,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":512,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":124,"com.graphhopper.coll.OSMIDMapTest.testGet2":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":209,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":308,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":162,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":464,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":533,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":442,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":267,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":458,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":158,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":235,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":236,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":72,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":496,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":537,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":223,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.util.GHUtilityTest.testSort":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":385,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":300,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":525,"com.graphhopper.search.NameIndexTest.testPut":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":188,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":456,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":404,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":63,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":393,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":482,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":132,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":103,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":391,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":453,"com.graphhopper.storage.MMapDirectoryTest.testSynched":405,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":518,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":37,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":508,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":461,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":192,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":483,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":53,"com.graphhopper.routing.PathTest.testFound":472,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":21,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":135,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":163,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":299,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":359,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":341,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":51,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":143,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":262,"com.graphhopper.util.InstructionListTest.testEmptyList":372,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":497,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":283,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":122,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":327,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":118,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":511,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":287,"com.graphhopper.reader.PrinctonReaderTest.testRead":245,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":90,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":69,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":264,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":43,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":249,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":183,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":527,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":538,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":340,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":411,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":486,"com.graphhopper.reader.OSMReaderTest.testFoot":23,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":38,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":146,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":230,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":241,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":522,"com.graphhopper.reader.OSMReaderTest.testOneWay":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":231,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":355,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":356,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":467,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":296,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":60,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":445,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":536,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":145,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":215,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":232,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":220,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":213,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":394,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":190,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":377,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":473,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":364,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":435,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":408,"com.graphhopper.routing.PathBidirRefTest.testExtract2":276,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":481,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":199,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":316,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":49,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":294,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":390,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":507,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":395,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":305,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":312,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":174,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":515,"com.graphhopper.GraphHopperTest.testFootAndCar":16,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":88,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":351,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":329,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":250,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":541,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":501,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":263,"com.graphhopper.storage.StorablePropertiesTest.testLoad":471,"com.graphhopper.GraphHopperTest.testPrepareOnly":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":207,"com.graphhopper.GraphHopperTest.testVia":13,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":140,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":31,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":152,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":48,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":447,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":191,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":379,"com.graphhopper.routing.AStarBidirectionTest.initializationError":543,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":117,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":430,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":352,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":93}}]
