[{"failures":[],"tindex":"06d68657-dba0-11e4-a76f-d3c382c91d18","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"06d68658-dba0-11e4-a76f-db2f862f5af2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"06d6ad69-dba0-11e4-a76f-03e59c30907b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"06d6ad6a-dba0-11e4-a76f-b5d1b8f37501","variableMapping":{"dataAccessType":"type","this":"type","graphDATypeStr":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:483","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType.fromString(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"06d6ad6b-dba0-11e4-a76f-9bd4b8c53bbb","variableMapping":{"hash":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-1},{"failures":[],"tindex":"06d6ad6c-dba0-11e4-a76f-dd9262d65be7","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"06d6ad6d-dba0-11e4-a76f-ab3720c16a88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"06d6ad6e-dba0-11e4-a76f-cd4758a19ad6","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"06d6ad6f-dba0-11e4-a76f-35c1b6b32ca8","variableMapping":{"bytePos":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"06d6ad70-dba0-11e4-a76f-d7f651952635","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"06d6ad71-dba0-11e4-a76f-5fb0272ae07b","variableMapping":{"flags":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","tmpValue":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":0},{"failures":[],"tindex":"06d6ad72-dba0-11e4-a76f-3f12fbc685ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:83","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator"},"status":-2},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"06d6ad73-dba0-11e4-a76f-4fd29a864c2b","variableMapping":{"elem":"elem","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"06d6ad74-dba0-11e4-a76f-7593a95a5737","variableMapping":{"newUniqueOsmId":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"06d6ad75-dba0-11e4-a76f-a992a381c419","variableMapping":{"initLeafSize":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-1},{"failures":[70,71,72,1,5,73,8,10,74,18,20],"tindex":"06d6d486-dba0-11e4-a76f-6761ae6cb0df","variableMapping":{"locs":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[],"tindex":"06d6d487-dba0-11e4-a76f-8dc8233b497a","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"06d6d488-dba0-11e4-a76f-bffb68934f8b","variableMapping":{"val":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"06d6d489-dba0-11e4-a76f-37ebdf6cd422","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[75],"tindex":"06d6d48a-dba0-11e4-a76f-5fdee3cdc127","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[76,77,58,78,79,80,81,59,82,60,83,84,61,85,86,87,88,62,89,63,90,64,91,92,93,94,65,95,66,96,67,97,98,99,100,68,101,69,102],"tindex":"06d6d48b-dba0-11e4-a76f-f98c5f25af7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[],"tindex":"06d6d48c-dba0-11e4-a76f-0544c82b1849","variableMapping":{"precision":"orientation","lat":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"06d6d48d-dba0-11e4-a76f-c7a811cc06eb","variableMapping":{"segmentSizeInBytes":"index","length":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":0},{"failures":[],"tindex":"06d6d48e-dba0-11e4-a76f-9bd781ee2108","variableMapping":{"graphHopperFolder":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"06d6d48f-dba0-11e4-a76f-6322dc087615","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"start","tmpNode":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[103,104,105,106,107,108,109,110],"tindex":"06d6d490-dba0-11e4-a76f-19625bf895a7","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"angle","java.lang.Double.POSITIVE_INFINITY":"angle","weight":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[111,1,112,113,5,114,7,115,10,16,17,116,20,26],"tindex":"06d6d491-dba0-11e4-a76f-b32d6b6a9f32","variableMapping":{"tInt":"hwInt","speed":"hwInt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"06d6d492-dba0-11e4-a76f-79881b0ec0f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-2},{"failures":[],"tindex":"06d6fba3-dba0-11e4-a76f-592ceaf7e0cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[27,28,117,29,118,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"06d6fba4-dba0-11e4-a76f-47968ab4a62b","variableMapping":{"i":"allBits","child":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"06d6fba5-dba0-11e4-a76f-15a65a2b9c5c","variableMapping":{"index":"lastElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"06d6fba6-dba0-11e4-a76f-513f15747e82","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[75],"tindex":"06d6fba7-dba0-11e4-a76f-fb96975d95ad","variableMapping":{"r":"incDist2DSum","x":"fullDist2D","absY":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"06d6fba8-dba0-11e4-a76f-07ace84b6120","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[],"tindex":"06d6fba9-dba0-11e4-a76f-e9704c450cb1","variableMapping":{"initLeafSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[119,120,77],"tindex":"06d8342a-dba0-11e4-a76f-9171ec6422ad","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[121,122,123,124,125,126,127,46,47,50,51,128,52,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"06d8342b-dba0-11e4-a76f-857b736ced24","variableMapping":{"edgeTo":"int0","edgeFrom":"int0"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-1},{"failures":[],"tindex":"06d8342c-dba0-11e4-a76f-1341dd236624","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"06d8342d-dba0-11e4-a76f-1928332d869b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"06d8342e-dba0-11e4-a76f-cbac6f270002","variableMapping":{"size":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"06d8342f-dba0-11e4-a76f-37e1856adf51","variableMapping":{"size":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[75],"tindex":"06d83430-dba0-11e4-a76f-536e3e99675d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"06d83431-dba0-11e4-a76f-23648e130f3b","variableMapping":{"closestNode":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[],"tindex":"06d83432-dba0-11e4-a76f-7bd657e45e09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-2},{"failures":[],"tindex":"06d83433-dba0-11e4-a76f-2d020ce84745","variableMapping":{"acceptBit":"oldRelationFlags","ferryBit":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[123,124,144,145,125,146,147,148,1,149,150,151,152,153,154,155,113,5,156,157,7,73,115,10,158,15,17,74,116,20,159,25,160,161],"tindex":"06d85b44-dba0-11e4-a76f-93c956ab4adb","variableMapping":{"distance":"maxSpeed","maxSpeed":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[162,163],"tindex":"06d85b45-dba0-11e4-a76f-57f1760a7866","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"usedBits","speed":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"06d85b46-dba0-11e4-a76f-c9d5594c4dca","variableMapping":{"shift":"mask","flags":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[],"tindex":"06d85b47-dba0-11e4-a76f-71f10541c5f1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[76,164],"tindex":"06d85b48-dba0-11e4-a76f-cdc9b14e7b2a","variableMapping":{"size":"minOnewayNetworkSize","hash":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[165,166,152,167,113,5,168,7,10,169,17,20,170],"tindex":"06d85b49-dba0-11e4-a76f-01ba79ec9616","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:188","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-1},{"failures":[145,127,171,172,148,173,174,175,176,177,178,179,166,180,181,130,131,182,132,133,183,134,135,136,137,138,184,139,140,185,186,141,187,188,189,190,191,142,192,193,194,195,196,197,58,198,199,200,201,202,203,204,78,205,79,80,206,81,207,208,209,59,82,210,211,212,213,214,215,60,83,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,84,231,232,233,234,235,236,237,238,61,239,240,241,242,243,244,245,85,246,86,87,247,88,248,249,250,62,89,251,252,253,254,255,256,63,90,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,64,276,277,278,279,280,281,282,91,283,92,93,284,94,285,286,287,65,95,288,289,290,291,292,293,66,96,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,67,311,312,313,314,315,316,317,97,318,98,99,319,100,320,321,322,68,101,323,324,325,326,327,328,69,102,329,330,331,332,333,334,335,336,337],"tindex":"06d85b4a-dba0-11e4-a76f-59207867c7a6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[338,147,119,339],"tindex":"06d85b4b-dba0-11e4-a76f-396185cf8b91","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"06d85b4c-dba0-11e4-a76f-c79a7f21df8f","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[338,340],"tindex":"06d85b4d-dba0-11e4-a76f-0d2dd0afb443","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[],"tindex":"06d8825e-dba0-11e4-a76f-49d484b58dd8","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"06d8825f-dba0-11e4-a76f-a197bad659aa","variableMapping":{"index":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-2},{"failures":[],"tindex":"06d88260-dba0-11e4-a76f-b5d8ebcf3d3b","variableMapping":{"delta_lat":"minLon","r_lat":"minLon","a_lat":"minLon","delta_lon":"minLon","r_lon":"minLon","a_lon":"minLon","norm":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[129,181,130,183,189,190,142],"tindex":"06d88261-dba0-11e4-a76f-290d70cfdb16","variableMapping":{"includeWay":"millis"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:347","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[166],"tindex":"06d88262-dba0-11e4-a76f-5d26d300bff0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"06d88263-dba0-11e4-a76f-03720b7f46ca","variableMapping":{"entries":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[0,1,2,5,6,9,10,14,19,20,24],"tindex":"06d88264-dba0-11e4-a76f-1b7d68ed98e7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[121,122,123,124,144,145,125,126,146,127,341,338,342,343,344,345,346,347,162,348,349,350,351,147,119,352,353,354,355,356,357,358,359,360,361,362,363,364,365,103,104,366,75,189,367,105,106,161,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,215,230,232,233,237,251,63,260,262,263,266,269,270,274,288,66,297,299,300,304,305,309,323,69,332,334,335,384,385,386],"tindex":"06d88265-dba0-11e4-a76f-4932af9f2075","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"06d88266-dba0-11e4-a76f-633efec8f18e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"06d88267-dba0-11e4-a76f-b7fe736cd71b","variableMapping":{"nodeFlags":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[121,122,123,124,144,145,125,126,146,127,341,387,388,338,342,343,344,345,346,347,162,348,349,350,351,147,119,389,356,356,357,357,390,390,358,358,359,359,360,360,361,361,362,362,363,363,391,391,364,364,365,365,392,393,103,104,394,395,175,76,396,120,77,397,164,366,75,398,399,46,400,47,48,49,401,50,402,51,128,52,129,181,130,131,182,132,133,183,134,135,136,137,138,184,139,140,185,186,141,187,188,189,190,191,142,403,404,405,367,105,106,161,406,407,368,408,409,410,411,412,413,414,415,416,417,418,419,192,420,421,422,423,424,193,37,425,373,374,375,426,38,427,39,40,428,429,430,431,432,433,194,434,376,377,378,379,380,435,436,437,42,438,381,382,383,439,43,440,44,45,441,442,443,444,445,446,195,205,215,225,226,227,228,229,230,84,231,232,233,234,235,237,238,61,239,240,241,242,243,244,245,85,246,86,87,247,88,248,249,250,62,89,251,252,253,254,255,256,63,90,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,274,275,64,276,277,278,279,280,281,282,91,283,92,93,284,94,285,286,287,65,95,288,289,290,291,292,293,66,96,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,67,311,312,313,314,315,316,317,97,318,98,99,319,100,320,321,322,68,101,323,324,325,326,327,328,69,102,329,330,331,332,333,334,335,336,337,447,448,449,450,451,452,453,454,455,456],"tindex":"06d88268-dba0-11e4-a76f-c74ea835dbf5","variableMapping":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[2,113,5,6,14,24],"tindex":"06d8a879-dba0-11e4-a76f-13fe17750aa1","variableMapping":{"initialized":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:241","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call loadExisting only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[50,52,225],"tindex":"06d8a87a-dba0-11e4-a76f-19399575f79d","variableMapping":{"mGarbage":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"06d8a87b-dba0-11e4-a76f-0f68a93425b8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"06d8a87c-dba0-11e4-a76f-a54133086f11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[121,122,123,124,144,145,125,126,146,127,341,338,342,343,344,345,346,347,162,348,349,350,351,147,119,71,72,148,161],"tindex":"06d8a87d-dba0-11e4-a76f-ef242163f234","variableMapping":{"size":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[457],"tindex":"06d8a87e-dba0-11e4-a76f-115feae5686c","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[],"tindex":"06d8a87f-dba0-11e4-a76f-437351774ec4","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":0},{"failures":[77,58,79,80,59,60,83,61,86,87,62,63,90,64,92,93,65,66,96,67,98,99,68,69,102],"tindex":"06d8a880-dba0-11e4-a76f-7bc8219392c4","variableMapping":{"segmentSizeInBytes":"mSize","indexDivisor":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"06d8a881-dba0-11e4-a76f-a3706c1879ff","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[121,122,123,124,125,126,127,398,399,46,400,47,48,49,401,50,402,51,128,52,129,181,130,131,182,132,133,183,134,135,136,137,138,184,139,140,185,186,141,187,188,189,190,191,142,406,368,412,435,436,42,438,381,382,383,439,43,440,44,45,441,442,443,444,446,195,225,227,228,229,231,232,235,237,238,61,239,240,241,242,243,244,245,86,87,247,88,248,249,250,62,89,251,252,253,254,256,63,90,257,258,259,260,261,262,263,264,265],"tindex":"06d8a882-dba0-11e4-a76f-b970cf0eafbb","variableMapping":{"allBits":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-1},{"failures":[],"tindex":"06d8a883-dba0-11e4-a76f-39cfbc0efce0","variableMapping":{"logMessagesPercentage":"resultOrientation","logMessages":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[130],"tindex":"06d8a884-dba0-11e4-a76f-2bdb7dd02258","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[166],"tindex":"06d8a885-dba0-11e4-a76f-ff95af19400e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"06d8a886-dba0-11e4-a76f-6d9c3f1cb5dc","variableMapping":{"splitIndex":"segmentSizePower","entrySize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"06d8a887-dba0-11e4-a76f-977ef83eefdb","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"biggestStart","entityType":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"06d8a888-dba0-11e4-a76f-670a8f7af313","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:755","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(isPrepared()))\n    com.graphhopper.GraphHopper.prepare();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"06d8a889-dba0-11e4-a76f-bfb0ae92c495","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[113,5,7,17],"tindex":"06d8a88a-dba0-11e4-a76f-6f3233a84683","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"06d8cf9b-dba0-11e4-a76f-b727dc2aab10","variableMapping":{"shift":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","nodeBitMask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"06d8cf9c-dba0-11e4-a76f-59a5c50426ca","variableMapping":{"index":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-2},{"failures":[2,6,73,14,74,24],"tindex":"06d8cf9d-dba0-11e4-a76f-17b2f89a7942","variableMapping":{"osmFile":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"06d8cf9e-dba0-11e4-a76f-1f88bd590001","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[148],"tindex":"06d8cf9f-dba0-11e4-a76f-e59e3ddb0b00","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"06d8cfa0-dba0-11e4-a76f-05b774c355ad","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[162],"tindex":"06d8cfa1-dba0-11e4-a76f-b791fb036d5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[387,388,342,119,359,362,76,397,164,398,46,400,50,402,51,129,181,130,133,135,138,139,140,142,410,412,413,196,197,58,204,205,213,216,219,223,232,237,238,61,245,246,254,257,260,264,266,269,274,275,64,282,283,291,294,297,301,304,309,310,67,317,318,326,329,332,336],"tindex":"06d8cfa2-dba0-11e4-a76f-4de2bd634bc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"06d8cfa3-dba0-11e4-a76f-31f4b157e744","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":0},{"failures":[],"tindex":"06d8cfa4-dba0-11e4-a76f-59aa26725fcf","variableMapping":{"tmpNode":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[],"tindex":"06d8cfa5-dba0-11e4-a76f-afdbef9c9392","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"06d8cfa6-dba0-11e4-a76f-db661bd55e4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"06d8cfa7-dba0-11e4-a76f-6dad3dd7c25a","variableMapping":{"byteCount":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"06d8cfa8-dba0-11e4-a76f-073eb0447b2e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"06d8cfa9-dba0-11e4-a76f-af169b47a173","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"06d8cfaa-dba0-11e4-a76f-4737b41a53e7","variableMapping":{"orientation":"bwSlower","java.lang.Math.PI":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":187,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":357,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":160,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":230,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":197,"com.graphhopper.reader.OSMReaderTest.testFerry":338,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":410,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":115,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":114,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":382,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":122,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":110,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":91,"com.graphhopper.coll.CompressedArrayTest.testCompress":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":156,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":335,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":47,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":210,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":318,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":437,"com.graphhopper.util.AngleCalcTest.testOrientation":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":51,"com.graphhopper.GraphHopperTest.testPrepare":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":220,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":398,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":137,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":367,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":434,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":6,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":404,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":235,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":397,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":7,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":448,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":131,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":374,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":266,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":32,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":237,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":129,"com.graphhopper.GraphHopperTest.testLoadOSM":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":428,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":375,"com.graphhopper.reader.OSMReaderTest.testSort":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":120,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":270,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":330,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":304,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":221,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":362,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":296,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":255,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":315,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":267,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":19,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":274,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":150,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":440,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":140,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":436,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":133,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":132,"com.graphhopper.coll.OSMIDMapTest.testGetLong":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":284,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":276,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":249,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":143,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":232,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":62,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":109,"com.graphhopper.coll.CompressedArrayTest.testCompress2":35,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":101,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":111,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":283,"com.graphhopper.GraphHopperAPITest.testLoad":413,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":236,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":450,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":173,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":98,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":67,"com.graphhopper.storage.LevelGraphStorageTest.testClone":240,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":339,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":275,"com.graphhopper.reader.OSMReaderTest.testBarriers":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":435,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":200,"com.graphhopper.util.GHUtilityTest.testCopy":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":168,"com.graphhopper.routing.PathTest.testFindInstruction":104,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":252,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":64,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":179,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":412,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":18,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":416,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":331,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":294,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":406,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":94,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":231,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":172,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":201,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":307,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":456,"com.graphhopper.util.InstructionListTest.testWayList2":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":429,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":336,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":299,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":366,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":244,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":92,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":183,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":310,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":189,"com.graphhopper.coll.OSMIDMapTest.testGet":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":282,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":166,"com.graphhopper.routing.PathBidirRefTest.testExtract":394,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":11,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":251,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":194,"com.graphhopper.util.GHUtilityTest.testSort2":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":185,"com.graphhopper.reader.OSMReaderTest.testMain":343,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":169,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":443,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":152,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":271,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":246,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":88,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":4,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":264,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":86,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":17,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":449,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":250,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":147,"com.graphhopper.storage.StorablePropertiesTest.testStore":386,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":385,"com.graphhopper.storage.GraphHopperStorageTest.testClone":312,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":167,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":153,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":319,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":225,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":202,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":228,"com.graphhopper.routing.PathTest.testTime":393,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":262,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":241,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":431,"com.graphhopper.reader.OSMReaderTest.testRelation":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":82,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":253,"com.graphhopper.util.GHUtilityTest.testSortDirected":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":25,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":358,"com.graphhopper.GraphHopperTest.testFootOnly":127,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":340,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":43,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":433,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":207,"com.graphhopper.search.NameIndexTest.testCreate":355,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":356,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":453,"com.graphhopper.routing.QueryGraphTest.testOneWay":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":432,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":373,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":27,"com.graphhopper.reader.OSMReaderTest.testWithBounds":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":298,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":360,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":396,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":211,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":71,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":238,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":285,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":309,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":130,"com.graphhopper.util.InstructionListTest.testWayList":105,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":333,"com.graphhopper.GraphHopperAPITest.testDisconnected179":414,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":203,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":22,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":388,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":59,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":223,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":144,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":314,"com.graphhopper.routing.util.EncodedValueTest.testSwap":3,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":128,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":326,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":402,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":191,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":308,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":445,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":452,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":303,"com.graphhopper.routing.PathTest.testWayList":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":79,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":457,"com.graphhopper.coll.OSMIDMapTest.testGet2":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":142,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":289,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":321,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":280,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":313,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":44,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":45,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":441,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.util.GHUtilityTest.testSort":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":427,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":13,"com.graphhopper.search.NameIndexTest.testPut":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":301,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":311,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":438,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":380,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":422,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":454,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":116,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":420,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":268,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":286,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":76,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":455,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":215,"com.graphhopper.routing.PathTest.testFound":392,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":148,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":341,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":259,"com.graphhopper.util.AngleCalcTest.testAtan2":108,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":12,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":93,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":54,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":354,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":205,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":317,"com.graphhopper.util.InstructionListTest.testEmptyList":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":136,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":139,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":151,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":157,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":186,"com.graphhopper.reader.PrinctonReaderTest.testRead":387,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":383,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":281,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":78,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":196,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":287,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":74,"com.graphhopper.reader.OSMReaderTest.testFoot":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":213,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":365,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":39,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":40,"com.graphhopper.reader.OSMReaderTest.testOneWay":119,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":99,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":102,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":295,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":209,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":48,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":400,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":423,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":175,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":206,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":390,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":306,"com.graphhopper.routing.PathBidirRefTest.testExtract2":395,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":430,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":352,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":112,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":162,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":224,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":426,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":329,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":243,"com.graphhopper.GraphHopperTest.testFootAndCar":145,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":323,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":87,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":446,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":277,"com.graphhopper.GraphHopperTest.testPrepareOnly":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":188,"com.graphhopper.GraphHopperTest.testVia":123,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":58,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":349,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":229,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":161,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":327,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":177,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":208,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":155,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":258,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":90,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":269}}]
