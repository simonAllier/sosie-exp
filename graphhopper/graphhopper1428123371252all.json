[{"failures":[],"tindex":"eb77ff50-da86-11e4-9584-0d9adafb13a4","variableMapping":{"length":"nodeB","factor":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0,1],"tindex":"eb782661-da86-11e4-9584-c7c88910d1b5","variableMapping":{"min":"longTripsSpeed","dist":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[2,3,4,5,6],"tindex":"eb782662-da86-11e4-9584-9b707011e154","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"angle","java.lang.Double.POSITIVE_INFINITY":"y","weight":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"eb782663-da86-11e4-9584-cf54f7d827f7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"eb782664-da86-11e4-9584-ff75bcb9214d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:204","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No weight calculation set.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"eb782665-da86-11e4-9584-d3ecc1deef57","variableMapping":{"algo":"location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-2},{"failures":[7,8,9,10,11],"tindex":"eb782666-da86-11e4-9584-25dd8359abff","variableMapping":{"is3D":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,7,76,77,78,79,80,81,82,83,8,84,85,86,87,9,10,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,11],"tindex":"eb784d77-da86-11e4-9584-6d9cf9cb018a","variableMapping":{"cap":"edgeCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[0,1],"tindex":"eb784d78-da86-11e4-9584-f3d410d5ba8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[109,21,110,29,30,32,35,36,41,42,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"eb784d79-da86-11e4-9584-3beb6f96670b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[],"tindex":"eb784d7a-da86-11e4-9584-cfff4fb1c9ba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[140,141,142,143,144,145,146,147,148,149],"tindex":"eb784d7b-da86-11e4-9584-affd688ead95","variableMapping":{"edgeId":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"eb784d7c-da86-11e4-9584-ab157600930e","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","length":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","index":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":0},{"failures":[],"tindex":"eb784d7d-da86-11e4-9584-dfcfde02b7ef","variableMapping":{"toLat":"toHeight","fromLat":"toHeight","this":"this","dLon":"fromHeight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:43","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[150,151],"tindex":"eb784d7e-da86-11e4-9584-15eb1905e8e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"eb784d7f-da86-11e4-9584-2da8741506f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-2},{"failures":[0,152,153,154,155,156,157,158,159,160,161,71,72,162,163,75,164,165,166,167,168,169,170,171],"tindex":"eb784d80-da86-11e4-9584-65487bc3e5eb","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[30,42,114,119,123,128,132,137,138,139],"tindex":"eb787391-da86-11e4-9584-d1b1de3d9e0f","variableMapping":{"size":"len"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-1},{"failures":[172,173,174,13,175,176,0,153,177,154,155,156,178,157,158,159,160,179,161,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,17,19,37,41,46,48,204,205,206,207,118,208,209,55,57,210,211,212,213,214,127,215,216,217,218,219,136,220,221,69,71,72,162,73,222,75,5,223,224,225,226,106],"tindex":"eb787392-da86-11e4-9584-71af0e6ffdf3","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[21,29,30,35,41,42,111,113,114,116,118,119,120,122,123,125,127,128,129,131,132,134,136,137,139],"tindex":"eb787393-da86-11e4-9584-dfaa24e4ce84","variableMapping":{"bitsForEdgeFlags":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-1},{"failures":[],"tindex":"eb787394-da86-11e4-9584-7f5da42731d9","variableMapping":{"bytes":"encoded","capacity":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[],"tindex":"eb787395-da86-11e4-9584-d732ed3e9087","variableMapping":{"turnCosts":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[161,109,21,110,29,30,32,35,36,41,42,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,227,139],"tindex":"eb787396-da86-11e4-9584-c9874e0488a7","variableMapping":{"entries":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[228,229,12,230,13,231,232,233,234,175,176,235,236,237,14,238,239,240,0,152,153,177,154,155,156,178,157,158,159,160,179,161,241,242,200,243,244,201,202,203,245,246,247,15,16,248,109,17,249,18,19,20,21,22,23,24,25,26,27,28,110,250,29,30,32,33,251,34,35,36,37,252,39,40,41,42,43,44,45,46,253,47,48,49,50,204,254,205,255,256,257,206,258,111,259,260,261,262,263,264,265,112,266,113,114,267,115,268,269,270,116,117,207,271,272,273,274,275,118,119,276,277,278,208,279,280,209,281,282,283,284,285,286,287,288],"tindex":"eb787397-da86-11e4-9584-9b5f6e5fece3","variableMapping":{"size":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-2},{"failures":[],"tindex":"eb787398-da86-11e4-9584-1bb0c3dde38c","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[175,176,235,289,290],"tindex":"eb787399-da86-11e4-9584-6368655b1aaa","variableMapping":{"resultOrientation":"resultOrientation","orientation":"orientation","java.lang.Math.PI":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"eb789aaa-da86-11e4-9584-d9ceef9fc356","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"maxSpeed","java.lang.Double.POSITIVE_INFINITY":"maxSpeed","weight":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[],"tindex":"eb789aab-da86-11e4-9584-95618920a7ec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"eb789aac-da86-11e4-9584-17d492479592","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[291,292,293,294,295,296,297],"tindex":"eb789aad-da86-11e4-9584-b5c71420a35a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[152,163,75,298,299,300],"tindex":"eb7a6f6e-da86-11e4-9584-e9dde8833535","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"eb7a6f6f-da86-11e4-9584-b1306cda1201","variableMapping":{"index":"nextNodeBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"eb7a6f70-da86-11e4-9584-1db00b26ea09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:134","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"eb7a6f71-da86-11e4-9584-092212b14cfd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[301,302,303],"tindex":"eb7a6f72-da86-11e4-9584-e93877a1fab6","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[192,199],"tindex":"eb7a6f73-da86-11e4-9584-cdfe850c9647","variableMapping":{"mGarbage":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"eb7a6f74-da86-11e4-9584-0f036771890b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:139","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Encoding manager was not set.\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[],"tindex":"eb7a6f75-da86-11e4-9584-eb92860cf5d2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"eb7a6f76-da86-11e4-9584-ed9b72c6a8ce","variableMapping":{"i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"eb7a6f77-da86-11e4-9584-dbbe48f3a083","variableMapping":{"store":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[0,1,304],"tindex":"eb7a6f78-da86-11e4-9584-418c17d775c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[192,199],"tindex":"eb7a9689-da86-11e4-9584-8fe1a2fb4c0b","variableMapping":{"mGarbage":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"eb7a968a-da86-11e4-9584-7fe396effa1e","variableMapping":{"weight":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[87,9,10,106,11],"tindex":"eb7a968b-da86-11e4-9584-2794b624731c","variableMapping":{"from":"skippedEdge2","to":"skippedEdge2","reverse":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"eb7a968c-da86-11e4-9584-af1ac9d3a190","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"eb7a968d-da86-11e4-9584-917e52ca2baa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"eb7a968e-da86-11e4-9584-1dcec6f1d495","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[17,19,20,21,24,28,250,33,34,39,40,43,45,46,49,204,205,206,258,111,261,265,266,268,270,273,275,276,278,208,281,212,305,120,306,307,308,309,310,311,214,312,313,215,314,217,218,315,129,316,317,318,319,320,321,322,323,324,220,325,163,10,88,89,92,97,98,99,101,103,105,106,107,11],"tindex":"eb7a968f-da86-11e4-9584-15dc33de41e5","variableMapping":{"edgePointer":"flags","edgeEntryBytes":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"eb7a9690-da86-11e4-9584-09af0d046ad6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"eb7a9691-da86-11e4-9584-2332ee523b23","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"tmp","id":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[7,8,9,10,11],"tindex":"eb7a9692-da86-11e4-9584-c5e3a22466ba","variableMapping":{"size":"from","hash":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"eb7a9693-da86-11e4-9584-d368a237cec5","variableMapping":{"numTiles":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"eb7a9694-da86-11e4-9584-c7271fc8b6ab","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":0},{"failures":[140,141,142,143,144,145,146,147,148,149],"tindex":"eb7a9695-da86-11e4-9584-c9d8502122d9","variableMapping":{"i":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"eb7a9696-da86-11e4-9584-f96c96e62a2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[175,176,290,6],"tindex":"eb7a9697-da86-11e4-9584-edb9fe65f452","variableMapping":{"speed":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"eb7abda8-da86-11e4-9584-13fe48be2a86","variableMapping":{"high":"maxValue","len":"maxValue","start":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"eb7abda9-da86-11e4-9584-4b5ee75801a3","variableMapping":{"precision":"java.lang.Double.MAX_VALUE","lat":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[0,1,304],"tindex":"eb7abdaa-da86-11e4-9584-4f88b0fe2751","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[292,326,297],"tindex":"eb7abdab-da86-11e4-9584-9dfeb1e7338d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-1},{"failures":[87,9,10,106,11],"tindex":"eb7abdac-da86-11e4-9584-0f586110f45d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[78,79,83,84,86,87,10,88,89,91,96,98,99,101,102,103,105,106,107,11],"tindex":"eb7abdad-da86-11e4-9584-3d5aeb126bec","variableMapping":{"dx":"prevOrNextEdgeId","dy":"prevOrNextEdgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-1},{"failures":[1,304],"tindex":"eb7abdae-da86-11e4-9584-3533eada3ea2","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"eb7abdaf-da86-11e4-9584-ff7b2a689ca8","variableMapping":{"segmentSizeInBytes":"start","length":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":0},{"failures":[],"tindex":"eb7abdb0-da86-11e4-9584-672311f3acc3","variableMapping":{"nodeB":"i","edgeId":"value","reverse":"mGarbage","nodeA":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:510","type":"CtIfImpl","sourcecode":"if (boolean)\n    return int > int ? int : int + 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":0},{"failures":[],"tindex":"eb7abdb1-da86-11e4-9584-a3b537ecf024","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[7,83,8,87,9,10,88,91,92,103,105,106,107,11],"tindex":"eb7abdb2-da86-11e4-9584-d513158b8f8f","variableMapping":{"allowWrites":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1085","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"eb7abdb3-da86-11e4-9584-196b7a84fe40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[138,327,328],"tindex":"eb7abdb4-da86-11e4-9584-f34e3c8dd93b","variableMapping":{"size":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[9,96],"tindex":"eb7abdb5-da86-11e4-9584-c1ffe4505345","variableMapping":{"defaultValue":"flags","flags":"flags","this":"reverseSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[329],"tindex":"eb7abdb6-da86-11e4-9584-5f7b3ecf419b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"eb7ae4c7-da86-11e4-9584-dfc350b7a96e","variableMapping":{"resultOrientation":"java.lang.Double.MAX_VALUE","orientation":"minLat","java.lang.Math.PI":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[0,1],"tindex":"eb7ae4c8-da86-11e4-9584-715a84c1a682","variableMapping":{"incEleSum":"longTripsSpeed","eleDelta":"longTripsSpeed","incDist2DSum":"durationInHours","decEleSum":"durationInHours","fullDist2D":"durationInHours","decDist2DSum":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[],"tindex":"eb7ae4c9-da86-11e4-9584-ed44168c3a1d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"eb7ae4ca-da86-11e4-9584-c52a0fdcec9b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"eb7ae4cb-da86-11e4-9584-4bb3a051e555","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"eb7ae4cc-da86-11e4-9584-b3cb41f6a6b5","variableMapping":{"lastIndex":"key","fromIndex":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[],"tindex":"eb7ae4cd-da86-11e4-9584-b3cf8132d332","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"eb7ae4ce-da86-11e4-9584-b59659adaa2f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[330],"tindex":"eb7ae4cf-da86-11e4-9584-b75bb2fe6eba","variableMapping":{"highwayValue":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[331,332,333,334],"tindex":"eb7ae4d0-da86-11e4-9584-87c7fe619978","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:400","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[140,141,143,145,146,335,336,147,148,149,53,61,62,337,338,339,340],"tindex":"eb7ae4d1-da86-11e4-9584-2f2956aa4b25","variableMapping":{"fromX":"maxLatTmp","toX":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[],"tindex":"eb7ae4d2-da86-11e4-9584-4d9d007e25d9","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[12,13,14,245,247,15,16,341,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,251,34,35,36,37,38,252,39,40,41,42,43,44,45,46,253,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,7,76,77,78,79,80,81,82,83,8,84,85,86,87,9,10,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,11],"tindex":"eb7ae4d3-da86-11e4-9584-9d40cef4c3b1","variableMapping":{"segmentSizeInBytes":"b","index":"b"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"eb7ae4d4-da86-11e4-9584-8bf0e12bf5d1","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[13,234,175,176,236,237,14,238,239,245,16,17,19,20,21,23,24,27,28,250,33,34,39,40,43,45,46,49,204,205,206,258,111,260,261,264,265,266,268,270,273,275,276,278,208,281,288,68,342,343,212,305,120,344,306,345,307,308,309,310,311,214,312,313,215,314,217,218,315,129,346,316,347,317,318,319,320,321,322,323,324,220,325,348,349,69,70,71,72,73,74,75,350,351,352,353,354,138,355,227,139,327,356,357,5,6,358,359,360,361,7,76,77,78,79,80,81,83,8,84,85,86,87,9,10,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,11],"tindex":"eb7b0be5-da86-11e4-9584-f3ec162401c4","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-1},{"failures":[],"tindex":"eb7b0be6-da86-11e4-9584-33ee93877626","variableMapping":{"res":"relationFlags","value":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[166],"tindex":"eb7b0be7-da86-11e4-9584-0143e3d3b8f9","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"eb7b0be8-da86-11e4-9584-1d25991c28c1","variableMapping":{"minResolutionInMeter":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":0},{"failures":[21,30,35,41,42,111,114,116,118,119,120,123,125,127,128,129,132,134,136,137,138,139],"tindex":"eb7b0be9-da86-11e4-9584-83528c5bbb26","variableMapping":{"length":"high","factor":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[326],"tindex":"eb7b0bea-da86-11e4-9584-d712bd406140","variableMapping":{"minStr":"str","minutes":"val","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"eb7b0beb-da86-11e4-9584-2993f8939533","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[301,302,303],"tindex":"eb7b0bec-da86-11e4-9584-7d01ddeadedd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"eb7b0bed-da86-11e4-9584-75b12dcf60f8","variableMapping":{"nodeFrom":"hash","edgeWFrom":"this","currRef":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:75","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeWrapper.getNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failures":[],"tindex":"eb7b0bee-da86-11e4-9584-69ad7fae16ac","variableMapping":{"calcPoints":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:127","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[87,9,10,106,107],"tindex":"eb7b0bef-da86-11e4-9584-efafd77d1df0","variableMapping":{"unterfrankenGraph":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:68","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.Graph) instanceof com.graphhopper.storage.LevelGraph) {\n    throw new java.lang.IllegalStateException((\"run testAlgos only with a none-LevelGraph. Use prepare.chWeighting=no \" + \"Or use prepare.chWeighting=shortest and avoid the preparation\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[172,173,174,13,175,176,0,153,177,154,155,156,178,157,158,159,160,179,161,180,192,199,17,19,37,41,46,204,205,206,207,118,208,55,57,210,211,212,213,214,127,215,217,218,219,136,220,69,72,162,73,222,5,223,225,226,106],"tindex":"eb7b3300-da86-11e4-9584-d1bbb5d92354","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[235,362,363,0,152,153,177,154,155,156,178,157,364,158,159,160,179,365,161,366,69,70,71,72,162,163,73,74,222,75,164,165,298,299,330,166,367,368,352,167,1,291,292,304,369,370,371,372,373,374,375,376,377,378,168,379,380,381,331,293,382,383,384,385,386,387,388,169,389,390,332,294,391,392,393,394,395,396,397,398,399,400,170,401,402,403,333,295,404,405,406,407,408,409,410,171,411,412,413,334,296,414,415,416,297],"tindex":"eb7b3301-da86-11e4-9584-07ac18eefff1","variableMapping":{"value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:87","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"eb7b3302-da86-11e4-9584-9d331f0e43f0","variableMapping":{"bb":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:281","type":"CtTryImpl","sourcecode":"try {\n    ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).isLoaded();\n    return true;\n} catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"eb7b3303-da86-11e4-9584-335f80d648bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":104,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":223,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":248,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":297,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":305,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":236,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":56,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":70,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":112,"com.graphhopper.coll.CompressedArrayTest.testCompress":149,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":79,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":213,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":318,"com.graphhopper.util.AngleCalcTest.testOrientation":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":84,"com.graphhopper.GraphHopperTest.testPrepare":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":7,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":320,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":303,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":96,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":234,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":332,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":229,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":18,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":327,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":387,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":372,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":94,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":130,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":204,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":335,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":19,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":87,"com.graphhopper.GraphHopperTest.testLoadOSM":73,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":211,"com.graphhopper.reader.OSMReaderTest.testSort":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":293,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":227,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":255,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":217,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":145,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":361,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":240,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":278,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":261,"com.graphhopper.reader.OSMNodeTest.testSetTags":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":397,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":296,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":60,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":133,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":100,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":91,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":90,"com.graphhopper.coll.OSMIDMapTest.testGetLong":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":259,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":251,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":17,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":35,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":4,"com.graphhopper.coll.CompressedArrayTest.testCompress2":148,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":135,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":408,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":266,"com.graphhopper.GraphHopperAPITest.testLoad":348,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":200,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":165,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":131,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":129,"com.graphhopper.storage.LevelGraphStorageTest.testClone":23,"com.graphhopper.reader.OSMReaderTest.testBarriers":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":258,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":51,"com.graphhopper.util.GHUtilityTest.testCopy":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":391,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":198,"com.graphhopper.routing.PathTest.testFindInstruction":6,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":111,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":301,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":14,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":299,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":253,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":396,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":324,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":319,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":115,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":341,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":25,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":203,"com.graphhopper.util.InstructionListTest.testWayList2":176,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":312,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":325,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":393,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":27,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":92,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":315,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":155,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":106,"com.graphhopper.coll.OSMIDMapTest.testGet":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":265,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":330,"com.graphhopper.routing.PathBidirRefTest.testExtract":358,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":37,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":64,"com.graphhopper.storage.RAMDataAccessTest.testCopy":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":127,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":168,"com.graphhopper.storage.RAMDataAccessTest.testSegments":197,"com.graphhopper.util.GHUtilityTest.testSort2":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":101,"com.graphhopper.reader.OSMReaderTest.testMain":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":116,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":382,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":313,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":250,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":32,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":49,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":29,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":273,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":394,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":34,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":179,"com.graphhopper.storage.GraphHopperStorageTest.testClone":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":291,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":414,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":15,"com.graphhopper.routing.PathTest.testTime":357,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":413,"com.graphhopper.util.BitUtilLittleTest.testToFloat":173,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":47,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":126,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":252,"com.graphhopper.reader.OSMReaderTest.testRelation":364,"com.graphhopper.util.GHUtilityTest.testSortDirected":232,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":295,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":191,"com.graphhopper.GraphHopperTest.testFootOnly":75,"com.graphhopper.util.BitUtilLittleTest.testToInt":174,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":1,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":59,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":89,"com.graphhopper.reader.OSMElementTest.testSetTags":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":309,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":196,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":143,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":210,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":140,"com.graphhopper.reader.OSMReaderTest.testWithBounds":160,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":199,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":123,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":279,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":355,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":369,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":20,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":407,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":272,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":342,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":268,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":218,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":10,"com.graphhopper.util.BitUtilLittleTest.testToBitString":172,"com.graphhopper.util.InstructionListTest.testWayList":175,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":378,"com.graphhopper.GraphHopperAPITest.testDisconnected179":349,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":345,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":338,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":402,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":239,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":314,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":85,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":8,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":331,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":384,"com.graphhopper.routing.PathTest.testWayList":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":167,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":326,"com.graphhopper.coll.OSMIDMapTest.testGet2":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":11,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":263,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":316,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":33,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":62,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":194,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":192,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":170,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":150,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":409,"com.graphhopper.util.GHUtilityTest.testSort":231,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":147,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":54,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":286,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":356,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":254,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":171,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":269,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":138,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":202,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":214,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":164,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":300,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":45,"com.graphhopper.util.AngleCalcTest.testAtan2":3,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":247,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":380,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":114,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":308,"com.graphhopper.util.InstructionListTest.testEmptyList":233,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":367,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":166,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":294,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":102,"com.graphhopper.reader.PrinctonReaderTest.testRead":238,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":220,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":57,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":121,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":141,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":212,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":401,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":395,"com.graphhopper.reader.OSMReaderTest.testFoot":152,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":311,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":48,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":339,"com.graphhopper.reader.OSMReaderTest.testOneWay":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":340,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":132,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":137,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":277,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":390,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":310,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":347,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":80,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":86,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":78,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":189,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":350,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":55,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":365,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":244,"com.graphhopper.routing.PathBidirRefTest.testExtract2":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":334,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":415,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":178,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":403,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":323,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":26,"com.graphhopper.GraphHopperTest.testFootAndCar":163,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":219,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":30,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":67,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":260,"com.graphhopper.GraphHopperTest.testPrepareOnly":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":105,"com.graphhopper.GraphHopperTest.testVia":71,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":120,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":158,"com.graphhopper.reader.OSMElementTest.testHasTag":362,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":16,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":235,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":351,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":157,"com.graphhopper.util.AngleCalcTest.testCombined":289,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":371,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":44,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":42,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":205}}]
