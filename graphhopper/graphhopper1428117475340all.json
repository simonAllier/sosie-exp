[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"300e519a-da79-11e4-826c-0b0e7e4f1b71","variableMapping":{"initialized":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"300f14eb-da79-11e4-826c-e5ae8027ac96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[37,38,39],"tindex":"300f14ec-da79-11e4-826c-7be6890f4280","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"300f14ed-da79-11e4-826c-09abef4d9b83","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"300f14ee-da79-11e4-826c-6da479b94e40","variableMapping":{"length":"removed","factor":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"300f14ef-da79-11e4-826c-6d0991da1b2c","variableMapping":{"baseUrl":"hourStr","name":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:162","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"300f14f0-da79-11e4-826c-850b19f8307e","variableMapping":{"angle":"resultOrientation","com.graphhopper.util.AngleCalc.PI3_4":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"300f6211-da79-11e4-826c-7dc80897c32d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[40],"tindex":"300f6212-da79-11e4-826c-eb7cc6438b42","variableMapping":{"factor":"maxSpeed","value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"300f6213-da79-11e4-826c-c304880e91fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[41,42,43,44,33,36,45],"tindex":"300f6214-da79-11e4-826c-6186836bf90e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"300f6215-da79-11e4-826c-cd371048cc69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"300f6216-da79-11e4-826c-b3dc1c72454c","variableMapping":{"this":"osmReader"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.finishedReading()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[46,47],"tindex":"300f6217-da79-11e4-826c-e76a6dffba9b","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[43],"tindex":"300f6218-da79-11e4-826c-032f34363a8e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"300f6219-da79-11e4-826c-6d69a2977ddd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:312","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString())"},"status":0},{"failures":[],"tindex":"300f621a-da79-11e4-826c-2326a5a55ba0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-2},{"failures":[],"tindex":"300f621b-da79-11e4-826c-8b70c924c430","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"300f621c-da79-11e4-826c-9f4768e2fdc8","variableMapping":{"unpavedBit":"nodeBitMask","shift":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,40,37,61,62,63,64,65,38,66,67,68,39,69,70,71,72,73,74,75,76,7,8,19,20,30,31,32,33,34,35,77,78],"tindex":"300fb03d-da79-11e4-826c-2f4af5ebd4f3","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[52,41,42,43,55,79,80,56,57,58,81,60,82,83,61,62,84,85,86,87,46,88,65,89,90,66,67,91,92,93,94,95,96,69,97,98,99,71,72,73,100,101,102,44,103,30,31,32,33,34,104,35,36,105,77,45,106,107,108,109,110,111,112,113,114,115,78,116,117],"tindex":"300fb03e-da79-11e4-826c-0b8f5a535100","variableMapping":{"high":"acceptBit","guess":"acceptBit","low":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"300fb03f-da79-11e4-826c-3520cc8ab7dc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,0,1,16,20,21,24,30,31,32,33,34,35,36,106,107,108],"tindex":"300fb040-da79-11e4-826c-8ffe6973d8e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[65],"tindex":"300fb041-da79-11e4-826c-91edc696608c","variableMapping":{"edgePointer":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[118,150,124,125,133,136,151,142,143,152,153,154,155,156,157,158,159,160,161,162],"tindex":"300ffe62-da79-11e4-826c-6fa23b8132c1","variableMapping":{"res":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"300ffe63-da79-11e4-826c-b959a7ef8aff","variableMapping":{"y1":"kmInteger","y2":"kmInteger","x1":"kmInteger","x2":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-2},{"failures":[],"tindex":"30102574-da79-11e4-826c-c30366fd6618","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[118,150,124,125,133,136,151,142,143,152,153,154,155,157,158,159,160,161,162],"tindex":"30102575-da79-11e4-826c-934f788d037c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"30107396-da79-11e4-826c-37d11ab6e2cc","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[163,164,165,166,167,168,44,34,104,35,105],"tindex":"30107397-da79-11e4-826c-0785537447f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"30107398-da79-11e4-826c-3da2508f7bd6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:95","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"30107399-da79-11e4-826c-37c3256f9870","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[124,125,127,128,169,170,142,143,20,24],"tindex":"30109aaa-da79-11e4-826c-7fdde3630de8","variableMapping":{"from":"dLon","end":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"30110fdb-da79-11e4-826c-5997fd66de5b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[],"tindex":"30110fdc-da79-11e4-826c-efd3c5391b8a","variableMapping":{"res":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"30110fdd-da79-11e4-826c-3916bb48f24c","variableMapping":{"mKeys":"mValues","nkeys":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[],"tindex":"30110fde-da79-11e4-826c-2b82028505c9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[73],"tindex":"30110fdf-da79-11e4-826c-898b860c644d","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[171],"tindex":"30110fe0-da79-11e4-826c-4f36f66c0b7f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"30110fe1-da79-11e4-826c-07cab0bbe589","variableMapping":{"pointIndex":"unvisitedDeadEnds","index":"del"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"30110fe2-da79-11e4-826c-fffa29e31619","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[37,83,62,85,65,38,90,67,92,39,96,97,73,100],"tindex":"30110fe3-da79-11e4-826c-a13a5c111e3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[83,62,85,90,67,92],"tindex":"30110fe4-da79-11e4-826c-17b67da015ce","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"30110fe5-da79-11e4-826c-f997ae56c42d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"30110fe6-da79-11e4-826c-615d8edb82b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[172,163,173,174,175,176,177,178,179,180,181,182,183,184,185,186,48,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,118,213,119,120,121,122,150,123,124,125,126,127,128,129,130,131,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,134,135,232,136,233,137,138,139,140,151,141,142,143,144,145,146,147,148,149,165,234,166,235,236,237,238,239,240,241,242,243,244,245,246,247,248,49,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,50,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,167,292,293,168,294,295,296,297,298,299,300,301,302,303,304,305,306,307,51,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,0,1,334,335,336,337,338,339,340,341,342,343,344,345,52,346,347,348,349,350,351,352,353,354,355,356,357,40,358,75,76,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371,2,372,3,373,374,375,376,377,4,5,378,379,380,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,381,25,26,27,28,29,44,103,30,31,32,33,34,104,35,36,105,77,45,106,107,108,109,110,111,112,113,114,115,78,117,382,383,384],"tindex":"301136f7-da79-11e4-826c-71e7b6318d1b","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"301136f8-da79-11e4-826c-2bb67b3d2df1","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"301136f9-da79-11e4-826c-2bdb2fec0219","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"length","tmpNode":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"301136fa-da79-11e4-826c-5138d16d3284","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"301136fb-da79-11e4-826c-d316ea7686fc","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"301136fc-da79-11e4-826c-a37c49fe090c","variableMapping":{"val":"i","com.graphhopper.coll.SparseIntIntArray.DELETED":"i","keys":"elem","values":"elem","i":"i","o":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:134","type":"CtIfImpl","sourcecode":"if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n    if (int != int) {\n        int[][int] = int[][int];\n        int[][int] = int;\n    } \n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":0},{"failures":[385,77],"tindex":"301136fd-da79-11e4-826c-f522b60aac0c","variableMapping":{"arrayLength":"minutes","maxGeoRef":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"301136fe-da79-11e4-826c-c37b5e8bf2ed","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"301136ff-da79-11e4-826c-0ddfecc4073b","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"turnRestrictionBit","roundaboutBit":"flags","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","forwardBit":"turnRestrictionBit","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[352,33,105,45,106,107,108,109,110,111,112,113,114,115,117],"tindex":"30113700-da79-11e4-826c-abae0029622c","variableMapping":{"encodingManager":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1003","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    throw new java.lang.IllegalArgumentException(((\"Contraction hierarchies preparation \" + \"requires (at the moment) only one vehicle. But was:\") + (com.graphhopper.routing.util.EncodingManager)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-1},{"failures":[],"tindex":"30113701-da79-11e4-826c-910ced50d589","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.EMPTY_PARENT":"i","n":"child","parents":"elem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:131","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":0},{"failures":[],"tindex":"30113702-da79-11e4-826c-f9f0f458eded","variableMapping":{"id":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[83,62,85,90,67,92,96,69,97,73,100],"tindex":"30113703-da79-11e4-826c-93dc88dd6e13","variableMapping":{"str":"wayTypeName","name":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:82","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[386],"tindex":"30115e14-da79-11e4-826c-5ff1e62e43e8","variableMapping":{"minStr":"str","minutes":"val","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"30115e15-da79-11e4-826c-97b73bffd5d6","variableMapping":{"bytes":"bits","capacity":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"30115e16-da79-11e4-826c-6f8ab1bd060b","variableMapping":{"segmentsToMap":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":0},{"failures":[387,388,389,390,172,163,173,174,175,391,176,177,178,179,180,181,182,183,184,185,186,48,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,118,213,119,120,121,122,150,123,124,125,126,127,128,129,130,131,214,215,216,217,218,219,220,221,222,223,224,392,225,226,227,228,229,230,231,134,135,232,136,233,137,138,139,140,151,141,142,143,144,145,146,147,148,149,393,394,164,165,395,234,166,235,236,237,396,238,239,240,241,242,243,244,245,246,247,248,49,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,397,398,399,400,401,402,403,404,405,406,407,50,408,409,410,411,412,413,414,415,416,417,418,419,420,421,275,422,423,424,425,426,427,428,429,430,431,432,287,288,289,290,291,167,292,293,168,294,295,296,433,297,298,299,300,301,302,303,304,305,306,307,51,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,434,435,436,437,438,439,440,441,0,1,334,335,336,337,338,339,340,341,342,343,344,345,52,346,347,348,349,350,351,352,353,354,355,356,357,40,358,75,76,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371,2,372,3,373,374,375,376,377,4,5,378,379,380,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,381,25,26,27,28,29,442,443,444,445,446,44,103,30,31,32,33,34,447,104,35,36,105,448,77,45,106,107,108,109,110,111,112,47,113,114,115,78,116,117,382,449,450,451,452,453,383,384],"tindex":"30115e17-da79-11e4-826c-7fb0833ed5f2","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"30115e18-da79-11e4-826c-6dcb642a01e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"30115e19-da79-11e4-826c-3f448d143bec","variableMapping":{"from":"maxTurnCosts","to":"maxTurnCosts","reverse":"restricted"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[],"tindex":"30115e1a-da79-11e4-826c-cd37d1f7b047","variableMapping":{"width":"element","lonSimilar":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-2},{"failures":[388,389,390,163,176,196,202,207,209,119,121,137,139,393,165,166,238,258,264,269,271,167,168,297,317,323,328,330,454,455,339,343,344,345,52,76,359,361,367,368,371,26,442,443,444,445,446,44,30,34,104,35,105,106,109,110],"tindex":"30115e1b-da79-11e4-826c-19d83bf8a85d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[176,184,48,207,238,246,49,269,397,405,50,427,287,291,297,305,51,328,334,356,54,456,40,76,359,367,2,5,7,8,19,20],"tindex":"30115e1c-da79-11e4-826c-55ad9f37fc2d","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed","unknownSpeed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[37,38,39],"tindex":"30115e1d-da79-11e4-826c-79d3d0b00d06","variableMapping":{"workerThreads":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"30115e1e-da79-11e4-826c-65896f86e74d","variableMapping":{"angle":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[37,457,458,459,85,63,460,38,461,462,463,92,68,464,39,69,465,466,97,70,467,468,100,74],"tindex":"30115e1f-da79-11e4-826c-ad27066a511e","variableMapping":{"slice":"maxSpeed","azimuth":"maxSpeed","cp":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:111","type":"CtIfImpl","sourcecode":"if (double < (double * 3)) {\n    java.lang.String = \"NE\";\n} else if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[6,7,8,26,27,29],"tindex":"30118530-da79-11e4-826c-63de472463c6","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"30118531-da79-11e4-826c-1914853aed5a","variableMapping":{"dist":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[163,164,165,166,167,168,44,34,104,35,105],"tindex":"30118532-da79-11e4-826c-4d88fa2d8941","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"30118533-da79-11e4-826c-893b5c085fbf","variableMapping":{"x1":"prevEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:158","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[],"tindex":"30118534-da79-11e4-826c-c76974293928","variableMapping":{"da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"30118535-da79-11e4-826c-61384d674fcb","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[],"tindex":"30118536-da79-11e4-826c-d31532125243","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":0},{"failures":[57],"tindex":"30118537-da79-11e4-826c-bf70846794f1","variableMapping":{"towerNodeDistance":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[82,469,87,46,88,89,470,94,471,99,472,102],"tindex":"30118538-da79-11e4-826c-e7b9d9f40c72","variableMapping":{"high":"value","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"30118539-da79-11e4-826c-a94c27de81a9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,287,289,290,168,296,297,298,299,300,301,302,303,304,305,306,308,309,311,312,314,315,316,317,320,322,323,324,325,327,328,330,332,333,334,339,2,372,3,373,374,375,376,377,4,5,378,380,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,381,25,26,27,28,29,44,103,30,31,34,104,36],"tindex":"3011853a-da79-11e4-826c-e7910399dfb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[55,56,81],"tindex":"3011853b-da79-11e4-826c-39740c79e81f","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"3011853c-da79-11e4-826c-b7fcdcf1f939","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"3011853d-da79-11e4-826c-57bc39cde45d","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"3011853e-da79-11e4-826c-9b5485102814","variableMapping":{"distance":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"3011853f-da79-11e4-826c-f3efa3e73017","variableMapping":{"ret":"i","retBucket":"element","i":"element","bucketSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"30118540-da79-11e4-826c-73125c7af152","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"3011ac51-da79-11e4-826c-dd78a7dee6c5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[37,82,83,61,62,85,460,87,46,88,65,38,89,90,66,67,92,464,94,39,96,69,97,467,99,72,73,473,100,102,77,45,106,107,109,110,111,112,115,78,117],"tindex":"3011ac52-da79-11e4-826c-9b776bb78c4d","variableMapping":{"newName":"s","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:229","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"newName mustn\\'t be empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-1},{"failures":[474,475,476,477,111,382],"tindex":"3011ac53-da79-11e4-826c-4b991ffcd5cb","variableMapping":{"endIndexPlusOne":"maxTurnCosts","frontIndex":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"3011ac54-da79-11e4-826c-efd07df0a900","variableMapping":{"noNumberValue":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:332","type":"CtReturnImpl","sourcecode":"return int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"3011ac55-da79-11e4-826c-5f2fc1834461","variableMapping":{"weightApproximation":"eleDelta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"3011ac56-da79-11e4-826c-df862004317e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-2},{"failures":[],"tindex":"3011ac57-da79-11e4-826c-913efe91ec0b","variableMapping":{"y":"speed","angle":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":0},{"failures":[41,42,43,44,33,36,45],"tindex":"3011ac58-da79-11e4-826c-b9146a0a9071","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[386],"tindex":"3011ac59-da79-11e4-826c-fd02ce3a2562","variableMapping":{"segmentSizeInBytes":"kmInteger","length":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[82,62,46,89,67,73,47],"tindex":"3011ac5a-da79-11e4-826c-29ae101d9adf","variableMapping":{"segmentsToMap":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[82,87,46,88,89,94,99,102],"tindex":"3011ac5b-da79-11e4-826c-e953b4b28f3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"3011ac5c-da79-11e4-826c-f5654a2bb421","variableMapping":{"i":"mSize","child":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":322,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":381,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":71,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":167,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":398,"com.graphhopper.reader.OSMReaderTest.testFerry":77,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":335,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":66,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":473,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":138,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":103,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":248,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":453,"com.graphhopper.coll.CompressedArrayTest.testCompress":153,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":210,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":417,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":378,"com.graphhopper.GraphHopperTest.testPrepare":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":428,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":2,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":461,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":17,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":343,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":220,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":100,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":347,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":296,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":136,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":354,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":38,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":15,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":120,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":272,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":67,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":165,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":160,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":6,"com.graphhopper.GraphHopperTest.testLoadOSM":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":126,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":121,"com.graphhopper.reader.OSMReaderTest.testSort":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":68,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":235,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":205,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":163,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":429,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":367,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":268,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":321,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":183,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":395,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":238,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":307,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":70,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":141,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":21,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":135,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":140,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":447,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":406,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":11,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":299,"com.graphhopper.coll.OSMIDMapTest.testGetLong":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":251,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":257,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":313,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":168,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":315,"com.graphhopper.coll.CompressedArrayTest.testCompress2":152,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":195,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":39,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":49,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":433,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":279,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":187,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":178,"com.graphhopper.storage.LevelGraphStorageTest.testClone":301,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":385,"com.graphhopper.reader.OSMReaderTest.testBarriers":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":239,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":355,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":475,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":14,"com.graphhopper.util.GHUtilityTest.testCopy":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":149,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":101,"com.graphhopper.routing.PathTest.testFindInstruction":359,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":472,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":240,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":42,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":334,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":329,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":457,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":206,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":266,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":252,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":376,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":303,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":403,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":286,"com.graphhopper.util.InstructionListTest.testWayList2":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":460,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":424,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":127,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":211,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":90,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":164,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":271,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":357,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":305,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":455,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":477,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":411,"com.graphhopper.storage.RAMDirectoryTest.testSynched":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":249,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":13,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":177,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":26,"com.graphhopper.coll.OSMIDMapTest.testGet":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":247,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":43,"com.graphhopper.routing.PathBidirRefTest.testExtract":348,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":317,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":274,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":422,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":131,"com.graphhopper.util.GHUtilityTest.testSort2":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":22,"com.graphhopper.reader.OSMReaderTest.testMain":106,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":294,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":470,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":93,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":55,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":426,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":51,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":311,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":332,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":308,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":37,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":278,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":314,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":78,"com.graphhopper.storage.StorablePropertiesTest.testStore":393,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":454,"com.graphhopper.storage.GraphHopperStorageTest.testClone":180,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":81,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":57,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":189,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":287,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":98,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":404,"com.graphhopper.routing.PathTest.testTime":75,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":466,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":330,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":392,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":129,"com.graphhopper.reader.OSMReaderTest.testRelation":47,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":416,"com.graphhopper.util.GHUtilityTest.testSortDirected":341,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":63,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":439,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":363,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":56,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":222,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":437,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":151,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":10,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":412,"com.graphhopper.search.NameIndexTest.testCreate":390,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":360,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":282,"com.graphhopper.routing.QueryGraphTest.testOneWay":369,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":157,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":452,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":119,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":154,"com.graphhopper.reader.OSMReaderTest.testWithBounds":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":270,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":351,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":418,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":46,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":298,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":95,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":260,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":253,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":176,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":8,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":208,"com.graphhopper.util.InstructionListTest.testWayList":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":91,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":405,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":262,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":400,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":458,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":384,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":353,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":431,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":32,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":182,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":379,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":199,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":5,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":328,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":237,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":28,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":391,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":281,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":94,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":172,"com.graphhopper.routing.PathTest.testWayList":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":430,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":471,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":408,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":386,"com.graphhopper.coll.OSMIDMapTest.testGet2":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":29,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":325,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":259,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":192,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":53,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":245,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":142,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":144,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":96,"com.graphhopper.util.GHUtilityTest.testSort":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":421,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":162,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":463,"com.graphhopper.search.NameIndexTest.testPut":388,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":396,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":217,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":225,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":228,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":61,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":40,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":226,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":234,"com.graphhopper.storage.MMapDirectoryTest.testSynched":438,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":450,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":254,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":350,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":285,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":275,"com.graphhopper.routing.PathTest.testFound":358,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":65,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":105,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":327,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":171,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":289,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":462,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":250,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":389,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":50,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":185,"com.graphhopper.util.InstructionListTest.testEmptyList":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":74,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":23,"com.graphhopper.reader.PrinctonReaderTest.testRead":383,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":207,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":139,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":246,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":407,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":397,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":255,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":476,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":436,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":465,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":82,"com.graphhopper.reader.OSMReaderTest.testFoot":45,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":420,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":124,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":159,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":331,"com.graphhopper.reader.OSMReaderTest.testOneWay":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":125,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":188,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":203,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":267,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":468,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":197,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":84,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":414,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":375,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":3,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":380,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":169,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":373,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":356,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":410,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":362,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":116,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":174,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":441,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":283,"com.graphhopper.routing.PathBidirRefTest.testExtract2":349,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":128,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":219,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":387,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":467,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":111,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":170,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":432,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":122,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":204,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":304,"com.graphhopper.GraphHopperTest.testFootAndCar":33,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":196,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":309,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":474,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":242,"com.graphhopper.storage.StorablePropertiesTest.testLoad":394,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":25,"com.graphhopper.GraphHopperTest.testPrepareOnly":44,"com.graphhopper.GraphHopperTest.testVia":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":218,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":399,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":113,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":291,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":52,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":200,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":54,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":413,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":60,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":326,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":324,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":166}}]
