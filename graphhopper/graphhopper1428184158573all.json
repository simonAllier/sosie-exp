[{"failures":[0,1,2,3],"tindex":"72a3bea4-db14-11e4-a649-cf9871ec3638","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"72a54545-db14-11e4-a649-f1a21891b3f1","variableMapping":{"i":"edgeEntryBytes","lastIndex":"lastEdgeIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[4,5,6,7,8,9,10],"tindex":"72a54546-db14-11e4-a649-415fc9d7470c","variableMapping":{"retBucket":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"72a54547-db14-11e4-a649-fbed5b5489b7","variableMapping":{"distance":"lon","speed":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[],"tindex":"72a54548-db14-11e4-a649-0738794ebb74","variableMapping":{"byteCount":"flags","longSegmentSize":"flags","segmentsToMap":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:120","type":"CtIfImpl","sourcecode":"if ((long % long) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"72a54549-db14-11e4-a649-9795eafabacd","variableMapping":{"maxLeafEntries":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":0},{"failures":[],"tindex":"72a5454a-db14-11e4-a649-61d55ffbb907","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[11,12,13],"tindex":"72a5454b-db14-11e4-a649-051aa79c6286","variableMapping":{"arg":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:92","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-1},{"failures":[],"tindex":"72a56c5c-db14-11e4-a649-b1d8e06c6aae","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"72a56c5d-db14-11e4-a649-5f7ca6d76c74","variableMapping":{"nextTowerId":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"72a56c5e-db14-11e4-a649-074aa5545a51","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"72a56c5f-db14-11e4-a649-159fe0796317","variableMapping":{"size":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[14,15,16,17,18,19,20],"tindex":"72a56c60-db14-11e4-a649-c55774cafff6","variableMapping":{"dist":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[21],"tindex":"72a56c61-db14-11e4-a649-2f83433d0ec0","variableMapping":{"maxMCSpeed":"fwdIncline","speed":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[22,23,24,25,26,27,21,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"72a56c62-db14-11e4-a649-8bfea23cfb55","variableMapping":{"size":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"72a56c63-db14-11e4-a649-8fa482e59ca8","variableMapping":{"resultOrientation":"maxLat","orientation":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"72a71a14-db14-11e4-a649-afd11dcb84d4","variableMapping":{"item":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"72a71a15-db14-11e4-a649-f55a0b7e7e2c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[4,95,96,97],"tindex":"72a71a16-db14-11e4-a649-033331633c3a","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[98,4,99,100,101,102,103,104,5,105,6,106,107,108,109,110,111,112,113,114,115,116,117,118,119,7,120,121,8,122,9,123,124,125,126,127,128,10],"tindex":"72a71a17-db14-11e4-a649-b3c02f3e8847","variableMapping":{"foundIndex":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"72a71a18-db14-11e4-a649-e73016505566","variableMapping":{"obtained":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[129,130],"tindex":"72a71a19-db14-11e4-a649-112b740ea966","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[12],"tindex":"72a71a1a-db14-11e4-a649-4537cef23d99","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[],"tindex":"72a71a1b-db14-11e4-a649-874616133e3c","variableMapping":{"high":"lastTime","guess":"lastTime","low":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"72a71a1c-db14-11e4-a649-2d40cd523b8e","variableMapping":{"bytePos":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[131,132],"tindex":"72a71a1d-db14-11e4-a649-49cc200fa079","variableMapping":{"node":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"72a71a1e-db14-11e4-a649-45b65926405f","variableMapping":{"encoded":"flags","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[],"tindex":"72a71a1f-db14-11e4-a649-6d224bb5801b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[133,134,135,136,137],"tindex":"72a71a20-db14-11e4-a649-2d5c6ed3bf68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"72a74131-db14-11e4-a649-8bd31731ef4b","variableMapping":{"eleDelta":"fwdSlower","decEleSum":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"72a74132-db14-11e4-a649-c93743ae1c75","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[],"tindex":"72a74133-db14-11e4-a649-dbeff463f508","variableMapping":{"closed":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:181","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[138,22,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,133,134,154,155,156,157,158,159,160,161,135,162,136,163,164,165,166,167,168,169,28,170,171,137,44,45,46,49,50,52,172,173,174,17,175,65,66,67,176,177,178,179,18,180,181,182,183,184,185,186,187,131,188,189,190,86,132,191,87,192,193,88,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,89,213,214,215,216,217,90,218,219,220,221,91,222,92,93,223,224],"tindex":"72a74134-db14-11e4-a649-c70c91adf9e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.create(long)"},"status":-1},{"failures":[],"tindex":"72a74135-db14-11e4-a649-a1c035fc0ecf","variableMapping":{"val":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[225],"tindex":"72a74136-db14-11e4-a649-71d095cd89f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[226,227,228,229,230,231,232,233,234,136,235,44,48,52,236,237,238,186,239,240,241,201],"tindex":"72a74137-db14-11e4-a649-13bde2232fa0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:127","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"72a74138-db14-11e4-a649-0f5e2b83cd9b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"72a74139-db14-11e4-a649-b9d1c525bc0a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"72a7413a-db14-11e4-a649-df20f2edc3ad","variableMapping":{"weight":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[242,243,244,245,229,246,235,39,41,42,43,247,248,249,250,251,45,46,47,48,52,53],"tindex":"72a7413b-db14-11e4-a649-8f8bb3e93bb8","variableMapping":{"directionBitMask":"directionBitMask","blockByDefault":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[2,112,96,113,244,114,252,115,116,253,254,117,118,255,119,256],"tindex":"72a7413c-db14-11e4-a649-774a6b970734","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[226],"tindex":"72a7413d-db14-11e4-a649-ab8b00fd7f72","variableMapping":{"workerThreads":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":-1},{"failures":[],"tindex":"72a7684e-db14-11e4-a649-097e674a07b7","variableMapping":{"distance":"lat","speed":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[],"tindex":"72a7684f-db14-11e4-a649-f1f02a8e63d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:143","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"72a76850-db14-11e4-a649-d962961d937d","variableMapping":{"directionBitMask":"flags","flags":"flags","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[228,231,233,235,48,52],"tindex":"72a76851-db14-11e4-a649-9dcb33b66c77","variableMapping":{"time":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"72a76852-db14-11e4-a649-35b8c8b1326a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":0},{"failures":[225,130,257,258,259,73,260,261,262,263,80,264,265,266,267,268,269,195,205,211,90,218],"tindex":"72a76853-db14-11e4-a649-d7db7233ddef","variableMapping":{"index":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-1},{"failures":[],"tindex":"72a76854-db14-11e4-a649-51de68475a37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:41","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"72a76855-db14-11e4-a649-05a89d47ddc9","variableMapping":{"cap":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"72a76856-db14-11e4-a649-c10bd4e725b1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"72a76857-db14-11e4-a649-a356412fa09a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[11,21],"tindex":"72a76858-db14-11e4-a649-bf960dccb0e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[270],"tindex":"72a76859-db14-11e4-a649-0bdfcdf5e872","variableMapping":{"maxMCSpeed":"maxSpeed","speed":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"72a7685a-db14-11e4-a649-7df67b046752","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[4,102,95,6,109,96,117,97,9,126],"tindex":"72a7685b-db14-11e4-a649-99496a9a2e47","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[271],"tindex":"72a7685c-db14-11e4-a649-057996551fd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[235,251],"tindex":"72a78f6d-db14-11e4-a649-97e25ff7a785","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[161,168,28,272],"tindex":"72a78f6e-db14-11e4-a649-0bced5a547e9","variableMapping":{"locs":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[273,274],"tindex":"72a78f6f-db14-11e4-a649-eb8966aa8152","variableMapping":{"from":"i","hash":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"72a78f70-db14-11e4-a649-4bb252e79b4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:479","type":"CtLocalVariableImpl","sourcecode":"java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null)"},"status":-2},{"failures":[],"tindex":"72a78f71-db14-11e4-a649-af000212848e","variableMapping":{"numTiles":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":0},{"failures":[246],"tindex":"72a78f72-db14-11e4-a649-0f6de6517e46","variableMapping":{"distance":"longTripsSpeed","dist":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"72a78f73-db14-11e4-a649-b16ee4a09f27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[275,246],"tindex":"72a78f74-db14-11e4-a649-55528d54cf29","variableMapping":{"str":"motorcarTag","name":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[141,142,143,144,145,146,147,148,150,151,152,153,134,154,155,156,157,158,159,160,161,135,162,136,163,164,165,166,167,168,169,28,170,171,137,276,45,46,49,50,277],"tindex":"72a78f75-db14-11e4-a649-091f15912ebb","variableMapping":{"bytesForFlags":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"72a78f76-db14-11e4-a649-e5fcb6a03264","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:30","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Call doWork only once!\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[],"tindex":"72a78f77-db14-11e4-a649-9b17dc6b9211","variableMapping":{"java.lang.Double.NaN":"java.lang.Double.POSITIVE_INFINITY","com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","id":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:482","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[270],"tindex":"72a78f78-db14-11e4-a649-e9dd3b3f0837","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"72a78f79-db14-11e4-a649-79b6f9db76b8","variableMapping":{"nodeId":"bits","nodeIdOffset":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[],"tindex":"72a78f7a-db14-11e4-a649-d91db60c6e2d","variableMapping":{"i":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":0},{"failures":[],"tindex":"72a78f7b-db14-11e4-a649-1512264c00ef","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"72a78f7c-db14-11e4-a649-136cc4332590","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","key":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"72a7b68d-db14-11e4-a649-2b51e3667f2c","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","edge":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-2},{"failures":[],"tindex":"72a7b68e-db14-11e4-a649-ad7110ac409c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"72a7b68f-db14-11e4-a649-65cf5af3c897","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[225,278],"tindex":"72a7b690-db14-11e4-a649-5fde9beb8fe8","variableMapping":{"i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"72a7b691-db14-11e4-a649-279f2e2d128c","variableMapping":{"empty":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"72a7b692-db14-11e4-a649-2b86c1b22622","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"72a7b693-db14-11e4-a649-edd6113606a4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[148],"tindex":"72a7b694-db14-11e4-a649-6df6f560b4fe","variableMapping":{"cap":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[225,278,279],"tindex":"72a7b695-db14-11e4-a649-e98df69c0f9e","variableMapping":{"allBits":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[140,142,148,149,153,133,134,154,155,156,157,158,159,160,161,135,162,136,163,164,165,166,167,168,169,28,170,171,137,45,46,47,48,49,51,52,272,280],"tindex":"72a7b696-db14-11e4-a649-bff556cc7fd4","variableMapping":{"possibleToAdd":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:85","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPlace method.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"72a7b697-db14-11e4-a649-a9b4c4891dbc","variableMapping":{"finishedTo":"defaultB","finishedFrom":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"72a7b698-db14-11e4-a649-e7663d25cc34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[4,102,95,6,109,96,113,117,97,9,126],"tindex":"72a7b699-db14-11e4-a649-e9e8667879a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[146,148,152,161,273],"tindex":"72a7ddaa-db14-11e4-a649-e9045e5ca72e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[22,281,282,283,24,25,28,30,33,35,36,37,246,39,40,41,42,43,284,247,248,249,250,285,251,44,46,47,49,51,52,57,58,59,60,61,62,64,65,67,286,69,70,71,72,73,74,76,77,78,79,80,81,83,287,288,289,290,291,292,84,268,293,294,295,296,297,298,299,300,301,87,88,89,90,91,93,302,303,304,305,306,307,308],"tindex":"72a7ddab-db14-11e4-a649-671488713b7a","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"72a7ddac-db14-11e4-a649-4b8f99779818","variableMapping":{"algo":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"72a7ddad-db14-11e4-a649-1fdf5963ef0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"72a7ddae-db14-11e4-a649-37caa4aa78f9","variableMapping":{"this":"this","finishedFrom":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":0},{"failures":[21],"tindex":"72a7ddaf-db14-11e4-a649-236c28d17793","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[],"tindex":"72a7ddb0-db14-11e4-a649-8b0bd9a6878e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[22,139,309,225,278,279,310,311,140,142,143,148,149,150,153,133,134,157,160,162,163,164,137,32,34,246,235,251,312,313,45,48,272,69,70,71,314,257,315,316,317,318,74,319,77,78,320,261,321,322,323,324,81,325,291,326,265,327,328,329,330,293,331,87,88,194,195,202,332,215,219,91,223],"tindex":"72a7ddb1-db14-11e4-a649-314d4a55634e","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[228],"tindex":"72a7ddb2-db14-11e4-a649-7fe06bb66c9d","variableMapping":{"oldValueIndex":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"72a7ddb3-db14-11e4-a649-b7c41896c754","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"72a7ddb4-db14-11e4-a649-fff909c98484","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[134],"tindex":"72a7ddb5-db14-11e4-a649-3bcec38b488b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"72a7ddb6-db14-11e4-a649-27b3eca2db88","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"72a7ddb7-db14-11e4-a649-35666d1e6648","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":217,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":30,"com.graphhopper.search.NameIndexTest.testCreate":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":168,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":305,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":11,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":326,"com.graphhopper.reader.OSMReaderTest.testFerry":246,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":309,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":66,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":276,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":100,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":62,"com.graphhopper.reader.OSMReaderTest.testWithBounds":250,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":308,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":266,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":310,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":83,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":7,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":144,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":292,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":150,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":236,"com.graphhopper.GraphHopperTest.testPrepare":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":167,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":140,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":134,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":274,"com.graphhopper.util.BitUtilLittleTest.testToBitString":281,"com.graphhopper.util.InstructionListTest.testWayList":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":105,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":102,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":17,"com.graphhopper.GraphHopperAPITest.testDisconnected179":280,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":278,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":241,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":63,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":313,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":331,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":20,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":47,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":74,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":153,"com.graphhopper.GraphHopperTest.testLoadOSM":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":64,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":323,"com.graphhopper.reader.OSMReaderTest.testSort":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":136,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":129,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":249,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":296,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":149,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":91,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":109,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":212,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":171,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":184,"com.graphhopper.routing.PathTest.testWayList":37,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":252,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":294,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":12,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":216,"com.graphhopper.coll.OSMIDMapTest.testGet2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":137,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":219,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":131,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":71,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":256,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":118,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":178,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":179,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":164,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":173,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":303,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":176,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":180,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":157,"com.graphhopper.coll.OSMIDMapTest.testGetLong":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":156,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":195,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":108,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":242,"com.graphhopper.search.NameIndexTest.testPut":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":175,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":209,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":87,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":288,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":21,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":51,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":112,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":316,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":271,"com.graphhopper.GraphHopperAPITest.testLoad":272,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":170,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":229,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":225,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":261,"com.graphhopper.storage.LevelGraphStorageTest.testClone":197,"com.graphhopper.reader.OSMReaderTest.testBarriers":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":314,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":289,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":84,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":53,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":172,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":228,"com.graphhopper.util.GHUtilityTest.testCopy":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":159,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":186,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":253,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":188,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":307,"com.graphhopper.routing.PathTest.testFindInstruction":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":107,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":258,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":277,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":55,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":328,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":139,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":233,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":161,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":122,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":163,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":311,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":103,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":138,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":146,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":191,"com.graphhopper.reader.PrinctonReaderTest.testRead":312,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":81,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":67,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":227,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":239,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":61,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":291,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":115,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":290,"com.graphhopper.util.InstructionListTest.testWayList2":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":128,"com.graphhopper.reader.OSMReaderTest.testFoot":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":330,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":329,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":93,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":0,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":16,"com.graphhopper.reader.OSMReaderTest.testOneWay":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":27,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":262,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":201,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":85,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":264,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":80,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":101,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":158,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":240,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":320,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":42,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":145,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":28,"com.graphhopper.coll.OSMIDMapTest.testGet":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":315,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":143,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":234,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":298,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":59,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":106,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":181,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":230,"com.graphhopper.storage.RAMDataAccessTest.testCopy":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":268,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":243,"com.graphhopper.storage.RAMDataAccessTest.testSegments":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":165,"com.graphhopper.reader.OSMReaderTest.testMain":39,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":182,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":133,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":332,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":117,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":237,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":207,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":119,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":223,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":284,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":32,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":204,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":121,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":210,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":148,"com.graphhopper.storage.StorablePropertiesTest.testStore":68,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":94,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":324,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":275,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":200,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":270,"com.graphhopper.GraphHopperTest.testFootAndCar":48,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":79,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":187,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":205,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":255,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":113,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":185,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":304,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":116,"com.graphhopper.util.BitUtilLittleTest.testToFloat":282,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":92,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":226,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":147,"com.graphhopper.reader.OSMReaderTest.testRelation":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":162,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":214,"com.graphhopper.GraphHopperTest.testPrepareOnly":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":169,"com.graphhopper.GraphHopperTest.testVia":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":265,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":127,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":190,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":300,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":31,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":26,"com.graphhopper.GraphHopperTest.testFootOnly":52,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":232,"com.graphhopper.util.BitUtilLittleTest.testToInt":283,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":98,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":247,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":177,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":120,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":155,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":218,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":70}}]
