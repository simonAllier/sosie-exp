[{"failures":[0,1],"tindex":"6b337be6-db9a-11e4-8253-274db900e555","variableMapping":{"currentBucket":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[],"tindex":"6b34db77-db9a-11e4-8253-71f6a2f920e3","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6b34db78-db9a-11e4-8253-b1ee7c1f935c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:504","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"6b34db79-db9a-11e4-8253-cb985b235d9d","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[],"tindex":"6b34db7a-db9a-11e4-8253-1996da65207e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[2],"tindex":"6b34db7b-db9a-11e4-8253-4501e1251d33","variableMapping":{"str":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:206","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[3,4,5],"tindex":"6b34db7c-db9a-11e4-8253-ad08b4626c4f","variableMapping":{"tmpEntries":"component"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14],"tindex":"6b34db7d-db9a-11e4-8253-d9a825b7585c","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[15,16,6,7,8,9,10,17,11,18,12,13,14,19],"tindex":"6b34db7e-db9a-11e4-8253-a996922237b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"6b34db7f-db9a-11e4-8253-e55d54f3f163","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,3,158,159,160,4,5,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,15,16,6,206,207,7,8,208,209,210,211,212,213,214,215,216,217,9,218,10,17,11,219,18,12,220,221,222,223,224,225,226,227,13,14,228,229,230,19,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"6b350290-db9a-11e4-8253-8da618181e0e","variableMapping":{"locs":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"6b350291-db9a-11e4-8253-8392fbe527b0","variableMapping":{"freeIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":0},{"failures":[],"tindex":"6b350292-db9a-11e4-8253-13f3a1ba5202","variableMapping":{"factor":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":0},{"failures":[],"tindex":"6b350293-db9a-11e4-8253-a1416e31458e","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"6b350294-db9a-11e4-8253-1fda619cdbf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"6b350295-db9a-11e4-8253-59c9506512b7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"6b350296-db9a-11e4-8253-6f5d43489216","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[467,468,469,470,471,472,473,474,475],"tindex":"6b350297-db9a-11e4-8253-0584fabc11b4","variableMapping":{"resultOrientation":"lat","orientation":"lat","java.lang.Math.PI":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[91,128,162],"tindex":"6b350298-db9a-11e4-8253-8fc4f9382015","variableMapping":{"currentEntry":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[476,477],"tindex":"6b350299-db9a-11e4-8253-5faddd76bdd2","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[],"tindex":"6b3529aa-db9a-11e4-8253-657154805c9d","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"6b3529ab-db9a-11e4-8253-27796f759d1c","variableMapping":{"high":"shift","guess":"shift","low":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"6b3529ac-db9a-11e4-8253-331c18497f81","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"6b3529ad-db9a-11e4-8253-19ab29c97027","variableMapping":{"mGarbage":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[94,96,106,129,130,138,146,154,165,167,177],"tindex":"6b3529ae-db9a-11e4-8253-715399571ace","variableMapping":{"str":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:76","type":"CtReturnImpl","sourcecode":"return java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[],"tindex":"6b3529af-db9a-11e4-8253-1707e7a26c69","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[25,30,56,117,121,124],"tindex":"6b3529b0-db9a-11e4-8253-e593863ead8c","variableMapping":{"bytePos":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[467,468,469,470,472,474,475,478,479,480,481,278,284,286,287,315,321,323,324],"tindex":"6b3529b1-db9a-11e4-8253-ff3cb339d874","variableMapping":{"flags":"hash","mask":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"6b3529b2-db9a-11e4-8253-bb9091aa02b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[22,23,26,34,16,6,206,207,7,208,209,211,212,213,214,215,216,217,9,10,17,11,219,18,222,13,19],"tindex":"6b3529b3-db9a-11e4-8253-23465dffda4a","variableMapping":{"initialized":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:299","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call prepareIndex only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"6b3577d4-db9a-11e4-8253-53d5347ea51c","variableMapping":{"byteCount":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"6b3577d5-db9a-11e4-8253-cd7fa4452c8e","variableMapping":{"lastTime":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[64,92,96,112,146,163,167],"tindex":"6b3577d6-db9a-11e4-8253-fda4bd3380e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if (int < int)\n    return com.graphhopper.routing.util.EncodedValue.setValue(0, int);\n"},"status":-1},{"failures":[],"tindex":"6b3577d7-db9a-11e4-8253-19ab6b8e32b1","variableMapping":{"properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:76","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.Object>.isEmpty())\n    return \"<empty>\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[467,468,469,470,472,474,475,478,479,481,278,284,286,287,315,321,323,324],"tindex":"6b3577d8-db9a-11e4-8253-430688a34de9","variableMapping":{"time":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[20,21,22,23,24,26,28,29,30,55,57,58,59,60,61,62,63,65,66,67,68,69,482,483,484,485,486,487,488,489,490,491,492,493,494,495,370,496,497,498,499,500,501,502,503,504,505],"tindex":"6b3577d9-db9a-11e4-8253-23ed034977a9","variableMapping":{"length":"value","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:129","type":"CtIfImpl","sourcecode":"if ((byte[][].int) > 0)\n    throw new java.lang.IllegalStateException(\"already initialized\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:218","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-1},{"failures":[15,16,17,18,19],"tindex":"6b3577da-db9a-11e4-8253-dfab766d7ff6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"6b3577db-db9a-11e4-8253-f79e560c80ba","variableMapping":{"lastIndex":"allBits","fromIndex":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6b3577dc-db9a-11e4-8253-3131111e9559","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"6b3577dd-db9a-11e4-8253-9733f981da43","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[159,160],"tindex":"6b3577de-db9a-11e4-8253-7d9284e9fa54","variableMapping":{"i":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"6b3577df-db9a-11e4-8253-edd5c4a96585","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6b3577e0-db9a-11e4-8253-c557a70e3dee","variableMapping":{"factor":"minLon","delta_lon":"minLon","a_lon":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[506,507,508,509,487,510,511,492,493,371,0,512,1,513,496,514,515,501,502,516,517,518,519,520],"tindex":"6b3577e1-db9a-11e4-8253-3d153c00f956","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[20,21,22,23,24,25,26,28,29,30,31,33,34,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,88,89,120,3,158,159,160,4,5,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,203,15,16,6,206,207,7,8,208,209,210,211,212,213,214,215,216,217,9,218,10,17,11,219,18,12,220,222,223,224,225,226,227,13,14,228,229,230,19,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,300,301,302,303,304,305,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,343,358,370,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,521,0,522,523,524,525,526,1,513,527,528,416,417,418,419,420,421,422,423,424,425,426,427,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"6b359ef2-db9a-11e4-8253-9b0383b49c6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[20,22,23,24,25,26,28,29,30,31,39,40,41,42,46,529,530,531,57,58,59,60,61,482,483,484,485,486,88,89,185,186,190,191,193,194,195,197,198,201,17,232,237,258,264,269,271,272,280,281,282,317,318,319,358,510,370,373,378,399,405,410,412,413,532,421,424,429,450,456,461,463,464,514],"tindex":"6b359ef3-db9a-11e4-8253-0752f93c0014","variableMapping":{"latSize":"segmentSizePower","lonSize":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"6b359ef4-db9a-11e4-8253-4d35116cba4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"6b359ef5-db9a-11e4-8253-8d59c11785fb","variableMapping":{"len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6b359ef6-db9a-11e4-8253-57642bef03e5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"6b359ef7-db9a-11e4-8253-95dc7e6a8307","variableMapping":{"orientation":"speed","resultOrientation":"speed","baseOrientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":0},{"failures":[],"tindex":"6b359ef8-db9a-11e4-8253-e1d3b5b50f1f","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[20,25,30,56,121,124,125],"tindex":"6b359ef9-db9a-11e4-8253-89c0eeb9e610","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[20,25,30,31,55,56,61,68,69],"tindex":"6b359efa-db9a-11e4-8253-7d7a7f137b92","variableMapping":{"min":"priorityFromRelation","tmpSize":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"6b35c60b-db9a-11e4-8253-9f79d7e01a6c","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:99","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"6b35c60c-db9a-11e4-8253-e1f36308b238","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[25,55,56,62,69,111,112,114,115,117,122,16,7,209,212,214,215,18,232,237,238,239,245,246,248,261,266,269,273,294,301,314,331,332,333,334,340,341,343,356,361,364,368,370,373,378,379,380,386,387,389,402,407,410,414,424,429,430,431,437,438,440,453,458,461,465],"tindex":"6b35c60d-db9a-11e4-8253-3171aaa0017d","variableMapping":{"from":"nextWayBit","hash":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[20,21,22,23,24,25,26,28,29,30,31,42,533,534,535,55,56,57,58,59,60,61,62,63,64,65,66,67,68,536,69,70,71,72,73,74,75,77,78,79,85,88,91,92,93,94,95,96,98,99,100,102,103,106,107,108,109,110,112,115,118,121,124,125,127,128,129,130,131,132,134,135,138,139,140,141,142,144,145,146,147,148,149,151,154,155,156,157,162,163,164,165,166,167,169,170,171,173,174,177,178,179,180,181,182],"tindex":"6b35c60e-db9a-11e4-8253-cb11425c7ce8","variableMapping":{"name":"value","properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:183","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.remove(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"6b35c60f-db9a-11e4-8253-e956e9611b04","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[69,159],"tindex":"6b35c610-db9a-11e4-8253-17bfe2acd285","variableMapping":{"lastInBoundsPillarNode":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"6b35c611-db9a-11e4-8253-2343b6d4678c","variableMapping":{"newUniqueOsmId":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6b35c612-db9a-11e4-8253-2b0d0393c791","variableMapping":{"str":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[15,16,17,11,18,19],"tindex":"6b35c613-db9a-11e4-8253-2d54235661a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"6b35c614-db9a-11e4-8253-3f5dd1cd7999","variableMapping":{"originalEdgesCount":"shift","edgeDifference":"shift","contractedNeighbors":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"6b35c615-db9a-11e4-8253-956f4530c91b","variableMapping":{"intVal":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[22,23,24,25,26,29,30,33,34,57,58,59,467,468,210,214,215,9,469,470,471,472,474,475,478,479,480,481,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331],"tindex":"6b35c616-db9a-11e4-8253-a92c5aafb42e","variableMapping":{"lastKey":"hash","key":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"6b35c617-db9a-11e4-8253-7bc85798bfc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[],"tindex":"6b35c618-db9a-11e4-8253-5d52e7accdfd","variableMapping":{"res":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":0},{"failures":[],"tindex":"6b35c619-db9a-11e4-8253-71dd4d6cf44a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"6b35ec2a-db9a-11e4-8253-8b5bfce5da46","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[3,4],"tindex":"6b35ec2b-db9a-11e4-8253-fd75f3742e06","variableMapping":{"i":"start","child":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[537,538,539,540,541,16,6,206,8,208,210,211,213,214,216,217,9,218,10,17,11,219,18,222,224,225,226,13,228,230],"tindex":"6b35ec2c-db9a-11e4-8253-a7b65cf347ec","variableMapping":{"maxTurnCosts":"size","costs":"lastPrio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"6b35ec2d-db9a-11e4-8253-e556a623dc60","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[77],"tindex":"6b35ec2e-db9a-11e4-8253-635808fdd89a","variableMapping":{"midLat":"fwdSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"6b35ec2f-db9a-11e4-8253-5fde8c42026d","variableMapping":{"java.lang.Integer.MAX_VALUE":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-2},{"failures":[],"tindex":"6b35ec30-db9a-11e4-8253-9fe7f13989ce","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[20,21,22,23,24,25,26,28,29,30,31,39,40,41,42,46,542,529,530,531,543,544,545,55,56,57,58,59,60,61,62,63,65,66,67,68,69,482,483,484,485,486,88,89,185,186,190,191,193,194,195,196,197,198,200,201,17,232,233,237,258,264,269,271,272,280,281,282,302,303,304,305,307,317,318,319,358,546,487,510,488,489,490,491,547,492,493,494,495,370,373,374,378,399,405,410,412,413,532,421,424,425,429,450,456,461,463,464,548,496,514,497,498,499,500,549,501,502,503,504,505],"tindex":"6b35ec31-db9a-11e4-8253-c5366dc8383b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failures":[3,4,5],"tindex":"6b35ec32-db9a-11e4-8253-29e5102e5916","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[22,23,24,25,26,29,30,33,34,57,58,59,210,214,215,9,550,481,275,276,278,280,281,282,283,285,286,287,288,289,290,291,293,294,315,317,318,319,320,322,323,324,325,326,327,328,330,331],"tindex":"6b35ec33-db9a-11e4-8253-0507e734e685","variableMapping":{"cap":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"6b35ec34-db9a-11e4-8253-2303cf12911c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:75","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-2},{"failures":[92,163],"tindex":"6b35ec35-db9a-11e4-8253-ff1b66f84c51","variableMapping":{"str":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"6b35ec36-db9a-11e4-8253-95fbbd7e5b14","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"6b35ec37-db9a-11e4-8253-abe1f6d45fe8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[20,22,23,24,25,26,28,29,30,31,39,40,41,42,46,529,530,531,57,58,59,60,61,482,483,484,485,486,88,89,185,186,190,191,193,194,195,197,198,201,17,232,237,258,264,269,271,272,280,281,282,317,318,319,358,510,370,373,378,399,405,410,412,413,532,421,424,429,450,456,461,463,464,514],"tindex":"6b35ec38-db9a-11e4-8253-99a48aceab47","variableMapping":{"WIDTH":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:250","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[(2 * (int)) * (int)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[94,106,129,130,138,146,154,165,177],"tindex":"6b361349-db9a-11e4-8253-a30eb22398cd","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"6b36134a-db9a-11e4-8253-73e718ec0293","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:62","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[21,22,23,24,25,26,28,29,31,56,57,58,59,61,62,63,65,66,67,68,536,69,72,74,75,77,79,85],"tindex":"6b36134b-db9a-11e4-8253-cdf8f14e639f","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"6b36134c-db9a-11e4-8253-3f1df5c91ce1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[89],"tindex":"6b36134d-db9a-11e4-8253-014dc8185887","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"6b36134e-db9a-11e4-8253-a328fbeee770","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"6b36134f-db9a-11e4-8253-535e1a63c89d","variableMapping":{"weightLong":"flags","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":0},{"failures":[],"tindex":"6b361350-db9a-11e4-8253-e933364f5c7e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[64,112,115],"tindex":"6b361351-db9a-11e4-8253-85cdac110ce6","variableMapping":{"oldValueIndex":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"6b361352-db9a-11e4-8253-1d53cbc4c35b","variableMapping":{"size":"oldValue","from":"key","end":"oldValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[],"tindex":"6b361353-db9a-11e4-8253-67f17232eb0f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"6b361354-db9a-11e4-8253-f9b75d9e5a82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"6b361355-db9a-11e4-8253-b163afc75be0","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[94,96,106,129,130,138,146,154,165,167,177],"tindex":"6b361356-db9a-11e4-8253-5dcc64c35607","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[109,141,147,180],"tindex":"6b361357-db9a-11e4-8253-ab66d33161e7","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-1},{"failures":[33,34,36,37,39,40,41,42,44,45,46,47,49,50,51,52,53,54,3,158,159,160,4,5,190,191,193,194,195,196,197,198,199,200,201,202,203,15,6,206,207,7,8,208,209,210,211,212,215,216,217,9,218,10,17,11,219,18,220,222,223,224,225,226,227,13,228,229,230,19,231,232,235,237,238,239,240,241,242,244,246,249,250,251,252,253,254,255,256,257,260,261,263,264,265,266,268,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,300,301,302,303,304,305,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,339,341,344,345,346,347,348,349,350,351,352,355,356,358,359,360,361,363,366,367,368,369,370,371,372,373,376,378,379,380,381,382,383,385,387,390,391,392,393,394,395,396,397,398,401,402,404,405,406,407,409,412,413,414,415,416,419,423,424,427,429,430,431,432,433,434,436,438,441,442,443,444,445,446,447,448,449,452,453,455,456,457,458,460,463,464,465,466],"tindex":"6b363a68-db9a-11e4-8253-db27e1be08b9","variableMapping":{"prepared":"forward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":455,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":218,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":182,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":421,"com.graphhopper.GraphHopperAPITest.testNoLoad":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":333,"com.graphhopper.reader.OSMReaderTest.testFerry":55,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":50,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":166,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":147,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":281,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":21,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":110,"com.graphhopper.storage.MMapDataAccessTest.testSegments":520,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":388,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":548,"com.graphhopper.coll.CompressedArrayTest.testCompress":468,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":153,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":224,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":353,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":277,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":496,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":491,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":228,"com.graphhopper.GraphHopperTest.testPrepare":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":365,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":12,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":255,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":541,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":164,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":211,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":154,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":37,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":278,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":162,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":209,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":318,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":167,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":370,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":478,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":429,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":540,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":19,"com.graphhopper.GraphHopperTest.testLoadOSM":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":325,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":524,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":319,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":116,"com.graphhopper.reader.OSMReaderTest.testSort":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":178,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":374,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":498,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":267,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":232,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":366,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":197,"com.graphhopper.storage.RAMDataAccessTest.testHeader":547,"com.graphhopper.routing.DijkstraTest.initializationError":204,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":409,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":505,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":454,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":244,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":371,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":94,"com.graphhopper.reader.OSMNodeTest.testSetTags":533,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":378,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":439,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":285,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":215,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":283,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":207,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":431,"com.graphhopper.coll.OSMIDMapTest.testGetLong":485,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":398,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":446,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":424,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":448,"com.graphhopper.coll.CompressedArrayTest.testCompress2":467,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":257,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":128,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":389,"com.graphhopper.GraphHopperAPITest.testLoad":33,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":428,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":523,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":118,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":249,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":239,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":2,"com.graphhopper.storage.LevelGraphStorageTest.testClone":433,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":5,"com.graphhopper.reader.OSMReaderTest.testBarriers":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":379,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":509,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":97,"com.graphhopper.util.GHUtilityTest.testCopy":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":337,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":136,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":156,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":299,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":494,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":150,"com.graphhopper.routing.PathTest.testFindInstruction":186,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":380,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":537,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":43,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":124,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":93,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":296,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":268,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":253,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":511,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":407,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":393,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":423,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":104,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":114,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":189,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":435,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":338,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":519,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":528,"com.graphhopper.util.InstructionListTest.testWayList2":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":326,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":273,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":384,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":165,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":88,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":233,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":437,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":514,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":168,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":499,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":347,"com.graphhopper.storage.RAMDirectoryTest.testSynched":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":390,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":8,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":238,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":60,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":497,"com.graphhopper.routing.AStarTest.initializationError":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":17,"com.graphhopper.coll.OSMIDMapTest.testGet":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":125,"com.graphhopper.routing.PathBidirRefTest.testExtract":202,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":171,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":450,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":484,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":289,"com.graphhopper.storage.RAMDataAccessTest.testCopy":488,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":500,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":415,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":170,"com.graphhopper.storage.RAMDataAccessTest.testSegments":493,"com.graphhopper.util.GHUtilityTest.testSort2":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":216,"com.graphhopper.reader.OSMReaderTest.testMain":57,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":397,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":479,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":290,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":72,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":375,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":440,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":444,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":465,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":194,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":91,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":522,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":447,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":68,"com.graphhopper.storage.StorablePropertiesTest.testStore":532,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":510,"com.graphhopper.storage.GraphHopperStorageTest.testClone":241,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":362,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":77,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":251,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":339,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":419,"com.graphhopper.routing.PathTest.testTime":184,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":135,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":463,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":434,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":84,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":328,"com.graphhopper.reader.OSMReaderTest.testRelation":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":352,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":452,"com.graphhopper.util.GHUtilityTest.testSortDirected":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":107,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":503,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":193,"com.graphhopper.GraphHopperTest.testFootOnly":30,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":303,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":284,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":115,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":518,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":206,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":550,"com.graphhopper.reader.OSMElementTest.testSetTags":535,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":220,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":348,"com.graphhopper.search.NameIndexTest.testCreate":531,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":492,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":190,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":526,"com.graphhopper.routing.QueryGraphTest.testOneWay":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":329,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":317,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":469,"com.graphhopper.reader.OSMReaderTest.testWithBounds":67,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":495,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":507,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":108,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":487,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":158,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":411,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":354,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":112,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":430,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":426,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":157,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":76,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":394,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":237,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":16,"com.graphhopper.util.InstructionListTest.testWayList":40,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":169,"com.graphhopper.GraphHopperAPITest.testDisconnected179":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":340,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":473,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":102,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":54,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":351,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":521,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":368,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":24,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":243,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":161,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":261,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":213,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":14,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":80,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":461,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":132,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":376,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":219,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":236,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":292,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":512,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":525,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":181,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":231,"com.graphhopper.routing.PathTest.testWayList":185,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":367,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":344,"com.graphhopper.coll.OSMIDMapTest.testGet2":483,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":18,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":549,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":458,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":543,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":175,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":254,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":119,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":286,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":287,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":489,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":504,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":99,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":539,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":129,"com.graphhopper.util.GHUtilityTest.testSort":47,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":517,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":357,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":480,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":174,"com.graphhopper.search.NameIndexTest.testPut":529,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":414,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":279,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":298,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":307,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":310,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":513,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":95,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":89,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":308,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":372,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":131,"com.graphhopper.storage.MMapDirectoryTest.testSynched":477,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":87,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":544,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":395,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":3,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":527,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":443,"com.graphhopper.routing.PathTest.testFound":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":358,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":31,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":117,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":460,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":515,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":418,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":173,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":391,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":538,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":506,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":530,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":343,"com.graphhopper.util.InstructionListTest.testEmptyList":38,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":246,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":546,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":210,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":291,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":71,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":155,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":217,"com.graphhopper.reader.PrinctonReaderTest.testRead":53,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":269,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":282,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":342,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":470,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":332,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":100,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":396,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":113,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":92,"com.graphhopper.reader.OSMReaderTest.testFoot":56,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":356,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":545,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":323,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":464,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":475,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":143,"com.graphhopper.reader.OSMReaderTest.testOneWay":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":324,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":250,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":265,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":408,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":151,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":502,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":98,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":225,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":481,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":223,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":311,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":501,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":120,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":508,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":346,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":192,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":234,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":536,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":1,"com.graphhopper.routing.PathBidirRefTest.testExtract2":203,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":138,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":327,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":542,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":263,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":312,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":141,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":62,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":369,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":320,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":266,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":48,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":81,"com.graphhopper.GraphHopperTest.testFootAndCar":25,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":258,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":442,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":130,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":293,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":490,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":336,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":516,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":10,"com.graphhopper.GraphHopperTest.testPrepareOnly":20,"com.graphhopper.GraphHopperTest.testVia":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":334,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":65,"com.graphhopper.reader.OSMElementTest.testHasTag":534,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":420,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":42,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":262,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":122,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":63,"com.graphhopper.routing.AStarBidirectionTest.initializationError":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":349,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":85,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":459,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":457,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":373}}]
