[{"failures":[],"tindex":"21ddb616-dbe1-11e4-920c-25d526a87526","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"21df15a7-dbe1-11e4-920c-798fa2e7c8fe","variableMapping":{"high":"scDirMask","len":"flags","start":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"21df15a8-dbe1-11e4-920c-f1f922c93a5e","variableMapping":{"bytePos":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":0},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"21df15a9-dbe1-11e4-920c-fdeda6f4cb1a","variableMapping":{"from":"i","end":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[27,28,29,30],"tindex":"21df15aa-dbe1-11e4-920c-3be1cfb9d000","variableMapping":{"possibleToAdd":"restricted"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:85","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPlace method.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"21df15ab-dbe1-11e4-920c-7bd17f53dcf9","variableMapping":{"nanoTime":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,16,17,18,19,21,22,23,25],"tindex":"21df15ac-dbe1-11e4-920c-23adb0ff7aea","variableMapping":{"distance":"minLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[77,78,79,80,81,82,35,63,83],"tindex":"21df15ad-dbe1-11e4-920c-fda089fbc553","variableMapping":{"speed":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-1},{"failures":[],"tindex":"21df15ae-dbe1-11e4-920c-c73a6a14a0b7","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"I_LEVEL","speed":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":0},{"failures":[],"tindex":"21df15af-dbe1-11e4-920c-c1e7f9fccad0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[39,84],"tindex":"21df3bc0-dbe1-11e4-920c-f36089d64f52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"21df3bc1-dbe1-11e4-920c-1bd1cd54643a","variableMapping":{"res":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.storage.index.QueryResult.getSnappedPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[18,85],"tindex":"21df3bc2-dbe1-11e4-920c-b3a05998c29c","variableMapping":{"distInMeter":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"21df3bc3-dbe1-11e4-920c-fb5b1f9310c2","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,6,117,118,119,120,121,7,122,8,9,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,11,148,149,150,151,152,12,153,13,14,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,0,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,81,82,35,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,1,284,285,286,287,288,289,2,290,291,3,292,64,293,294,295,296,297,298,299,15,66,300,301,302,303,304,305,4,306,5,307,308,309,310,311],"tindex":"21df89e4-dbe1-11e4-920c-0f6aedeb3e93","variableMapping":{"eof":"forward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"21df89e5-dbe1-11e4-920c-b328b523455a","variableMapping":{"initialized":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":0},{"failures":[84],"tindex":"21df89e6-dbe1-11e4-920c-93aa1e1fec78","variableMapping":{"flags":"ferryBit","scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"21df89e7-dbe1-11e4-920c-33219e60ad4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"21df89e8-dbe1-11e4-920c-a31d49992ac4","variableMapping":{"x1":"index","sLon":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"21dfd809-dbe1-11e4-920c-7d2415feac48","variableMapping":{"orientation":"fwdSpeed","java.lang.Math.PI":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":0},{"failures":[312],"tindex":"21dfd80a-dbe1-11e4-920c-f701e7368513","variableMapping":{"todoBytes":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"21dfd80b-dbe1-11e4-920c-e3b51e7b2705","variableMapping":{"guess":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"21dfd80c-dbe1-11e4-920c-0dd550b5d55b","variableMapping":{"visitedCountFrom":"hash","visitedCountTo":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[16,17,18,19,20,21,85,22,23,26],"tindex":"21dfd80d-dbe1-11e4-920c-3f6386249ea2","variableMapping":{"oldValueIndex":"spatialKey","lastKey":"spatialKey","key":"spatialKey"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"21dfd80e-dbe1-11e4-920c-4b299ef7526b","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-2},{"failures":[86,87,313,314,88,315,89,90,91,92,93,94,316,95,317,96,318,31,97,98,99,100,101,102,103,104,105,319,320,106,107,321,108,109,110,111,322,112,323,324,113,114,115,116,6,117,118,119,120,121,7,122,8,9,123,124,125,126,325,127,128,129,130,131,132,326,133,134,135,136,137,138,327,139,140,141,142,143,328,144,145,146,147,329,11,148,149,150,151,152,12,153,13,14,154,155,156,157,330,158,159,160,161,162,163,331,332,164,333,165,166,167,168,169,170,334,171,335,172,336,32,173,174,175,176,177,178,179,180,181,337,338,182,183,339,184,185,186,187,340,188,341,342,189,190,191,192,193,194,195,196,197,198,343,199,344,200,345,33,201,202,203,204,205,206,207,208,209,346,347,210,211,348,212,213,214,215,349,216,350,351,217,218,219,220,0,352,353,221,354,355,356,222,223,357,358,224,359,225,226,227,228,229,230,360,231,361,232,362,34,233,234,235,236,237,238,239,240,241,363,364,242,243,365,244,245,246,247,366,248,367,368,249,250,251,252,253,254,369,370,255,256,257,258,259,260,371,261,372,262,81,82,35,263,264,265,266,373,267,268,269,270,271,272,374,36,375,376,37,377,378,379,380,381,382,38,383,384,39,385,40,41,84,386,387,27,388,42,43,389,44,390,45,391,392,393,46,47,28,394,395,396,397,398,399,400,401,402,48,403,404,405,406,407,312,408,49,409,50,410,411,412,51,52,30,413,414,415,416,417,418,419,420,421,53,422,423,424,425,54,426,55,427,428,429,430,431,432,433,434,56,435,436,437,438,59,439,60,440,441,442,443,444,445,446,447,61,448,449,450,451,62,63,83,452,273,274,453,275,276,277,278,279,280,281,282,283,454,1,455,284,285,286,287,288,289,2,456,290,291,3,292,64,65,293,294,295,296,297,298,299,15,66,300,67,68,301,302,303,304,305,4,306,5,307,308,457,458,459,460,69,70,71,72,73,461,462,74,463,464,465,75,466,467,468,469,470,471,472,473,474,475,476,477,76,478,310,311],"tindex":"21dfff1f-dbe1-11e4-920c-4df83010a448","variableMapping":{"val":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","existing":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","key":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"21dfff20-dbe1-11e4-920c-0f80e4db21b9","variableMapping":{"weightLong":"mask","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"21dfff21-dbe1-11e4-920c-f7bb8c437aae","variableMapping":{"resultOrientation":"java.lang.Double.MAX_VALUE","orientation":"java.lang.Double.MAX_VALUE","java.lang.Math.PI":"minEle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"21dfff22-dbe1-11e4-920c-f31ca11a1619","variableMapping":{"i":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"21dfff23-dbe1-11e4-920c-4b044dd37ac9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[84,75,76,478],"tindex":"21dfff24-dbe1-11e4-920c-3709257945a2","variableMapping":{"shift":"ferryBit","flags":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[0,284,2,290,292,65,296,308],"tindex":"21dfff25-dbe1-11e4-920c-cd72f8f08082","variableMapping":{"bytePointer":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:80","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[382,38,40,46,48,51,53,56,479,61,69,76],"tindex":"21dfff26-dbe1-11e4-920c-5b6fb956d745","variableMapping":{"tmpNo":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[],"tindex":"21e02637-dbe1-11e4-920c-75ce97b94562","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"21e02638-dbe1-11e4-920c-e9a78027921d","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[379,384,39,84,400,403,419,422,432,435,445,448],"tindex":"21e02639-dbe1-11e4-920c-31b66e52b4da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[],"tindex":"21e0263a-dbe1-11e4-920c-4f2b5701ac5d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"21e0263b-dbe1-11e4-920c-556fbbdcabfe","variableMapping":{"size":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-2},{"failures":[],"tindex":"21e0263c-dbe1-11e4-920c-bb7169014a65","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[],"tindex":"21e0263d-dbe1-11e4-920c-13a993efe630","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[480],"tindex":"21e0263e-dbe1-11e4-920c-ef2e5e855906","variableMapping":{"bytePos":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"21e0263f-dbe1-11e4-920c-c7b0fee1d368","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"21e02640-dbe1-11e4-920c-13ec282ebe3f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"21e04d51-dbe1-11e4-920c-392f40f6eb6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"21e04d52-dbe1-11e4-920c-636ead3bdd35","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[38],"tindex":"21e04d53-dbe1-11e4-920c-d715779d2e91","variableMapping":{"algo":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[481,482],"tindex":"21e04d54-dbe1-11e4-920c-df646f31d162","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"21e04d55-dbe1-11e4-920c-e75ad7294da7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"21e04d56-dbe1-11e4-920c-770ad4491d1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[391,47,483,410,52,60,474],"tindex":"21e04d57-dbe1-11e4-920c-73d7648db4bd","variableMapping":{"err":"code","tmpErr":"code","y1":"code","dLon":"code","sLat":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"21e04d58-dbe1-11e4-920c-79ccafe441e5","variableMapping":{"allIter":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:385","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[484],"tindex":"21e04d59-dbe1-11e4-920c-e39f299f05f5","variableMapping":{"tmp":"shift","initializedCounter":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[253,254,454,284,2,456,292,64,65,293,294,295,296,297,298,299,15,66,300,67,68,301,302,303,304,305,4,306,5,307,308,69,70,71,72,73,74,463],"tindex":"21e04d5a-dbe1-11e4-920c-21989e38a9be","variableMapping":{"elevation":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:96","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"21e04d5b-dbe1-11e4-920c-0335041b2c6d","variableMapping":{"distance":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"21e04d5c-dbe1-11e4-920c-19f43cc348d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"21e04d5d-dbe1-11e4-920c-f9eb226da56a","variableMapping":{"val":"factor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-2},{"failures":[91,318,97,98,100,104,105,109,110,167,336,173,174,176,180,181,185,186,195,345,201,202,204,208,209,213,214,356,227,362,233,234,236,240,241,245,246,267,270],"tindex":"21e04d5e-dbe1-11e4-920c-ebc55c4e16a1","variableMapping":{"arrayLength":"i","maxGeoRef":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[],"tindex":"21e04d5f-dbe1-11e4-920c-f7684ffcd301","variableMapping":{"newName":"str","name":"str","com.graphhopper.search.NameIndex.logger":"com.graphhopper.routing.util.AbstractFlagEncoder.logger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":-2},{"failures":[57],"tindex":"21e04d60-dbe1-11e4-920c-f12deab2b8c2","variableMapping":{"shift":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"21e04d61-dbe1-11e4-920c-cdc618c47f42","variableMapping":{"orientation":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","resultOrientation":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","baseOrientation":"weight","java.lang.Math.PI":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"21e07472-dbe1-11e4-920c-f526086fe139","variableMapping":{"counter":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"21e07473-dbe1-11e4-920c-858e776f4fb9","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:281","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[379,39,84,403,422,435,448],"tindex":"21e07474-dbe1-11e4-920c-69f857c68060","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[45,391,392,393,46,47,396,398,399,402,48,404,405,483,485,49,50,410,411,412,51,52,415,417,418,421,53,423,424,54,426,55,428,430,431,434,56,436,437,59,439,60,440,442,444,447,61,449,75,466,467,468,470,471,472,473,477,76,478],"tindex":"21e07475-dbe1-11e4-920c-4f65cebd57a1","variableMapping":{"encoderList":"service"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[486,487,488,489,87,313,89,319,109,323,113,118,120,135,136,137,138,139,149,151,490,160,163,331,165,337,185,341,189,212,355,223,357,225,363,245,367,249,491,492,262,81,82,35,63,83,274,276,277,279,280,283,306,493,494,495,496,459,460,69,70,71,72,73,462,74,463,464,75,466,467,468,469,470,471,472,473,475,476,477,76,478],"tindex":"21e07476-dbe1-11e4-920c-739cbadd326d","variableMapping":{"lazyUpdates":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"21e07477-dbe1-11e4-920c-eb77542175b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"21e07478-dbe1-11e4-920c-2148d993b0d8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":-2},{"failures":[],"tindex":"21e07479-dbe1-11e4-920c-4f6fc104e942","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","highway":"highway","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"21e0747a-dbe1-11e4-920c-1b137a10bdf9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"21e0747b-dbe1-11e4-920c-a1cc8def5be6","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:188","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-2},{"failures":[],"tindex":"21e0747c-dbe1-11e4-920c-0feae3bce911","variableMapping":{"name":"res"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"21e0747d-dbe1-11e4-920c-dbe9cf22d3d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"21e0747e-dbe1-11e4-920c-2d7a0a895180","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-2},{"failures":[75],"tindex":"21e0747f-dbe1-11e4-920c-1139777054fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"21e07480-dbe1-11e4-920c-8faddb8af2a0","variableMapping":{"intLow":"code","intHigh":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[35,38,383,40,41,84,43,57,460,69,70,71,72,73,462,74,464,75,466,467,468,469,470,471,472,473,475,476,477,76,497,478],"tindex":"21e07481-dbe1-11e4-920c-455ebefe9e31","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"21e07482-dbe1-11e4-920c-f976e12b24a0","variableMapping":{"len":"segmentSizePower","start":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"21e09b93-dbe1-11e4-920c-89d09caf7085","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"21e09b94-dbe1-11e4-920c-630c33ca0a3b","variableMapping":{"res":"obj"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.storage.index.QueryResult.getSnappedPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"21e09b95-dbe1-11e4-920c-8f88e5bd621d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[39,75],"tindex":"21e09b96-dbe1-11e4-920c-43ed0a33bc50","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[],"tindex":"21e09b97-dbe1-11e4-920c-5b3c773c56fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"21e09b98-dbe1-11e4-920c-bd1bfb1a13c9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[45,50,59,60],"tindex":"21e09b99-dbe1-11e4-920c-7b90c1600f9e","variableMapping":{"arrayLength":"speed","maxGeoRef":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[16,17,18,19,20,21,85,22,23,26],"tindex":"21e09b9a-dbe1-11e4-920c-7f374b6822a0","variableMapping":{"size":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"21e09b9b-dbe1-11e4-920c-cd3a47041232","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:538","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"cannot change EMPTY PointList\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"21e09b9c-dbe1-11e4-920c-252afc4be01e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[267,272],"tindex":"21e09b9d-dbe1-11e4-920c-6937f6561838","variableMapping":{"min":"minOnewayNetworkSize","tmpSize":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[35,38,40,41,46,401,48,51,420,53,433,56,57,446,61,69,72,76],"tindex":"21e09b9e-dbe1-11e4-920c-a18c778357aa","variableMapping":{"val":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"21e09b9f-dbe1-11e4-920c-0152edd64f1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(5, 5, 0)"},"status":-2},{"failures":[],"tindex":"21e09ba0-dbe1-11e4-920c-89145ee24a4e","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"lat1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:245","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[],"tindex":"21e0c2b1-dbe1-11e4-920c-7bc2d6ab03be","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[272],"tindex":"21e0c2b2-dbe1-11e4-920c-859296c28be3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"21e0c2b3-dbe1-11e4-920c-8915bd0cac49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[],"tindex":"21e0c2b4-dbe1-11e4-920c-57431d4664f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:114","type":"CtLocalVariableImpl","sourcecode":"int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int))"},"status":-2},{"failures":[57],"tindex":"21e0c2b5-dbe1-11e4-920c-3534f0ee2aa1","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[253,284,2,292,65,293,294,295,296,297,298,299,66,68,301,302,303,304,4,306,5,307,308,70,71,72,73,74],"tindex":"21e0c2b6-dbe1-11e4-920c-bfcbfc2be936","variableMapping":{"empty":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[267],"tindex":"21e0c2b7-dbe1-11e4-920c-ed5b78198f00","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1043","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"21e0c2b8-dbe1-11e4-920c-a94d98c0d1c0","variableMapping":{"y1":"len","y2":"len","x1":"len","x2":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":244,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":305,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":57,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":355,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":131,"com.graphhopper.GraphHopperAPITest.testNoLoad":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":194,"com.graphhopper.reader.OSMReaderTest.testFerry":75,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":255,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":150,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":460,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":77,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":336,"com.graphhopper.coll.CompressedArrayTest.testCompress":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":446,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":286,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":346,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":31,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":329,"com.graphhopper.util.AngleCalcTest.testOrientation":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":290,"com.graphhopper.GraphHopperTest.testPrepare":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":351,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":454,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":66,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":262,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":447,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":264,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":271,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":299,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":119,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":190,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":52,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":160,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":24,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":292,"com.graphhopper.GraphHopperTest.testLoadOSM":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":120,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":408,"com.graphhopper.reader.OSMReaderTest.testSort":468,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":269,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":331,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":322,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":87,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":217,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":279,"com.graphhopper.routing.DijkstraTest.initializationError":450,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":188,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":365,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":95,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":161,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":170,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":165,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":362,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":437,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":153,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":100,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":152,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":296,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":295,"com.graphhopper.coll.OSMIDMapTest.testGetLong":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":175,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":181,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":238,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":223,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":240,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":80,"com.graphhopper.coll.CompressedArrayTest.testCompress2":16,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":105,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":54,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":32,"com.graphhopper.GraphHopperAPITest.testLoad":253,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":359,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":374,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":97,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":91,"com.graphhopper.storage.LevelGraphStorageTest.testClone":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":272,"com.graphhopper.reader.OSMReaderTest.testBarriers":469,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":198,"com.graphhopper.util.GHUtilityTest.testCopy":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":159,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":432,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":326,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":448,"com.graphhopper.routing.PathTest.testFindInstruction":83,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":443,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":167,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":378,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":368,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":392,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":112,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":187,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":176,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":222,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":400,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":484,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":452,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":360,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":343,"com.graphhopper.util.InstructionListTest.testWayList2":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":124,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":115,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":334,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":189,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":406,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":410,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":389,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":361,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":492,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":204,"com.graphhopper.storage.RAMDirectoryTest.testSynched":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":173,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":135,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":297,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":470,"com.graphhopper.routing.AStarTest.initializationError":458,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":306,"com.graphhopper.coll.OSMIDMapTest.testGet":493,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":172,"com.graphhopper.routing.PathBidirRefTest.testExtract":265,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":379,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":415,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":128,"com.graphhopper.util.GHUtilityTest.testSort2":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":302,"com.graphhopper.reader.OSMReaderTest.testMain":467,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":357,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":416,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":25,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":156,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":422,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":38,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":332,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":34,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":236,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":251,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":233,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":45,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":239,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":76,"com.graphhopper.storage.StorablePropertiesTest.testStore":490,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":491,"com.graphhopper.storage.GraphHopperStorageTest.testClone":93,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":349,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":40,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":99,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":199,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":221,"com.graphhopper.routing.PathTest.testTime":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":431,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":249,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":42,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":327,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":209,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":242,"com.graphhopper.reader.OSMReaderTest.testRelation":474,"com.graphhopper.util.GHUtilityTest.testSortDirected":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":48,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":275,"com.graphhopper.GraphHopperTest.testFootOnly":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":136,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":12,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":485,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":390,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":205,"com.graphhopper.search.NameIndexTest.testCreate":489,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":273,"com.graphhopper.routing.QueryGraphTest.testOneWay":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":325,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":21,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":118,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":18,"com.graphhopper.reader.OSMReaderTest.testWithBounds":477,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":202,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":268,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":347,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":380,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":483,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":226,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":401,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":449,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":182,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":177,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":89,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":65,"com.graphhopper.util.InstructionListTest.testWayList":81,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":324,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":413,"com.graphhopper.GraphHopperAPITest.testDisconnected179":254,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":344,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":462,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":398,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":311,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":420,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":71,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":316,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":137,"com.graphhopper.routing.util.EncodedValueTest.testSwap":480,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":291,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":409,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":67,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":457,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":456,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":367,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":386,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":428,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":164,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":307,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":315,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":424,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":86,"com.graphhopper.routing.PathTest.testWayList":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":218,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":201,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":384,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":479,"com.graphhopper.coll.OSMIDMapTest.testGet2":494,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":308,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":338,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":419,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":102,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":36,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":171,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":13,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":237,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":14,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":395,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":426,"com.graphhopper.util.GHUtilityTest.testSort":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":348,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":418,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":441,"com.graphhopper.search.NameIndexTest.testPut":487,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":333,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":148,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":139,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":46,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":140,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":427,"com.graphhopper.storage.MMapDirectoryTest.testSynched":482,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":407,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":178,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":267,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":212,"com.graphhopper.routing.PathTest.testFound":451,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":49,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":464,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":248,"com.graphhopper.util.AngleCalcTest.testAtan2":79,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":353,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":417,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":174,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":488,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":33,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":96,"com.graphhopper.util.InstructionListTest.testEmptyList":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":388,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":382,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":381,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":303,"com.graphhopper.reader.PrinctonReaderTest.testRead":310,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":323,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":151,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":335,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":345,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":193,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":396,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":445,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":430,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":391,"com.graphhopper.reader.OSMReaderTest.testFoot":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":211,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":8,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":23,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":250,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":9,"com.graphhopper.reader.OSMReaderTest.testOneWay":478,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":98,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":110,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":340,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":444,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":207,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":287,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":3,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":284,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":285,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":375,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":203,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":453,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":314,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":497,"com.graphhopper.routing.PathBidirRefTest.testExtract2":266,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":125,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":134,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":434,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":486,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":108,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":436,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":220,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":376,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":121,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":111,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":371,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":387,"com.graphhopper.GraphHopperTest.testFootAndCar":72,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":319,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":55,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":197,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":312,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":4,"com.graphhopper.GraphHopperTest.testPrepareOnly":459,"com.graphhopper.GraphHopperTest.testVia":69,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":133,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":195,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":475,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":354,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":35,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":321,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":37,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":206,"com.graphhopper.routing.AStarBidirectionTest.initializationError":373,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":43,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":366,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":246,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":163}}]
