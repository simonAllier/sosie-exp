[{"failures":[],"tindex":"288f7d8e-da62-11e4-9ba9-83796acad8b5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0],"tindex":"2893270f-da62-11e4-9ba9-719a4aeff6cb","variableMapping":{"flags":"flags","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-1},{"failures":[1,2,3],"tindex":"28932710-da62-11e4-9ba9-8bd5c8e39bcc","variableMapping":{"pos":"i","mSize":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"28934e21-da62-11e4-9ba9-e7d936e63a30","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"28934e22-da62-11e4-9ba9-5f4f8a62223d","variableMapping":{"com.graphhopper.util.Constants.VERSION":"message","tmp":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":0},{"failures":[],"tindex":"28934e23-da62-11e4-9ba9-d9f2fbdf3e8c","variableMapping":{"segmentSizeInBytes":"err","indexDivisor":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[4,5,6,7,8,9,10],"tindex":"28934e24-da62-11e4-9ba9-d704ec58ed5c","variableMapping":{"workerThreads":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[11],"tindex":"28934e25-da62-11e4-9ba9-997583cf875b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"28934e26-da62-11e4-9ba9-c11e9ac6eaa8","variableMapping":{"bytePos":"includeWay"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,15,52,53,54,55],"tindex":"28934e27-da62-11e4-9ba9-0712643c64b6","variableMapping":{"intVal":"speed","degree":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[56,57,58,59,18,19,20,33,34,35,36,37,39,40,60,61,62,63,64,65,66,67,68,69,70,4,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,5,86,87,88,89,90,91],"tindex":"28934e28-da62-11e4-9ba9-9d26a408d15d","variableMapping":{"numTiles":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[92,93,94,95],"tindex":"28934e29-da62-11e4-9ba9-75cb9975715d","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[96,97,98],"tindex":"28934e2a-da62-11e4-9ba9-276fc51d0ce5","variableMapping":{"initLeafSize":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[99,100,101,102,103,96,97,104,105,106,107,12,108,109,110,111,112,113,114,115,116,117,0,118,119,120,121,122,123,124,125,126,127,128,1,129,130,131,132,133,134,135,136,137,138,139,140,141,142,56,143,144,145,57,58,146,147,59,148,149,150,151,152,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,167,168,169,16,17,18,19,20,21,22,23,24,170,25,26,27,28,29,30,171,172,173,174,175,176,177,178,31,32,33,34,35,36,37,179,38,39,40,41,180,60,61,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,64,209,65,66,67,68,210,69,70,4,71,72,73,74,75,76,77,78,211,79,212,80,81,82,83,213,84,85,5,86,87,88,89,90,91,214,215,216,217,218,6,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,7,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,10,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"2893753b-da62-11e4-9ba9-777ed1b4eb19","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"2893753c-da62-11e4-9ba9-fdcfd7d8b696","variableMapping":{"len":"oldRelationFlags","start":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"2893753d-da62-11e4-9ba9-a547448a3a8b","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:142","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":-2},{"failures":[101,106,107,150,155,159,162,165,168,16,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,37,39,40,185,186,188,189,198,199,200,202,67,82,401,217,219,224,245,251,256,259,266,271,292,298,303,306,402,403,404,405,406,407,408,409,358,363,384,390,395,398,410,411,412,413,414,415,416,417],"tindex":"2893753e-da62-11e4-9ba9-bdb7c6ebfe31","variableMapping":{"factor":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-1},{"failures":[92,93,94,95,418,419,420],"tindex":"2893753f-da62-11e4-9ba9-4d7649754335","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"28937540-da62-11e4-9ba9-63e4f4803f88","variableMapping":{"edgePointer":"encoded","edgeEntryBytes":"priorityFromRelation","nextEdge":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-2},{"failures":[],"tindex":"28937541-da62-11e4-9ba9-3f7749141744","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[],"tindex":"28937542-da62-11e4-9ba9-0baeeeac11aa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[421],"tindex":"28939c53-da62-11e4-9ba9-1b51c8e9a141","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"28939c54-da62-11e4-9ba9-5d364a14d570","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[422],"tindex":"28939c55-da62-11e4-9ba9-13e9f6cc537b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[423,424,63,64,210,70,4,79,213,85,5,425,426,427,428,429,430,431,432],"tindex":"28939c56-da62-11e4-9ba9-232091d9493d","variableMapping":{"minDistance":"maxLonTmp","rMin":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[0],"tindex":"28939c57-da62-11e4-9ba9-1f5db1bab9e2","variableMapping":{"bytePos":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"28939c58-da62-11e4-9ba9-8576765a927b","variableMapping":{"mSize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"28939c59-da62-11e4-9ba9-21433399cb3c","variableMapping":{"latlon":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"28939c5a-da62-11e4-9ba9-814b0604c905","variableMapping":{"carEncoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:80","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.CarFlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[433,434,435],"tindex":"28939c5b-da62-11e4-9ba9-b9f9e39597c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:467","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"28939c5c-da62-11e4-9ba9-eb85eb3a2aff","variableMapping":{"initLeafSize":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[1,2,3],"tindex":"28939c5d-da62-11e4-9ba9-435187d37a7c","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"i","speed":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[12,108,109,436,437,111,115,116,438,439,440,441,442,443,444,420,445,121,123,124,1,129,130,133,134,135,139,142,144,57,58,153,158,161,16,17,18,20,23,24,25,26,27,30,171,172,33,34,35,36,37,39,40,60,217,219,224,225,226,233,235,248,253,256,260,266,271,272,273,280,282,295,300,303,307,313,314,315,322,324,337,342,345,349,358,363,364,365,372,374,387,392,395,399],"tindex":"28939c5e-da62-11e4-9ba9-e93e28c5d7b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"28939c5f-da62-11e4-9ba9-af1135606301","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[33,70,85,217,219,266,358],"tindex":"28939c60-da62-11e4-9ba9-63ef33560534","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[111,114,226,237,239,243,244,251,252,273,284,286,290,291,298,299,315,326,328,332,333,340,341,365,376,378,382,383,390,391],"tindex":"2893c371-da62-11e4-9ba9-71dc30545f69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"2893c372-da62-11e4-9ba9-21455fa12e0b","variableMapping":{"res":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[99,100,101,102,103,96,97,104,105,106,107,12,108,109,110,111,112,113,114,115,116,117,0,118,119,120,121,122,123,124,125,126,127,128,1,129,130,131,132,133,134,135,136,137,138,139,140,141,142,56,143,144,145,57,58,146,147,59,148,149,150,151,152,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,167,168,169,16,17,18,19,20,21,22,23,24,25,26,27,28,30,171,172,173,31,32,33,34,35,36,37,38,39,40,41,60,61,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,64,209,65,66,67,68,210,69,70,4,71,72,73,74,446,75,76,77,78,211,79,212,80,81,82,83,213,84,85,5,86,87,88,89,447,90,91,217,6,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,7,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,448,449,8,450,451,452,453,9,454,455,324,339,351,352,353,354,355,356,357,10,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"2893c373-da62-11e4-9ba9-9758c935c455","variableMapping":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"2893c374-da62-11e4-9ba9-47e63040307d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"2893c375-da62-11e4-9ba9-0b025af03c03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"2893c376-da62-11e4-9ba9-2d526cbc7441","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"2893c377-da62-11e4-9ba9-61ef4e8a3e64","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[113,30],"tindex":"2893c378-da62-11e4-9ba9-43be7bf035f1","variableMapping":{"initLeafSize":"maxCount","maxLeafEntries":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[456],"tindex":"2893ea89-da62-11e4-9ba9-8127ff90129c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"status":-1},{"failures":[111,114,226,236,237,239,243,244,251,252,273,283,284,286,290,291,298,299,315,325,326,328,332,333,340,341,365,375,376,378,382,383,390,391],"tindex":"2893ea8a-da62-11e4-9ba9-0582b414a436","variableMapping":{"index":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[443],"tindex":"2893ea8b-da62-11e4-9ba9-c1b0ef85a70e","variableMapping":{"time":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[457],"tindex":"2893ea8c-da62-11e4-9ba9-0f931739d54b","variableMapping":{"systemProperty":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:60","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"2893ea8d-da62-11e4-9ba9-4d7d4b6fcbc7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"2893ea8e-da62-11e4-9ba9-f90bfd6200b4","variableMapping":{"mask":"wayBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-2},{"failures":[458,459,460],"tindex":"2893ea8f-da62-11e4-9ba9-bdbc3b63d12c","variableMapping":{"tt":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"2893ea90-da62-11e4-9ba9-0369a5c9a673","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:165","type":"CtTryImpl","sourcecode":"try {\n    boolean boolean = com.graphhopper.storage.NativeFSLockFactory.NativeLock.tryLock();\n    if (boolean)\n        com.graphhopper.storage.NativeFSLockFactory.NativeLock.release();\n    \n    return !boolean;\n} catch (java.lang.Exception java.lang.Exception) {\n    return false;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"2893ea91-da62-11e4-9ba9-2d666ddb17b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"))"},"status":-2},{"failures":[],"tindex":"2893ea92-da62-11e4-9ba9-9dece62ce4cf","variableMapping":{"dist":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"2893ea93-da62-11e4-9ba9-17dbd17e6c54","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"2893ea94-da62-11e4-9ba9-4df88a2fa5af","variableMapping":{"size":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[436,437,438,440,441,442,444,461,20,21,25],"tindex":"2893ea95-da62-11e4-9ba9-6b73f2583f9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"2893ea96-da62-11e4-9ba9-fd06e601f1c4","variableMapping":{"distance":"lon","dist":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-2},{"failures":[],"tindex":"2893ea97-da62-11e4-9ba9-8bdf3ee488b2","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"2893ea98-da62-11e4-9ba9-b155d5ce3402","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","com.graphhopper.routing.util.EncodingManager.RACINGBIKE":"com.graphhopper.routing.util.EncodingManager.FOOT","com.graphhopper.routing.util.EncodingManager.FOOT":"entry","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.BIKE","com.graphhopper.routing.util.EncodingManager.BIKE2":"com.graphhopper.routing.util.EncodingManager.BIKE2","entryVal":"com.graphhopper.routing.util.EncodingManager.FOOT","com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE":"entry","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[92,93,94,95],"tindex":"2893ea99-da62-11e4-9ba9-ab1585ff06d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[418,16,28,30],"tindex":"289411aa-da62-11e4-9ba9-0580c7e3c3ac","variableMapping":{"val":"footTag","defaultL":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[122,123,124,125,126,127,128,1,130,131,132,133,135,136,137,138,139,140,141,142,56,143,144,145,57,58,146,147,59,148,149,150,151,152,153,33,34,37,38,462],"tindex":"289411ab-da62-11e4-9ba9-b515912cf7e5","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[111,226,234,239,244,251,252,273,281,286,291,298,299,315,323,328,333,340,341,357,365,373,378,383,390,391],"tindex":"289411ac-da62-11e4-9ba9-6bda28c32397","variableMapping":{"a":"mValues","high":"value","key":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:390","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"289411ad-da62-11e4-9ba9-ffd9d09849f6","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"289411ae-da62-11e4-9ba9-31fa5b343d06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":0},{"failures":[],"tindex":"2894adef-da62-11e4-9ba9-31de58c23562","variableMapping":{"a_lon_deg":"maxLon","factor":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"2894d500-da62-11e4-9ba9-5507f4d7a886","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"2895e671-da62-11e4-9ba9-3d0321caf8c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[],"tindex":"2895e672-da62-11e4-9ba9-d334b3885103","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"2895e673-da62-11e4-9ba9-df7b2e50d278","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"2895e674-da62-11e4-9ba9-690fb635676f","variableMapping":{"distance":"lat","speed":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[],"tindex":"28960d85-da62-11e4-9ba9-2d09562b6727","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[463,42,464,43,44,436,465,466,467,468,469,470,471,92,472,473,474,45,475,476,477,46,47,478,458,437,479,480,433,481,482,483,484,485,93,48,486,113,459,49,487,50,438,488,489,434,490,491,492,493,494,94,51,495,439,13,496,14,15,117,0,497,52,498,499,500,53,54,501,460,440,502,503,435,504,505,506,507,508,95,55,509,441,510,118,511,512,513,514,418,515,442,516,456,443,444,419,517,518,519,420,520,521,522,445,523,524,525,134,135,136,137,138,139,140,141,142,56,143,144,145,57,58,146,147,59,148,149,150,151,152,153,154,526,527,528,16,17,18,19,20,21,22,23,24,25,26,27,28,30,36,41,195,208,76,91,217,218,6,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,7,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,10,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"28960d86-da62-11e4-9ba9-bde7bd04f94f","variableMapping":{"ret":"shift","retBucket":"shift","i":"shift","bucketSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[113],"tindex":"28960d87-da62-11e4-9ba9-dd0bef5a06d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"28960d88-da62-11e4-9ba9-7f98ea3cb833","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"28960d89-da62-11e4-9ba9-97ad27db6889","variableMapping":{"angle":"speed","com.graphhopper.util.AngleCalc.PI3_4":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":0},{"failures":[464,43,44,465,467,470,471,472,45,475,476,47,479,433,481,484,485,48,486,49,50,488,434,490,493,494,51,495,13,14,52,498,499,54,502,435,504,507,508,55,509],"tindex":"28960d8a-da62-11e4-9ba9-870097e6d0cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:432","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int)"},"status":-1},{"failures":[116],"tindex":"28960d8b-da62-11e4-9ba9-a7eb8b5b10bb","variableMapping":{"edgeFilter":"edgeFilter","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:86","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator)))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-1},{"failures":[],"tindex":"28960d8c-da62-11e4-9ba9-7d44b6901b7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[99,100,101,102,103,96,97,104,105,106,107,12,108,109,110,111,112,113,114,115,116,117,0,118,119,120,121,122,123,124,125,126,127,128,1,129,130,131,132,133,134,135,136,137,138,139,140,141,142,56,143,144,145,57,58,146,147,59,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,168,169,16,17,18,19,20,21,22,23,24,25,26,27,28,30,171,172,173,31,32,33,34,35,36,37,38,39,40,41,60,61,190,191,192,193,194,195,197,198,199,200,202,203,204,205,206,207,208,64,209,65,66,67,68,210,69,70,4,71,72,73,74,75,76,77,78,211,79,212,80,81,82,83,213,84,85,5,86,87,88,89,90,91,217,6,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,7,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,448,449,8,450,451,452,453,529,9,454,455,324,339,351,352,353,354,355,356,357,10,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"2896349d-da62-11e4-9ba9-e5908d7e8848","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[419,16],"tindex":"2896349e-da62-11e4-9ba9-edb2435a42d0","variableMapping":{"weight":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"2896349f-da62-11e4-9ba9-9fb5e9f5fbce","variableMapping":{"size":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"289634a0-da62-11e4-9ba9-21e28f8654e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 1))"},"status":-2},{"failures":[530,457,519],"tindex":"289634a1-da62-11e4-9ba9-518b88023e76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-1},{"failures":[],"tindex":"289634a2-da62-11e4-9ba9-9d5158912d78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[136,59,149,150,151],"tindex":"289634a3-da62-11e4-9ba9-b99d750b5de4","variableMapping":{"size":"to","newSize":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[439,11,15,441,118,511,512,514,418,145,17,31,36,40,195,208,76,91,232,279,321,371],"tindex":"289634a4-da62-11e4-9ba9-ef794b09bb19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:127","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"289634a5-da62-11e4-9ba9-bd8ea0e0c06d","variableMapping":{"angle":"java.lang.Double.MAX_VALUE","com.graphhopper.util.AngleCalc.PI3_4":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"289634a6-da62-11e4-9ba9-d117a8bbf9c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:78","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.Integer, java.lang.Integer> java.util.Map<java.lang.Integer, java.lang.Integer> = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks()"},"status":-2},{"failures":[],"tindex":"289634a7-da62-11e4-9ba9-7bf462db0e82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[531],"tindex":"289634a8-da62-11e4-9ba9-13036a976a29","variableMapping":{"red":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"289634a9-da62-11e4-9ba9-d1d996098643","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[99,100,101,102,103,96,97,104,105,106,107,12,108,109,110,111,112,113,114,115,116,117,0,118,119,120,121,122,123,124,125,126,127,128,1,129,130,131,132,133,134,135,136,137,138,139,140,141,142,56,143,144,145,57,58,146,147,59,148,149,150,151,152,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,167,168,169,16,17,18,19,20,21,22,23,24,170,25,26,27,28,29,30,171,172,173,174,175,176,177,178,31,32,33,34,35,36,37,179,38,39,40,41,180,60,61,181,182,183,184,185,186,187,188,189,190,191,192,193,532,194,195,196,197,198,199,200,201,202,203,204,205,206,533,207,208,64,209,65,66,67,68,210,69,70,4,71,72,73,74,446,75,76,77,78,211,79,212,80,81,82,83,213,84,85,5,86,87,88,89,447,90,91,214,215,216,217,218,6,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,7,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,10,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"28965bba-da62-11e4-9ba9-c37479024a15","variableMapping":{"name":"name","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:178","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess == null)\n    throw new java.lang.IllegalStateException((\"Couldn\\'t remove dataAccess object:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[],"tindex":"28965bbb-da62-11e4-9ba9-990e4763af84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[101,105,106,107,12,150,155,161,162,165,168,169,18,21,22,31,33,37,38,39,41,182,183,184,185,186,187,188,189,65,67,80,82,214,217,219,224,245,251,256,258,266,271,292,298,303,305,534,356,358,363,384,390,395,397,535],"tindex":"2896a9dc-da62-11e4-9ba9-1130ace4c74b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[42,43,470,484,493,507],"tindex":"2896d0ed-da62-11e4-9ba9-53c3b3e4c540","variableMapping":{"fullyLoaded":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:658","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[133,134,135,150,151,153],"tindex":"2896d0ee-da62-11e4-9ba9-dfcb0297b36b","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"2896d0ef-da62-11e4-9ba9-3db653a8b5f4","variableMapping":{"mSize":"com.graphhopper.coll.SparseIntIntArray.DELETED","value":"i","mValues":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:303","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((int[][int]) == int) {\n        return int;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"2896d0f0-da62-11e4-9ba9-6b9e743bd496","variableMapping":{"dx":"fwdIncline","dy":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[443],"tindex":"2896d0f1-da62-11e4-9ba9-999ed81b192b","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":389,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":148,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":155,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":356,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":530,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":314,"com.graphhopper.reader.OSMReaderTest.testFerry":16,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":109,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":44,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":81,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":32,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":400,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":507,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":509,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":234,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":175,"com.graphhopper.coll.CompressedArrayTest.testCompress":424,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":469,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":125,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":334,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":282,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":211,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":402,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":130,"com.graphhopper.GraphHopperTest.testPrepare":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":346,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":121,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":289,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":476,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":143,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":196,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":470,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":97,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":79,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":115,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":43,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":45,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":142,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":281,"com.graphhopper.coll.BitSetImplTest.testCopy":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":47,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":217,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":430,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":363,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":133,"com.graphhopper.GraphHopperTest.testLoadOSM":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":71,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":67,"com.graphhopper.reader.OSMReaderTest.testSort":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":485,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":220,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":404,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":301,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":266,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":347,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":161,"com.graphhopper.routing.DijkstraTest.initializationError":524,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":255,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":388,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":278,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":218,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":229,"com.graphhopper.reader.OSMNodeTest.testSetTags":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":224,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":373,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":495,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":494,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":84,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":58,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":78,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":83,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":138,"com.graphhopper.coll.OSMIDMapTest.testGetLong":188,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":365,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":244,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":380,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":358,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":382,"com.graphhopper.coll.CompressedArrayTest.testCompress2":423,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":235,"com.graphhopper.GraphHopperAPITest.testLoad":60,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":362,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":450,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":441,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":283,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":273,"com.graphhopper.storage.LevelGraphStorageTest.testClone":367,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":531,"com.graphhopper.reader.OSMReaderTest.testBarriers":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":501,"com.graphhopper.util.GHUtilityTest.testCopy":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":318,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":491,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":92,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":533,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":416,"com.graphhopper.routing.PathTest.testFindInstruction":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":466,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":226,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":108,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":514,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":396,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":499,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":302,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":287,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":253,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":505,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":11,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":525,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":369,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":319,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":455,"com.graphhopper.util.InstructionListTest.testWayList2":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":72,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":230,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":477,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":117,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":267,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":371,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":534,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":478,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":405,"com.graphhopper.storage.RAMDirectoryTest.testSynched":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":236,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":140,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":272,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":21,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":403,"com.graphhopper.routing.AStarTest.initializationError":528,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":150,"com.graphhopper.coll.OSMIDMapTest.testGet":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":233,"com.graphhopper.routing.PathBidirRefTest.testExtract":119,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":418,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":187,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":384,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":87,"com.graphhopper.storage.RAMDataAccessTest.testCopy":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":261,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":340,"com.graphhopper.storage.RAMDataAccessTest.testSegments":415,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":76,"com.graphhopper.util.GHUtilityTest.testSort2":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":146,"com.graphhopper.reader.OSMReaderTest.testMain":18,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":359,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":480,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":431,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":93,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":387,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":344,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":374,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":378,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":399,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":158,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":375,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":248,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":52,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":381,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":28,"com.graphhopper.storage.StorablePropertiesTest.testStore":214,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":535,"com.graphhopper.storage.GraphHopperStorageTest.testClone":275,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":420,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":310,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":518,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":351,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":320,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":354,"com.graphhopper.routing.PathTest.testTime":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":490,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":397,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":368,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":523,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":74,"com.graphhopper.reader.OSMReaderTest.testRelation":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":333,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":386,"com.graphhopper.util.GHUtilityTest.testSortDirected":103,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":508,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":408,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":157,"com.graphhopper.GraphHopperTest.testFootOnly":40,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":464,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":419,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":213,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":137,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":497,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":329,"com.graphhopper.search.NameIndexTest.testCreate":184,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":414,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":154,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":453,"com.graphhopper.routing.QueryGraphTest.testOneWay":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":446,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":465,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":425,"com.graphhopper.reader.OSMReaderTest.testWithBounds":27,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":95,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":410,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":112,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":335,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":515,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":13,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":364,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":360,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":506,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":472,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":247,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":517,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":240,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":271,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":135,"com.graphhopper.util.InstructionListTest.testWayList":106,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":458,"com.graphhopper.GraphHopperAPITest.testDisconnected179":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":321,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":249,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":316,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":435,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":332,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":483,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":35,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":277,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":131,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":474,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":145,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":526,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":129,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":520,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":488,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":484,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":222,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":152,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":270,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":447,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":452,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":486,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":7,"com.graphhopper.routing.PathTest.testWayList":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":348,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":489,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":444,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":457,"com.graphhopper.coll.OSMIDMapTest.testGet2":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":153,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":392,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":482,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":288,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":510,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":231,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":85,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":5,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":412,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":440,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":487,"com.graphhopper.util.GHUtilityTest.testSort":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":338,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":432,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":436,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":481,"com.graphhopper.search.NameIndexTest.testPut":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":260,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":274,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":206,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":202,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":192,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":53,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":6,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":39,"com.graphhopper.storage.MMapDirectoryTest.testSynched":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":438,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":177,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":513,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":111,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":454,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":377,"com.graphhopper.routing.PathTest.testFound":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":339,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":15,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":41,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":394,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":422,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":353,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":433,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":237,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":462,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":183,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":324,"com.graphhopper.util.InstructionListTest.testEmptyList":104,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":56,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":492,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":445,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":516,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":442,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":471,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":147,"com.graphhopper.reader.PrinctonReaderTest.testRead":171,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":303,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":82,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":232,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":323,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":313,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":242,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":468,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":502,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":401,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":496,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":498,"com.graphhopper.reader.OSMReaderTest.testFoot":17,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":165,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":70,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":398,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":429,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":4,"com.graphhopper.reader.OSMReaderTest.testOneWay":30,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":284,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":299,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":254,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":467,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":407,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":293,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":460,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":331,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":126,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":519,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":124,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":193,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":406,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":118,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":327,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":156,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":29,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":268,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":265,"com.graphhopper.routing.PathBidirRefTest.testExtract2":120,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":529,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":73,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":208,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":493,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":181,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":297,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":532,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":51,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":350,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":511,"com.graphhopper.util.SimpleIntDequeTest.testPush":98,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":504,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":68,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":300,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":370,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":521,"com.graphhopper.GraphHopperTest.testFootAndCar":36,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":292,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":376,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":90,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":317,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":439,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":522,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":144,"com.graphhopper.storage.StorablePropertiesTest.testLoad":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":228,"com.graphhopper.GraphHopperTest.testPrepareOnly":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":149,"com.graphhopper.GraphHopperTest.testVia":33,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":315,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":25,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":355,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":12,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":296,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":512,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":330,"com.graphhopper.routing.AStarBidirectionTest.initializationError":527,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":473,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":393,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":391,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":219}}]
