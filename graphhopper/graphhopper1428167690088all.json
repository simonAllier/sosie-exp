[{"failures":[],"tindex":"1c7e7aba-daee-11e4-97b2-0187542c1fc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"1c86b81b-daee-11e4-97b2-d5ecb31a4f47","variableMapping":{"err":"segmentsToCreate","dLat":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[110],"tindex":"1c86b81c-daee-11e4-97b2-f7b2da2d7299","variableMapping":{"y1":"lastEdgeIndex","y2":"edgeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-1},{"failures":[],"tindex":"1c86b81d-daee-11e4-97b2-65b82d2b6486","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"1c86b81e-daee-11e4-97b2-0946eead9b88","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[9,10,11,12,15,16,17,18,19,20,21,85,86,87,88,89,90,91,92,94,111,112,113,114],"tindex":"1c86b81f-daee-11e4-97b2-491e386473ec","variableMapping":{"time":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"1c86b820-daee-11e4-97b2-ad97e413c42f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"1c86df31-daee-11e4-97b2-89d34bc45041","variableMapping":{"tmpNo":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,21,89,94,115],"tindex":"1c86df32-daee-11e4-97b2-e3dcd00d1c05","variableMapping":{"this":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) > 1)\n    throw new java.lang.IllegalStateException((\"Multiple encoders are active. cannot return one:\" + com.graphhopper.routing.util.EncodingManager.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-1},{"failures":[0,116,117,118,119,48,120,50,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,51,137,138,52,139,140,141,53,54,142,143,144,145,146,65,66,67,147,148,149,150,151,152,153,154,155,156,84,85,86,87,90,91,93,157,158,159,160,161,162,163,164,165,166,167,168,169,110,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,109,189,190,191],"tindex":"1c86df33-daee-11e4-97b2-9bec999eae4f","variableMapping":{"high":"I_SKIP_EDGE1","guess":"I_SKIP_EDGE1","low":"I_SKIP_EDGE1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"1c86df34-daee-11e4-97b2-993e9c0a08ef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[192,193,194],"tindex":"1c86df35-daee-11e4-97b2-317e3960476c","variableMapping":{"allBits":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[8,9,10,11,13,14,15,16,19,20,21,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"tindex":"1c86df36-daee-11e4-97b2-1fd6e8526ff1","variableMapping":{"reverseOrder":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:126","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"1c86df37-daee-11e4-97b2-fb83c4e5addf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[215,216,217,218,219,165,168],"tindex":"1c86df38-daee-11e4-97b2-cdbf28977724","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[165,175,188,189,191],"tindex":"1c86df39-daee-11e4-97b2-7f7706b213fe","variableMapping":{"pointIndex":"value","index":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[115],"tindex":"1c86df3a-daee-11e4-97b2-69e4b35b7d18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"1c86df3b-daee-11e4-97b2-ede13ca09ec9","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"1c86df3c-daee-11e4-97b2-3516df0e574c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"1c86df3d-daee-11e4-97b2-a13c500cfe8b","variableMapping":{"factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"1c87064e-daee-11e4-97b2-cd3cb8eae685","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"1c87064f-daee-11e4-97b2-69695ce2aad5","variableMapping":{"byteCount":"forwardBit","longSegmentSize":"directionBitMask","segmentsToMap":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:120","type":"CtIfImpl","sourcecode":"if ((long % long) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[20,86,220,111,112,199,221,222,207,223,224,225],"tindex":"1c870650-daee-11e4-97b2-d9819f312245","variableMapping":{"intKey":"kmInteger","str":"str","key":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:120","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[],"tindex":"1c870651-daee-11e4-97b2-73c30361008b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[226,227,228,229,230,231,232],"tindex":"1c870652-daee-11e4-97b2-8948581ad42c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:45","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"status":-2},{"failures":[],"tindex":"1c870653-daee-11e4-97b2-fb55d4e5086e","variableMapping":{"ref":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[233],"tindex":"1c870654-daee-11e4-97b2-4782ac99dc2b","variableMapping":{"str":"minStr","lonInt":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:282","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"0\" : \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[192,193],"tindex":"1c870655-daee-11e4-97b2-851eed02072e","variableMapping":{"node":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[0,1,2,3,4,10,13,14,22,23,24,25,26,28,30,39,47,48,50,51,52,53,54,56,57,59,60,61,62,63,65,67,68,70,72,74,75,76,77,78,81,82,83,84,86,90,91,92,94,97,98,100,105,106,108,109],"tindex":"1c872d66-daee-11e4-97b2-c72663749732","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[234,235,236,237],"tindex":"1c875477-daee-11e4-97b2-87bf68679eb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[],"tindex":"1c875478-daee-11e4-97b2-6dfad85ecace","variableMapping":{"line":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[226,227,238,228,0,229,230,239,1,2,3,4,231,232,116,240,241,242,8,9,10,11,12,13,14,15,16,17,18,19,20,21,243,244,245,246,117,247,118,119,248,47,249,250,48,49,251,120,50,121,122,123,124,125,126,127,128,129,252,253,130,131,254,132,133,255,134,135,136,51,256,257,137,258,138,52,139,140,259,141,53,260,54,55,142,143,56,261,57,58,262,263,59,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,60,284,285,286,287,288,61,289,290,291,292,62,293,63,64,294,295,296,297,298,299,300,301,144,145,302,146,303,65,66,67,147,304,148,149,150,151,152,153,154,155,156,305,306,307,308,309,310,311,312,313,314,315,316,317,68,69,70,318,319,320,321,322,323,324,325,326,327,328,329,71,330,72,73,331,332,74,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,75,353,354,355,356,357,76,358,359,360,361,77,362,78,79,363,364,365,366,84,85,86,87,88,89,90,91,92,93,94,367,192,368,115,369,193,194,95,96,97,98,370,371,99,100,372,101,102,103,104,105,106,373,107,108,157,158,159,160,161,162,163,164,165,166,167,374,168,169,110,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,109,189,190,191],"tindex":"1c875479-daee-11e4-97b2-99cd1425391b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"1c87547a-daee-11e4-97b2-d9035b91296d","variableMapping":{"relationCodeEncoder":"this","shift":"maxValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[15,21,234,197,198,199,200,201,205,206,207,208,209],"tindex":"1c87547b-daee-11e4-97b2-0bd081659daf","variableMapping":{"shift":"encoded","tmpValue":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[226,227,375,144,145,65,67,148,151,152,153,154,155,306,307,309,68,70,320,323,324,325,326,327,365,366,86,87,89,90,368,115,369,182,183,186],"tindex":"1c87547c-daee-11e4-97b2-f1e726aaef82","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"1c87547d-daee-11e4-97b2-07e1f50591ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"1c87547e-daee-11e4-97b2-e9ec3c38c69e","variableMapping":{"mmapDA":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:147","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"1c87547f-daee-11e4-97b2-c3009c363365","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"1c875480-daee-11e4-97b2-418954464cf6","variableMapping":{"byteCount":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[376,200,377,378,208,212],"tindex":"1c877b91-daee-11e4-97b2-17157e6b29eb","variableMapping":{"size":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[117,158,165,168,188,189],"tindex":"1c877b92-daee-11e4-97b2-cb427c631bd3","variableMapping":{"guess":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[234,235,236,237],"tindex":"1c877b93-daee-11e4-97b2-adaa9bf8a057","variableMapping":{"lazyUpdates":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[],"tindex":"1c877b94-daee-11e4-97b2-d5a49eadbda2","variableMapping":{"flags":"flags","scDirMask":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[224],"tindex":"1c877b95-daee-11e4-97b2-7d697ce4a7e5","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[226,227,228,229,231,232,115,369],"tindex":"1c877b96-daee-11e4-97b2-897d01fbe1a1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"1c877b97-daee-11e4-97b2-1bfa41884fec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[9,21,89,379,380,234],"tindex":"1c877b98-daee-11e4-97b2-27c5b2547c35","variableMapping":{"high":"value","highKey":"value","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[234],"tindex":"1c877b99-daee-11e4-97b2-e5525f332a1c","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"1c877b9a-daee-11e4-97b2-db53c0422b7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:308","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"status":0},{"failures":[],"tindex":"1c877b9b-daee-11e4-97b2-73e182a4c578","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"1c877b9c-daee-11e4-97b2-b5a21f8ac723","variableMapping":{"mSize":"i","value":"value","mValues":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:303","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((int[][int]) == int) {\n        return int;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-2},{"failures":[21,249,122,252,130,131,132,135,136,52,139,265,273,275,276,278,282,283,61,289,381,382,383,384,385,386,387,388,389,334,342,344,345,347,351,352,76,358,192,115,369],"tindex":"1c877b9d-daee-11e4-97b2-c59e30be43d9","variableMapping":{"a":"mValues","high":"index","key":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:390","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,84,85,86,87,88,89,90,91,92,93,94,195,196,234],"tindex":"1c877b9e-daee-11e4-97b2-7dfa0e7f5aaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"1c87a2af-daee-11e4-97b2-13f6b00e90b4","variableMapping":{"intVal":"child","degree":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[390],"tindex":"1c87a2b0-daee-11e4-97b2-85bd2d4009e1","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[110,170,179,181,191],"tindex":"1c87a2b1-daee-11e4-97b2-619b95d7ef3e","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"1c87a2b2-daee-11e4-97b2-b53e68f57b88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"1c87a2b3-daee-11e4-97b2-8918f5a28007","variableMapping":{"i":"value","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":0},{"failures":[],"tindex":"1c87a2b4-daee-11e4-97b2-2d0e4fc65592","variableMapping":{"usedBits":"shift","nodeBitMask":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"1c87a2b5-daee-11e4-97b2-453d070377c3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[113],"tindex":"1c87a2b6-daee-11e4-97b2-cbc1a3cf630a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"1c87f0d7-daee-11e4-97b2-755ee105c6b1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"1c87f0d8-daee-11e4-97b2-6d1c1ba5e736","variableMapping":{"edgeId":"low","nextEdge":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[391],"tindex":"1c87f0d9-daee-11e4-97b2-e77e41336cd4","variableMapping":{"r":"shortTripsSpeed","x":"longTripsSpeed","absY":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"1c87f0da-daee-11e4-97b2-1ba8849c3963","variableMapping":{"oldValueIndex":"bits","lastKey":"bits","key":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":0},{"failures":[],"tindex":"1c87f0db-daee-11e4-97b2-d77e1176ce8d","variableMapping":{"newUniqueOsmId":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"1c87f0dc-daee-11e4-97b2-2b1ee6747088","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[112],"tindex":"1c87f0dd-daee-11e4-97b2-c1c9c72d9611","variableMapping":{"incEleSum":"backSpeed","eleDelta":"maxSpeed","incDist2DSum":"maxSpeed","decEleSum":"backSpeed","fullDist2D":"maxSpeed","decDist2DSum":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"1c8817ee-daee-11e4-97b2-6dbd523f52a4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"1c8817ef-daee-11e4-97b2-1baf0b8fb8d0","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"1c8817f0-daee-11e4-97b2-8f98b1689a2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[],"tindex":"1c8817f1-daee-11e4-97b2-23f002ec86fa","variableMapping":{"java.lang.Integer.MAX_VALUE":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"1c8817f2-daee-11e4-97b2-0b134c451b18","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[],"tindex":"1c8817f3-daee-11e4-97b2-4334d6096681","variableMapping":{"minDistance":"baseOrientation","rMin":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[169,110,170,109,189,191],"tindex":"1c8817f4-daee-11e4-97b2-c1b810d0c06e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"1c8817f5-daee-11e4-97b2-391e493d6024","variableMapping":{"len":"shift","start":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[196,198,200,201,392,377,203,206,208,209,211,212,213],"tindex":"1c8817f6-daee-11e4-97b2-8b9477b99dc4","variableMapping":{"value":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"1c8817f7-daee-11e4-97b2-f13eaa4d1529","variableMapping":{"com.graphhopper.storage.DAType.MMAP":"defaultType","type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:166","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":0},{"failures":[],"tindex":"1c8817f8-daee-11e4-97b2-89ee8b5a3b8e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"1c8817f9-daee-11e4-97b2-cdf4e4d5cb60","variableMapping":{"angle":"prio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[112,393,221,222,223,225,394],"tindex":"1c8817fa-daee-11e4-97b2-6f5021e82015","variableMapping":{"orientation":"speed","resultOrientation":"speed","baseOrientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"1c8817fb-daee-11e4-97b2-3dd9a2279060","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"1c8817fc-daee-11e4-97b2-cd4e192d50ae","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[8,20,21,113],"tindex":"1c8817fd-daee-11e4-97b2-f39705668043","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[110],"tindex":"1c8817fe-daee-11e4-97b2-13e244a7157a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:250","type":"CtIfImpl","sourcecode":"if (!boolean)\n    return com.graphhopper.storage.GraphHopperStorage.reverseFlags(long, long);\n"},"status":-1},{"failures":[198,206],"tindex":"1c8817ff-daee-11e4-97b2-e7c0fe8e3053","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"1c883f10-daee-11e4-97b2-3163b7a05741","variableMapping":{"shift":"nodeBitMask","flags":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"1c883f11-daee-11e4-97b2-f7a5f450b36a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"1c883f12-daee-11e4-97b2-690e362d64e1","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[21,249,122,252,130,131,132,135,136,52,139,265,273,275,276,278,282,283,61,289,381,382,383,384,385,386,387,388,389,334,342,344,345,347,351,352,76,358,192,115,369],"tindex":"1c883f13-daee-11e4-97b2-eddf1dfc1a0b","variableMapping":{"mKeys":"mKeys","nkeys":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[195,196,197,205],"tindex":"1c883f14-daee-11e4-97b2-63151da76316","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"1c883f15-daee-11e4-97b2-5d128bf0f675","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"1c883f16-daee-11e4-97b2-f32d56e03aea","variableMapping":{"val":"maxTurnCosts","com.graphhopper.storage.GraphHopperStorage.INT_DIST_FACTOR":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:247","type":"CtReturnImpl","sourcecode":"return int / (com.graphhopper.storage.GraphHopperStorage.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"1c890267-daee-11e4-97b2-fda374127948","variableMapping":{"line":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[226,227,375,9,12,14,15,17,144,145,65,67,148,151,152,153,154,155,306,307,309,68,70,320,323,324,325,326,327,365,366,86,87,89,90,94,368,115,369,182,183,186],"tindex":"1c890268-daee-11e4-97b2-e714f86f87af","variableMapping":{"edgeId":"v"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"1c890269-daee-11e4-97b2-73e77bb7ac94","variableMapping":{"maxMCSpeed":"java.lang.Math.PI","speed":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"1c89026a-daee-11e4-97b2-4133c2903492","variableMapping":{"y":"speed","angle":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":0},{"failures":[],"tindex":"1c89026b-daee-11e4-97b2-1fe343fcbc4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.setProperties(double, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"1c89026c-daee-11e4-97b2-1ff5b29e71c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"))"},"status":-2},{"failures":[],"tindex":"1c89026d-daee-11e4-97b2-dfd8d4f1f33d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":138,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":187,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":47,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":298,"com.graphhopper.reader.OSMReaderTest.testFerry":8,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":231,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":232,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":66,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":85,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":273,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":29,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":161,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":249,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":302,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":167,"com.graphhopper.GraphHopperTest.testPrepare":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":157,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":350,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":376,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":179,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":203,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":227,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":120,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":177,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":69,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":56,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":50,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":169,"com.graphhopper.GraphHopperTest.testLoadOSM":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":70,"com.graphhopper.reader.OSMReaderTest.testSort":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":221,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":115,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":58,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":360,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":72,"com.graphhopper.storage.RAMDataAccessTest.testHeader":43,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":105,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":242,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":292,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":258,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":339,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":247,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":59,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":252,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":148,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":174,"com.graphhopper.coll.OSMIDMapTest.testGetLong":25,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":173,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":283,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":255,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":48,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":135,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":237,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":274,"com.graphhopper.GraphHopperAPITest.testLoad":365,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":244,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":344,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":334,"com.graphhopper.storage.LevelGraphStorageTest.testClone":124,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":233,"com.graphhopper.reader.OSMReaderTest.testBarriers":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":144,"com.graphhopper.util.GHUtilityTest.testCopy":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":176,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":156,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":45,"com.graphhopper.routing.PathTest.testFindInstruction":98,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":256,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":265,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":116,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":380,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":260,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":378,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":361,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":348,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":163,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":278,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":126,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":332,"com.graphhopper.util.InstructionListTest.testWayList2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":324,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":197,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":95,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":128,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":275,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":175,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":333,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":13,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":109,"com.graphhopper.coll.OSMIDMapTest.testGet":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":272,"com.graphhopper.routing.PathBidirRefTest.testExtract":370,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":24,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":51,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":152,"com.graphhopper.storage.RAMDataAccessTest.testCopy":40,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":388,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":392,"com.graphhopper.storage.RAMDataAccessTest.testSegments":44,"com.graphhopper.util.GHUtilityTest.testSort2":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":184,"com.graphhopper.reader.OSMReaderTest.testMain":10,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":282,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":111,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":262,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":253,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":132,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":142,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":102,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":236,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":243,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":134,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":20,"com.graphhopper.storage.StorablePropertiesTest.testStore":28,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":39,"com.graphhopper.storage.GraphHopperStorageTest.testClone":336,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":364,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":112,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":346,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":117,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":119,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":54,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":326,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":387,"com.graphhopper.util.GHUtilityTest.testSortDirected":230,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":218,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":223,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":36,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":101,"com.graphhopper.GraphHopperTest.testFootOnly":93,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":391,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":304,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":327,"com.graphhopper.search.NameIndexTest.testCreate":83,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":99,"com.graphhopper.routing.QueryGraphTest.testOneWay":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":68,"com.graphhopper.reader.OSMReaderTest.testWithBounds":19,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":46,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":293,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":384,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":195,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":121,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":204,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":285,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":279,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":74,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":170,"com.graphhopper.util.InstructionListTest.testWayList":2,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":362,"com.graphhopper.GraphHopperAPITest.testDisconnected179":366,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":287,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":316,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":386,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":88,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":338,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":374,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":355,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":166,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":201,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":190,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":245,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":202,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":330,"com.graphhopper.routing.PathTest.testWayList":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":383,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":224,"com.graphhopper.coll.OSMIDMapTest.testGet2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":191,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":34,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":140,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":284,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":270,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":337,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":133,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":150,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":41,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":151,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":216,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":211,"com.graphhopper.util.GHUtilityTest.testSort":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":320,"com.graphhopper.search.NameIndexTest.testPut":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":294,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":335,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":303,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":309,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":312,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":207,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":310,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":261,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":280,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":192,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":71,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":94,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":234,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":141,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":390,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":118,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":276,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":82,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":329,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":38,"com.graphhopper.util.InstructionListTest.testEmptyList":239,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":178,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":220,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":222,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":185,"com.graphhopper.reader.PrinctonReaderTest.testRead":240,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":77,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":67,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":271,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":60,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":205,"com.graphhopper.reader.OSMReaderTest.testFoot":9,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":7,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":108,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":321,"com.graphhopper.reader.OSMReaderTest.testOneWay":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":322,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":345,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":358,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":291,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":35,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":353,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":168,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":160,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":313,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":367,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":65,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":372,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":331,"com.graphhopper.routing.PathBidirRefTest.testExtract2":371,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":213,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":325,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":80,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":357,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":15,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":379,"com.graphhopper.util.SimpleIntDequeTest.testPush":375,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":318,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":359,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":127,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":75,"com.graphhopper.GraphHopperTest.testFootAndCar":89,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":131,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":155,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":267,"com.graphhopper.GraphHopperTest.testPrepareOnly":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":188,"com.graphhopper.GraphHopperTest.testVia":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":381,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":17,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":248,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":4,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":356,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":16,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":114,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":259,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":139,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":57}}]
