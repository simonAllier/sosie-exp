[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"24ef1e85-daaf-11e4-877e-bd70e72dd346","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"24f1b696-daaf-11e4-877e-9fb4089749c9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"24f1dda7-daaf-11e4-877e-c7b23061c3f4","variableMapping":{"costs":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"24f1dda8-daaf-11e4-877e-8fa81c8fe92b","variableMapping":{"size":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:80","type":"CtLocalVariableImpl","sourcecode":"long long = (long) * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,101,102,103,104,105,106,107,108,23,109,110,111,112,113,114,115,116,117,118,119,24,25,26,27,28,29,30,31,32,33,34,35,36,38,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,5,171,6,7,8,172,9,173,10,174,11,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"tindex":"24f1dda9-daaf-11e4-877e-e7d181b97926","variableMapping":{"freeIndex":"segmentsToCreate","currentIndex":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"24f1ddaa-daaf-11e4-877e-7f78cb31f12f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[145,146,165,166,168,175],"tindex":"24f204bb-daaf-11e4-877e-0d9ab4ed9d52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:81","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[],"tindex":"24f204bc-daaf-11e4-877e-21ec300c4b0e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"24f204bd-daaf-11e4-877e-fda837ef9435","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"24f204be-daaf-11e4-877e-4b4837a58425","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"24f204bf-daaf-11e4-877e-4738fb8a6019","variableMapping":{"obj":"osmValue","this":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:927","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object.(getClass()) != (java.lang.Object.getClass())))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":0},{"failures":[],"tindex":"24f204c0-daaf-11e4-877e-870b37b2fbcd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"24f204c1-daaf-11e4-877e-e7c060d017cf","variableMapping":{"orientation":"java.lang.Math.PI","java.lang.Math.PI":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"24f204c2-daaf-11e4-877e-e7a888d82d1b","variableMapping":{"size":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":0},{"failures":[],"tindex":"24f204c3-daaf-11e4-877e-130452c15b49","variableMapping":{"fromX":"minLatTmp","toX":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[46,65,86],"tindex":"24f204c4-daaf-11e4-877e-03e2f9dc778b","variableMapping":{"capacity":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"24f204c5-daaf-11e4-877e-61cd6bea466a","variableMapping":{"max":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN","tmpSize":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-2},{"failures":[],"tindex":"24f204c6-daaf-11e4-877e-37153255005b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"24f204c7-daaf-11e4-877e-0ba09b6ee046","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"24f279f8-daaf-11e4-877e-0d54db59c112","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[371],"tindex":"24f279f9-daaf-11e4-877e-67a22feba84a","variableMapping":{"maxSpeed":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-1},{"failures":[],"tindex":"24f279fa-daaf-11e4-877e-ff1a4866a945","variableMapping":{"type":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:178","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[21,64],"tindex":"24f279fb-daaf-11e4-877e-cb149cef8560","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[372,373,374,375,376,377,378,379,380,381,382,222,228,230,231,255,261,263,264],"tindex":"24f279fc-daaf-11e4-877e-57e3ecc5bee3","variableMapping":{"minDistance":"minLatTmp","rMin":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"24f279fd-daaf-11e4-877e-37a8af04507f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[],"tindex":"24f279fe-daaf-11e4-877e-3fe522ab7ad1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:329","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return com.graphhopper.routing.util.EncodedValue.setValue(long, long);\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setLong(long, int, long);\n}"},"status":-2},{"failures":[],"tindex":"24f279ff-daaf-11e4-877e-57fd07b88916","variableMapping":{"visitedCountFrom":"capacity","visitedCountTo":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"24f27a00-daaf-11e4-877e-6d97c4e708fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"24f27a01-daaf-11e4-877e-47000a071554","variableMapping":{"empty":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[],"tindex":"24f2a112-daaf-11e4-877e-336c66cf598f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"24f2a113-daaf-11e4-877e-9b88813a0ce8","variableMapping":{"size":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":0},{"failures":[372,373,374,375,383,376,384,377,378,381,223,256],"tindex":"24f2a114-daaf-11e4-877e-ab9e042f58df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"24f2a115-daaf-11e4-877e-ed1dfc63ce55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"24f2a116-daaf-11e4-877e-37ffea5211bf","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.FOOT","com.graphhopper.routing.util.EncodingManager.RACINGBIKE":"entry","com.graphhopper.routing.util.EncodingManager.FOOT":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","com.graphhopper.routing.util.EncodingManager.BIKE":"entryVal","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.BIKE2","com.graphhopper.routing.util.EncodingManager.BIKE2":"com.graphhopper.routing.util.EncodingManager.BIKE2","entryVal":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"24f2a117-daaf-11e4-877e-d78807b170ff","variableMapping":{"entry":"entryVal","com.graphhopper.routing.util.EncodingManager.FOOT":"com.graphhopper.routing.util.EncodingManager.FOOT","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","entryVal":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"24f2a118-daaf-11e4-877e-b1fc585b00c3","variableMapping":{"freeIndex":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[],"tindex":"24f2a119-daaf-11e4-877e-2b57ce83546a","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"24f2a11a-daaf-11e4-877e-590495e2a958","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[60,78],"tindex":"24f2a11b-daaf-11e4-877e-cb254f5cc6de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"24f2a11c-daaf-11e4-877e-0da68ceda62a","variableMapping":{"need":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,60,61,62],"tindex":"24f2a11d-daaf-11e4-877e-f7f270405298","variableMapping":{"nameIndexRef":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[],"tindex":"24f2a11e-daaf-11e4-877e-df0c13688a25","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"24f2a11f-daaf-11e4-877e-01effcdedb30","variableMapping":{"bm":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"24f2a120-daaf-11e4-877e-f7251aa02e10","variableMapping":{"foundNext":"backward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:809","type":"CtIfImpl","sourcecode":"if (boolean)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-2},{"failures":[],"tindex":"24f2c831-daaf-11e4-877e-313e85da66d4","variableMapping":{"intVal":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"24f2c832-daaf-11e4-877e-7754e042b191","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[145,146,168,169,173],"tindex":"24f2c833-daaf-11e4-877e-ef191083c332","variableMapping":{"segmentSizeInBytes":"tmp","indexDivisor":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,101,102,105,106,107,108,23,109,112,115,116,118,119,385,386,39,40,41,387,388,389,42,43,44,390,391,392,393,394,45,371,395,120,121,396,46,47,48,49,50,51,397,398,399,52,400,53,54,401,55,56,57,402,58,59,403,404,62,405,406,122,63,407,408,64,409,410,411,65,66,67,412,68,413,69,70,414,71,72,73,415,74,75,416,76,77,78,79,417,80,418,81,419,82,83,84,420,85,123,124,125,126,127,128,421,86,87,88,89,90,91,422,423,424,92,425,93,94,426,95,96,97,427,98,99,428,429,129,130,135,138,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,430,5,171,6,7,8,172,9,173,10,174,11,175,176,177,178,179,180,431,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,237,243,254,270,432,433,434,435,436,437,438,439,440,441,442,271,443,444,445,446,447,448,449,450,451,452,453,454,455,456,272,457,458,459,460,461,462,463,464,465,466,467,273,468,274,275,276,277,278,469,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,321,322,323,324,325,326,327,328,329,330,331,332,470,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"tindex":"24f2c834-daaf-11e4-877e-6de4636f10d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[24,36,38,471],"tindex":"24f2c835-daaf-11e4-877e-a1fce85bc32a","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"24f2c836-daaf-11e4-877e-47967c7a932b","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","nodeType":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"24f2c837-daaf-11e4-877e-e7d6f2777fc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"))"},"status":-2},{"failures":[49,51,56,66,67,72,78,83,89,91,96],"tindex":"24f2c838-daaf-11e4-877e-f1ae3e5a444d","variableMapping":{"allBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[24,36,38,388,44],"tindex":"24f2c839-daaf-11e4-877e-43e49d65355c","variableMapping":{"high":"ferryBit","highKey":"ferryBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"24f2ef4a-daaf-11e4-877e-f7f7af5f7d37","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-2},{"failures":[],"tindex":"24f2ef4b-daaf-11e4-877e-074f84878a53","variableMapping":{"incEleSum":"java.lang.Math.PI","eleDelta":"java.lang.Math.PI","incDist2DSum":"java.lang.Math.PI","decEleSum":"resultOrientation","fullDist2D":"java.lang.Math.PI","decDist2DSum":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"24f2ef4c-daaf-11e4-877e-37daa923f0f6","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[13,15,16,17,18,19,20,101,106,107,108,109,25,26,28,31,32,33,35,393,122,123,124,125,126,127,129,147,148,151,155,157,160,162,164,165,166,168,5,171,6,7,8,9,10,11,177,186,192,197,199,207,210,212,217,237,243,254,270,437,271,447,449,272,459,461,466,273,275,284,290,295,297,305,308,310,315,329,338,344,349,351,359,362,364,369],"tindex":"24f2ef4d-daaf-11e4-877e-eb4b69dd130d","variableMapping":{"start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[49,56,66,67,72,78,83,89,96],"tindex":"24f2ef4e-daaf-11e4-877e-33237a8dfc59","variableMapping":{"cp":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"24f2ef4f-daaf-11e4-877e-fba861c36198","variableMapping":{"locs":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":0},{"failures":[14,21,151,154,155,162,164,166,168],"tindex":"24f2ef50-daaf-11e4-877e-6fb240bbdd38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"24f2ef51-daaf-11e4-877e-3d968ba09b8d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"24f2ef52-daaf-11e4-877e-db5007d2d58d","variableMapping":{"retBucket":"shift","bucketSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"24f2ef53-daaf-11e4-877e-5d0769d23935","variableMapping":{"str":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:274","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.substring(0, ((java.lang.String.length()) - 2))) + \":\") + (java.lang.String.substring(((java.lang.String.length()) - 2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[31,472],"tindex":"24f2ef54-daaf-11e4-877e-2ff2ad3173bb","variableMapping":{"segmentSizeInBytes":"encoderCount","index":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[1,5,6,9,10,11],"tindex":"24f2ef55-daaf-11e4-877e-d9bed06ce314","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"24f2ef56-daaf-11e4-877e-ff21678ff0c6","variableMapping":{"name":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"24f2ef57-daaf-11e4-877e-cd7c21ac342b","variableMapping":{"guess":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[23,473],"tindex":"24f2ef58-daaf-11e4-877e-17c0387c6da4","variableMapping":{"str":"str","from":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:944","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (int) + \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"24f2ef59-daaf-11e4-877e-438a4d008ea4","variableMapping":{"logSize":"wayBitMask","java.lang.Integer.MAX_VALUE":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:259","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"24f3166a-daaf-11e4-877e-897d7c4f3c84","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[14,36,39,40,42,50,57,73,84,473,90,97],"tindex":"24f3166b-daaf-11e4-877e-e33d3ab8c333","variableMapping":{"size":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[],"tindex":"24f3166c-daaf-11e4-877e-83f33c103776","variableMapping":{"osmFile":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"24f3166d-daaf-11e4-877e-2958f6e08abb","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.FootFlagEncoder.FERRY_SPEED","segmentsToCreate":"com.graphhopper.routing.util.PriorityWeighting.KEY","todoBytes":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"24f3166e-daaf-11e4-877e-89b35320c3ad","variableMapping":{"high":"directionBitMask","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[24,388,471],"tindex":"24f3166f-daaf-11e4-877e-0300d1a9f5f3","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"index","id":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"24f31670-daaf-11e4-877e-c9a2386e8fa0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"24f31671-daaf-11e4-877e-6995e418314b","variableMapping":{"nodeB":"index","edgeId":"nodeEntryBytes","nodeA":"nodeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,38,125],"tindex":"24f31672-daaf-11e4-877e-1f298ba2fe91","variableMapping":{"size":"removed","newSize":"locs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"24f31673-daaf-11e4-877e-0f441c5106c8","variableMapping":{"resultOrientation":"orientation","orientation":"orientation","java.lang.Math.PI":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[24,471],"tindex":"24f31674-daaf-11e4-877e-a10b5d09cc72","variableMapping":{"bytePos":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"24f31675-daaf-11e4-877e-03ab326b59c3","variableMapping":{"len":"y1","start":"y2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"24f33d86-daaf-11e4-877e-2f7a6302f8c0","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"high","tmpNode":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[12,13,14,15,18,19,21,109,110,112,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,164,165,166,167,168,169,170,5,171,6,7,8,9,173,10,11,175,219,220,222,224,225,226,227,229,230,231,232,233,234,235,236,237,321,323,324,325,329,332,333,334,335,336,337,338,339,340,341,342,345,346,348,349,350,351,352,353,354,356,357,359,360,361,362,363,364,365,367,368,369,370],"tindex":"24f33d87-daaf-11e4-877e-3372c3ec9af1","variableMapping":{"width":"b","i":"b"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-1},{"failures":[106,129],"tindex":"24f33d88-daaf-11e4-877e-adaa91930eb8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"24f33d89-daaf-11e4-877e-4be3dd62ef46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[385,47,51,60,78,87,91],"tindex":"24f33d8a-daaf-11e4-877e-abffa1c4e647","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"24f33d8b-daaf-11e4-877e-29fe64d52640","variableMapping":{"location":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":0},{"failures":[23,36],"tindex":"24f33d8c-daaf-11e4-877e-4734d0b4a617","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"maxSpeed","java.lang.Double.POSITIVE_INFINITY":"maxSpeed","weight":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-1},{"failures":[24,388,44],"tindex":"24f33d8d-daaf-11e4-877e-bb45fb6a827d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"24f33d8e-daaf-11e4-877e-8974c2d123ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:454","type":"CtLocalVariableImpl","sourcecode":"java.lang.Exception java.lang.Exception"},"status":0},{"failures":[12,15,16,18,20,107,108,474,475,476,112,24,26,27,28,29,30,31,32,33,34,35,36,38,477,129,132,139,142,165,177,181,202,208,213,224,226,257,259,432,452,272,457,462,478,273,275,279,300,306,311,329,333,354,360,365,479],"tindex":"24f33d8f-daaf-11e4-877e-237a81141918","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"24f33d90-daaf-11e4-877e-9f525bc446ba","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[],"tindex":"24f33d91-daaf-11e4-877e-576e654dfc41","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"24f33d92-daaf-11e4-877e-932eaac9765c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"24f33d93-daaf-11e4-877e-f7b9659d8d7f","variableMapping":{"flags2":"flags","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"backwardBit","flags1":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"24f363a4-daaf-11e4-877e-7bba8e73f4bc","variableMapping":{"size":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[],"tindex":"24f363a5-daaf-11e4-877e-4dc8e2b09a77","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"24f363a6-daaf-11e4-877e-3de34cbb7e71","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[],"tindex":"24f363a7-daaf-11e4-877e-959a66db2588","variableMapping":{"baseUrl":"str","fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:254","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":359,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":163,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":100,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":326,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":433,"com.graphhopper.reader.OSMReaderTest.testFerry":24,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":115,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":90,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":225,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":13,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":289,"com.graphhopper.coll.CompressedArrayTest.testCompress":373,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":82,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":6,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":452,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":192,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":10,"com.graphhopper.GraphHopperTest.testPrepare":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":463,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":169,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":199,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":88,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":155,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":83,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":104,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":127,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":153,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":258,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":273,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":379,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":333,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":175,"com.graphhopper.GraphHopperTest.testLoadOSM":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":259,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":404,"com.graphhopper.reader.OSMReaderTest.testSort":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":97,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":276,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":211,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":177,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":464,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":138,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":310,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":358,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":188,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":468,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":279,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":343,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":75,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":73,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":229,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":159,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":220,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":441,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":149,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":335,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":299,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":350,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":329,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":352,"com.graphhopper.coll.CompressedArrayTest.testCompress2":372,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":290,"com.graphhopper.GraphHopperAPITest.testLoad":101,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":470,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":318,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":405,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":193,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":183,"com.graphhopper.storage.LevelGraphStorageTest.testClone":337,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":471,"com.graphhopper.reader.OSMReaderTest.testBarriers":28,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":397,"com.graphhopper.util.GHUtilityTest.testCopy":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":437,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":414,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":420,"com.graphhopper.routing.PathTest.testFindInstruction":130,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":418,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":355,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":281,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":64,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":109,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":48,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":239,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":212,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":197,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":294,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":401,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":339,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":438,"com.graphhopper.util.InstructionListTest.testWayList2":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":266,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":217,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":313,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":120,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":178,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":151,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":182,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":165,"com.graphhopper.coll.OSMIDMapTest.testGet":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":288,"com.graphhopper.routing.PathBidirRefTest.testExtract":143,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":92,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":354,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":457,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":424,"com.graphhopper.util.GHUtilityTest.testSort2":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":160,"com.graphhopper.reader.OSMReaderTest.testMain":26,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":425,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":427,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":40,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":461,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":344,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":348,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":369,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":135,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":46,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":317,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":351,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":36,"com.graphhopper.storage.GraphHopperStorageTest.testClone":185,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":460,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":44,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":42,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":195,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":415,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":439,"com.graphhopper.routing.PathTest.testTime":429,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":70,"com.graphhopper.util.BitUtilLittleTest.testToFloat":475,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":367,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":268,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":356,"com.graphhopper.reader.OSMReaderTest.testRelation":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":451,"com.graphhopper.util.GHUtilityTest.testSortDirected":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":57,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":134,"com.graphhopper.GraphHopperTest.testFootOnly":21,"com.graphhopper.util.BitUtilLittleTest.testToInt":476,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":77,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":228,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":447,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":131,"com.graphhopper.routing.QueryGraphTest.testOneWay":140,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":257,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":374,"com.graphhopper.reader.OSMReaderTest.testWithBounds":35,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":478,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":402,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":124,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":444,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":453,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":60,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":334,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":331,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":55,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":85,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":302,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":462,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":295,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":181,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":146,"com.graphhopper.util.BitUtilLittleTest.testToBitString":474,"com.graphhopper.util.InstructionListTest.testWayList":107,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":423,"com.graphhopper.GraphHopperAPITest.testDisconnected179":102,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":440,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":53,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":119,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":450,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":466,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":16,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":174,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":421,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":173,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":365,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":390,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":278,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":167,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":431,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":99,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":176,"com.graphhopper.routing.PathTest.testWayList":129,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":465,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":443,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":168,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":301,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":426,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":198,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":406,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":230,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":231,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":399,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":66,"com.graphhopper.util.GHUtilityTest.testSort":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":456,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":381,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":417,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":469,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":223,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":241,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":248,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":251,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":50,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":121,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":249,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":274,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":412,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":395,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":296,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":123,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":272,"com.graphhopper.routing.PathTest.testFound":428,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":22,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":62,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":364,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":93,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":292,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":1,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":271,"com.graphhopper.util.InstructionListTest.testEmptyList":105,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":154,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":71,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":158,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":393,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":386,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":161,"com.graphhopper.reader.PrinctonReaderTest.testRead":118,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":226,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":287,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":432,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":419,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":472,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":47,"com.graphhopper.reader.OSMReaderTest.testFoot":25,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":455,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":263,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":368,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":378,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":416,"com.graphhopper.reader.OSMReaderTest.testOneWay":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":264,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":194,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":209,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":81,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":398,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":449,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":7,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":382,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":171,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":252,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":122,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":445,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":133,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":37,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":179,"com.graphhopper.routing.PathBidirRefTest.testExtract2":144,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":145,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":72,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":267,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":207,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":74,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":31,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":467,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":260,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":210,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":340,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":391,"com.graphhopper.GraphHopperTest.testFootAndCar":17,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":202,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":346,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":67,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":236,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":392,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":283,"com.graphhopper.GraphHopperTest.testPrepareOnly":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":164,"com.graphhopper.GraphHopperTest.testVia":14,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":242,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":434,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":33,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":325,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":23,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":206,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":407,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":448,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":45,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":363,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":361,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":275}}]
