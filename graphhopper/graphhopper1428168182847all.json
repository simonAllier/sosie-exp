[{"failures":[],"tindex":"406028c9-daef-11e4-b327-1764ba5326e5","variableMapping":{"weightLong":"bytePos","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310],"tindex":"4061132a-daef-11e4-b327-c987b6568eb0","variableMapping":{"size":"indexDivisor","i":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"4061132b-daef-11e4-b327-7fe669e8bf43","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"4061132c-daef-11e4-b327-d91fc6f3d9e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"4061132d-daef-11e4-b327-d32d2874520e","variableMapping":{"value":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN","numberOfBits":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-2},{"failures":[],"tindex":"4061132e-daef-11e4-b327-cd42c6d7a305","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[],"tindex":"4061132f-daef-11e4-b327-c9346ca86d95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[26,311,312,313,314,315,316,317,318,319,113,121,129,131,132,134,138,139,146,147,164,172,174,175,177,181,182,189,190,208,216,218,219,221,225,226,233,234,247,249,250],"tindex":"40611330-daef-11e4-b327-75a2a02c12d3","variableMapping":{"entries":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"40611331-daef-11e4-b327-abc2c6716070","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"40611332-daef-11e4-b327-59443a565a1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDirectory:31","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDirectory.this(\"\", false)"},"status":-2},{"failures":[],"tindex":"40611333-daef-11e4-b327-1fc924f11e30","variableMapping":{"latSimilar":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[],"tindex":"40611334-daef-11e4-b327-bdcc49a01046","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"40611335-daef-11e4-b327-75ff42c4fa9d","variableMapping":{"err":"length","tmpErr":"length","y1":"index","dLon":"index","sLat":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":0},{"failures":[],"tindex":"40613a46-daef-11e4-b327-6fc40fe5cd0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:145","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"40613a47-daef-11e4-b327-75e821e9b86b","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":0},{"failures":[],"tindex":"40613a48-daef-11e4-b327-99f29a021c99","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"40613a49-daef-11e4-b327-27c222ee5834","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"40613a4a-daef-11e4-b327-fbda4bbe327c","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":0},{"failures":[],"tindex":"40613a4b-daef-11e4-b327-cbd612573777","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[247,251,252],"tindex":"40613a4c-daef-11e4-b327-07444ce4c089","variableMapping":{"clonedG":"g","edgeEntryBytes":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1070","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.int) != (int))\n    throw new java.lang.IllegalStateException(((((\"edgeEntryBytes cannot be different for cloned graph. \" + \"Cloned: \") + (com.graphhopper.storage.GraphHopperStorage.int)) + \" vs \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[13,320],"tindex":"40613a4d-daef-11e4-b327-3de6c6f40097","variableMapping":{"estimatedDist":"longTripsSpeed","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:364","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[],"tindex":"40613a4e-daef-11e4-b327-1ff8aba85127","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":0},{"failures":[321,322,323],"tindex":"40613a4f-daef-11e4-b327-977960e8c061","variableMapping":{"ghLocation":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[324,325,326,327,328,329],"tindex":"40613a50-daef-11e4-b327-7df2562a1741","variableMapping":{"sacScale":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[],"tindex":"40613a51-daef-11e4-b327-b99070cc6516","variableMapping":{"towerNodeDistance":"decDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"40613a52-daef-11e4-b327-1ddb0ff70516","variableMapping":{"width":"x2","lonSimilar":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,40,330,331,332],"tindex":"40613a53-daef-11e4-b327-d16bd0d29146","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"40616164-daef-11e4-b327-21bffe38fb84","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[13,320,333],"tindex":"40616165-daef-11e4-b327-13bca7b5159a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"40616166-daef-11e4-b327-917d905e6e10","variableMapping":{"y1":"mSize","y2":"mSize","x1":"i","x2":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[5,334,335,311,336,337,43,338,339,340,341,50,56,78,97,115,119,120,121,127,128,130,143,148,151,155,158,162,163,164,170,171,173,186,191,194,198,200,202,206,207,208,214,215,217,230,235,238,242,262,266,269,272,274,275,284],"tindex":"40616167-daef-11e4-b327-65e299b491d0","variableMapping":{"bitsForEdgeFlags":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-1},{"failures":[],"tindex":"40616168-daef-11e4-b327-b9a8295357e9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[247,252],"tindex":"40616169-daef-11e4-b327-d517aa2a1133","variableMapping":{"offset":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"4061616a-daef-11e4-b327-774dd66aa46d","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"4061616b-daef-11e4-b327-b733c553f6c1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[],"tindex":"4061616c-daef-11e4-b327-e15f484c8467","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"4061616d-daef-11e4-b327-4fe82350cfbb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[320,333],"tindex":"4061616e-daef-11e4-b327-73239e37ba7a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"4061616f-daef-11e4-b327-2b783e4d8b46","variableMapping":{"value":"y1","numberOfBits":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-2},{"failures":[271],"tindex":"40616170-daef-11e4-b327-65cb542c2605","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,342,26,40,343,344,345,346,347,348,349,350,351,321,322,323,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,324,374,325,375,376,377,378,326,379,380,381,382,383,384,327,385,328,386,387,388,389,329,390,391,392,330,331,332],"tindex":"40616171-daef-11e4-b327-673a6d432c67","variableMapping":{"weight":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"40616172-daef-11e4-b327-97916f48ae28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"40618883-daef-11e4-b327-53afaab4b2eb","variableMapping":{"i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[393,394,63,69,71,72,395,82,88,90,91,396,397,398,399,400,401,402,403,404],"tindex":"40618884-daef-11e4-b327-1ba922760582","variableMapping":{"shiftSum":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"40618885-daef-11e4-b327-2bc36f11e3ef","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[247,251,252],"tindex":"40618886-daef-11e4-b327-e18d747714e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"40618887-daef-11e4-b327-a7323d8ae197","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[36,405,98,99,100,101,102,406,103,104,105,106,112,113,116,117,129,142,159,160,172,185,203,204,216,229,272],"tindex":"40618888-daef-11e4-b327-eb487a08600c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":-1},{"failures":[],"tindex":"40618889-daef-11e4-b327-c3b4ef33d0a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"4061888a-daef-11e4-b327-7b404142dc83","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Use setDoubleValue instead\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[],"tindex":"4061888b-daef-11e4-b327-e367f129a186","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"4061888c-daef-11e4-b327-ef8161041d25","variableMapping":{"i":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[349],"tindex":"4061888d-daef-11e4-b327-e15dee4a7bed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"4061888e-daef-11e4-b327-9d45ca34ca86","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[271],"tindex":"4061888f-daef-11e4-b327-751c1790cbcf","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[],"tindex":"40618890-daef-11e4-b327-91b996971799","variableMapping":{"val":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[407],"tindex":"40618891-daef-11e4-b327-c3d5cd17a9b7","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[393,394,63,69,71,72,395,82,88,90,91,396,397,399,400,401,402,403,404],"tindex":"40618892-daef-11e4-b327-359d7647436e","variableMapping":{"size":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"4061afa3-daef-11e4-b327-bd3c0ca70de6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"4061afa4-daef-11e4-b327-87c376e29690","variableMapping":{"elem":"elem","i":"size","value":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:302","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"4061afa5-daef-11e4-b327-17e3193d3425","variableMapping":{"size":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"4061afa6-daef-11e4-b327-c5fceb8e3a77","variableMapping":{"dist":"fwdDecline","com.graphhopper.util.DistanceCalcEarth.R":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[372,383],"tindex":"4061afa7-daef-11e4-b327-3d947085eddd","variableMapping":{"key":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"4061afa8-daef-11e4-b327-cf7d0607312a","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"4061afa9-daef-11e4-b327-4b2419fefbd8","variableMapping":{"max":"delta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[],"tindex":"4061afaa-daef-11e4-b327-6bc2a3fa58ac","variableMapping":{"high":"acceptBit","len":"ferryBit","start":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"4061afab-daef-11e4-b327-259b94f1b8f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:134","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[2,261,262,263,264,265,267,268,270,271,273,274,275,276,277,278,280,282,283,284,285,287,294,298],"tindex":"4061afac-daef-11e4-b327-e9c37121909e","variableMapping":{"distInMeter":"distance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"4061afad-daef-11e4-b327-cb9c0ba60717","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 5))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 5), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"4061afae-daef-11e4-b327-6580a13772c9","variableMapping":{"high":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[321,371,382,332],"tindex":"4061afaf-daef-11e4-b327-3b49b81e15df","variableMapping":{"neighborUpdates":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[408,409],"tindex":"4061afb0-daef-11e4-b327-895f3831bdd7","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"4061afb1-daef-11e4-b327-57df6a830d48","variableMapping":{"newName":"key","name":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"4061afb2-daef-11e4-b327-7bb83d55808b","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[],"tindex":"4061afb3-daef-11e4-b327-1f6f440f731e","variableMapping":{"factor":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"4061afb4-daef-11e4-b327-1159c4e2e2d5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[321,322,356,363,368,371,324,325,326,382,327,328,329,332],"tindex":"4061afb5-daef-11e4-b327-577c5b030439","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[25,40,345,347,349,350,360],"tindex":"4061d6c6-daef-11e4-b327-77b812ca858a","variableMapping":{"tmp":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"4061d6c7-daef-11e4-b327-3f9a6dcbd882","variableMapping":{"encoded":"hash","backwardBit":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":0},{"failures":[],"tindex":"4061d6c8-daef-11e4-b327-35d3c207a578","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"4061d6c9-daef-11e4-b327-4d00c2b7d735","variableMapping":{"str":"highway","destination":"highway","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:265","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":0},{"failures":[349,350,357,360,369,379,390],"tindex":"4061d6ca-daef-11e4-b327-b7d7fab953e0","variableMapping":{"weight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"4061d6cb-daef-11e4-b327-295d05e7a1a8","variableMapping":{"hasOther":"empty","hasRel":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"4061d6cc-daef-11e4-b327-57740e79adb8","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed","unknownSpeed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[252],"tindex":"4061d6cd-daef-11e4-b327-9bd2e7aae534","variableMapping":{"newAdjIndex":"start","newBaseIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[0,1,2,3,6,7,9,11,12,28,29,30,33,37,38,39,334,335,311,410,411,336,337,43,412,413,338,44,339,414,340,341,50,56,78,97,107,111,115,119,120,121,123,124,127,128,130,135,137,143,145,148,150,151,155,158,162,163,164,166,167,170,171,173,178,180,186,188,191,193,194,198,200,202,206,207,208,210,211,214,215,217,222,224,230,232,235,237,238,242,244,245,415,246,416,417,247,248,249,250,251,348,418,419,321,420,361,371,254,382,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,303,306],"tindex":"4061d6ce-daef-11e4-b327-6d2078280cdf","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[20,421,422,423,424],"tindex":"4061d6cf-daef-11e4-b327-b5c658d81987","variableMapping":{"edgePointer":"flags","lastEdgeIndex":"maxTurnCosts","edgeEntryBytes":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:321","type":"CtReturnImpl","sourcecode":"return ((long) / (int)) > (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-1},{"failures":[347],"tindex":"4061d6d0-daef-11e4-b327-d3570db5f327","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"4061d6d1-daef-11e4-b327-99c81334aecb","variableMapping":{"orientation":"maxSpeed","resultOrientation":"maxSpeed","baseOrientation":"maxSpeed","java.lang.Math.PI":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[109,253,254,332,258,261,271],"tindex":"4061d6d2-daef-11e4-b327-ede2e1fd8b5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:55","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Reverse Speed\" , int , int , double , com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\") , 30)"},"status":-1},{"failures":[2,3,4,5,6,8,345,347],"tindex":"4061d6d3-daef-11e4-b327-8b69205ce078","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-1},{"failures":[347,320,351],"tindex":"4061d6d4-daef-11e4-b327-91056f0770e7","variableMapping":{"sacScale":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"4061d6d5-daef-11e4-b327-b99cb7cc71b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"4061fde6-daef-11e4-b327-2d09b8c8ba00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:430","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[0,5,9,10,13,14,19,25,26],"tindex":"4061fde7-daef-11e4-b327-bf229d00eeb4","variableMapping":{"numTiles":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[247,251,252],"tindex":"4061fde8-daef-11e4-b327-017ad6f5e674","variableMapping":{"turnCostsCount":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"4061fde9-daef-11e4-b327-b940fc44fb19","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[],"tindex":"4061fdea-daef-11e4-b327-799fd5c1595f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"4061fdeb-daef-11e4-b327-a581863e2a1f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":279,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":300,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":112,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":360,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":335,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":29,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":374,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":364,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":85,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":216,"com.graphhopper.coll.CompressedArrayTest.testCompress":394,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":367,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":197,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":289,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":173,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":295,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":278,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":373,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":271,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":368,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":42,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":118,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":82,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":371,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":263,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":200,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":402,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":298,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":73,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":67,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":379,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":203,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":192,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":158,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":400,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":306,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":237,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":144,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":169,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":108,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":327,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":359,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":357,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":89,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":177,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":275,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":266,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":220,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":226,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":136,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":115,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":138,"com.graphhopper.coll.CompressedArrayTest.testCompress2":393,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":182,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":321,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":217,"com.graphhopper.GraphHopperAPITest.testLoad":244,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":100,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":174,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":164,"com.graphhopper.storage.LevelGraphStorageTest.testClone":123,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":333,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":207,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":423,"com.graphhopper.util.GHUtilityTest.testCopy":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":411,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":97,"com.graphhopper.routing.PathTest.testFindInstruction":260,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":208,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":344,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":152,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":384,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":193,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":178,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":235,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":291,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":125,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":161,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":106,"com.graphhopper.util.InstructionListTest.testWayList2":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":74,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":198,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":372,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":420,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":159,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":253,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":218,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":58,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":267,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":215,"com.graphhopper.routing.PathBidirRefTest.testExtract":255,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":375,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":318,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":361,"com.graphhopper.util.GHUtilityTest.testSort2":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":276,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":225,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":403,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":94,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":414,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":130,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":134,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":155,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":131,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":230,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":382,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":137,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":25,"com.graphhopper.storage.GraphHopperStorageTest.testClone":166,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":199,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":351,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":176,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":349,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":107,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":110,"com.graphhopper.routing.PathTest.testTime":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":354,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":153,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":76,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":317,"com.graphhopper.util.GHUtilityTest.testSortDirected":35,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":390,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":302,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":362,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":88,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":286,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":412,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":299,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":406,"com.graphhopper.routing.QueryGraphTest.testOneWay":308,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":399,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":396,"com.graphhopper.reader.OSMReaderTest.testWithBounds":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":239,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":248,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":314,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":417,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":330,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":120,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":389,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":370,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":229,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":222,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":162,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":262,"com.graphhopper.util.InstructionListTest.testWayList":38,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":195,"com.graphhopper.GraphHopperAPITest.testDisconnected179":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":336,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":387,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":316,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":378,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":168,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":296,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":186,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":294,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":151,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":352,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":326,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":283,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":381,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":157,"com.graphhopper.routing.PathTest.testWayList":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":313,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":284,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":228,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":179,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":415,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":90,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":135,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":92,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":322,"com.graphhopper.util.GHUtilityTest.testSort":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":70,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":377,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":242,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":83,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":62,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":47,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":385,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":305,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":254,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":282,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":247,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":105,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":44,"com.graphhopper.routing.PathTest.testFound":257,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":10,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":332,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":150,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":376,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":219,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":43,"com.graphhopper.util.InstructionListTest.testEmptyList":36,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":270,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":355,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":274,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":419,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":346,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":369,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":277,"com.graphhopper.reader.PrinctonReaderTest.testRead":11,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":86,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":312,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":334,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":386,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":424,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":383,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":71,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":154,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":401,"com.graphhopper.reader.OSMReaderTest.testOneWay":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":72,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":175,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":190,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":236,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":366,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":184,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":290,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":395,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":297,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":350,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":288,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":84,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":301,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":160,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":342,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":103,"com.graphhopper.routing.PathBidirRefTest.testExtract2":256,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":261,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":75,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":356,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":358,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":343,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":293,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":388,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":68,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":191,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":126,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":183,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":323,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":410,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":421,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":210,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":280,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":311,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":111,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":40,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":187,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":416,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":345,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":149,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":147,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":202}}]
