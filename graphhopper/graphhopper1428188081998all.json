[{"failures":[0],"tindex":"9534fda3-db1d-11e4-92fb-dd0b169e081c","variableMapping":{"str":"minStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9],"tindex":"95363624-db1d-11e4-92fb-f5879dfd8c5f","variableMapping":{"bytesForFlags":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"95363625-db1d-11e4-92fb-dbd5dbc2e8ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[10],"tindex":"95363626-db1d-11e4-92fb-f9fd74e085d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[],"tindex":"95363627-db1d-11e4-92fb-75b9369f358b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"95363628-db1d-11e4-92fb-952d4d6a1b3c","variableMapping":{"size":"toSize","from":"toSize","end":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[],"tindex":"95363629-db1d-11e4-92fb-0156b34162d3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"9536362a-db1d-11e4-92fb-ef2dc15f21a5","variableMapping":{"high":"shift","len":"shift","start":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"9536362b-db1d-11e4-92fb-a5c030abb9ad","variableMapping":{"x1":"speed","x2":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":0},{"failures":[],"tindex":"9536362c-db1d-11e4-92fb-3d284a232d0e","variableMapping":{"y1":"costs","x1":"costs","y2":"costs","x2":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":0},{"failures":[11],"tindex":"9536362d-db1d-11e4-92fb-1b57c84b5b22","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"9536362e-db1d-11e4-92fb-0d5c2896b8fc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"9536362f-db1d-11e4-92fb-7b20b11085b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:342","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"95363630-db1d-11e4-92fb-f5ccf006bb4f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[12,13],"tindex":"95363631-db1d-11e4-92fb-fb973f068256","variableMapping":{"len":"ferryBit","start":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[],"tindex":"95363632-db1d-11e4-92fb-31bae2d0d556","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:538","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"cannot change EMPTY PointList\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":0},{"failures":[],"tindex":"95365d43-db1d-11e4-92fb-c340987be372","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"95365d44-db1d-11e4-92fb-df1db3c522fd","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[],"tindex":"95365d45-db1d-11e4-92fb-795bfa3abc17","variableMapping":{"res":"encoded","maxBits":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:261","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[14,15,16,17],"tindex":"95365d46-db1d-11e4-92fb-ab1ce2177978","variableMapping":{"highwayValue":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"95365d47-db1d-11e4-92fb-f710e0c0759e","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[],"tindex":"95365d48-db1d-11e4-92fb-eb859b555522","variableMapping":{"mask":"millis"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-2},{"failures":[],"tindex":"95365d49-db1d-11e4-92fb-cb8dcd4d9deb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-2},{"failures":[18,19],"tindex":"95365d4a-db1d-11e4-92fb-dd4cf6fec8f4","variableMapping":{"err":"encoderCount","tmpErr":"encoderCount","y1":"encoderCount","dLon":"encoderCount","sLat":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"95365d4b-db1d-11e4-92fb-c7da6b9a2ab7","variableMapping":{"lastIndex":"size","fromIndex":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"95365d4c-db1d-11e4-92fb-af4f6aa24f78","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","nextEdge":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"9536845d-db1d-11e4-92fb-3fe88b497f88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"9536845e-db1d-11e4-92fb-250d4ca5f198","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"edgeId","nodeId":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-2},{"failures":[],"tindex":"9536845f-db1d-11e4-92fb-d5bd5e976b57","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":0},{"failures":[20,21,2,22,23,3,24,25,4,26,27,28,6,29],"tindex":"95368460-db1d-11e4-92fb-9f249d06e689","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[16,25,30,4,26,31,32,33,34,35,36,37,38,39,40],"tindex":"95368461-db1d-11e4-92fb-2166ec90d2c4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[],"tindex":"95368462-db1d-11e4-92fb-719b802ba6c4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-2},{"failures":[],"tindex":"95368463-db1d-11e4-92fb-bbfe1e4d4fc3","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:245","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"95368464-db1d-11e4-92fb-7b9539bbee99","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"95368465-db1d-11e4-92fb-3d362a5c8025","variableMapping":{"start":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[12],"tindex":"95368466-db1d-11e4-92fb-e1a29401b16a","variableMapping":{"len":"acceptBit","start":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"95368467-db1d-11e4-92fb-e9f078a00cdf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[115,116,117],"tindex":"95368468-db1d-11e4-92fb-f7185d37381f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,101,13,133,107,109,19,134,135,136],"tindex":"95368469-db1d-11e4-92fb-fd8b524b8a8f","variableMapping":{"value":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"9536ab7a-db1d-11e4-92fb-e12055d62cfe","variableMapping":{"fwdFaster":"bwSlower","incDist2DSum":"bwSlower","fwdSlower":"bwSlower","fullDist2D":"bwSlower","restDist2D":"bwSlower","speed":"bwSlower","decDist2DSum":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"9536ab7b-db1d-11e4-92fb-ed3733e7114c","variableMapping":{"name":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":0},{"failures":[],"tindex":"9536ab7c-db1d-11e4-92fb-a32d4d701920","variableMapping":{"edgePointer":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"9536ab7d-db1d-11e4-92fb-3502ee5cb67b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[137,138],"tindex":"9536ab7e-db1d-11e4-92fb-ebda4556691f","variableMapping":{"carEncoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:80","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.CarFlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-1},{"failures":[0],"tindex":"9536ab7f-db1d-11e4-92fb-81925fcbe5b4","variableMapping":{"width":"minutes","lonSimilar":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"9536ab80-db1d-11e4-92fb-477f53e1a689","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[97,106],"tindex":"9536ab81-db1d-11e4-92fb-ed5f1b267f98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"9536ab82-db1d-11e4-92fb-51a885415209","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"9536ab83-db1d-11e4-92fb-451211361142","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"9536ab84-db1d-11e4-92fb-956b2ac7dc6e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"9536ab85-db1d-11e4-92fb-b1185ba7ad19","variableMapping":{"edge":"tmpPrevEdge","updatedB":"edgeEntryBytes","updatedA":"tmpPrevEdge","linkA":"tmpPrevEdge","this":"this","linkB":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[],"tindex":"9536ab86-db1d-11e4-92fb-f915ef2c736f","variableMapping":{"high":"relBitMask","highKey":"relBitMask","key":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[4],"tindex":"9536ab87-db1d-11e4-92fb-9569656474b9","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"9536ab88-db1d-11e4-92fb-8b1e0ed19e8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:311","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"|\")"},"status":0},{"failures":[],"tindex":"9536d299-db1d-11e4-92fb-8b10a3264694","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"9536d29a-db1d-11e4-92fb-cda88c346e8f","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"intendedValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":0},{"failures":[139,140,141,142,143,41,144,145,42,146,147,148,149,43,150,151,152,153,154,155,156,118,157,158,159,160,161,162,163,164,165,166,167,168,44,169,170,171,172,173,45,174,175,176,177,46,178,47,48,179,180,181,119,120,121,122,182,183,184,185,186,187,188,189,123,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,55,207,208,209,210,211,212,213,214,215,216,217,218,56,219,220,221,222,57,223,224,225,226,227,228,229,124,230,231,232,233,234,235,236,237,238,239,240,241,58,242,243,244,245,246,59,247,248,249,250,60,251,61,62,252,253,65,254,255,66,256,257,258,259,67,260,261,262,263,264,265,266,125,267,268,269,270,271,272,273,274,275,276,277,278,68,279,280,281,282,283,69,284,285,286,287,70,288,71,72,289,290,291,292,293,294,295,115,20,1,296,297,21,2,298,14,299,300,301,302,303,304,305,306,307,308,22,309,15,23,310,3,311,312,313,314,315,316,317,318,319,320,24,321,322,16,25,30,4,26,31,32,33,34,35,36,37,38,39,40,323,324,10,325,326,327,328,329,330,11,116,331,332,333,334,335,336,337,338,126,339,340,12,341,84,85,117,27,5,342,343,28,6,344,17,345,346,347,348,349,350,351,352,353,354,29,355,356,357,128,358,359,86,87,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,129,376,377,378,379,380,381,382,383,384,385,130,131,386,387,388,389,390,391,88,392,393,132,394,395,92,98,99,100,101,102,104,105,396,397,398,399],"tindex":"9536d29b-db1d-11e4-92fb-b9aded112bde","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"9536d29c-db1d-11e4-92fb-050a7bc3d0b9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"9536d29d-db1d-11e4-92fb-91cadc40614f","variableMapping":{"initLeafSize":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"9536d29e-db1d-11e4-92fb-0b20f9ba6032","variableMapping":{"line":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"9536d29f-db1d-11e4-92fb-15f2cf2e9b4f","variableMapping":{"flags2":"forwardBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"forwardBit","flags1":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"9536d2a0-db1d-11e4-92fb-2945c8da8561","variableMapping":{"dX":"currDistToGoal","dY":"currDistToGoal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"9536f9b1-db1d-11e4-92fb-ade81134d67d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"9536f9b2-db1d-11e4-92fb-bb7afd8e5e4d","variableMapping":{"val":"prevOrNextEdgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"9536f9b3-db1d-11e4-92fb-110d678f345b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[1,21,2,309,3,321,25,4,40,5,28,6,355,7,8,128,19],"tindex":"9536f9b4-db1d-11e4-92fb-bb5dd7462a0a","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[0],"tindex":"9536f9b5-db1d-11e4-92fb-fd66afb7424f","variableMapping":{"cp":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:122","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[322,10,326,327,329,11,400,98,99,100,101,102,103,104,106,133,107,108,109,111,19,134,401,402,135,403,404,136],"tindex":"9536f9b6-db1d-11e4-92fb-23924895ba12","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[405,406],"tindex":"9536f9b7-db1d-11e4-92fb-3bc9e825876f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:152","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"9536f9b8-db1d-11e4-92fb-bb61ebc97d93","variableMapping":{"distance":"durationInHours","speed":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"9536f9b9-db1d-11e4-92fb-7fb6f6ed5938","variableMapping":{"ref":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":0},{"failures":[297,2,306,310,318,37,343,6,352],"tindex":"9536f9ba-db1d-11e4-92fb-55b5d80f09ab","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[159,407,192,232,269],"tindex":"9536f9bb-db1d-11e4-92fb-531fe48b3156","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[],"tindex":"9536f9bc-db1d-11e4-92fb-e78c2434f98e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"9536f9bd-db1d-11e4-92fb-55237de4a391","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"953720ce-db1d-11e4-92fb-75bfa44f5a2e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"953720cf-db1d-11e4-92fb-59b878e2acd0","variableMapping":{"equalNormedDelta":"epsilon","tmpNormedDist":"d1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:924","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"953720d0-db1d-11e4-92fb-93caeaff6300","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"953720d1-db1d-11e4-92fb-35c232353db6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"953720d2-db1d-11e4-92fb-2fffacf0f789","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[408,76,77,78,409,410,411,412,86,87],"tindex":"953720d3-db1d-11e4-92fb-d538ee3af085","variableMapping":{"eleDelta":"r","decEleSum":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"953720d4-db1d-11e4-92fb-85d1f984bcdc","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"953720d5-db1d-11e4-92fb-7db57cfc1c07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"953720d6-db1d-11e4-92fb-c989ef3b3042","variableMapping":{"bits":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"953720d7-db1d-11e4-92fb-33fa00779069","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"953720d8-db1d-11e4-92fb-897135a6a3f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[137,413,138],"tindex":"953720d9-db1d-11e4-92fb-e32a773475ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"953720da-db1d-11e4-92fb-e3dee263f693","variableMapping":{"x1":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:158","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"953720db-db1d-11e4-92fb-05fd3e2ab513","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[142,144,414,360,363,365,369,370,371,372,373,374,375,129,376,377,378,379,380,381,382,383,384,385,130,131,386,387,388,389,390,391,88,392,393,132,97,400,98,99,102,103,105],"tindex":"953720dc-db1d-11e4-92fb-858b5f37205b","variableMapping":{"segmentsToMap":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[],"tindex":"953747ed-db1d-11e4-92fb-d12726b2bd0d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"953747ee-db1d-11e4-92fb-bf835aaefbbd","variableMapping":{"intIndex":"shift","len":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[85,128,359,375,384],"tindex":"953747ef-db1d-11e4-92fb-bd50ced5dfdf","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[413],"tindex":"953747f0-db1d-11e4-92fb-25ada4cc0888","variableMapping":{"high":"start","guess":"prevConnectedId","low":"prevConnectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[],"tindex":"953747f1-db1d-11e4-92fb-1db19d001d9e","variableMapping":{"lat":"lon2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[298,332,344],"tindex":"953747f2-db1d-11e4-92fb-a349a92a8f3c","variableMapping":{"factor":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-1},{"failures":[308,320,39,354],"tindex":"953747f3-db1d-11e4-92fb-33d2228db954","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[415,414,181,416,417,49,50,51,418,419,420,421,422,423,424,425,426,427,119,428,429,52,53,54,430,431,432,433,434,435,436,437,438,439,120,440,441,383,131,386,389,98,99,100,101,102,104,105,442,443,444,445,446,447,448,449,450,107,108,109,398,399],"tindex":"953747f4-db1d-11e4-92fb-a5641a4a2e67","variableMapping":{"lastKey":"hash","key":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[1,297,21,2,306,309,310,3,318,321,25,4,37,40,5,343,28,6,352,355,7,8,128],"tindex":"953747f5-db1d-11e4-92fb-eb48b79eca84","variableMapping":{"scDirMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"953747f6-db1d-11e4-92fb-15a36976cbac","variableMapping":{"cp":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":173,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":390,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":183,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":292,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":21,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":50,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":400,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":408,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":180,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":268,"com.graphhopper.coll.CompressedArrayTest.testCompress":441,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":36,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":62,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":202,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":232,"com.graphhopper.util.AngleCalcTest.testOrientation":409,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":371,"com.graphhopper.GraphHopperTest.testPrepare":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":389,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":360,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":296,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":384,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":37,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":416,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":376,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":382,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":53,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":448,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":374,"com.graphhopper.GraphHopperTest.testLoadOSM":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":435,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":54,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":357,"com.graphhopper.reader.OSMReaderTest.testSort":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":307,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":256,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":249,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":56,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":214,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":287,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":172,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":229,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":254,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":67,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":158,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":420,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":236,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":379,"com.graphhopper.coll.OSMIDMapTest.testGetLong":82,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":278,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":165,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":42,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":167,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":411,"com.graphhopper.coll.CompressedArrayTest.testCompress2":440,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":269,"com.graphhopper.GraphHopperAPITest.testLoad":398,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":149,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":335,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":233,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":224,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":0,"com.graphhopper.storage.LevelGraphStorageTest.testClone":153,"com.graphhopper.reader.OSMReaderTest.testBarriers":109,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":260,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":344,"com.graphhopper.util.GHUtilityTest.testCopy":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":33,"com.graphhopper.routing.PathTest.testFindInstruction":87,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":261,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":291,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":340,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":178,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":342,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":250,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":285,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":350,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":127,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":188,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":221,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":407,"com.graphhopper.util.InstructionListTest.testWayList2":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":209,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":436,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":252,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":71,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":84,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":219,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":118,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":270,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":380,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":88,"com.graphhopper.coll.OSMIDMapTest.testGet":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":267,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":12,"com.graphhopper.routing.PathBidirRefTest.testExtract":394,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":44,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":300,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":424,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":387,"com.graphhopper.reader.OSMReaderTest.testMain":107,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":277,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":301,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":449,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":308,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":10,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":257,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":159,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":163,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":179,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":92,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":27,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":166,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":403,"com.graphhopper.storage.StorablePropertiesTest.testStore":64,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":73,"com.graphhopper.storage.GraphHopperStorageTest.testClone":226,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":11,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":329,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":139,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":320,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":189,"com.graphhopper.routing.PathTest.testTime":359,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":315,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":47,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":438,"com.graphhopper.reader.OSMReaderTest.testRelation":9,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":201,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":353,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":91,"com.graphhopper.GraphHopperTest.testFootOnly":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":327,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":419,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":197,"com.graphhopper.search.NameIndexTest.testCreate":114,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":89,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":445,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":52,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":442,"com.graphhopper.reader.OSMReaderTest.testWithBounds":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":354,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":203,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":341,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":7,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":150,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":351,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":280,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":274,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":57,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":129,"com.graphhopper.util.InstructionListTest.testWayList":76,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":14,"com.graphhopper.GraphHopperAPITest.testDisconnected179":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":123,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":348,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":216,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":305,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":100,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":372,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":115,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":244,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":370,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":116,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":312,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":306,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":258,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":393,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":309,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":218,"com.graphhopper.routing.PathTest.testWayList":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":215,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":326,"com.graphhopper.coll.OSMIDMapTest.testGet2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":132,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":304,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":238,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":336,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":266,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":164,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":422,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":423,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":345,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":405,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":432,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":303,"com.graphhopper.search.NameIndexTest.testPut":112,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":289,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":85,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":255,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":311,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":295,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":392,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":137,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":55,"com.graphhopper.routing.PathTest.testFound":358,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":106,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":128,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":177,"com.graphhopper.util.AngleCalcTest.testAtan2":410,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":271,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":113,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":192,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":383,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":333,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":324,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":323,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":388,"com.graphhopper.reader.PrinctonReaderTest.testRead":396,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":60,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":51,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":125,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":191,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":182,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":152,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":346,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":5,"com.graphhopper.reader.OSMReaderTest.testFoot":133,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":205,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":433,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":447,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":16,"com.graphhopper.reader.OSMReaderTest.testOneWay":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":434,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":234,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":247,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":286,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":34,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":17,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":366,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":330,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":373,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":364,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":195,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":220,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":404,"com.graphhopper.routing.PathBidirRefTest.testExtract2":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":375,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":122,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":437,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":246,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":24,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":217,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":338,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":369,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":430,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":248,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":331,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":58,"com.graphhopper.GraphHopperTest.testFootAndCar":101,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":186,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":356,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":263,"com.graphhopper.GraphHopperTest.testPrepareOnly":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":391,"com.graphhopper.GraphHopperTest.testVia":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":184,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":401,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":143,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":78,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":245,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":126,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":198,"com.graphhopper.util.AngleCalcTest.testCombined":412,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":322,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":176,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":174,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":66}}]
