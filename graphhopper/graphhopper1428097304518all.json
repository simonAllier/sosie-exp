[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"38fa4b89-da4a-11e4-b408-6da5137416e5","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"38fa4b8a-da4a-11e4-b408-6fe7cbd52eb3","variableMapping":{"this":"graph","newEdgeId":"to","fromNodeId":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:351","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.connectNewEdge(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"38fa4b8b-da4a-11e4-b408-b918dfad37ac","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"38fa729c-da4a-11e4-b408-d3c20ba99714","variableMapping":{"need":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[33,63,64,65,66,67,68,69,70,71,72,73,39,40,74,75,76,49,50,58,77,59,78,61,79,80,62,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"38fa729d-da4a-11e4-b408-dd269e75a9a0","variableMapping":{"pointer":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[],"tindex":"38fa729e-da4a-11e4-b408-9bdfb7bbf69b","variableMapping":{"nodeThis":"i","nextEdgeOther":"i","nodeOther":"element","nextEdge":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"38fa729f-da4a-11e4-b408-a99e86af8343","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[28,121,29,30,122,31,123,38,63,64,124,65,66,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,72,158,159,39,40,41,42,43,74,44,45,75,46,47,76,48,49,50,51,52,53,160,54,55,56,57,58,77,161,162,59,78,163,164,60,165,61,79,80,166,167,62,168,81,169,170,171,172,82,83,84,173,174,175,176,177,178,85,179,86,180,181,182,183,184,185,186,187,188,189,190,191,87,192,193,194,195,88,196,197,89,198,199,200,90,201,202,203,204,205,206,91,92,93,207,208,209,210,211,212,94,213,95,214,215,216,217,218,219,220,221,222,223,224,225,96,226,227,228,229,97,230,231,98,232,233,234,99,235,100,236,237,101,238,239,240,241,102,103,104,242,243,244,245,246,247,105,248,106,249,250,251,252,253,254,255,256,257,258,259,260,107,261,262,263,264,108,265,266,109,267,268,269,110,270,271,272,273,274,275,276,277,278,111,279,280,281,282,112,113,114,283,284,285,286,287,288,115,289,116,290,291,292,293,294,295,296,297,298,299,300,301,117,302,303,304,305,118,306,307,119,308,309,310,120,311],"tindex":"38fa72a0-da4a-11e4-b408-a957f84499d3","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"38fa72a1-da4a-11e4-b408-95c0246ffdcb","variableMapping":{"oldValueIndex":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[134,312,152,313,314,315],"tindex":"38fa72a2-da4a-11e4-b408-9d4d1b42fd96","variableMapping":{"sacScale":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"38fa99b3-da4a-11e4-b408-b36ebccecb70","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:448","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"cannot change EMPTY PointList\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-2},{"failures":[],"tindex":"38fa99b4-da4a-11e4-b408-2190a0640c42","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"38fa99b5-da4a-11e4-b408-af38a172668a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"38fa99b6-da4a-11e4-b408-cba0fdd166b4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"38fa99b7-da4a-11e4-b408-e1d93e41daad","variableMapping":{"currEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":0},{"failures":[],"tindex":"38fa99b8-da4a-11e4-b408-e1d880241925","variableMapping":{"val":"size","keys":"elem","values":"elem","i":"size","o":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:136","type":"CtIfImpl","sourcecode":"if (int != int) {\n    int[][int] = int[][int];\n    int[][int] = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":0},{"failures":[],"tindex":"38fa99b9-da4a-11e4-b408-b1b09706ff0f","variableMapping":{"newValue":"endNode","values":"parentNodes","index":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"38fa99ba-da4a-11e4-b408-199d4fb8caab","variableMapping":{"fwdFaster":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"38fa99bb-da4a-11e4-b408-cb2ef2f193cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"38fa99bc-da4a-11e4-b408-ef1ecc18d453","variableMapping":{"edgeId":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[316,317,28,121,29,30,122,318,319,31,32,123,320,33,34,321,322,323,35,36,37,38,63,324,325,326,327,328,64,124,329,330,331,332,333,334,335,336,337,338,65,66,339,67,340,341,342,343,344,345,346,347,348,349,350,351,352,68,353,354,355,356,357,358,359,147,69,360,361,362,70,71,154,155,156,157,363,363,364,364,365,365,366,366,72,72,367,367,368,368,73,73,369,369,370,370,371,371,372,372,158,159,39,40,41,42,43,74,44,45,75,46,47,76,48,49,50,51,52,53,160,54,55,56,57,58,77,161,59,78,163,164,60,165,61,79,80,166,167,62,168,81,169,170,171,172,82,83,84,173,174,175,176,177,178,85,179,86,180,181,182,183,184,185,186,187,188,189,190,191,87,192,193,194,195,88,196,197,89,198,199,200,90,201,373,202,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,203,391,392,393,394,395,396,204,397,398,399,400,401,402,403,404,405,406,407,408,409,205,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,206,91,92,93,207,208,209,210,211,212,94,213,95,214,215,216,217,218,219,220,221,222,223,224,225,96,226,227,228,229,97,230,231,98,232,233,234,99,235,100,236,237,101,238,239,240,241,102,103,104,242,243,244,245,246,247,105,248,106,249,250,251,252,253,254,255,256,257,258,259,260,107,261,262,263,264,108,265,266,109,267,268,269,110,270,426,427,428,429,430,271,272,273,274,275,276,277,278,111,279,280,281,282,112,113,114,283,284,285,286,287,288,115,289,116,290,291,292,293,294,295,296,297,298,299,300,301,117,302,303,304,305,118,306,307,119,308,309,310,120,311,431,432],"tindex":"38fac0cd-da4a-11e4-b408-fbab1c5ed9b9","variableMapping":{"type":"defaultType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[],"tindex":"38fac0ce-da4a-11e4-b408-43adeca0b3f9","variableMapping":{"i":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":0},{"failures":[],"tindex":"38fac0cf-da4a-11e4-b408-2d73a285d04a","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[],"tindex":"38fac0d0-da4a-11e4-b408-77188ae0100b","variableMapping":{"graph":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1032","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[39,40,55,56,58,62],"tindex":"38fac0d1-da4a-11e4-b408-c38b3af4f7da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"38fac0d2-da4a-11e4-b408-3989f2cadff3","variableMapping":{"need":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[433,434,435,436,437,438,439,440,16,441,442,17,18,314,19],"tindex":"38fac0d3-da4a-11e4-b408-23ae1b486d88","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[69,362,84,180,181,187,194,195,93,214,215,221,228,229,104,249,250,256,263,264,114,290,291,297,304,305],"tindex":"38fac0d4-da4a-11e4-b408-b3a93a43fff6","variableMapping":{"numTiles":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"38fac0d5-da4a-11e4-b408-8f114049bf24","variableMapping":{"acceptBit":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","ferryBit":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[28,121,122,32,39,40,41,42,43,74,44,45,75,46,47,76,48,49,50,51,52,53,54,55,56,57,58,77,59,61,79,62],"tindex":"38fac0d6-da4a-11e4-b408-ff8626ac8fd3","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"38fac0d7-da4a-11e4-b408-5534c46530d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.Arrays.java.util.Arrays.asList(com.graphhopper.routing.util.FlagEncoder[]))"},"status":-2},{"failures":[],"tindex":"38fac0d8-da4a-11e4-b408-3f7cb4fd1762","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"38fae7e9-da4a-11e4-b408-357133b31860","variableMapping":{"from":"length","end":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[359,443,155,39,47],"tindex":"38fae7ea-da4a-11e4-b408-2f9406376cd7","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-1},{"failures":[],"tindex":"38fae7eb-da4a-11e4-b408-2b261b698064","variableMapping":{"i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"38fae7ec-da4a-11e4-b408-6fae46195336","variableMapping":{"lat":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[],"tindex":"38fae7ed-da4a-11e4-b408-0f3a2ef8f903","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[132,133,5,13,18,25,444],"tindex":"38fae7ee-da4a-11e4-b408-4b60fc449048","variableMapping":{"min":"speed","dist":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"38fae7ef-da4a-11e4-b408-81bc24995329","variableMapping":{"weightLong":"relationFlags","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":0},{"failures":[29,32,35,36,37,326,340,341,342,344,346,350,362,156,157,72,73,44,54,55,56,81,82,84,86,181,183,187,194,195,89,200,91,93,95,215,217,221,228,229,98,234,100,101,102,104,106,250,252,256,263,264,109,269,111,112,114,116,291,293,297,303,304,305,119,310],"tindex":"38fae7f0-da4a-11e4-b408-dd5b6fcd57b0","variableMapping":{"endIndexPlusOne":"bitsForEdgeFlags","frontIndex":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-1},{"failures":[],"tindex":"38fae7f1-da4a-11e4-b408-8b3b5875ad22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"38fae7f2-da4a-11e4-b408-2be7061ff6d4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[0,445,434,436,20],"tindex":"38fae7f3-da4a-11e4-b408-b11d2ff9b2f2","variableMapping":{"lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"38fae7f4-da4a-11e4-b408-e1fbf338d93a","variableMapping":{"i":"kmInteger","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":0},{"failures":[],"tindex":"38fae7f5-da4a-11e4-b408-cfde1cb5e2ff","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[41,74,44,54,56,77,61,79],"tindex":"38fae7f6-da4a-11e4-b408-a35424244514","variableMapping":{"unterfrankenGraph":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:68","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.Graph) instanceof com.graphhopper.storage.LevelGraph) {\n    throw new java.lang.IllegalStateException((\"run testAlgos only with a none-LevelGraph. Use prepare.chWeighting=no \" + \"Or use prepare.chWeighting=shortest and avoid the preparation\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[316,317,28,121,122,319,32,63,324,326,39,40,41,42,43,74,44,45,75,46,47,76,48,49,50,51,52,53,160,54,55,56,57,58,77,161,59,78,163,164,60,165,61,79,80,166,167,62,373,202,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,203,271,273,274,275,278,111,281,112,113,114,283,284,285,286,287,288,115,290,291,292,293,294,295,296,297,298,299,300,301,117,303,304,305,118,306,307,119,308,309,310,120,311],"tindex":"38fb0f07-da4a-11e4-b408-b5db32128512","variableMapping":{"foundIndex":"I_SKIP_EDGE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[446,447,448,449,450,451,452,453,454,455],"tindex":"38fb0f08-da4a-11e4-b408-9768a80375f5","variableMapping":{"tmp":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"38fb0f09-da4a-11e4-b408-273f091fff3d","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[28,121,30,122,123,33,34,321,322,456,67,342,344,345,348,360,361,362,49,50,53,373,202,377,379,382,385,386,387,388,390,399,400,403,412,414,417,420,421,422,423,425],"tindex":"38fb0f0a-da4a-11e4-b408-331d1ab75f4e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"38fb0f0b-da4a-11e4-b408-b9df9385a260","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"38fb0f0c-da4a-11e4-b408-4f766bd85d30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[33,34,321,322,323,35,36,37,38,63,324,325,326,327,328,64,124,333,65,66,147,69,360,361,362,70,71,154,155,156,157,158,159,39,40,41,42,43,74,44,45,75,46,47,76,48,49,50,51,52,53,160,54,55,56,57,58,77,161,59,78,163,164,60,165,61,79,80,166,167,62,172,241,273,282],"tindex":"38fb0f0d-da4a-11e4-b408-c50b0ccf20cc","variableMapping":{"entry":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.split(\"\\\\|\")[0]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":-1},{"failures":[69],"tindex":"38fb0f0e-da4a-11e4-b408-9f9f812dc5f5","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1043","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"38fb0f0f-da4a-11e4-b408-23b3fa412e8d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[69,70,71],"tindex":"38fb0f10-da4a-11e4-b408-29383983803e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:98","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"status":-1},{"failures":[],"tindex":"38fb3621-da4a-11e4-b408-4d31ee55dddd","variableMapping":{"newUniqueOsmId":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"38fb3622-da4a-11e4-b408-bfd1e021c57e","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"38fb3623-da4a-11e4-b408-152a3cd980e3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"38fb3624-da4a-11e4-b408-f3c5036ce796","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"38fb3625-da4a-11e4-b408-cb903dc7d7da","variableMapping":{"directionBitMask":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","flags":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","dir":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[135,457,458],"tindex":"38fb3626-da4a-11e4-b408-6fc3da675fde","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"38fb3627-da4a-11e4-b408-d50bfae6bd24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"38fb3628-da4a-11e4-b408-0741ecc33457","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":0},{"failures":[132],"tindex":"38fb3629-da4a-11e4-b408-d715d388fdc0","variableMapping":{"factor":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"38fb362a-da4a-11e4-b408-6d48ecff4a90","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-2},{"failures":[],"tindex":"38fb362b-da4a-11e4-b408-25b6c6c4b24d","variableMapping":{"tmpDegreeCounter":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"38fb362c-da4a-11e4-b408-433fee2542db","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"38fb362d-da4a-11e4-b408-e1222a59004d","variableMapping":{"delta_lat":"fwdDecline","r_lat":"fwdDecline","a_lat":"fwdDecline","delta_lon":"fwdDecline","r_lon":"fwdDecline","a_lon":"fwdDecline","norm":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"38fb362e-da4a-11e4-b408-0146556201e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[316,28,121,29,30,122,319,31,32,123,33,34,339,67,340,341,343,344,345,346,349,350,351,68,46,49,50,53,459,460,461,462,463,464,465,373,202,375,377,378,379,380,382,383,384,385,386,387,388,390,203,410,412,413,414,415,417,418,419,420,421,422,423,425,206],"tindex":"38fb362f-da4a-11e4-b408-c79268e50842","variableMapping":{"segmentSizeInBytes":"y2","index":"sLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[466,467,468,469,470,61,167],"tindex":"38fb3630-da4a-11e4-b408-55c90d85b2f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"38fb3631-da4a-11e4-b408-7ffa447c80ec","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":-2},{"failures":[],"tindex":"38fb5d42-da4a-11e4-b408-875d64024eed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"38fb5d43-da4a-11e4-b408-47bd61ec24af","variableMapping":{"resultOrientation":"speed","orientation":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":0},{"failures":[317,28,121,122,319,471,40,41,42,43,74,44,45,75,46,47,76,48,49,50,51,52,53,160,54,55,56,57,58,161,59,78,163,164,60,165,61,80,166,167,62],"tindex":"38fb5d44-da4a-11e4-b408-51cc416178ad","variableMapping":{"minResolutionInMeter":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-1},{"failures":[132,133,5,13,18,25,444],"tindex":"38fb5d45-da4a-11e4-b408-814da7bd3888","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"38fb5d46-da4a-11e4-b408-3dd5b330f535","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"38fb5d47-da4a-11e4-b408-d9ad183a65e8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[316,316,317,28,121,29,30,122,318,319,31,32,123,123,320,33,34,154,155,363,364,365,365,366,72,367,368,73,369,370,371,372,168,81,81,169,169,170,171,172,82,83,84,173,174,174,175,176,177,178,85,179,86,86,180,181,182,182,183,184,185,186,187,188,189,190,191,87,192,193,193,194,195,88,196,197,89,198,199,200,90,201,385,386,387,388,389,390,203,392,393,394,395,396,204,398,399,400,401,402,403,405,406,407,408,409,205,420,421,422,423,424,425,206,91,92,93,207,208,208,209,210,211,212,94,213,95,95,214,215,216,216,217,218,219,220,221,222,223,224,225,96,226,227,227,228,229,97,230,231,98,232,233,234,99,235,100,100,236,237,101,101,238,238,239,240,241,102,103,104,242,243,243,244,245,246,247,105,248,106,106,249,250,251,251,252,253,254,255,256,257,258,259,260,107,261,262,262,263,264,108,265,266,109,267,268,269,110,270,428,429,430,276,278,111,111,279,279,280,281,282,112,113,114,283,284,284,285,286,287,288,115,289,116,116,290,291,292,292,293,294,295,296,297,298,299,300,301,117,302,303,303,304,305,118,306,307,119,308,309,310,120,311],"tindex":"38fb5d48-da4a-11e4-b408-e1a15de09332","variableMapping":{"names":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:146","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[6,14,437,26],"tindex":"38fb5d49-da4a-11e4-b408-df7b30782b68","variableMapping":{"initLeafSize":"speed","maxLeafEntries":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"38fb5d4a-da4a-11e4-b408-ab3cbeffdb4e","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"restrictedValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":0},{"failures":[],"tindex":"38fb5d4b-da4a-11e4-b408-ab0d5f9c687a","variableMapping":{"high":"noOfStates","len":"noOfStates","start":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"38fb5d4c-da4a-11e4-b408-79e7250fabd1","variableMapping":{"systemProperty":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"38fb5d4d-da4a-11e4-b408-cf3381876623","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[339,134],"tindex":"38fb5d4e-da4a-11e4-b408-731fa51f0899","variableMapping":{"size":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[],"tindex":"38fb845f-da4a-11e4-b408-5fce3215a441","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"38fb8460-da4a-11e4-b408-7f692d316631","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"38fb8461-da4a-11e4-b408-33b39c616141","variableMapping":{"nodeThis":"com.graphhopper.routing.util.PriorityWeighting.KEY","nextEdgeOther":"com.graphhopper.routing.util.PriorityWeighting.KEY","nodeOther":"com.graphhopper.routing.util.PriorityWeighting.KEY","nextEdge":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"38fb8462-da4a-11e4-b408-5bf1429064a4","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"flags","roundaboutBit":"flags","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","forwardBit":"flags","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"38fb8463-da4a-11e4-b408-9df64d15b4d6","variableMapping":{"numTiles":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[316,317,28,121,29,30,122,319,31,32,123,33,34,323,35,36,37,38,63,326,64,124,333,65,66,339,67,340,341,342,343,344,345,346,347,348,349,350,351,352,68,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,358,359,457,0,472,1,473,474,475,476,477,478,479,480,2,3,481,482,4,5,312,6,7,143,445,483,484,485,144,443,145,146,147,148,149,150,151,152,153,486,8,487,9,488,489,490,10,11,491,492,12,13,313,14,15,433,434,435,436,437,438,439,440,16,441,442,17,18,314,19,69,360,361,362,70,71,458,20,493,21,494,495,496,497,498,499,500,501,22,23,502,503,24,25,315,26,27,444,154,155,156,157,72,73,158,159,39,40,41,42,43,74,44,45,75,46,47,76,48,49,50,51,52,53,160,54,55,56,57,58,77,161,162,59,78,163,164,60,165,61,79,80,166,167,62,168,81,169,170,171,172,82,83,84,173,174,175,176,177,178,85,179,86,180,181,182,183,184,185,186,187,188,189,190,191,87,192,193,194,195,88,196,197,89,198,199,200,90,201,202,203,204,205,206,91,92,93,207,208,209,210,211,212,94,213,95,214,215,216,217,218,219,220,221,222,223,224,225,96,226,227,228,229,97,230,231,98,232,233,234,99,235,100,236,237,101,238,239,240,241,102,103,104,242,243,244,245,246,247,105,248,106,249,250,251,252,253,254,255,256,257,258,259,260,107,261,262,263,264,108,265,266,109,267,268,269,110,270,271,272,273,274,275,276,277,278,111,279,280,281,282,112,113,114,283,284,285,286,287,288,115,289,116,290,291,292,293,294,295,296,297,298,299,300,301,117,302,303,304,305,118,306,307,119,308,309,310,120,311],"tindex":"38fb8464-da4a-11e4-b408-cda28c8ff358","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[],"tindex":"38fb8465-da4a-11e4-b408-3927578470c0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[468,470],"tindex":"38fbab76-da4a-11e4-b408-fdd5bdc9bf9c","variableMapping":{"index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[446,447,53,448,449,450,451,453,454,504,455,375,383,384,410,418,419],"tindex":"38fbab77-da4a-11e4-b408-350c95bd676e","variableMapping":{"midLat":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"38fbab78-da4a-11e4-b408-456ce8e656e6","variableMapping":{"this":"em"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) > 1)\n    throw new java.lang.IllegalStateException((\"Multiple encoders are active. cannot return one:\" + com.graphhopper.routing.util.EncodingManager.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":160,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":364,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":276,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":444,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":92,"com.graphhopper.reader.OSMReaderTest.testFerry":339,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":64,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":495,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":437,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":459,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":378,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":317,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":248,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":338,"com.graphhopper.coll.CompressedArrayTest.testCompress":447,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":442,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":163,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":223,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":374,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":80,"com.graphhopper.GraphHopperTest.testPrepare":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":77,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":186,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":21,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":397,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":322,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":375,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":436,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":75,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":413,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":496,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":100,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":112,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":468,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":62,"com.graphhopper.GraphHopperTest.testLoadOSM":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":414,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":144,"com.graphhopper.reader.OSMReaderTest.testSort":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":25,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":349,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":238,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":196,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":81,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":233,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":73,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":266,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":302,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":460,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":177,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":236,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":102,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":13,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":382,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":50,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":202,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":380,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":43,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":114,"com.graphhopper.coll.OSMIDMapTest.testGetLong":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":251,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":257,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":295,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":111,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":297,"com.graphhopper.coll.CompressedArrayTest.testCompress2":446,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":8,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":106,"com.graphhopper.GraphHopperAPITest.testLoad":33,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":282,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":145,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":180,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":84,"com.graphhopper.storage.LevelGraphStorageTest.testClone":284,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":103,"com.graphhopper.reader.OSMReaderTest.testBarriers":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":476,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":209,"com.graphhopper.util.GHUtilityTest.testCopy":326,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":491,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":314,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":395,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":461,"com.graphhopper.routing.PathTest.testFindInstruction":157,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":440,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":104,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":466,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":63,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":151,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":392,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":197,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":108,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":252,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":481,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":484,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":286,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":210,"com.graphhopper.util.InstructionListTest.testWayList2":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":421,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":90,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":245,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":494,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":430,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":268,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":493,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":358,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":464,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":497,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":249,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":44,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":83,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":55,"com.graphhopper.coll.OSMIDMapTest.testGet":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":105,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":152,"com.graphhopper.routing.PathBidirRefTest.testExtract":158,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":299,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":355,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":500,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":228,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":434,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":499,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":206,"com.graphhopper.util.GHUtilityTest.testSort2":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":51,"com.graphhopper.reader.OSMReaderTest.testMain":340,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":279,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":501,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":504,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":315,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":387,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":117,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":239,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":116,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":293,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":120,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":72,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":480,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":0,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":296,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":351,"com.graphhopper.storage.StorablePropertiesTest.testStore":428,"com.graphhopper.storage.GraphHopperStorageTest.testClone":174,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":134,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":426,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":132,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":182,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":271,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":211,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":274,"com.graphhopper.routing.PathTest.testTime":155,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":11,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":309,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":139,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":222,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":301,"com.graphhopper.reader.OSMReaderTest.testRelation":347,"com.graphhopper.util.GHUtilityTest.testSortDirected":328,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":469,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":5,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":431,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":366,"com.graphhopper.GraphHopperTest.testFootOnly":32,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":465,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":130,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":399,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":381,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":485,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":218,"com.graphhopper.search.NameIndexTest.testCreate":332,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":363,"com.graphhopper.routing.QueryGraphTest.testOneWay":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":424,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":451,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":439,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":412,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":448,"com.graphhopper.reader.OSMReaderTest.testWithBounds":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":267,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":360,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":367,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":224,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":445,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":113,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":280,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":486,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":482,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":19,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":260,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":131,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":253,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":82,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":40,"com.graphhopper.util.InstructionListTest.testWayList":36,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":498,"com.graphhopper.GraphHopperAPITest.testDisconnected179":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":212,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":452,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":2,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":503,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":29,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":176,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":166,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":87,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":458,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":79,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":135,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":489,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":240,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":57,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":172,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":389,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":27,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":168,"com.graphhopper.routing.PathTest.testWayList":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":490,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":214,"com.graphhopper.coll.OSMIDMapTest.testGet2":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":58,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":118,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":502,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":185,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":146,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":246,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":383,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":478,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":467,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":487,"com.graphhopper.util.GHUtilityTest.testSort":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":226,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":417,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":455,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":23,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":438,"com.graphhopper.search.NameIndexTest.testPut":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":110,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":241,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":376,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":394,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":403,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":474,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":359,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":404,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":488,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":142,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":335,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":254,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":69,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":292,"com.graphhopper.routing.PathTest.testFound":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":227,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":123,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":443,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":307,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":22,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":250,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":471,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":331,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":95,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":85,"com.graphhopper.util.InstructionListTest.testEmptyList":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":492,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":126,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":125,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":52,"com.graphhopper.reader.PrinctonReaderTest.testRead":65,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":379,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":213,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":357,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":91,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":255,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":479,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":483,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":472,"com.graphhopper.reader.OSMReaderTest.testFoot":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":96,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":336,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":372,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":418,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":433,"com.graphhopper.reader.OSMReaderTest.testOneWay":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":419,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":181,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":195,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":265,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":16,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":477,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":164,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":463,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":78,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":407,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":462,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":147,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":216,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":365,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":170,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":352,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":432,"com.graphhopper.routing.PathBidirRefTest.testExtract2":159,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":12,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":422,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":329,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":193,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":14,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":345,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":235,"com.graphhopper.util.SimpleIntDequeTest.testPush":456,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":415,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":88,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":287,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":136,"com.graphhopper.GraphHopperTest.testFootAndCar":30,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":189,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":390,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":243,"com.graphhopper.storage.StorablePropertiesTest.testLoad":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":54,"com.graphhopper.GraphHopperTest.testPrepareOnly":316,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":396,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":93,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":348,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":275,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":38,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":192,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":149,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":219,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":140,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":306,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":305,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":101}}]
