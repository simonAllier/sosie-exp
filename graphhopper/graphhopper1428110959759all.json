[{"failures":[],"tindex":"045c3e2d-da6a-11e4-8e72-01cdc7207017","variableMapping":{"splitIndex":"x2","entrySize":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"045d4f9e-da6a-11e4-8e72-39c00a6ed0c2","variableMapping":{"len":"defaultValue","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"045d4f9f-da6a-11e4-8e72-af3fc093c3b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"045d76b0-da6a-11e4-8e72-cf243f71f66c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"045d76b1-da6a-11e4-8e72-a9709bbc1d5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:32","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"045d76b2-da6a-11e4-8e72-dd011f4f0338","variableMapping":{"allSegments":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,69,77,78,82,87,88],"tindex":"045d76b3-da6a-11e4-8e72-9359c8f770b7","variableMapping":{"red":"mSize","green":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"045d76b4-da6a-11e4-8e72-d933ba1c8bed","variableMapping":{"strLen":"com.graphhopper.util.EdgeIterator.NO_EDGE","bLen":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"045d76b5-da6a-11e4-8e72-134164d0a30a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"045d76b6-da6a-11e4-8e72-37bfa8ca9890","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[0,9,13,14,36],"tindex":"045d76b7-da6a-11e4-8e72-3f7a068225bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"045d76b8-da6a-11e4-8e72-c773e565fe16","variableMapping":{"str":"this","i":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:418","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String += \",\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[],"tindex":"045d76b9-da6a-11e4-8e72-ddc45234ca32","variableMapping":{"java.lang.Double.MAX_VALUE":"incEleSum","existingDirectWeight":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-2},{"failures":[115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"045d76ba-da6a-11e4-8e72-d74ce3fefb16","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"045d76bb-da6a-11e4-8e72-058a101a209a","variableMapping":{"name":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[127],"tindex":"045d76bc-da6a-11e4-8e72-df4ba12b2d30","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[30,128,129,130,131,132,133,134,135,136,137,48,54,55,138,139,140],"tindex":"045d9dcd-da6a-11e4-8e72-ddc6bc1cf3ba","variableMapping":{"tmp":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"045d9dce-da6a-11e4-8e72-81fac9b81748","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[141],"tindex":"045d9dcf-da6a-11e4-8e72-a75156d3d3fe","variableMapping":{"err":"val","dLat":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"045d9dd0-da6a-11e4-8e72-656a38ff8248","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"045d9dd1-da6a-11e4-8e72-e9e5cb11d1b0","variableMapping":{"tmp":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-2},{"failures":[0,2,8,9,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,32,33,34,35,36,39,40,41,43],"tindex":"045d9dd2-da6a-11e4-8e72-bfd9a47c1dfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"045d9dd3-da6a-11e4-8e72-43f80919aeb6","variableMapping":{"java.lang.Double.MAX_VALUE":"factor","existingDirectWeight":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-2},{"failures":[142],"tindex":"045d9dd4-da6a-11e4-8e72-0f654245b2a0","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"fwdDecline","distInMeter":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[],"tindex":"045d9dd5-da6a-11e4-8e72-230dbb57fe32","variableMapping":{"intVal":"minNetworkSize","degree":"minNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"045d9dd6-da6a-11e4-8e72-7d278d8d61b1","variableMapping":{"map":"map"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":0},{"failures":[143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"045d9dd7-da6a-11e4-8e72-c592686287ed","variableMapping":{"bits":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"045d9dd8-da6a-11e4-8e72-5d44188ecc3d","variableMapping":{"edgeTo":"int1","edgeFrom":"int1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-2},{"failures":[22,26,27,30,155,156,96,157,158,159,160,161,162,163,164,165,166,167,168,37,38,39,40,169,170,41,42,171,43,172,173,174,175,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,138,176,177,178,179,180,140,181,182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"045d9dd9-da6a-11e4-8e72-3b40b76f4def","variableMapping":{"i":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[194,163],"tindex":"045d9dda-da6a-11e4-8e72-8f73ad67dd36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"045dc4eb-da6a-11e4-8e72-8f4c95247010","variableMapping":{"distInMeter":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"045dc4ec-da6a-11e4-8e72-51eba7e3f40a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"045dc4ed-da6a-11e4-8e72-53babd78d615","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"045dc4ee-da6a-11e4-8e72-99e4f3395e0a","variableMapping":{"nodeId":"bits","nodeIdOffset":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[],"tindex":"045dc4ef-da6a-11e4-8e72-2183e827ecc1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"045dc4f0-da6a-11e4-8e72-0159e95c3a45","variableMapping":{"red":"start","green":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"045dc4f1-da6a-11e4-8e72-2b48ac4e96c3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"045dc4f2-da6a-11e4-8e72-43433292bbe4","variableMapping":{"shiftSum":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":0},{"failures":[195],"tindex":"045dc4f3-da6a-11e4-8e72-b56380addf76","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"045dc4f4-da6a-11e4-8e72-2568981501db","variableMapping":{"val":"entryVal","existing":"entry","key":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[196,197,198,157,158,159,161,162,164,167,168,37,170,43],"tindex":"045dc4f5-da6a-11e4-8e72-995b70643e8e","variableMapping":{"high":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"045dc4f6-da6a-11e4-8e72-afddf200cdd2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[0,9,13,14,25,26,199,200,201,142,202,203,204,44,205,206,207,208,209,210,211,212,213,214,215,216,62,217,67,75,218,91],"tindex":"045dec07-da6a-11e4-8e72-0d22bdd37d04","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed","unknownSpeed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[150],"tindex":"045dec08-da6a-11e4-8e72-8711ebd07bee","variableMapping":{"ghLocation":"highway","osmFile":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[219],"tindex":"045dec09-da6a-11e4-8e72-0786cfde722e","variableMapping":{"shift":"encoded","tmpValue":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[143,144,145,146,147,148,149,150,151,152,154,219,157,162],"tindex":"045dec0a-da6a-11e4-8e72-9948ed39fdce","variableMapping":{"initialized":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"045dec0b-da6a-11e4-8e72-ade5572d7121","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[220,221],"tindex":"045dec0c-da6a-11e4-8e72-f7875446346d","variableMapping":{"length":"minutes","factor":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"045dec0d-da6a-11e4-8e72-031697ea7b93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[0,2,3,8,9,10,11,12,13,14,15,16,19,23,25,26,28,30,32,33,34,36,222,199,200,95,156,223,224,202,221,157,158,160,163,164,165,167,168,225,226,39,40,169,170,41,171,227,44,45,228,97,229,230,207,231,232,233,234,235,236,237,238,239,103,240,241,211,242,243,244,245,246,247,248,249,109,250,251,215,252,253,254,255,256,257,65,68,69,72,76,218,81,85,86,89,90,93,192],"tindex":"045dec0e-da6a-11e4-8e72-df81d9f1c0d9","variableMapping":{"turnRestrictionBit":"flags","shift":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"045efd7f-da6a-11e4-8e72-d3eea3fd9dc1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"045efd80-da6a-11e4-8e72-15c7fb3ccc52","variableMapping":{"high":"flags","highKey":"dir","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[198],"tindex":"045efd81-da6a-11e4-8e72-67a3178f0376","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[258,259],"tindex":"045efd82-da6a-11e4-8e72-39fd5fab5d2b","variableMapping":{"str":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"045efd83-da6a-11e4-8e72-0d8047daf301","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"045efd84-da6a-11e4-8e72-0f9f2aedb009","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"045efd85-da6a-11e4-8e72-87a32ba8ca00","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[260,0,1,261,2,3,4,5,6,7,8,9,10,262,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,263,264,265,266,267,268,222,269,270,199,271,272,273,274,275,276,277,278,200,201,279,280,281,282,283,258,284,143,285,144,286,115,287,288,289,290,291,116,292,145,293,117,294,295,296,142,297,298,259,299,146,300,147,301,118,302,303,304,305,306,119,307,148,308,120,309,310,95,155,156,96,223,224,311,312,313,202,196,203,314,197,198,315,121,149,316,150,317,318,319,320,321,122,322,151,323,123,324,124,325,152,153,326,327,328,329,330,125,331,154,332,126,333,334,335,336,337,338,339,195,204,340,341,342,343,344,345,346,347,348,349,219,350,351,221,157,158,159,160,161,162,163,164,352,165,166,167,353,168,225,226,37,38,39,40,169,170,41,354,42,171,43,172,355,356,357,358,359,360,227,361,44,362,363,45,364,365,366,174,175,205,228,97,367,368,229,369,370,206,230,371,207,98,99,372,373,374,375,231,100,376,377,378,379,232,380,233,101,102,234,381,235,208,382,383,384,236,385,237,386,387,238,388,389,390,391,209,239,103,392,393,240,394,395,210,241,396,211,104,105,397,398,399,400,242,106,401,402,403,404,243,405,244,107,108,245,406,246,212,407,408,409,247,410,411,412,413,414,415,416,417,46,47,418,48,419,49,50,51,52,420,53,54,55,56,57,58,59,421,60,61,422,423,424,425,426,427,428,138,429,176,177,178,179,430,180,139,140,181,182,183,184,431,185,186,187,188,189,190,432,191,433,248,434,435,436,437,213,249,109,438,439,250,440,441,214,251,442,215,110,111,443,444,445,446,252,112,447,448,449,450,253,451,254,113,114,255,452,256,216,453,454,455,257,456,62,457,63,64,217,458,459,460,65,461,462,66,463,67,68,69,70,71,72,73,74,75,76,464,218,77,78,465,79,80,466,81,82,83,84,467,468,85,469,86,87,88,89,470,90,91,471,92,472,93,94,192,193,473],"tindex":"045f2496-da6a-11e4-8e72-7b8587df47ae","variableMapping":{"size":"index","newSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"045f2497-da6a-11e4-8e72-47faf776fc80","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[474,475,219,221,157,158,159,161,162,163,164,167,353,476,168,37,38,39,40,169,170,41,42,171,43,172,360],"tindex":"045f2498-da6a-11e4-8e72-ab8d3f55fb78","variableMapping":{"bytePos":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[],"tindex":"045f2499-da6a-11e4-8e72-39df8637723f","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,262,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,265,266,267,268,222,269,270,199,271,272,273,274,275,276,200,201,296,142,95,155,156,96,223,224,202,221,157,158,159,160,161,162,163,164,165,166,167,353,168,477,225,226,37,39,40,169,170,41,42,171,43,172,357,358,359,360,227,361,44,362,363,45,364,366,174,175,207,233,237,387,238,390,209,239,103,392,393,240,394,395,210,241,396,211,104,105,397,398,399,400,242,106,401,402,403,404,243,244,107,108,245,406,246,212,407,408,409,247,410,411,412,413,414,416,417,46,47,418,48,419,49,50,51,52,420,53,54,55,56,57,58,59,60,61,422,423,424,425,427,428,138,429,176,177,178,179,430,180,139,140,181,182,183,184,185,186,187,188,189,190,191,433,248,436,213,249,109,438,439,250,440,441,214,251,442,215,110,111,443,444,445,446,252,112,447,448,449,450,253,254,113,114,255,452,256,216,453,454,455,257,456,62,457,63,64,217,459,460,65,66,67,68,69,70,71,72,73,74,75,76,464,218,77,78,465,79,80,466,81,82,83,84,467,468,85,86,87,88,89,470,90,91,471,92,472,93,94,478,479,480,481,482,483,484,485,192,193],"tindex":"045f4baa-da6a-11e4-8e72-c9bb9f73bfce","variableMapping":{"i":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[196,197,219,157,170,43],"tindex":"045f4bab-da6a-11e4-8e72-735d2ab2c576","variableMapping":{"newUniqueOsmId":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[283,285,144,294,298,300,147,309,149,150,317,325,153,333],"tindex":"045f4bac-da6a-11e4-8e72-7b34ecfc48f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"045f4bad-da6a-11e4-8e72-ed7eedac487c","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"045f4bae-da6a-11e4-8e72-57d1d8bc6670","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"toSize","sign":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"045f4baf-da6a-11e4-8e72-2b1de7263763","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[338,342,157,168,39,170],"tindex":"045f4bb0-da6a-11e4-8e72-e504287cc569","variableMapping":{"bits":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"045f4bb1-da6a-11e4-8e72-8125a761d1a4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"045f4bb2-da6a-11e4-8e72-8529243e63db","variableMapping":{"distance":"lat","speed":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[340],"tindex":"045f4bb3-da6a-11e4-8e72-2320ffa9b2df","variableMapping":{"y1":"backSpeed","x1":"backSpeed","y2":"backSpeed","x2":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"045f4bb4-da6a-11e4-8e72-ab44aea669d6","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-2},{"failures":[2,3,4,5,6,8,10,11,12,13,15,16,17,18,19,20,21,22,23,27,28,29,30,32,33,34,35,36,222,275,276,95,155,156,96,223,204,346,225,226,357,358,359,227,361,45,228,97,368,229,230,374,231,232,233,234,235,236,237,238,239,103,393,240,241,399,242,243,244,245,246,247,417,61,428,186,248,249,109,439,250,251,445,252,253,254,255,256,257,65,68,69,71,72,76,80,81,85,86,89,90,93,192,193],"tindex":"045f72c5-da6a-11e4-8e72-091f840be824","variableMapping":{"turnRestrictionBit":"flags","restricted":"backward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:615","type":"CtReturnImpl","sourcecode":"return boolean ? long : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-1},{"failures":[],"tindex":"045f72c6-da6a-11e4-8e72-2f169881a17d","variableMapping":{"tmp":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[155,156,96,157,158,159,160,161,162,163,164,165,166,167,168,37,38,39,40,169,170,41,42,171,43,172],"tindex":"045f72c7-da6a-11e4-8e72-c586d16fa5d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:111","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[156,96,168,103,396,104,105,106,107,108,109,442,110,111,112,113,114,459,69,464,77,78,82,87,88,482],"tindex":"045f72c8-da6a-11e4-8e72-af40324bbb11","variableMapping":{"segmentCount":"remainingSegments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:163","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[int][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[12,13,14,33,34,36],"tindex":"045f72c9-da6a-11e4-8e72-cd40183cf2cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[157,168],"tindex":"045f72ca-da6a-11e4-8e72-21a48584f119","variableMapping":{"id":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"045f72cb-da6a-11e4-8e72-6b9ae793c64b","variableMapping":{"cp":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"045f72cc-da6a-11e4-8e72-95aa86178154","variableMapping":{"entry":"com.graphhopper.routing.util.EncodingManager.ERR","entryVal":"com.graphhopper.routing.util.EncodingManager.ERR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[2,11,14,32,33,34,36,63,217],"tindex":"045f72cd-da6a-11e4-8e72-bbd2535d0f31","variableMapping":{"hash":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-1},{"failures":[],"tindex":"045f72ce-da6a-11e4-8e72-81ce998405f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 1))"},"status":-2},{"failures":[],"tindex":"045f72cf-da6a-11e4-8e72-3ba52c1ca386","variableMapping":{"sacScale":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"045f72d0-da6a-11e4-8e72-b1c43d9f9792","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"045f72d1-da6a-11e4-8e72-dde6877dbcfe","variableMapping":{"max":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,262,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,265,265,266,266,267,267,268,268,222,222,269,269,270,270,199,199,271,271,272,272,273,273,274,274,275,276,277,278,200,201,296,142,95,155,156,96,223,224,202,221,157,158,159,160,161,162,163,164,165,166,167,353,168,477,225,226,37,38,39,40,169,170,41,42,171,43,172,356,357,358,359,360,227,361,44,362,363,45,364,366,174,175,205,228,97,367,368,229,369,370,206,230,371,207,98,99,372,373,374,375,231,100,376,377,378,379,232,380,233,101,102,234,381,235,208,382,383,384,236,385,237,386,387,238,388,389,390,209,239,103,392,393,240,394,395,210,241,396,211,104,105,397,398,399,400,242,106,401,402,403,404,243,405,244,107,108,245,406,246,212,407,408,409,247,410,411,412,413,414,415,416,417,46,47,418,48,419,49,50,51,52,420,53,54,55,56,57,58,59,421,60,61,422,423,424,425,426,427,428,138,429,176,177,178,179,430,180,139,140,181,182,183,184,431,185,186,486,187,188,189,190,432,191,433,248,434,435,436,213,249,109,438,439,250,440,441,214,251,442,215,110,111,443,444,445,446,252,112,447,448,449,450,253,451,254,113,114,255,452,256,216,453,454,455,257,456,487,62,457,63,64,217,458,459,460,65,461,462,66,67,68,69,70,71,72,73,74,75,76,464,218,77,78,465,79,80,466,81,82,83,84,467,468,85,469,86,87,88,89,470,90,91,471,92,472,93,94,192,193],"tindex":"045f99e2-da6a-11e4-8e72-bf7996b1b4d0","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"045f99e3-da6a-11e4-8e72-6bb501e79f5d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[349],"tindex":"045f99e4-da6a-11e4-8e72-45a7cc89861f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-1},{"failures":[200,357],"tindex":"045f99e5-da6a-11e4-8e72-09e2999275bc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"045f99e6-da6a-11e4-8e72-57ba6d69a1d8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"045f99e7-da6a-11e4-8e72-c9e0318f92e1","variableMapping":{"obtained":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"045f99e8-da6a-11e4-8e72-d1d1c981409e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"045f99e9-da6a-11e4-8e72-9502f1f8f74d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[2,3,4,8,10,11,14,15,16,19,23,25,26,28,29,30,32,33,34,35,36],"tindex":"045f99ea-da6a-11e4-8e72-33e7d14a83fa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[282,283,258,284,143,285,144,286,115,287,288,289,290,291,116,292,145,293,117,294,295,296,142,297,298,259,299,146,300,147,301,118,302,303,304,305,306,119,307,148,308,120,309,310,348],"tindex":"045fc0fb-da6a-11e4-8e72-6db3026dfda7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[],"tindex":"045fc0fc-da6a-11e4-8e72-0f3ee00a8f68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"045fc0fd-da6a-11e4-8e72-5d86ba159d60","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[],"tindex":"045fc0fe-da6a-11e4-8e72-fb9a3db11f6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":31,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":266,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":458,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":424,"com.graphhopper.GraphHopperAPITest.testNoLoad":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":228,"com.graphhopper.reader.OSMReaderTest.testFerry":221,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":227,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":50,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":38,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":396,"com.graphhopper.coll.CompressedArrayTest.testCompress":129,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":322,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":4,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":377,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":215,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":418,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":10,"com.graphhopper.GraphHopperTest.testPrepare":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":382,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":23,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":357,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":151,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":175,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":66,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":223,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":283,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":478,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":21,"com.graphhopper.coll.BitSetImplTest.testCopy":127,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":177,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":144,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":237,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":12,"com.graphhopper.GraphHopperTest.testLoadOSM":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":181,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":481,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":178,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":349,"com.graphhopper.reader.OSMReaderTest.testSort":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":293,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":156,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":388,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":452,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":248,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":383,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":199,"com.graphhopper.routing.DijkstraTest.initializationError":350,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":246,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":469,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":441,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":457,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":386,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":209,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":464,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":53,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":27,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":47,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":52,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":17,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":69,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":401,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":466,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":65,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":82,"com.graphhopper.coll.CompressedArrayTest.testCompress2":128,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":447,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":325,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":211,"com.graphhopper.GraphHopperAPITest.testLoad":192,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":463,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":480,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":312,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":110,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":109,"com.graphhopper.storage.LevelGraphStorageTest.testClone":71,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":220,"com.graphhopper.reader.OSMReaderTest.testBarriers":160,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":20,"com.graphhopper.util.GHUtilityTest.testCopy":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":125,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":123,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":426,"com.graphhopper.routing.PathTest.testFindInstruction":201,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":320,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":103,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":44,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":197,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":471,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":299,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":423,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":256,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":245,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":362,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":398,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":460,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":119,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":263,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":369,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":436,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":485,"com.graphhopper.util.InstructionListTest.testWayList2":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":182,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":257,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":394,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":143,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":487,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":258,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":296,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":434,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":19,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":249,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":161,"com.graphhopper.routing.AStarTest.initializationError":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":241,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":198,"com.graphhopper.routing.PathBidirRefTest.testExtract":275,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":288,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":430,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":101,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":287,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":186,"com.graphhopper.util.GHUtilityTest.testSort2":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":28,"com.graphhopper.reader.OSMReaderTest.testMain":158,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":461,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":289,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":136,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":117,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":389,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":218,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":79,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":93,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":77,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":298,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":479,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":81,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":353,"com.graphhopper.storage.GraphHopperStorageTest.testClone":439,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":381,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":342,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":340,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":443,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":126,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":370,"com.graphhopper.routing.PathTest.testTime":278,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":330,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":92,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":432,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":184,"com.graphhopper.reader.OSMReaderTest.testRelation":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":376,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":468,"com.graphhopper.util.GHUtilityTest.testSortDirected":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":308,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":268,"com.graphhopper.GraphHopperTest.testFootOnly":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":316,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":195,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":420,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":475,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":297,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":374,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":265,"com.graphhopper.routing.QueryGraphTest.testOneWay":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":431,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":133,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":176,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":130,"com.graphhopper.reader.OSMReaderTest.testWithBounds":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":155,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":407,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":378,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":474,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":68,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":462,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":324,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":404,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":204,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":399,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":213,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":14,"com.graphhopper.util.InstructionListTest.testWayList":358,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":453,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":115,"com.graphhopper.GraphHopperAPITest.testDisconnected179":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":206,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":405,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":305,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":292,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":169,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":440,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":262,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":282,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":450,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":25,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":9,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":91,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":343,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":145,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":35,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":437,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":421,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":295,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":433,"com.graphhopper.routing.PathTest.testWayList":200,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":339,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":36,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":403,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":116,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":313,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":54,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":80,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":55,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":302,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":152,"com.graphhopper.util.GHUtilityTest.testSort":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":380,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":137,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":291,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":391,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":419,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":425,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":191,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":413,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":483,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":300,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":142,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":411,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":387,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":326,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":280,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":400,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":95,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":484,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":233,"com.graphhopper.routing.PathTest.testFound":277,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":172,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":219,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":90,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":281,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":290,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":105,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":207,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":251,"com.graphhopper.util.InstructionListTest.testEmptyList":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":22,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":331,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":26,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":336,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":335,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":29,"com.graphhopper.reader.PrinctonReaderTest.testRead":225,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":216,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":51,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":210,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":205,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":303,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":194,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":259,"com.graphhopper.reader.OSMReaderTest.testFoot":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":232,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":274,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":139,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":140,"com.graphhopper.reader.OSMReaderTest.testOneWay":168,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":111,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":114,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":406,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":321,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":118,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":3,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":414,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":202,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":372,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":267,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":435,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":476,"com.graphhopper.routing.PathBidirRefTest.testExtract2":276,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":482,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":183,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":428,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":254,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":415,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":333,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":163,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":385,"com.graphhopper.util.SimpleIntDequeTest.testPush":173,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":416,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":179,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":255,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":365,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":344,"com.graphhopper.GraphHopperTest.testFootAndCar":170,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":448,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":153,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":60,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":368,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":393,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":32,"com.graphhopper.GraphHopperTest.testPrepareOnly":37,"com.graphhopper.GraphHopperTest.testVia":39,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":427,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":97,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":165,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":217,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":360,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":451,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":203,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":164,"com.graphhopper.routing.AStarBidirectionTest.initializationError":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":375,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":311,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":470,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":88,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":238}}]
