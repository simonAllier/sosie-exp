[{"failures":[],"tindex":"3b3fd7b4-db00-11e4-8e61-f1e600eff363","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"3b40c215-db00-11e4-8e61-fb7125b4c561","variableMapping":{"origEdgeId":"start","mainEdges":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-1},{"failures":[],"tindex":"3b40c216-db00-11e4-8e61-97ffe63a9596","variableMapping":{"iterState":"iterState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,7,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,21,105,106,107,108,109,110,111,112,113,114,115,28,116,117,118],"tindex":"3b40e927-db00-11e4-8e61-cb4fa9160373","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[31,32,33,36,37,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,83,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"3b40e928-db00-11e4-8e61-11e9620c37b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-1},{"failures":[153,154,155,42,43,156,71,72],"tindex":"3b40e929-db00-11e4-8e61-237ae46b8474","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"3b40e92a-db00-11e4-8e61-c3fab5d58897","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"3b40e92b-db00-11e4-8e61-e71656400908","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[30,32,33,34,35,36,37,38,39,40,157,158,159,160,161,41,42,43,44,162,163,164,45,165,166,167,168,169,170,171,50,51,52,53,54,55,56,57,58,59,60,61,62,63,69,70,172,0,173,174,1,175,176,71,72,73,74,177,75,76,77,78,79,80,178,81,82,179,180,181,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,83,138,139,140,182,141,142,143,144,145,146,147,148,183,149,150,151,152,84,184,86,185,2,186,187,188,189,190,191,192,193,87,194,3,4,195,196,197,5,6,88,198,199,200,201,7,8,202,203,204,89,205,90,206,207,208,209,210,211,212,92,93,94,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,95,96,97,243,244,245,246,247,248,249,250,251,252,253,98,254,99,100,255,102,256,16,257,258,259,260,261,262,263,264,103,265,17,18,266,267,268,19,20,104,269,270,271,272,21,22,273,274,275,105,276,106,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,111,293,113,294,23,295,296,297,298,299,300,301,302,114,303,24,25,304,305,306,26,27,115,307,308,309,310,28,29,311,312,313,116,314,117,315,316],"tindex":"3b41374c-db00-11e4-8e61-430455f6a62a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-1},{"failures":[],"tindex":"3b41374d-db00-11e4-8e61-1d8f98a38334","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[317,318,319,320],"tindex":"3b41374e-db00-11e4-8e61-090fea3fac61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"3b41374f-db00-11e4-8e61-8da7e65da700","variableMapping":{"this":"graph","toNodeId":"skippedEdge1","newEdgeId":"skippedEdge2","fromNodeId":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:352","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.storage.GraphHopperStorage.connectNewEdge(int, int);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"3b413750-db00-11e4-8e61-9f481746a3d4","variableMapping":{"precision":"java.lang.Double.MAX_VALUE","lat":"minEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"3b413751-db00-11e4-8e61-717074024387","variableMapping":{"weightLong":"mask","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[30,32,33,36,37,39,162,163,45,181,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,83,138,139,140,182,141,142,143,144,145,146,147,148,183,149,150,151,152,208,209,211,212,92,93,94,213,214,215,216,217,218,219,220,221,222,223,287,289,290,291,321,111,293,113,294,23,295,296,297,298,299,300,301,303,24,322,25,304,305,306,26,27,115,307,308,309,310,28,29,311,312,313,116,314,117,118,315,316],"tindex":"3b415e62-db00-11e4-8e61-cdc8a6baf798","variableMapping":{"segmentSizeInBytes":"b","length":"b","index":"a"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:340","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-1},{"failures":[],"tindex":"3b415e63-db00-11e4-8e61-974d555c3ebf","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[323,324,325,326],"tindex":"3b415e64-db00-11e4-8e61-dfb6fafffb05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"3b415e65-db00-11e4-8e61-d3e14644784e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[327,328,329,330,331,332,333,334,335,336,337,338,211,214,216,217,241,244,246,247],"tindex":"3b415e66-db00-11e4-8e61-59ec216bcbdc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"3b41ac87-db00-11e4-8e61-4f607306203a","variableMapping":{"this":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:98","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NativeFSLockFactory.NativeLock.lockExists())\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[323,324,325,326],"tindex":"3b41ac88-db00-11e4-8e61-bbeb77f8622b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:400","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[174,1],"tindex":"3b41ac89-db00-11e4-8e61-efbe0cb6223e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"3b41ac8a-db00-11e4-8e61-0bbef4f55da8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"3b41ac8b-db00-11e4-8e61-3931b784ecf5","variableMapping":{"res":"tmpValue","value":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":0},{"failures":[50,339],"tindex":"3b41ac8c-db00-11e4-8e61-53536d67d1e3","variableMapping":{"factor":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[157,340,181,128,140],"tindex":"3b41ac8d-db00-11e4-8e61-d7281e767a6e","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-1},{"failures":[],"tindex":"3b41ac8e-db00-11e4-8e61-0b6106dea3e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"3b41ac8f-db00-11e4-8e61-1322a0d94df8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:200","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[341,342],"tindex":"3b41ac90-db00-11e4-8e61-7988b3c7d2b5","variableMapping":{"encoderList":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[343,344,345,346],"tindex":"3b41ac91-db00-11e4-8e61-37c4b7ba9c5e","variableMapping":{"segmentSizeInBytes":"speed","length":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38,39,40,51,52,53,54,55,56,57,58,59,60,61,63,174],"tindex":"3b41d3a2-db00-11e4-8e61-8f2d57a475cc","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1043","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"3b41d3a3-db00-11e4-8e61-3bab42953427","variableMapping":{"size":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[347],"tindex":"3b41d3a4-db00-11e4-8e61-93949c79537e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"status":-1},{"failures":[30,33,34,36,38,39,42,43,348,349,350,52,54,55,56,57,58,61,64,65,66,67,68,71,74,76,77,79,80,82,83,84,86,88,7,89,92,94,95,97,351,352,254,14,353,354,355,356,357,358,359,360,99,100,102,104,21,105,281,284,285,286,111,113,115,28,116,361,362,363,364,365,366,367,368],"tindex":"3b41d3a5-db00-11e4-8e61-85c13edfbde1","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"3b41d3a6-db00-11e4-8e61-d7c0d273b279","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"3b41d3a7-db00-11e4-8e61-e1be2f19d32d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"3b41d3a8-db00-11e4-8e61-71f558c95059","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[],"tindex":"3b41d3a9-db00-11e4-8e61-b10a6fae8d5b","variableMapping":{"len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3b41d3aa-db00-11e4-8e61-af69d89875c3","variableMapping":{"systemProperty":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[32,33,34,35,36,38,347,369,370,371,372,344,373,374,375,376,377,378,379,380,381,382],"tindex":"3b41d3ab-db00-11e4-8e61-8b2bcd78d315","variableMapping":{"max":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"3b41fabc-db00-11e4-8e61-d30b83d86f51","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[343,376,377,346],"tindex":"3b41fabd-db00-11e4-8e61-b7c7092c1b93","variableMapping":{"tmpNo":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[50,383],"tindex":"3b41fabe-db00-11e4-8e61-2552fbac2dd1","variableMapping":{"size":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"3b41fabf-db00-11e4-8e61-f335f9760aa4","variableMapping":{"maxMCSpeed":"shortTripsSpeed","speed":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":0},{"failures":[327,328,329,330,332,333,334,335,336,337,338,211,214,216,217,241,244,246,247],"tindex":"3b41fac0-db00-11e4-8e61-133a5a4daad0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"3b41fac1-db00-11e4-8e61-539ff9e53ea0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[50,339],"tindex":"3b41fac2-db00-11e4-8e61-a9a2d0692ffc","variableMapping":{"distance":"durationInHours","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[],"tindex":"3b41fac3-db00-11e4-8e61-897e7f25cd4c","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-2},{"failures":[327,328,329,330,331,332,384,333,334],"tindex":"3b41fac4-db00-11e4-8e61-77305d912546","variableMapping":{"tmp":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[385],"tindex":"3b41fac5-db00-11e4-8e61-5f26ae64c745","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"3b41fac6-db00-11e4-8e61-177546ab81e1","variableMapping":{"currEdge":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[386,370,323,387,324,377,325,388,380,326],"tindex":"3b41fac7-db00-11e4-8e61-ef8d38bde8cc","variableMapping":{"pavementName":"wayTypeName","tr":"tr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"3b4221d8-db00-11e4-8e61-7dda02f5a5f1","variableMapping":{"finishedTo":"defaultB","finishedFrom":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"3b4221d9-db00-11e4-8e61-89676c3eb08a","variableMapping":{"width":"length","i":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"3b4221da-db00-11e4-8e61-3d7ce278ed9f","variableMapping":{"adjNode":"speed","java.lang.Integer.MIN_VALUE":"speed","this":"this","nodeCount":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:657","type":"CtIfImpl","sourcecode":"if ((int < 0) && (int != (java.lang.Integer.int)))\n    throw new java.lang.IllegalStateException(((((\"adjNode \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \"]\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"3b4221db-db00-11e4-8e61-5b65d216949f","variableMapping":{"dist":"lon1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[389],"tindex":"3b4221dc-db00-11e4-8e61-2fc31364f52c","variableMapping":{"lastTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[390],"tindex":"3b4221dd-db00-11e4-8e61-d93590e8e362","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"3b4221de-db00-11e4-8e61-ad6293880ea0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"3b4221df-db00-11e4-8e61-47075e3a3b44","variableMapping":{"high":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[318,345,387,373,391,392,393,394,395,396,374,324,375,397,398,399],"tindex":"3b4221e0-db00-11e4-8e61-29c8c99e65b6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[],"tindex":"3b4221e1-db00-11e4-8e61-9d439fd82ac8","variableMapping":{"index":"segmentSizePower","entrySize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:294","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[30,32,33,34,36,37,38,39,41,42,43,44,45,46,47,48,49,400,401,402,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,92,93,94,95,96,97,99,100,111,368],"tindex":"3b4221e2-db00-11e4-8e61-8f0bca40e038","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[327,328,127,329,330,331,332,333,334,335,336,337,338,211,214,216,217,241,244,246,247],"tindex":"3b4221e3-db00-11e4-8e61-db786a058db8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"3b4221e4-db00-11e4-8e61-4354b29f9bab","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[],"tindex":"3b4221e5-db00-11e4-8e61-47e98722254d","variableMapping":{"workerThreads":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"3b4221e6-db00-11e4-8e61-998963f83cd3","variableMapping":{"priorityFromRelation":"com.graphhopper.routing.util.PriorityWeighting.KEY","relationCodeEncoder":"relationCodeEncoder","relationFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"3b4221e7-db00-11e4-8e61-b3dd161bc4d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:108","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.flagsDefault(boolean, boolean)"},"status":-2},{"failures":[],"tindex":"3b4221e8-db00-11e4-8e61-7548ed973157","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[390],"tindex":"3b4221e9-db00-11e4-8e61-e7e925c353d8","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"3b4248fa-db00-11e4-8e61-27ec592f07d3","variableMapping":{"bitset":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:228","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSetImpl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[70],"tindex":"3b4248fb-db00-11e4-8e61-85970d0aa01d","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[339,403],"tindex":"3b4248fc-db00-11e4-8e61-c3c419f280a3","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"3b4248fd-db00-11e4-8e61-41899e2bf552","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[],"tindex":"3b4248fe-db00-11e4-8e61-f50cee2e05db","variableMapping":{"eleDelta":"speed","decEleSum":"speed","fullDist2D":"speed","decDist2DSum":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[],"tindex":"3b4248ff-db00-11e4-8e61-87756947e4fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[347],"tindex":"3b424900-db00-11e4-8e61-e98b693e2f41","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:393","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[],"tindex":"3b424901-db00-11e4-8e61-6bbde42e771c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"3b424902-db00-11e4-8e61-3325640f5c0d","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[404,142,144,148,149,151],"tindex":"3b424903-db00-11e4-8e61-e7719cf7cb51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"3b424904-db00-11e4-8e61-49f83fab6994","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"code","tmpNode":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,38,39,40,157,158,159,160,161,41,42,43,44,162,163,164,45,165,166,167,168,169,170,171,50,51,52,53,54,55,56,57,58,59,60,61,62,63,69,70,172,0,173,174,1,175,176,405,406,71,72,73,73,74,74,177,177,75,75,76,76,77,77,78,78,79,79,80,80,178,178,81,81,82,82,179,180,181,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,83,138,139,140,182,141,142,143,144,145,146,147,148,183,149,150,151,152,407,84,85,408,184,86,185,2,186,187,188,189,190,191,192,193,87,194,3,409,4,195,196,197,5,6,88,198,199,200,410,201,7,8,202,203,204,89,205,90,91,206,207,208,209,210,211,212,92,93,94,213,214,215,216,217,218,219,220,221,411,222,223,224,225,226,227,412,228,229,413,230,231,232,233,414,234,235,236,237,238,415,239,240,241,242,95,96,97,243,244,245,246,247,248,249,250,251,416,252,253,351,417,9,418,419,420,421,422,423,424,425,98,426,10,427,11,428,429,430,12,13,352,431,432,433,434,254,14,15,435,436,437,353,438,439,440,441,442,99,443,444,100,101,445,255,102,256,16,257,258,259,260,261,262,263,264,103,265,17,446,18,266,267,268,19,20,104,269,270,271,447,272,21,22,273,274,275,105,276,106,107,277,278,448,287,288,289,290,291,110,292,321,111,112,449,293,113,294,23,295,296,297,298,299,300,301,302,114,303,24,322,25,304,305,306,26,27,115,307,308,309,450,310,28,29,311,312,313,116,314,117,118,315,316],"tindex":"3b426f15-db00-11e4-8e61-610d509ca716","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"3b426f16-db00-11e4-8e61-510d055b2e8f","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:76","type":"CtReturnImpl","sourcecode":"return java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"failures":[],"tindex":"3b426f17-db00-11e4-8e61-095cc4a6b482","variableMapping":{"length":"removed","factor":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[30,31,32,33,34,35,36,37,38,39,40,157,158,159,160,161,41,42,43,44,162,163,164,45,165,166,167,168,169,170,171,50,51,52,53,54,55,56,57,58,59,60,61,62,63,69,70,172,0,173,174,1,175,176,405,406,71,72,73,73,74,74,177,177,75,75,76,76,77,77,78,78,79,79,80,80,178,178,81,81,82,82,179,180,181,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,83,138,139,140,182,141,142,143,144,145,146,147,148,183,149,150,151,152,407,84,85,408,184,86,185,2,186,187,188,189,190,191,192,193,87,194,3,409,4,195,196,197,5,6,88,198,199,200,410,201,7,8,202,203,204,89,205,90,91,206,207,208,209,210,211,212,92,93,94,213,214,215,216,217,218,219,220,221,411,222,223,224,225,226,227,412,228,229,413,230,231,232,233,414,234,235,236,237,238,415,239,240,241,242,95,96,97,243,244,245,246,247,248,249,250,251,416,252,253,351,417,9,418,419,420,421,422,423,424,425,98,426,10,427,11,428,429,430,12,13,352,431,432,433,434,254,14,15,435,436,437,353,438,439,440,441,442,99,443,444,100,101,445,255,102,256,16,257,258,259,260,261,262,263,264,103,265,17,446,18,266,267,268,19,20,104,269,270,271,447,272,21,22,273,274,275,105,276,106,107,277,278,287,288,289,290,291,110,292,321,111,112,449,293,113,294,23,295,296,297,298,299,300,301,302,114,303,24,322,25,304,305,306,26,27,115,307,308,309,450,310,28,29,311,312,313,116,314,117,118,315,316],"tindex":"3b426f18-db00-11e4-8e61-e59a326a2a1a","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[343,451,370,452,345,373,398,376,377,453,346,454,380,455],"tindex":"3b426f19-db00-11e4-8e61-452cbb7160d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[0,1,2,193,194,3,4,5,6,7,8,9,425,426,10,11,12,13,14,15,16,264,265,17,18,19,20,21,22,292,23,302,303,24,25,26,27,28,29],"tindex":"3b426f1a-db00-11e4-8e61-49255ddd2a0e","variableMapping":{"red":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[],"tindex":"3b426f1b-db00-11e4-8e61-17c7afc18cdc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"3b426f1c-db00-11e4-8e61-c552319bf005","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"3b426f1d-db00-11e4-8e61-9d5224a97d22","variableMapping":{"bytePos":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"3b42962e-db00-11e4-8e61-f9f0cf0d1b01","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"3b42962f-db00-11e4-8e61-29bb9fa86c21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"3b429630-db00-11e4-8e61-efd1195a9310","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[30,35,39,51,456,457,390],"tindex":"3b429631-db00-11e4-8e61-bb0af9c08d1d","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"3b429632-db00-11e4-8e61-1f68464495ec","variableMapping":{"bits":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"3b429633-db00-11e4-8e61-bb0e8cb7e94b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-2},{"failures":[458],"tindex":"3b42bd44-db00-11e4-8e61-2bdc6f53b059","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"3b42bd45-db00-11e4-8e61-39b40d7f22dd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":310,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":136,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":110,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":417,"com.graphhopper.reader.OSMReaderTest.testFerry":50,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":167,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":93,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":31,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":156,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":264,"com.graphhopper.coll.CompressedArrayTest.testCompress":328,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":378,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":144,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":352,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":87,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":210,"com.graphhopper.util.AngleCalcTest.testOrientation":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":149,"com.graphhopper.GraphHopperTest.testPrepare":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":438,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":182,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":197,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":325,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":160,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":293,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":211,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":175,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":346,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":126,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":96,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":99,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":335,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":152,"com.graphhopper.GraphHopperTest.testLoadOSM":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":248,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":97,"com.graphhopper.reader.OSMReaderTest.testSort":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":382,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":101,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":362,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":203,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":84,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":439,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":79,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":275,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":368,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":450,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":190,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":443,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":102,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":302,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":375,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":215,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":209,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":424,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":123,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":23,"com.graphhopper.coll.OSMIDMapTest.testGetLong":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":122,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":257,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":305,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":111,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":26,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":155,"com.graphhopper.coll.CompressedArrayTest.testCompress2":327,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":345,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":103,"com.graphhopper.GraphHopperAPITest.testLoad":157,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":281,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":194,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":2,"com.graphhopper.storage.LevelGraphStorageTest.testClone":296,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":383,"com.graphhopper.reader.OSMReaderTest.testBarriers":54,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":208,"com.graphhopper.util.GHUtilityTest.testCopy":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":420,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":223,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":396,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":412,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":359,"com.graphhopper.routing.PathTest.testFindInstruction":72,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":16,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":162,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":457,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":314,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":225,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":204,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":195,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":146,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":321,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":298,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":421,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":286,"com.graphhopper.util.InstructionListTest.testWayList2":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":435,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":249,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":206,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":388,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":342,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":69,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":85,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":300,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":265,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":124,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":185,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":55,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":83,"com.graphhopper.coll.OSMIDMapTest.testGet":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":263,"com.graphhopper.routing.PathBidirRefTest.testExtract":179,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":390,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":66,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":115,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":219,"com.graphhopper.storage.RAMDataAccessTest.testCopy":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":376,"com.graphhopper.storage.RAMDataAccessTest.testSegments":358,"com.graphhopper.util.GHUtilityTest.testSort2":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":133,"com.graphhopper.reader.OSMReaderTest.testMain":52,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":19,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":220,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":309,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":445,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":114,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":25,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":315,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":76,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":271,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":343,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":306,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":62,"com.graphhopper.storage.StorablePropertiesTest.testStore":109,"com.graphhopper.storage.GraphHopperStorageTest.testClone":187,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":403,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":108,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":409,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":287,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":397,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":422,"com.graphhopper.routing.PathTest.testTime":406,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":395,"com.graphhopper.util.BitUtilLittleTest.testToFloat":349,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":117,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":297,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":13,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":308,"com.graphhopper.util.GHUtilityTest.testSortDirected":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":372,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":366,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":75,"com.graphhopper.GraphHopperTest.testFootOnly":39,"com.graphhopper.util.BitUtilLittleTest.testToInt":350,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":339,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":428,"com.graphhopper.search.NameIndexTest.testCreate":49,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":357,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":73,"com.graphhopper.routing.QueryGraphTest.testOneWay":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":416,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":95,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":329,"com.graphhopper.reader.OSMReaderTest.testWithBounds":61,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":10,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":276,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":431,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":294,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":449,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":371,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":270,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":266,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":86,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":119,"com.graphhopper.util.BitUtilLittleTest.testToBitString":348,"com.graphhopper.util.InstructionListTest.testWayList":42,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":320,"com.graphhopper.GraphHopperAPITest.testDisconnected179":158,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":423,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":447,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":418,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":171,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":441,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":34,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":189,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":232,"com.graphhopper.routing.util.EncodedValueTest.testSwap":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":150,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":200,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":183,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":116,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":392,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":326,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":411,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":407,"com.graphhopper.routing.PathTest.testWayList":71,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":426,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":458,"com.graphhopper.coll.OSMIDMapTest.testGet2":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":140,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":311,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":269,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":196,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":216,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":217,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":355,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":367,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":218,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":387,"com.graphhopper.util.GHUtilityTest.testSort":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":434,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":337,"com.graphhopper.search.NameIndexTest.testPut":47,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":212,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":227,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":234,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":237,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":451,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":235,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":444,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":391,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":267,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":0,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":285,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":254,"com.graphhopper.routing.PathTest.testFound":405,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":40,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":344,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":313,"com.graphhopper.util.AngleCalcTest.testAtan2":154,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":289,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":17,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":404,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":48,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":98,"com.graphhopper.util.InstructionListTest.testEmptyList":161,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":131,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":379,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":385,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":134,"com.graphhopper.reader.PrinctonReaderTest.testRead":170,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":94,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":262,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":68,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":351,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":268,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":394,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":341,"com.graphhopper.reader.OSMReaderTest.testFoot":51,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":82,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":433,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":246,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":319,"com.graphhopper.reader.OSMReaderTest.testOneWay":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":247,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":3,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":8,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":274,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":365,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":317,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":145,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":238,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":364,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":172,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":427,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":177,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":408,"com.graphhopper.routing.PathBidirRefTest.testExtract2":180,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":283,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":181,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":324,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":46,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":201,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":415,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":398,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":442,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":456,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":243,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":202,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":299,"com.graphhopper.GraphHopperTest.testFootAndCar":35,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":88,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":373,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":222,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":419,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":258,"com.graphhopper.GraphHopperTest.testPrepareOnly":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":137,"com.graphhopper.GraphHopperTest.testVia":32,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":9,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":59,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":291,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":44,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":410,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":429,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":369,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":312,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":29,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":100}}]
