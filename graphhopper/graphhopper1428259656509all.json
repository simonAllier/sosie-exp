[{"failures":[],"tindex":"3da6ecb3-dbc4-11e4-aa7d-3f5b28878abf","variableMapping":{"edgeId":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-2},{"failures":[],"tindex":"3da6ecb4-dbc4-11e4-aa7d-7702d3038567","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"3da6ecb5-dbc4-11e4-aa7d-69c0b3317e3b","variableMapping":{"numTiles":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[26,0,27,1,2,28,3,29,4,5,30,6,31,7,8,32,9,33,10,11,12,34,13,14,35,15,36,16,17,18,37,19,20,38,21,39,22,23,24,40,25],"tindex":"3da713c6-dbc4-11e4-aa7d-ad19308cff30","variableMapping":{"entries":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"3da713c7-dbc4-11e4-aa7d-bd55980498df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,26,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"3da713c8-dbc4-11e4-aa7d-1588712aab21","variableMapping":{"name":"name","properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:183","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.remove(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"3da713c9-dbc4-11e4-aa7d-7d9030b0c796","variableMapping":{"shift":"lastTime","tmpValue":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"3da713ca-dbc4-11e4-aa7d-27ff8ab6f5c0","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"finishedFrom","v":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":0},{"failures":[91,100,119,136],"tindex":"3da713cb-dbc4-11e4-aa7d-6320bfbcb344","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:457","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"3da713cc-dbc4-11e4-aa7d-17d33e60086c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[145,146,147,148,149,150,151,152,153],"tindex":"3da713cd-dbc4-11e4-aa7d-671960880bda","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"3da713ce-dbc4-11e4-aa7d-9d23761206c8","variableMapping":{"this":"this","speed":"speed","encoded":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:90","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":0},{"failures":[101],"tindex":"3da713cf-dbc4-11e4-aa7d-6b1c6935ce11","variableMapping":{"encoderList":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"3da761f0-dbc4-11e4-aa7d-1b39be6dd9b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,70,167,168,169,170,0,171,172,173,174,175,1,2,176,28,177,178,179,3,29,180,181,182,4,5,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,6,247,248,249,250,251,7,8,252,32,253,254,255,9,33,256,257,258,10,11,259,260,261,262,263,264,265,266,267,268,269,12,270,271,272,273,274,13,14,275,35,276,277,278,15,36,279,280,281,16,17,282,283,284,285,286,287,288,289,290,291,292,293,294,18,295,296,297,298,299,19,20,300,38,301,302,303,21,39,304,305,306,22,23,307,308,309,310,311,312,313,314,24,315,40,25,316,317,318,319,320,145,321,322,146,147,323,324,325,326,327,328,329,330,148,331,149,332,150,333,334,335,336,337,338,339,340,341,152,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"tindex":"3da7b011-dbc4-11e4-aa7d-b923f5e05ee6","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"3da7b012-dbc4-11e4-aa7d-bb273bf044d8","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"3da7b013-dbc4-11e4-aa7d-0ff4b61a5278","variableMapping":{"red":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":0},{"failures":[],"tindex":"3da7b014-dbc4-11e4-aa7d-938b26e020f1","variableMapping":{"line":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"3da7b015-dbc4-11e4-aa7d-299ed89d33a6","variableMapping":{"high":"encoded","highKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3da7d726-dbc4-11e4-aa7d-23f53acb63b4","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"ele","speed":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[357],"tindex":"3da7d727-dbc4-11e4-aa7d-895554f1c717","variableMapping":{"factor":"incEleSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[320,358,326,359,334],"tindex":"3da7d728-dbc4-11e4-aa7d-65340114c844","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,62,63,64,65,26,71,360,361,72,362,363,73,74,364,75,76,77,78,79,80,81,365,82,83,84,366,367,368,369,370,371,372],"tindex":"3da7d729-dbc4-11e4-aa7d-dd6337047811","variableMapping":{"shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"3da7d72a-dbc4-11e4-aa7d-31689b86b7c9","variableMapping":{"turnCostIndex":"skippedEdge1","NO_TURN_ENTRY":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[],"tindex":"3da7d72b-dbc4-11e4-aa7d-fd8724827126","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[61,87,88,373,93,97,101,374,106,109,375,376,111,113,115,377,121,125,128,130,132,378,138,142,143,144],"tindex":"3da7d72c-dbc4-11e4-aa7d-e1925e33bc1f","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[],"tindex":"3da7d72d-dbc4-11e4-aa7d-6dbd7a802ae2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[],"tindex":"3da7d72e-dbc4-11e4-aa7d-172c39daaaf0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"3da8254f-dbc4-11e4-aa7d-014322616791","variableMapping":{"high":"roundaboutBit","len":"forwardBit","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,154,155,52,53,54,55,56,57,58,59,60,62,63,64,65,26,156,379,157,158,159,160,161,162,163,380,164,165,166,70,167,168,381,182,189,190,191,192,193,194,195,196,197,198,199,200,382,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,383,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,384,385,386,387,388,389,390,391,392,393,394,240,395,396,241,397,398,30,242,243,399,400,244,245,246,6,247,248,249,401,250,402,251,31,403,7,8,252,32,253,254,255,9,33,404,405,256,257,406,258,10,11,259,407,260,408,409,261,262,263,264,265,266,410,411,267,268,269,12,270,271,272,412,273,413,274,34,414,13,14,275,35,276,277,278,15,36,415,416,279,280,417,281,16,17,282,418,283,419,420,284,285,286,287,288,290,291,421,422,292,293,294,18,295,296,297,423,298,424,299,37,425,19,20,300,38,301,302,303,21,39,426,427,304,305,428,306,22,23,307,429,308,430,431,309,310,311,312,313,314,361,24,315,40,25,316,317,126,357,318,319,432,433,434,435,320,358,145,321,322,146,147,323,324,325,326,327,359,436,328,329,330,148,331,149,332,150,333,334,151,335,336,337,338,339,340,341,152,153,342,343,344,345,346,346,347,347,437,437,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356],"tindex":"3da82550-dbc4-11e4-aa7d-0724ca50df84","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"3da82551-dbc4-11e4-aa7d-676345aa4130","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[438,439,440,441,344],"tindex":"3da82552-dbc4-11e4-aa7d-1544bea77d66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[53,59,26,87,88,373,93,97,101,374,106,109,111,113,115,377,121,125,128,130,132,378,138,142,143,144,442],"tindex":"3da82553-dbc4-11e4-aa7d-01af8ace26af","variableMapping":{"len":"value","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"3da84c64-dbc4-11e4-aa7d-0ddda3fb84d9","variableMapping":{"lat":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"3da84c65-dbc4-11e4-aa7d-51adbb1008c9","variableMapping":{"foundIndex":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"3da84c66-dbc4-11e4-aa7d-d5d1ed62599d","variableMapping":{"incEleSum":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","incDist2DSum":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"3da84c67-dbc4-11e4-aa7d-4790237861b0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"3da84c68-dbc4-11e4-aa7d-7f02467569b2","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"3da84c69-dbc4-11e4-aa7d-7b4dd14ef548","variableMapping":{"id":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-1},{"failures":[78],"tindex":"3da84c6a-dbc4-11e4-aa7d-3bafa65ba2a4","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"3da84c6b-dbc4-11e4-aa7d-818337a9781d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[43,44,45,46,47,49,53,54,56,59,60,62,63,64,26,70,79,84],"tindex":"3da84c6c-dbc4-11e4-aa7d-b75ee4549534","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"3da84c6d-dbc4-11e4-aa7d-7d8133eef966","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"3da8737e-dbc4-11e4-aa7d-376eb90a2772","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[240,396,335,152],"tindex":"3da8737f-dbc4-11e4-aa7d-0b2c9a578808","variableMapping":{"high":"scDirMask","highKey":"dir","key":"scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"3da87380-dbc4-11e4-aa7d-a7d6842139bc","variableMapping":{"i":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[24,316,317],"tindex":"3da87381-dbc4-11e4-aa7d-198b112f2a41","variableMapping":{"segmentSizeInBytes":"nodes","index":"nodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[357],"tindex":"3da87382-dbc4-11e4-aa7d-99fda1bea2bc","variableMapping":{"weightApproximation":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"3da87383-dbc4-11e4-aa7d-5f178f9b07d9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"3da87384-dbc4-11e4-aa7d-9f9fab76be24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:514","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, int, boolean);\n}"},"status":-2},{"failures":[],"tindex":"3da87385-dbc4-11e4-aa7d-2d80f33e8bd8","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[],"tindex":"3da87386-dbc4-11e4-aa7d-dbad413f5d3d","variableMapping":{"edgeId":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","lastEdgeIndex":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:169","type":"CtReturnImpl","sourcecode":"return (int) > (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"3da87387-dbc4-11e4-aa7d-b93027c45204","variableMapping":{"val":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:139","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return \"\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"3da87388-dbc4-11e4-aa7d-ed1bb4b09d4c","variableMapping":{"pointIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","index":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-2},{"failures":[],"tindex":"3da87389-dbc4-11e4-aa7d-e3cf1b235627","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[41,41,42,43,44,45,46,47,443,48,49,50,51,51,444,169,170,0,171,172,172,173,445,174,446,175,27,381,381,1,2,176,176,28,177,178,179,3,29,447,448,180,181,449,182,182,4,5,183,450,184,451,452,185,186,187,188,190,191,192,453,193,194,196,197,198,454,199,200,201,202,203,204,455,205,216,217,218,219,456,220,221,234,235,236,237,457,238,239,398,242,243,243,399,399,400,244,458,245,246,6,247,248,248,249,401,250,402,251,31,403,403,7,8,252,252,32,253,254,255,9,33,404,405,256,257,406,258,258,10,11,259,407,260,408,409,261,262,263,264,265,266,266,410,410,411,267,459,268,269,12,270,271,271,272,412,273,413,274,34,414,414,13,14,275,275,35,276,277,278,15,36,415,416,279,280,417,281,281,16,17,282,418,283,419,420,284,285,286,287,288,288,289,290,291,291,421,421,422,292,460,293,294,18,295,296,296,297,423,298,424,299,37,425,425,19,20,300,300,38,301,302,303,21,39,426,427,304,305,428,306,306,22,23,307,429,308,430,431,309,310,311,312,461,462,463,313,314,432,433,346,347,437,437,348,349,350,351,352,353,354,355,356],"tindex":"3da8999a-dbc4-11e4-aa7d-016622365d8d","variableMapping":{"this":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:230","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[],"tindex":"3da8999b-dbc4-11e4-aa7d-a9e6e548d523","variableMapping":{"maxLatTmp":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","minLatTmp":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","lat":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","hash":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"3da8999c-dbc4-11e4-aa7d-b1c6b2aa2e2d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[72,74],"tindex":"3da8999d-dbc4-11e4-aa7d-a1d1ba113e38","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"sidewalks","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[440,441],"tindex":"3da8999e-dbc4-11e4-aa7d-6d47f3e19a75","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"3da8999f-dbc4-11e4-aa7d-d77c74df2bbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[240,152,344],"tindex":"3da899a0-dbc4-11e4-aa7d-ad5232bab98d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[87,88,93,101,106,113,115,121,130,132,138],"tindex":"3da899a1-dbc4-11e4-aa7d-17afa80041af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[],"tindex":"3da899a2-dbc4-11e4-aa7d-1f74d797939b","variableMapping":{"newUniqueOsmId":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"3da899a3-dbc4-11e4-aa7d-a7ccc9713c58","variableMapping":{"baseUrl":"s","fileDetails":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:254","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[464,99,100,101,102,103,104,374,105,465,466,106,107,108,109],"tindex":"3da899a4-dbc4-11e4-aa7d-f98ca57fbc11","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"3da899a5-dbc4-11e4-aa7d-4dde753d1f1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[467,468,206,212,214,215,469,224,230,232,233,470,471,472,473,474,475,476,477],"tindex":"3da899a6-dbc4-11e4-aa7d-e94c11253d35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,26,172,182,478,479,201,202,203,204,455,205,208,209,210,211,213,216,217,218,219,456,220,221,222,223,226,227,228,229,231,234,235,236,237,457,238,239,386,390,480,481,482,483,398,243,399,248,266,410,271,281,288,291,421,296,306,484,485,313,314,325,436,328,148],"tindex":"3da8c0b7-dbc4-11e4-aa7d-b1525b75b245","variableMapping":{"red":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"3da8c0b8-dbc4-11e4-aa7d-8dda352a12e3","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"3da8c0b9-dbc4-11e4-aa7d-37ba65edfdc6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,154,155,52,53,54,55,56,57,58,59,60,62,63,64,65,26,156,379,157,158,159,160,161,162,163,380,164,165,166,70,167,168,381,182,189,190,191,192,193,194,195,196,197,198,199,200,382,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,383,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,384,385,386,387,388,389,390,391,392,393,394,240,395,396,241,397,398,30,242,243,399,400,244,245,246,6,247,248,249,401,250,402,251,31,403,7,8,252,32,253,254,255,9,33,404,405,256,257,406,258,10,11,259,407,260,408,409,261,262,263,264,265,266,410,411,267,268,269,12,270,271,272,412,273,413,274,34,414,13,14,275,35,276,277,278,15,36,415,416,279,280,417,281,16,17,282,418,283,419,420,284,285,286,287,288,290,291,421,422,292,293,294,18,295,296,297,423,298,424,299,37,425,19,20,300,38,301,302,303,21,39,426,427,304,305,428,306,22,23,307,429,308,430,431,309,310,311,312,313,314,361,24,315,40,25,316,317,126,357,318,319,432,433,434,435,320,358,145,321,322,146,147,323,324,325,326,327,359,436,328,329,330,148,331,149,332,150,333,334,151,335,336,337,338,339,340,341,152,153,342,343,344,345,346,346,347,347,437,437,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356],"tindex":"3da8c0ba-dbc4-11e4-aa7d-a3204c8b14a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[101],"tindex":"3da8c0bb-dbc4-11e4-aa7d-4d827d9817f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[486],"tindex":"3da8c0bc-dbc4-11e4-aa7d-935821959c01","variableMapping":{"versionHint":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":-1},{"failures":[],"tindex":"3da8c0bd-dbc4-11e4-aa7d-cbb727bc5d62","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"key","id":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[],"tindex":"3da8c0be-dbc4-11e4-aa7d-bb0f73ef917a","variableMapping":{"size":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3da8c0bf-dbc4-11e4-aa7d-e701d9ea7dc1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[],"tindex":"3da8c0c0-dbc4-11e4-aa7d-03826744c738","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,154,155,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,26,156,379,157,158,161,380,164,165,166,70,169,170,0,171,172,173,445,174,446,175,27,381,1,2,176,28,177,178,179,3,29,447,448,180,181,449,182,4,5,183,450,184,451,452,185,186,187,188,194,200,221,223,239,240,395,396,241,397,398,30,242,243,399,400,244,458,245,246,6,247,248,249,401,250,402,251,31,403,7,8,252,32,253,254,255,9,33,404,405,256,257,406,258,10,11,259,407,260,408,409,261,262,263,264,265,266,410,411,267,459,268,269,12,270,271,272,412,273,413,274,34,414,13,14,275,35,276,277,278,15,36,415,416,279,280,417,281,16,17,282,418,283,419,420,284,285,286,287,288,289,290,291,421,422,292,460,293,294,18,295,296,297,423,298,424,299,37,425,19,20,300,38,301,302,303,21,39,426,427,304,305,428,306,22,23,307,429,308,430,431,309,310,311,312,313,314,71,360,361,72,362,363,73,74,364,24,315,40,25,316,317,75,76,77,78,79,80,81,365,82,83,84,366,367,368,369,370,85,86,87,88,89,90,373,91,92,487,488,93,94,95,96,97,98,489,490,464,99,100,101,102,103,104,374,105,465,466,106,107,108,109,491,110,111,112,113,114,115,492,116,117,118,377,119,120,493,494,121,122,123,124,125,126,357,495,127,128,129,130,131,132,496,133,134,135,378,136,137,497,498,138,139,140,141,142,371,143,372,499,144,500,442,318,319,432,433,434,435,320,358,145,321,322,146,147,323,324,325,326,327,359,436,328,329,330,148,331,149,332,150,333,334,151,335,501,336,337,338,339,340,341,152,153,342,343,344,345,349,352],"tindex":"3da8e7d1-dbc4-11e4-aa7d-c347e58c68f5","variableMapping":{"encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[87,88,93,101,106,113,115,121,130,132,138],"tindex":"3da8e7d2-dbc4-11e4-aa7d-3b500cd0ebd6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[],"tindex":"3da8e7d3-dbc4-11e4-aa7d-bbfb89f094ae","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"3da8e7d4-dbc4-11e4-aa7d-5dfcde31fc54","variableMapping":{"edgeId":"nodeId","nodeId":"nodeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-2},{"failures":[],"tindex":"3da8e7d5-dbc4-11e4-aa7d-c331b7d1cbb8","variableMapping":{"nodeFlags":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-2},{"failures":[96,102,124,141],"tindex":"3da8e7d6-dbc4-11e4-aa7d-43172c391c2d","variableMapping":{"size":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"3da8e7d7-dbc4-11e4-aa7d-ddcc6879d705","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[43,44,45,46,47,49,50,52,53,54,56,59,60,62,63,64,65,26,70,143,144,442],"tindex":"3da8e7d8-dbc4-11e4-aa7d-ef43948e7adf","variableMapping":{"time":"includeWay"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[71,76,89,103,117,134],"tindex":"3da8e7d9-dbc4-11e4-aa7d-d921a133452f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[0,2,28,3,29,4,5,6,8,32,9,33,10,11,12,14,35,15,36,16,17,18,20,38,21,39,22,23,24,25],"tindex":"3da8e7da-dbc4-11e4-aa7d-ed2d09daa96a","variableMapping":{"red":"high","green":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"3da8e7db-dbc4-11e4-aa7d-2937758716fe","variableMapping":{"scDirMask":"defaultL","flags":"defaultL","dir":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"3da8e7dc-dbc4-11e4-aa7d-a1cd6c59d988","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","speed":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[502],"tindex":"3da8e7dd-dbc4-11e4-aa7d-d9bb38d024bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[],"tindex":"3da8e7de-dbc4-11e4-aa7d-4f5b8218aca4","variableMapping":{"edgeState":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[42,43,44,45,46,47,48,49,51,53,54,55,56,58,59,60,62,63,64,65,66,26,75,78,80,81,82,84],"tindex":"3da90eef-dbc4-11e4-aa7d-373936c716cc","variableMapping":{"tt":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[41,43,44,47,48,50,379,159,161,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,396,241,397,242,243,244,245,246,6,247,248,249,401,250,402,251,7,8,252,32,253,254,255,9,33,404,405,256,257,258,10,11,259,407,260,408,409,261,262,263,264,320,358,145,321,322,146,147,323,324,325,326,327,359,436,328,329,330,148,331,149,332,150,333,334,151,335,336,337,338,339,340,341,152,153,342,343,344,345],"tindex":"3da93600-dbc4-11e4-aa7d-fbf4e0c67797","variableMapping":{"currentBucket":"a","retBucket":"b","currentIndex":"b","bucketSize":"a"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-1},{"failures":[503],"tindex":"3da93601-dbc4-11e4-aa7d-eb536507635c","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"defaultD","java.lang.Double.POSITIVE_INFINITY":"defaultD","weight":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[],"tindex":"3da93602-dbc4-11e4-aa7d-3ba2057c64cd","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,154,155,52,53,54,55,56,57,58,59,60,62,63,64,65,26,156,379,157,158,159,160,161,162,163,380,164,165,166,70,167,168,169,170,0,171,172,173,445,174,446,175,27,381,1,2,176,28,177,178,179,3,29,447,448,180,181,449,182,4,5,183,450,184,451,452,185,186,187,188,189,190,191,192,453,193,194,195,196,197,198,454,199,200,382,201,202,203,204,455,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,456,220,221,222,223,383,224,225,226,227,228,229,230,231,232,233,234,235,236,237,457,238,239,240,395,396,241,397,398,30,242,243,399,400,244,245,246,6,247,248,249,401,250,402,251,31,403,7,8,252,32,253,254,255,9,33,404,405,256,257,406,258,10,11,259,407,260,408,409,261,262,263,264,265,266,410,411,267,268,269,12,270,271,272,412,273,413,274,34,414,13,14,275,35,276,277,278,15,36,415,416,279,280,417,281,16,17,282,418,283,419,420,284,285,286,287,288,289,290,291,421,422,292,293,294,18,295,296,297,423,298,424,299,37,425,19,20,300,38,301,302,303,21,39,426,427,304,305,428,306,22,23,307,429,308,430,431,309,310,311,312,463,313,314,361,24,315,40,25,316,317,126,357,318,319,432,433,434,435,320,358,145,321,322,146,147,323,324,325,326,327,359,436,328,329,330,148,331,149,332,150,333,334,151,335,336,337,338,339,340,341,152,153,342,343,344,345,346,346,347,347,437,437,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356],"tindex":"3da93603-dbc4-11e4-aa7d-618ba36a553c","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[41,42,43,44,45,46,47,48,49,50,51,154,155,52,53,54,55,56,57,58,59,60,62,63,64,65,26,156,379,157,158,159,160,161,162,163,380,164,165,166,70,167,168,381,182,189,190,191,192,193,194,195,196,197,198,199,200,382,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,383,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,384,385,386,387,388,389,391,392,393,394,240,395,396,241,397,398,30,242,243,399,400,244,245,246,6,247,248,249,401,250,402,251,31,403,7,8,252,32,253,254,255,9,33,404,405,256,257,406,258,10,11,259,407,260,408,409,261,262,263,264,265,266,410,411,267,268,269,12,270,271,272,412,273,413,274,34,414,13,14,275,35,276,277,278,15,36,415,416,279,280,417,281,16,17,282,418,283,419,420,284,285,286,287,288,290,291,421,422,292,293,294,18,295,296,297,423,298,424,299,37,425,19,20,300,38,301,302,303,21,39,426,427,304,305,428,306,22,23,307,429,308,430,431,309,310,311,312,313,314,361,24,315,40,25,316,317,126,357,318,319,432,433,434,435,320,358,145,321,322,146,147,323,324,325,326,327,359,436,328,329,330,148,331,149,332,150,333,334,151,335,336,337,338,339,340,341,152,153,342,343,344,345,346,346,347,347,437,437,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356],"tindex":"3da95d14-dbc4-11e4-aa7d-47a078dc889c","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"3da95d15-dbc4-11e4-aa7d-bd7a0fbc2fc3","variableMapping":{"newUniqueOsmId":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[502],"tindex":"3da95d16-dbc4-11e4-aa7d-698e306a21af","variableMapping":{"com.graphhopper.util.Constants.VERSION":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:85","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":331,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":347,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":98,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":398,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":170,"com.graphhopper.reader.OSMReaderTest.testFerry":52,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":157,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":158,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":114,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":102,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":227,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":42,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":37,"com.graphhopper.coll.CompressedArrayTest.testCompress":468,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":466,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":285,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":447,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":414,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":383,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":342,"com.graphhopper.GraphHopperTest.testPrepare":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":452,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":151,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":278,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":441,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":112,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":326,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":382,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":106,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":168,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":244,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":224,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":110,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":145,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":209,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":310,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":115,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":288,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":475,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":245,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":440,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":345,"com.graphhopper.GraphHopperTest.testLoadOSM":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":216,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":388,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":210,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":500,"com.graphhopper.reader.OSMReaderTest.testSort":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":40,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":421,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":418,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":266,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":185,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":352,"com.graphhopper.storage.RAMDataAccessTest.testHeader":481,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":156,"com.graphhopper.storage.MMapDataAccessTest.testHeader":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":308,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":406,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":483,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":273,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":395,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":289,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":297,"com.graphhopper.reader.OSMNodeTest.testSetTags":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":130,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":97,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":94,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":231,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":35,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":229,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":146,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":300,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":295,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":254,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":243,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":9,"com.graphhopper.coll.CompressedArrayTest.testCompress2":467,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":36,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":425,"com.graphhopper.GraphHopperAPITest.testLoad":313,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":458,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":71,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":13,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":12,"com.graphhopper.storage.LevelGraphStorageTest.testClone":248,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":486,"com.graphhopper.reader.OSMReaderTest.testBarriers":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":496,"com.graphhopper.util.GHUtilityTest.testCopy":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":323,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":487,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":108,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":374,"com.graphhopper.routing.PathTest.testFindInstruction":435,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":18,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":438,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":73,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":379,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":129,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":196,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":283,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":276,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":38,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":497,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":499,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":401,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":445,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":394,"com.graphhopper.util.InstructionListTest.testWayList2":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":217,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":423,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":113,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":463,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":309,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":126,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":410,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":402,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":19,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":147,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":269,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":57,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":478,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":299,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":482,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":74,"com.graphhopper.routing.PathBidirRefTest.testExtract":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":118,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":235,"com.graphhopper.storage.RAMDataAccessTest.testCopy":480,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":117,"com.graphhopper.util.GHUtilityTest.testSort2":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":329,"com.graphhopper.reader.OSMReaderTest.testMain":54,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":399,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":377,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":476,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":78,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":422,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":403,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":32,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":263,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":376,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":7,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":127,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":386,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":255,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":65,"com.graphhopper.storage.StorablePropertiesTest.testStore":461,"com.graphhopper.storage.GraphHopperStorageTest.testClone":271,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":450,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":82,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":275,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":240,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":174,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":241,"com.graphhopper.routing.PathTest.testTime":433,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":92,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":261,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":249,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":370,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":455,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":29,"com.graphhopper.reader.OSMReaderTest.testRelation":61,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":256,"com.graphhopper.util.GHUtilityTest.testSortDirected":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":139,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":348,"com.graphhopper.GraphHopperTest.testFootOnly":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":81,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":202,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":230,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":321,"com.graphhopper.reader.OSMElementTest.testSetTags":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":495,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":177,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":346,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":390,"com.graphhopper.routing.QueryGraphTest.testOneWay":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":456,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":208,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":470,"com.graphhopper.reader.OSMReaderTest.testWithBounds":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":315,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":431,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":448,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":143,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":246,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":400,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":498,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":109,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":304,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":194,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":301,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":268,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":358,"com.graphhopper.util.InstructionListTest.testWayList":165,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":116,"com.graphhopper.GraphHopperAPITest.testDisconnected179":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":446,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":171,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":136,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":155,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":3,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":494,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":45,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":412,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":203,"com.graphhopper.routing.util.EncodedValueTest.testSwap":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":343,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":491,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":366,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":121,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":333,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":459,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":457,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":389,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":125,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":265,"com.graphhopper.routing.PathTest.testWayList":434,"com.graphhopper.storage.MMapDataAccessTest.testCopy":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":186,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":1,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":80,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":502,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":334,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":479,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":427,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":493,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":277,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":360,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":232,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":134,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":439,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":87,"com.graphhopper.util.GHUtilityTest.testSort":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":449,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":120,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":460,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":198,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":225,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":205,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":191,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":131,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":351,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":357,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":290,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":89,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":490,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":302,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":24,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":393,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":182,"com.graphhopper.routing.PathTest.testFound":432,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":51,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":442,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":260,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":503,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":396,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":119,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":20,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":381,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":274,"com.graphhopper.util.InstructionListTest.testEmptyList":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":488,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":76,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":107,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":330,"com.graphhopper.reader.PrinctonReaderTest.testRead":154,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":419,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":228,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":27,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":169,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":303,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":465,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":372,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":128,"com.graphhopper.reader.OSMReaderTest.testFoot":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":181,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":356,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":214,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":262,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":474,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":464,"com.graphhopper.reader.OSMReaderTest.testOneWay":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":215,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":14,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":17,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":429,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":105,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":416,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":179,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":339,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":469,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":336,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":344,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":337,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":176,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":437,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":66,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":411,"com.graphhopper.routing.PathBidirRefTest.testExtract2":319,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":391,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":320,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":93,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":218,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":281,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":453,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":96,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":59,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":188,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":211,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":282,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":250,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":367,"com.graphhopper.GraphHopperTest.testFootAndCar":46,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":415,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":88,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":172,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":371,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":368,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":296,"com.graphhopper.storage.StorablePropertiesTest.testLoad":462,"com.graphhopper.GraphHopperTest.testPrepareOnly":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":149,"com.graphhopper.GraphHopperTest.testVia":43,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":0,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":62,"com.graphhopper.reader.OSMElementTest.testHasTag":67,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":397,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":70,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":417,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":362,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":178,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":75,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":407,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":11,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":291}}]
