[{"failures":[],"tindex":"4026ec39-da57-11e4-8bfc-49dc5c2cc14e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"4029f97a-da57-11e4-8bfc-37053b29b4a9","variableMapping":{"size":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"4029f97b-da57-11e4-8bfc-f927a60bbc5b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"4029f97c-da57-11e4-8bfc-65e20cc20687","variableMapping":{"i":"code","to":"code","lonSize":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"4029f97d-da57-11e4-8bfc-c5f4abf68123","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"4029f97e-da57-11e4-8bfc-0b0800319444","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[7],"tindex":"4029f97f-da57-11e4-8bfc-19751b5532a9","variableMapping":{"oldValueIndex":"directionBitMask","lastKey":"backwardBit","key":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,7,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"4029f980-da57-11e4-8bfc-b72ab6f4df39","variableMapping":{"tt":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"402a2091-da57-11e4-8bfc-2762945e1653","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[],"tindex":"402a2092-da57-11e4-8bfc-57dba165dff0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[35,36],"tindex":"402a2093-da57-11e4-8bfc-3df66a39a720","variableMapping":{"endIndexPlusOne":"removed","frontIndex":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[9,37,26,38,29,32,39,40,41,42,43,44,45],"tindex":"402a2094-da57-11e4-8bfc-4d67c7d499ce","variableMapping":{"intKey":"kmInteger","str":"str","key":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:120","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"402a2095-da57-11e4-8bfc-b7883d4f54a9","variableMapping":{"hasOther":"defaultB","hasRel":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[46],"tindex":"402a2096-da57-11e4-8bfc-dffb1fad5c76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[47,48,49,50],"tindex":"402a2097-da57-11e4-8bfc-e14e03e7e9e3","variableMapping":{"nanoTime":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"402a2098-da57-11e4-8bfc-33affaa81d2d","variableMapping":{"latSize":"edgeId","size":"edgeId","lonSize":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"402a2099-da57-11e4-8bfc-7905d6398c73","variableMapping":{"cap":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":0},{"failures":[51,52],"tindex":"402a209a-da57-11e4-8bfc-794987dcb775","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[7,53,54,55,56],"tindex":"402a209b-da57-11e4-8bfc-d79c74fc35c1","variableMapping":{"high":"turnRestrictionBit","highKey":"turnRestrictionBit","key":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[57],"tindex":"402a209c-da57-11e4-8bfc-e93b452c6837","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"402a209d-da57-11e4-8bfc-69802412995a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"402a209e-da57-11e4-8bfc-8d62c2512ce3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[9,10,11,12,13,15,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"402a209f-da57-11e4-8bfc-0760c9cc3b71","variableMapping":{"synched":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:74","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[89,8,9,10,13,14,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,79,80,81,82,83,85,91,86,92,93,94,88],"tindex":"402a47b0-da57-11e4-8bfc-ddbef6100f1a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[9,10,11,12,13,15,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,90,79,80,81,82,83,84,85,86,87,88],"tindex":"402a47b1-da57-11e4-8bfc-ef6bfb34a145","variableMapping":{"min":"to","tmpSize":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[89,8,9,10,11,12,13,14,15,58,16,95,17,18,19,20,96,21,7,22,23,24,25,26,27,28,29,97,32,33,34,98,1,99,100,2,101,102,103,104,40,105,106,3,107,108,109,110,111,112,113,114,115,116,117,41,118,119,120,121,4,122,123,124,125,42,126,127,5,128,129,6,130,131,132,133,45,134,135],"tindex":"402a47b2-da57-11e4-8bfc-534793b32949","variableMapping":{"radiusInMeter":"maxSpeed","lon":"maxSpeed","lat":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"402a47b3-da57-11e4-8bfc-c79267716796","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"402a47b4-da57-11e4-8bfc-13e1312c4a8c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-2},{"failures":[],"tindex":"402a47b5-da57-11e4-8bfc-0faa0918bf81","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":0},{"failures":[],"tindex":"402a47b6-da57-11e4-8bfc-87edc30aa41a","variableMapping":{"edgeTo":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","edgeFrom":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[136],"tindex":"402a47b7-da57-11e4-8bfc-9922273a6a1e","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"402a47b8-da57-11e4-8bfc-b146c5d609de","variableMapping":{"tmp":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"402a47b9-da57-11e4-8bfc-c376353c893e","variableMapping":{"bit":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[137],"tindex":"402a47ba-da57-11e4-8bfc-5109bcce9e5b","variableMapping":{"edgeId":"biggestStart","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"biggestStart","nodeA":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"402a47bb-da57-11e4-8bfc-f96ae0ea1c67","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[138],"tindex":"402a47bc-da57-11e4-8bfc-af773cd9efda","variableMapping":{"str":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:206","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[28,139,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,52,154,155,156,157,158,159,160,161],"tindex":"402a6ecd-da57-11e4-8bfc-f9f61e8b1dcd","variableMapping":{"segmentCount":"remainingSegments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:163","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[int][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"402a6ece-da57-11e4-8bfc-cd0a0a81e377","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[89,12,58,16,95,17,18,19,96,21,22,25,26,28,108,109,110],"tindex":"402a6ecf-da57-11e4-8bfc-719923767530","variableMapping":{"turnCostIndex":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","nextTurnCostIndex":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-1},{"failures":[7,53,54,55,56],"tindex":"402a6ed0-da57-11e4-8bfc-93587308bd5d","variableMapping":{"minResolutionInMeter":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[],"tindex":"402a6ed1-da57-11e4-8bfc-5ffc2e9b3d7f","variableMapping":{"incDist2DSum":"minLat","fullDist2D":"minLat","decDist2DSum":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"402a6ed2-da57-11e4-8bfc-67bf5a1673ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"402a6ed3-da57-11e4-8bfc-33ac5a03e9f4","variableMapping":{"nodeB":"nodeA","edgeId":"nodeA","nodeA":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[4],"tindex":"402a6ed4-da57-11e4-8bfc-af6ba98a7254","variableMapping":{"str":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[89,9,10,11,12,13,14,15,58,16,162,163,164,165,166,167,168],"tindex":"402a6ed5-da57-11e4-8bfc-57e594c91981","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:45","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"status":-2},{"failures":[],"tindex":"402a6ed6-da57-11e4-8bfc-b71acd0535c2","variableMapping":{"byteCount":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[67,79,81,83,86],"tindex":"402a6ed7-da57-11e4-8bfc-cd0c8ba9108b","variableMapping":{"max":"key","tmpSize":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[],"tindex":"402a6ed8-da57-11e4-8bfc-2d1a55bf3a8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:66","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop()"},"status":-2},{"failures":[],"tindex":"402a6ed9-da57-11e4-8bfc-f132a65b1860","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"402a6eda-da57-11e4-8bfc-954b26c6068c","variableMapping":{"that":"graph","index":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:125","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[31,33,169,57,170,171,172],"tindex":"402a95eb-da57-11e4-8bfc-133a8f94bd35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[139],"tindex":"402a95ec-da57-11e4-8bfc-07aef0f23917","variableMapping":{"initLeafSize":"minNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"402a95ed-da57-11e4-8bfc-eb3267be6987","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"402a95ee-da57-11e4-8bfc-777656b19743","variableMapping":{"size":"skippedEdge1","newSize":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[61,62,80,81,83,88],"tindex":"402a95ef-da57-11e4-8bfc-611c4838ce24","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"402a95f0-da57-11e4-8bfc-f789db7e4ce6","variableMapping":{"fwdFaster":"resultOrientation","incDist2DSum":"orientation","fwdSlower":"java.lang.Math.PI","fullDist2D":"resultOrientation","restDist2D":"java.lang.Math.PI","speed":"resultOrientation","decDist2DSum":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"402a95f1-da57-11e4-8bfc-d1469b90321a","variableMapping":{"segmentsToMap":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":0},{"failures":[12,16,162,163,173,174,17,20,21,7,23,175,139,137,176,177,178],"tindex":"402a95f2-da57-11e4-8bfc-af1179ed2948","variableMapping":{"index":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[179,180,181],"tindex":"402a95f3-da57-11e4-8bfc-f3774ea64e2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"402a95f4-da57-11e4-8bfc-47a6ff76b40d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[89,8,9,10,11,12,13,14,15,58,59,182,183,184,37,185,186,167,168,187,188,17,18,20,7,22,23,24,25,28,97,189,33,190,191,46,192,193,194,35,175,137,195,196,197,198,199,200,201,202,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,79,80,81,82,83,84,203,85,204,91,205,206,86,87,92,93,94,88,207,208,209,140,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,147,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,155,261,262,263,264,265,266,267,268,269,270,271,272,273],"tindex":"402a95f5-da57-11e4-8bfc-bb788329c6c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[61,62,71,73,83],"tindex":"402a95f6-da57-11e4-8bfc-77159335a4b7","variableMapping":{"lastKey":"millis","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[14,62,68,69,70,71,72,73,74,75,76,77,78,90,80,82,83,84,203,85,204,91,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"tindex":"402abd07-da57-11e4-8bfc-65e71e3c2088","variableMapping":{"capacity":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[9,11,12,15,58,59,60,182,183,184,37,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,85,206,86],"tindex":"402abd08-da57-11e4-8bfc-23dac35ec79b","variableMapping":{"lastIndex":"noOfStates","fromIndex":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"402abd09-da57-11e4-8bfc-a5f0b815c366","variableMapping":{"initLeafSize":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[86,94,256],"tindex":"402abd0a-da57-11e4-8bfc-55af5f039b6a","variableMapping":{"segmentsToMap":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[],"tindex":"402abd0b-da57-11e4-8bfc-376e86651daa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[61,62,71,73,83],"tindex":"402abd0c-da57-11e4-8bfc-9f0531313af5","variableMapping":{"factor":"dist","value":"millis"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"402abd0d-da57-11e4-8bfc-8b1dc4ac4713","variableMapping":{"relationCodeEncoder":"this","shift":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"402abd0e-da57-11e4-8bfc-5d81f7b1fc54","variableMapping":{"high":"allowed","highKey":"allowed","key":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-2},{"failures":[305,306,307,308,309,310,311,312,313,314,315,316,277,317,283,284,291,318,293,294],"tindex":"402abd0f-da57-11e4-8bfc-6de601f6b7fb","variableMapping":{"high":"allBits","guess":"allBits","low":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"402abd10-da57-11e4-8bfc-1dab688530e2","variableMapping":{"red":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[305,306,307,308,310,311,312,314,316,277,317,283,284,291,318,293,294],"tindex":"402abd11-da57-11e4-8bfc-67100bece853","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[35,195,36],"tindex":"402abd12-da57-11e4-8bfc-5b5b0961a3aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"402abd13-da57-11e4-8bfc-156e7ac91af5","variableMapping":{"com.graphhopper.util.Constants.VERSION":"message","tmp":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":0},{"failures":[],"tindex":"402abd14-da57-11e4-8bfc-1f1a6d7f4e74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"402ae425-da57-11e4-8bfc-b7431475e5bd","variableMapping":{"calcPoints":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:127","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[319,154],"tindex":"402ae426-da57-11e4-8bfc-992ce2a56ec9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[89,8,9,10,11,13,14,15,58,16,182,183,184,320,321,322,186,95,18,19,20,96,21,7,22,23,24,25,26,28,323,324,325,326,327,328,46,197,329,330,331,199,332,333,200,334,335,336,80,207,208,337,145,221,338,278,279,280,339,340,341,223,342,234,343,237,344,345,346,347,348,349,350,351,352,239,240,241,353,152,254,354,302,355,303,356,357,258,259,358,160,272,359,360,361,362,363,364,365,366,367,368],"tindex":"402ae427-da57-11e4-8bfc-01fe4d48a086","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[46],"tindex":"402ae428-da57-11e4-8bfc-0fe663f251fd","variableMapping":{"towerNodeDistance":"eleDelta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[89,8,9,10,11,12,13,14,15,58,16,59,60,162,163,369,182,183,184,37,185,370,164,186,165,166,167,168,371,187,188,95,17,18,19,20,96,21,7,22,23,24,25,26,28,328,46,193,35,175,139,137,195,36,372,196,197,198,329,329,330,330,373,373,331,331,199,199,332,332,333,333,200,200,334,334,374,374,335,335,336,336,201,202,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,79,80,81,82,83,84,203,85,204,91,205,206,375,86,87,92,93,94,88,274,207,376,377,378,208,209,140,379,210,211,380,381,212,213,141,214,142,143,382,383,215,384,216,144,385,337,386,387,217,388,218,145,146,219,389,220,221,390,391,338,222,392,275,276,393,277,394,278,279,280,281,317,282,283,284,285,286,287,288,395,289,290,396,397,398,399,400,401,402,403,176,404,177,405,406,178,407,408,409,410,411,412,413,291,414,339,340,341,415,318,292,293,294,295,296,297,298,416,299,300,223,224,225,417,226,227,418,419,228,229,420,230,421,422,423,424,231,425,232,426,427,342,428,429,233,430,234,343,431,235,432,236,237,433,434,344,238,435,239,436,301,240,437,438,439,241,242,147,440,243,244,441,442,245,246,148,247,149,150,443,444,248,445,249,151,446,353,447,448,250,449,251,152,153,252,450,253,254,451,452,354,255,453,256,319,454,455,257,456,154,304,258,457,458,459,259,260,155,460,261,262,461,462,263,264,156,265,157,158,463,464,266,465,267,159,466,358,467,468,268,469,269,160,161,270,470,271,272,471,472,359,273,473],"tindex":"402cdff9-da57-11e4-8bfc-4513ae4ab157","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[474,475,476,477],"tindex":"402cdffa-da57-11e4-8bfc-3d1d72eec15e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[],"tindex":"402cdffb-da57-11e4-8bfc-cdf6b82066a8","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"402cdffc-da57-11e4-8bfc-c93564a5541f","variableMapping":{"size":"dLon","newSize":"tmpErr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"402cdffd-da57-11e4-8bfc-3d12092a124b","variableMapping":{"directionBitMask":"capacity","shift":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":0},{"failures":[46],"tindex":"402cdffe-da57-11e4-8bfc-493866ecd441","variableMapping":{"r":"fwdFaster","angle":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[478],"tindex":"402cdfff-da57-11e4-8bfc-0d4060d2cd28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[89,8,9,10,11,12,13,14,15,58,16,479,480,481,95,17,18,19,20,96,21,7,22,23,24,25,26,28,325,207,376,482,345,483,346,347,348,484,485,349,350,351,352,239,240,437,486,456,258,457,487,360,488,361,362,363,489,490,364,365,366,367,368],"tindex":"402ce000-da57-11e4-8bfc-79cc9834b7a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":-1},{"failures":[169,170,171,172],"tindex":"402ce001-da57-11e4-8bfc-7777b0608800","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[89,8,9,10,11,12,13,14,15,58,16,59,60,162,163,369,182,183,184,37,185,370,164,186,165,166,167,168,371,187,188,95,17,18,19,20,96,21,7,22,23,24,25,26,28,328,46,193,35,175,139,137,195,36,372,196,197,198,329,329,330,330,373,373,331,331,199,199,332,332,333,333,200,200,334,334,374,374,335,335,336,336,201,202,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,90,79,80,81,82,83,84,203,85,204,91,205,206,375,86,87,92,93,94,88,274,207,376,377,378,208,209,140,379,210,211,380,381,212,213,141,214,142,143,382,383,215,384,216,144,385,337,386,387,217,388,218,145,146,219,389,220,221,390,391,338,222,392,275,276,393,277,394,278,279,280,281,317,282,283,284,285,286,287,288,395,289,290,396,397,398,399,400,401,402,403,176,404,177,405,406,178,407,408,409,410,411,412,413,291,414,339,340,341,415,318,292,293,294,295,296,297,298,416,299,300,223,224,225,417,226,227,418,419,228,229,420,230,421,422,423,424,231,425,232,426,427,342,428,429,233,430,234,343,431,235,432,236,237,433,434,344,238,435,239,436,301,240,437,438,439,241,242,147,440,243,244,441,442,245,246,148,247,149,150,443,444,248,445,249,151,446,353,447,448,250,449,251,152,153,252,450,253,254,451,452,354,255,453,491,256,319,454,455,257,456,154,304,258,457,458,459,259,260,155,460,261,262,461,462,263,264,156,265,157,158,463,464,266,465,267,159,466,358,467,468,268,469,269,160,161,270,470,271,272,471,472,359,273,473],"tindex":"402d0712-da57-11e4-8bfc-375a756a7fae","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"402d0713-da57-11e4-8bfc-a5ace4dc9bd3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"402d0714-da57-11e4-8bfc-770dc3280c83","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[492],"tindex":"402d0715-da57-11e4-8bfc-e72aba03ea79","variableMapping":{"radiusInMeter":"lastPrio","lon":"lastPrio","lat":"lastPrio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"402d2e26-da57-11e4-8bfc-b79197a65eca","variableMapping":{"i":"size","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"402d2e27-da57-11e4-8bfc-fb902c219756","variableMapping":{"high":"encoded","highKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[0,3,107],"tindex":"402d2e28-da57-11e4-8bfc-97dd825432fb","variableMapping":{"edgePointer":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"402d2e29-da57-11e4-8bfc-230ece21e5e0","variableMapping":{"turnRestrictionBit":"flags","restricted":"backward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:615","type":"CtReturnImpl","sourcecode":"return boolean ? long : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"402d2e2a-da57-11e4-8bfc-8da398ce7398","variableMapping":{"item":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":90,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":330,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":456,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":224,"com.graphhopper.reader.OSMReaderTest.testFerry":95,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":167,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":44,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":122,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":279,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":473,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":148,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":487,"com.graphhopper.coll.CompressedArrayTest.testCompress":306,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":91,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":342,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":214,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":393,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":360,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":484,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":92,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":433,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":84,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":216,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":71,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":182,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":403,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":125,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":163,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":459,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":277,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":127,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":69,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":141,"com.graphhopper.coll.BitSetImplTest.testCopy":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":340,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":239,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":313,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":259,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":492,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":88,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":341,"com.graphhopper.reader.OSMReaderTest.testSort":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":45,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":139,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":437,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":389,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":207,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":434,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":200,"com.graphhopper.storage.RAMDataAccessTest.testHeader":485,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":253,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":368,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":469,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":381,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":436,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":100,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":282,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":75,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":65,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":155,"com.graphhopper.coll.OSMIDMapTest.testGetLong":326,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":446,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":465,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":258,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":159,"com.graphhopper.coll.CompressedArrayTest.testCompress2":305,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":385,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":111,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":247,"com.graphhopper.GraphHopperAPITest.testLoad":59,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":355,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":142,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":140,"com.graphhopper.storage.LevelGraphStorageTest.testClone":261,"com.graphhopper.reader.OSMReaderTest.testBarriers":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":68,"com.graphhopper.util.GHUtilityTest.testCopy":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":171,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":400,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":351,"com.graphhopper.routing.PathTest.testFindInstruction":198,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":147,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":110,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":185,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":471,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":99,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":397,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":220,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":252,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":370,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":206,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":444,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":192,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":461,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":418,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":357,"com.graphhopper.util.InstructionListTest.testWayList2":184,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":235,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":296,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":222,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":441,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":129,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":491,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":328,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":376,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":263,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":488,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":56,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":149,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":67,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":209,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":96,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":80,"com.graphhopper.coll.OSMIDMapTest.testGet":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":246,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":57,"com.graphhopper.routing.PathBidirRefTest.testExtract":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":130,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":325,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":358,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":286,"com.graphhopper.storage.RAMDataAccessTest.testCopy":346,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":453,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":343,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":50,"com.graphhopper.storage.RAMDataAccessTest.testSegments":350,"com.graphhopper.util.GHUtilityTest.testSort2":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":76,"com.graphhopper.reader.OSMReaderTest.testMain":18,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":457,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":151,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":172,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":287,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":29,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":438,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":265,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":173,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":464,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":273,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":157,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":250,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":98,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":302,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":267,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.storage.StorablePropertiesTest.testStore":486,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":483,"com.graphhopper.storage.GraphHopperStorageTest.testClone":210,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":432,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":33,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":32,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":382,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":256,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":419,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":455,"com.graphhopper.routing.PathTest.testTime":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":116,"com.graphhopper.util.BitUtilLittleTest.testToFloat":321,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":472,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":262,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":298,"com.graphhopper.reader.OSMReaderTest.testRelation":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":427,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":468,"com.graphhopper.util.GHUtilityTest.testSortDirected":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":40,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":366,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":331,"com.graphhopper.GraphHopperTest.testFootOnly":58,"com.graphhopper.util.BitUtilLittleTest.testToInt":322,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":31,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":317,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":231,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":349,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":329,"com.graphhopper.routing.QueryGraphTest.testOneWay":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":416,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":339,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":307,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":169,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":345,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":175,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":428,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":3,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":260,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":458,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":475,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":126,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":448,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":189,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":248,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":208,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":62,"com.graphhopper.util.BitUtilLittleTest.testToBitString":320,"com.graphhopper.util.InstructionListTest.testWayList":183,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":477,"com.graphhopper.GraphHopperAPITest.testDisconnected179":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":228,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":102,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":188,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":238,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":11,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":380,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":181,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":217,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":87,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":179,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":439,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":82,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":135,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":274,"com.graphhopper.routing.PathTest.testWayList":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":344,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":421,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":43,"com.graphhopper.coll.OSMIDMapTest.testGet2":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":83,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":490,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":270,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":479,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":447,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":384,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":442,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":266,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":284,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":347,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":367,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":112,"com.graphhopper.util.GHUtilityTest.testSort":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":430,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":315,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":255,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":399,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":178,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":409,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":39,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":407,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":301,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":48,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":480,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":445,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":35,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":356,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":463,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":234,"com.graphhopper.routing.PathTest.testFound":372,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":16,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":108,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":271,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":138,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":454,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":131,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":150,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":230,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":213,"com.graphhopper.util.InstructionListTest.testEmptyList":369,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":482,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":70,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":191,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":38,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":136,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":77,"com.graphhopper.reader.PrinctonReaderTest.testRead":187,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":280,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":245,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":308,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":223,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":460,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":249,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":1,"com.graphhopper.reader.OSMReaderTest.testFoot":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":233,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":336,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":481,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":293,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":312,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":359,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":476,"com.graphhopper.reader.OSMReaderTest.testOneWay":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":294,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":143,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":146,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":124,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":365,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":474,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":205,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":204,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":364,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":423,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":373,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":27,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":377,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":52,"com.graphhopper.routing.PathBidirRefTest.testExtract2":202,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":297,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":402,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":218,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":411,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":118,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":435,"com.graphhopper.util.SimpleIntDequeTest.testPush":174,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":415,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":219,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":462,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":190,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":337,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":158,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":113,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":289,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":79,"com.graphhopper.GraphHopperTest.testPrepareOnly":89,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":225,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":257,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":37,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":388,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":194,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":425,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":34,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":470,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":161,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":240}}]
