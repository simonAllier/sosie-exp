[{"failures":[],"tindex":"81a2089f-dbb9-11e4-b687-1b745586419f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[0],"tindex":"81a208a0-dbb9-11e4-b687-9d65dbeff47c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"81a208a1-dbb9-11e4-b687-8fba91b8ab2a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,223,224,225,226,227,228,229,230,231,232,233,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"81a22fb2-dbb9-11e4-b687-75822f4c3b25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-1},{"failures":[313],"tindex":"81a22fb3-dbb9-11e4-b687-81eb975bf614","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[314,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"tindex":"81a22fb4-dbb9-11e4-b687-b54c31972217","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[],"tindex":"81a22fb5-dbb9-11e4-b687-55a153c05182","variableMapping":{"midLat":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"81a22fb6-dbb9-11e4-b687-4f21c33c56c3","variableMapping":{"keyIndex":"unvisitedDeadEnds"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":-2},{"failures":[78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,154,156,157,158,161,162,165,166,167,168,169,170,171,172,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,201,202,203,206,209,211,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,292,294],"tindex":"81a22fb7-dbb9-11e4-b687-bbea9978e4ee","variableMapping":{"edgeId":"edgeId","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"edgeId","nodeA":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-1},{"failures":[],"tindex":"81a22fb8-dbb9-11e4-b687-41f24300d8f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"81a22fb9-dbb9-11e4-b687-4b5bfff777b0","variableMapping":{"distInMeter":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[53,90],"tindex":"81a256ca-dbb9-11e4-b687-8b07e768ef02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":-1},{"failures":[329],"tindex":"81a256cb-dbb9-11e4-b687-bdcd5297ebd6","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"81a256cc-dbb9-11e4-b687-53cbddbed7e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[162,167,178,179,180,182,186,190,196,249,251,252,253,255,257,259,260],"tindex":"81a256cd-dbb9-11e4-b687-c71b5247ae2c","variableMapping":{"red":"b"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[224,225,309],"tindex":"81a256ce-dbb9-11e4-b687-4d07a7120534","variableMapping":{"updatedA":"biggestStart","nodeA":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1305","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[154,156,249,255,257,259,260,262,266,267,271,275,280,282,284],"tindex":"81a256cf-dbb9-11e4-b687-7f62bcee0b29","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[44,45,48,49,51,53,54,57,59,81,82,85,86,88,90,91,94,96,330,331,332,333,334,335,336,337,338,339],"tindex":"81a256d0-dbb9-11e4-b687-55e7db09f127","variableMapping":{"costs":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[340,341,342],"tindex":"81a256d1-dbb9-11e4-b687-39d48590e1d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[230],"tindex":"81a256d2-dbb9-11e4-b687-b73a8c24df52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[2,52,89,97,99,162,287],"tindex":"81a256d3-dbb9-11e4-b687-efba1248807e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[],"tindex":"81a256d4-dbb9-11e4-b687-993304458150","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"81a256d5-dbb9-11e4-b687-5734888423be","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"81a256d6-dbb9-11e4-b687-ff823dd9e3fc","variableMapping":{"byteCount":"internalFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[218,343,344,345,346,347,348,349,350,351,352,353,313,316,325,354,355,329,356,273],"tindex":"81a256d7-dbb9-11e4-b687-872afe1ce82b","variableMapping":{"defaultUTurnCost":"defaultD","weight":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"81a256d8-dbb9-11e4-b687-75b2cd37ddef","variableMapping":{"high":"oldRelationFlags","highKey":"oldRelationFlags","key":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"81a27de9-dbb9-11e4-b687-477a42e55dcd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"81a27dea-dbb9-11e4-b687-b1d8578cfe52","variableMapping":{"heights":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:77","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":0},{"failures":[],"tindex":"81a27deb-dbb9-11e4-b687-f7acb859114e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"81a27dec-dbb9-11e4-b687-3b0b84b94f51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[357,358,359,360,361,362,315,316,324,329,363],"tindex":"81a27ded-dbb9-11e4-b687-75c16a60ad66","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"81a27dee-dbb9-11e4-b687-1d883a0100e3","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"81a27def-dbb9-11e4-b687-316fd595ee97","variableMapping":{"segmentsToMap":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"81a27df0-dbb9-11e4-b687-338feea2e787","variableMapping":{"item":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[346],"tindex":"81a27df1-dbb9-11e4-b687-678c1f003f61","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"81a27df2-dbb9-11e4-b687-27a728e601d9","variableMapping":{"lat":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"81a27df3-dbb9-11e4-b687-e1e62e8e295f","variableMapping":{"distance":"longTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"81a27df4-dbb9-11e4-b687-93276ffd3f23","variableMapping":{"scDirMask":"encoded","flags":"encoded","dir":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"81a27df5-dbb9-11e4-b687-0bf85ca583a8","variableMapping":{"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.storage.index.LocationIndexTreeSC.NO_SHORTCUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:947","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:187","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTreeSC.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"81a27df6-dbb9-11e4-b687-43e6aef81161","variableMapping":{"slice":"maxSpeed","azimuth":"maxSpeed","cp":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:129","type":"CtIfImpl","sourcecode":"if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"81a27df7-dbb9-11e4-b687-33ba3226ffe3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"81a27df8-dbb9-11e4-b687-f9b11b2fc80f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"81a27df9-dbb9-11e4-b687-fbd1f8a56b25","variableMapping":{"need":"noOfStates","i":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"81a2a50a-dbb9-11e4-b687-1ff58867bc20","variableMapping":{"high":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"81a2a50b-dbb9-11e4-b687-7321cc101dc9","variableMapping":{"maxRasterWidth2InMeterNormed":"d2","currNormedDist":"epsilon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:374","type":"CtReturnImpl","sourcecode":"return double < (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"81a2a50c-dbb9-11e4-b687-05c28ea40528","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"81a2a50d-dbb9-11e4-b687-69e7219b88e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:342","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[46,47,67,68,69,71,78,83,84,92,93,95,364,219,220,223,224,225,270,274,275,278,285,286,287,288,289,291,292,293,294,298,299,300,301,303,304,305,306,307,309],"tindex":"81a2a50e-dbb9-11e4-b687-a5b07cb0c844","variableMapping":{"nodeB":"tmp","edgeId":"tmp","nodeA":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[365,357,358,359,366,367,350,368,360,361,362,315,316,324,329,363,297],"tindex":"81a2a50f-dbb9-11e4-b687-b3331798ae13","variableMapping":{"id":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"81a2a510-dbb9-11e4-b687-e1b96ff817b1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[],"tindex":"81a2a511-dbb9-11e4-b687-69a770338f39","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:131","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[],"tindex":"81a2a512-dbb9-11e4-b687-e5651da412d1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"81a2a513-dbb9-11e4-b687-05be450eda4f","variableMapping":{"str":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:281","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"81a2a514-dbb9-11e4-b687-5b1f116ea05a","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.trimToSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-2},{"failures":[],"tindex":"81a2a515-dbb9-11e4-b687-99dc91e405ae","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[369,370,371,372,1,2,3,4,5,373,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,374,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,375,376,377,97,98,99,100,101,102,378,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,154,155,156,157,158,159,160,161,162,163,164,165,379,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,380,381,382,383,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,223,224,225,226,227,228,229,230,231,232,233,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,384,385,386,387,388,285,286,287,288,289,290,291,389,292,293,294,295,390,296,297,298,299,300,301,302,303,304,391,305,306,307,308,392,309,310,393,394,395,311,312],"tindex":"81a2cc26-dbb9-11e4-b687-ff4a04ddd12a","variableMapping":{"str":"name","this":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:156","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    java.lang.String += \"_SYNC\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"81a2cc27-dbb9-11e4-b687-e524d91a49a6","variableMapping":{"flags":"flags","scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[396,296,308,309],"tindex":"81a2cc28-dbb9-11e4-b687-4519d9e267a9","variableMapping":{"time":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"81a2cc29-dbb9-11e4-b687-01863df9139d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[297,303],"tindex":"81a2cc2a-dbb9-11e4-b687-d3d5bca174b9","variableMapping":{"retBucket":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"81a2cc2b-dbb9-11e4-b687-d94eaaa0c720","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"81a2cc2c-dbb9-11e4-b687-6d46a659ccd5","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"81a2cc2d-dbb9-11e4-b687-23191423785c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[],"tindex":"81a2cc2e-dbb9-11e4-b687-a95e0dd00684","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"81a2cc2f-dbb9-11e4-b687-09912a373016","variableMapping":{"fromDist":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,397,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,398,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,223,224,225,226,227,228,229,230,231,232,233,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"81a2f340-dbb9-11e4-b687-e35c3c465769","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","index":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"81a2f341-dbb9-11e4-b687-1788296dab38","variableMapping":{"high":"defaultL","highKey":"defaultL","key":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-2},{"failures":[350],"tindex":"81a2f342-dbb9-11e4-b687-45f3a1c482c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"81a2f343-dbb9-11e4-b687-8130b83469b1","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"index","nodeId":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-2},{"failures":[],"tindex":"81a2f344-dbb9-11e4-b687-d540fb3deb91","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"81a2f345-dbb9-11e4-b687-614217012f35","variableMapping":{"flags2":"roundaboutBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"roundaboutBit","flags1":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[350],"tindex":"81a2f346-dbb9-11e4-b687-f34071127832","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"81a2f347-dbb9-11e4-b687-134d92414bfa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"81a2f348-dbb9-11e4-b687-69da76205658","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[223,224,225,285,286,287,288,289,291,292,293,294],"tindex":"81a2f349-dbb9-11e4-b687-b38a63dbb384","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-1},{"failures":[346],"tindex":"81a2f34a-dbb9-11e4-b687-952b4d004565","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"81a2f34b-dbb9-11e4-b687-9508edf3156e","variableMapping":{"orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[399,400,401],"tindex":"81a2f34c-dbb9-11e4-b687-351bec6f7bf5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[8,16,18,19,21,25,26,33,34,105,113,115,116,118,122,123,130,131,144,150,160,168,176,178,179,181,185,186,193,194,0,224,225,309],"tindex":"81a2f34d-dbb9-11e4-b687-e77a43e412e4","variableMapping":{"err":"segmentSizeInBytes","dLat":"segmentSizeInBytes","tmpErr":"segmentSizeInBytes","x1":"segmentSizeInBytes","sLon":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[332,336],"tindex":"81a2f34e-dbb9-11e4-b687-2931dc9114b5","variableMapping":{"resultOrientation":"midLon","orientation":"midLon","java.lang.Math.PI":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"81a31a5f-dbb9-11e4-b687-173cc0098f8b","variableMapping":{"distInMeter":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"81a31a60-dbb9-11e4-b687-97dbb6b9f31b","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[247,249,250,251,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,292,294],"tindex":"81a31a61-dbb9-11e4-b687-9dd118cfdea3","variableMapping":{"tmp":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"81a31a62-dbb9-11e4-b687-abd5c2fd6c74","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[402],"tindex":"81a31a63-dbb9-11e4-b687-e92924acfbf4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-1},{"failures":[347,365,403,358,404,405,406,359,349,407,366,367,351,368,408,361,409,410,411,362,353,412,313,316,318,320,321,324,325,327,413,329,414,415,416,363,356,391],"tindex":"81a31a64-dbb9-11e4-b687-1155df5c61ca","variableMapping":{"capacity":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[370,371,372,2,6,27,33,38,40,46,48,68,69,70,71,83,85,375,97,99,103,124,130,135,137,159,162,166,187,193,198,200,417,418,215,216,217,218,233,234,236,239,240,242,243,246,281,384,385,387,388,285,287,291,292,293,294,295,298,301,302],"tindex":"81a31a65-dbb9-11e4-b687-6d507450b41a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"81a31a66-dbb9-11e4-b687-4b1880e50c35","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[0,226,227],"tindex":"81a31a67-dbb9-11e4-b687-598e8c8f5c7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[369,370,371,372,1,2,3,4,5,373,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,397,58,59,60,61,62,63,64,65,66,67,68,69,70,374,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,398,95,96,375,376,377,97,98,99,100,101,102,378,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,154,155,156,157,158,159,160,161,162,163,164,165,379,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,380,381,382,383,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,223,224,225,226,227,228,229,230,231,232,233,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,384,385,386,387,388,285,286,287,288,289,290,291,389,292,293,294,295,390,296,297,298,299,300,301,302,303,304,391,305,306,307,308,392,309,310,393,394,395,311,312],"tindex":"81a31a68-dbb9-11e4-b687-bb2798cc7f65","variableMapping":{"algo":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[218,419,396,287,288,289,290,291,293,297,298,300,303,304,305,306,307,309],"tindex":"81a34179-dbb9-11e4-b687-cdd583c7a0be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[0,226],"tindex":"81a3417a-dbb9-11e4-b687-cbddf630467a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[],"tindex":"81a3417b-dbb9-11e4-b687-23dec1866911","variableMapping":{"minDistance":"speed","rMin":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-2},{"failures":[],"tindex":"81a3417c-dbb9-11e4-b687-53fa3e9a455c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"81a3417d-dbb9-11e4-b687-215cdeaff40d","variableMapping":{"nodeB":"shift","edgeId":"shift","nodeA":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[],"tindex":"81a3417e-dbb9-11e4-b687-5b85f43267e6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"81a3417f-dbb9-11e4-b687-ff807be68b8e","variableMapping":{"currentEntry":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[369,370,371,372,1,2,3,4,5,373,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,397,58,59,60,61,62,63,64,65,66,67,68,69,70,374,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,398,95,96,375,376,377,97,98,99,100,101,102,378,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,154,155,156,157,158,159,160,161,162,163,164,165,379,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,380,381,382,383,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,223,224,225,226,227,228,229,230,231,232,233,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,384,385,386,387,388,285,286,287,288,289,290,291,389,292,293,294,295,390,296,297,298,299,300,301,302,303,304,391,305,306,307,308,392,309,310,393,394,395,311,312],"tindex":"81a34180-dbb9-11e4-b687-990ed1ea97fc","variableMapping":{"ghLocation":"location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[],"tindex":"81a34181-dbb9-11e4-b687-9dcf02677bbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"81a34182-dbb9-11e4-b687-b17ced4f9de9","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":192,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":279,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":159,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":62,"com.graphhopper.reader.OSMReaderTest.testFerry":296,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":207,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":208,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":352,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":414,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":84,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":286,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":113,"com.graphhopper.coll.CompressedArrayTest.testCompress":331,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":41,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":251,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":17,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":257,"com.graphhopper.GraphHopperTest.testPrepare":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":278,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":247,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":408,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":271,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":66,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":363,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":220,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":226,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":351,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":263,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":47,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":361,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":97,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":260,"com.graphhopper.GraphHopperTest.testLoadOSM":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":54,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":48,"com.graphhopper.reader.OSMReaderTest.testSort":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":353,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":224,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":100,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":36,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":2,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":337,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":242,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":134,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":191,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":13,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":155,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":103,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":176,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":325,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":88,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":21,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":275,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":86,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":358,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":266,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":265,"com.graphhopper.coll.OSMIDMapTest.testGetLong":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":117,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":123,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":183,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":402,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":162,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":185,"com.graphhopper.coll.CompressedArrayTest.testCompress2":330,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":313,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":114,"com.graphhopper.GraphHopperAPITest.testLoad":204,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":379,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":146,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":18,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":8,"com.graphhopper.storage.LevelGraphStorageTest.testClone":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":227,"com.graphhopper.reader.OSMReaderTest.testBarriers":300,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":341,"com.graphhopper.util.GHUtilityTest.testCopy":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":268,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":322,"com.graphhopper.routing.PathTest.testFindInstruction":234,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":105,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":206,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":344,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":199,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":61,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":403,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":37,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":132,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":118,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":253,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":172,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":5,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":153,"com.graphhopper.util.InstructionListTest.testWayList2":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":55,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":360,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":137,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":368,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":229,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":174,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":418,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":342,"com.graphhopper.storage.RAMDirectoryTest.testSynched":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":115,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":67,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":267,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":281,"com.graphhopper.coll.OSMIDMapTest.testGet":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":112,"com.graphhopper.routing.PathBidirRefTest.testExtract":221,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":187,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":140,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":59,"com.graphhopper.util.GHUtilityTest.testSort2":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":276,"com.graphhopper.reader.OSMReaderTest.testMain":298,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":163,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":122,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":93,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":101,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":177,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":181,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":202,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":178,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":127,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":347,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":184,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":308,"com.graphhopper.storage.StorablePropertiesTest.testStore":375,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":417,"com.graphhopper.storage.GraphHopperStorageTest.testClone":10,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":396,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":381,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":20,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":154,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":326,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":157,"com.graphhopper.routing.PathTest.testTime":232,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":321,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":200,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":171,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":57,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":189,"com.graphhopper.reader.OSMReaderTest.testRelation":391,"com.graphhopper.util.GHUtilityTest.testSortDirected":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":349,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":238,"com.graphhopper.GraphHopperTest.testFootOnly":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":413,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":68,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":87,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":58,"com.graphhopper.search.NameIndexTest.testCreate":372,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":235,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":149,"com.graphhopper.routing.QueryGraphTest.testOneWay":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":397,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":415,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":46,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":332,"com.graphhopper.reader.OSMReaderTest.testWithBounds":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":136,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":223,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":240,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":345,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":366,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":167,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":164,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":314,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":126,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":119,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":6,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":262,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":39,"com.graphhopper.util.InstructionListTest.testWayList":216,"com.graphhopper.GraphHopperAPITest.testDisconnected179":205,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":336,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":405,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":312,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":225,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":143,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":289,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":12,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":258,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":401,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":256,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":102,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":283,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":373,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":398,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":148,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":1,"com.graphhopper.routing.PathTest.testWayList":233,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":319,"com.graphhopper.coll.OSMIDMapTest.testGet2":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":284,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":195,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":393,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":125,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":23,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":89,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":90,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":315,"com.graphhopper.util.GHUtilityTest.testSort":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":51,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":339,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":411,"com.graphhopper.search.NameIndexTest.testPut":370,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":378,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":63,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":82,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":71,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":74,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":348,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":241,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":98,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":317,"com.graphhopper.storage.MMapDirectoryTest.testSynched":383,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":282,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":0,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":152,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":142,"com.graphhopper.routing.PathTest.testFound":231,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":295,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":350,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":197,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":354,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":156,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":410,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":116,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":371,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":141,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":15,"com.graphhopper.util.InstructionListTest.testEmptyList":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":270,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":323,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":274,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":356,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":277,"com.graphhopper.reader.PrinctonReaderTest.testRead":311,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":38,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":85,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":111,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":333,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":124,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":404,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":365,"com.graphhopper.reader.OSMReaderTest.testFoot":297,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":246,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":52,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":201,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":53,"com.graphhopper.reader.OSMReaderTest.testOneWay":309,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":19,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":34,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":133,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":416,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":28,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":259,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":250,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":228,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":83,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":237,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":4,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":392,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":150,"com.graphhopper.routing.PathBidirRefTest.testExtract2":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":56,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":65,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":324,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":369,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":327,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":303,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":343,"com.graphhopper.util.SimpleIntDequeTest.testPush":364,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":49,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":35,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":173,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":27,"com.graphhopper.GraphHopperTest.testFootAndCar":290,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":179,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":95,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":107,"com.graphhopper.storage.StorablePropertiesTest.testLoad":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":280,"com.graphhopper.GraphHopperTest.testPrepareOnly":285,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":64,"com.graphhopper.GraphHopperTest.testVia":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":412,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":305,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":158,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":31,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":218,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":304,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":196,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":194,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":99}}]
