[{"failures":[],"tindex":"181c2656-dbe1-11e4-8239-cbb6086d922d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"181d37c7-dbe1-11e4-8239-d55764970ab4","variableMapping":{"sacScale":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[6,7],"tindex":"181d37c8-dbe1-11e4-8239-0571053b8788","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[6,7,8],"tindex":"181d37c9-dbe1-11e4-8239-a34202a88194","variableMapping":{"edgeId":"index","nextEdge":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[9],"tindex":"181d37ca-dbe1-11e4-8239-4f0e86f618f7","variableMapping":{"minStr":"str","index":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18],"tindex":"181d37cb-dbe1-11e4-8239-694f6713f79f","variableMapping":{"minDistance":"lon","rMin":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"181d37cc-dbe1-11e4-8239-f9cf313287e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,47,48,48,49,49,50,50,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,60,61,62,63,64,65,6,66,67,68,7,8,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360],"tindex":"181d85ed-dbe1-11e4-8239-edf0b509f8d1","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[71,73,79,80,84,85,86,87,88,89,90,91,93,95,97,100,101,104,105,106,107,108],"tindex":"181d85ee-dbe1-11e4-8239-9f48e8136857","variableMapping":{"unterfrankenGraph":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:68","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.Graph) instanceof com.graphhopper.storage.LevelGraph) {\n    throw new java.lang.IllegalStateException((\"run testAlgos only with a none-LevelGraph. Use prepare.chWeighting=no \" + \"Or use prepare.chWeighting=shortest and avoid the preparation\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[],"tindex":"181d85ef-dbe1-11e4-8239-13d71ee757bc","variableMapping":{"nodeId":"roundaboutBit","nodeIdOffset":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"181d85f0-dbe1-11e4-8239-c39d549e9d2e","variableMapping":{"offset":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"181d85f1-dbe1-11e4-8239-973787b9f07b","variableMapping":{"graphHopperFolder":"highwayValue","ghLocation":"highwayValue","osmFile":"highwayValue","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:470","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String)) && com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n    \n    java.lang.String = com.graphhopper.util.Helper.(com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"181d85f2-dbe1-11e4-8239-cdf9a0c8cd4f","variableMapping":{"filter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:112","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[],"tindex":"181d85f3-dbe1-11e4-8239-419bf66b23e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"181d85f4-dbe1-11e4-8239-75ba4227062c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"181d85f5-dbe1-11e4-8239-9d232cfd94ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"181dad06-dbe1-11e4-8239-136e8ecae3e2","variableMapping":{"flags":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":0},{"failures":[],"tindex":"181dad07-dbe1-11e4-8239-cb935e6a0d7f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No OSM file specified\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"181dad08-dbe1-11e4-8239-2d5364d93b03","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"181dad09-dbe1-11e4-8239-3577295c2c15","variableMapping":{"high":"flags","guess":"flags","low":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[],"tindex":"181dd41a-dbe1-11e4-8239-173227bcb091","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"181dd41b-dbe1-11e4-8239-678a52f9bcf6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-2},{"failures":[10,11,12,14,15,361,362,16,17,18,140,146,148,149,363,167,173,175,176],"tindex":"181dd41c-dbe1-11e4-8239-03449a4663c3","variableMapping":{"minDistance":"lon","rMin":"minLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[24,28,32,33,39,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,86,108],"tindex":"181dd41d-dbe1-11e4-8239-2d2ad5eb2953","variableMapping":{"intVal":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"181dd41e-dbe1-11e4-8239-af7210571d7c","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"181dd41f-dbe1-11e4-8239-37ab6538f5e4","variableMapping":{"allSegments":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"181dd420-dbe1-11e4-8239-bff1d7e0ee02","variableMapping":{"bytePos":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":0},{"failures":[384],"tindex":"181dd421-dbe1-11e4-8239-dfe0df7c12bf","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"minutes","speed":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"181ebe82-dbe1-11e4-8239-b1d212597c63","variableMapping":{"index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[21,22,23,24,25,27,28,71,73,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,124,125],"tindex":"181ebe83-dbe1-11e4-8239-63f914171605","variableMapping":{"allowWrites":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1085","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"181ebe84-dbe1-11e4-8239-6dcd3c1dc997","variableMapping":{"graphHopperFolder":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":0},{"failures":[0,3,4,5],"tindex":"181ebe85-dbe1-11e4-8239-b7be98fc045d","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"181ebe86-dbe1-11e4-8239-09a914a4a1a4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[33,38,364,365,367,372,373,374,377,385,378,381,386,382],"tindex":"181ee597-dbe1-11e4-8239-ab36d0fa80f5","variableMapping":{"fullyLoaded":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1079","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"181ee598-dbe1-11e4-8239-b5a1fa55dcae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[21,22,24,25,29,33,36,38,39,41,66,67,68,94,98,99,102,387,109,110,124,125,142,144,147,150,151,152,153,155,158,159,160,163,164,165,169,171,172,174,177,178,179,180,182,183],"tindex":"181ee599-dbe1-11e4-8239-1b8bc2f6b0ec","variableMapping":{"length":"tmp","factor":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[73,75,76,77,79,81,83,388,389,390,391,392],"tindex":"181ee59a-dbe1-11e4-8239-493a6cc42620","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"181ee59b-dbe1-11e4-8239-c10931dc832a","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[],"tindex":"181ee59c-dbe1-11e4-8239-d5666bd0f4c8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"181ee59d-dbe1-11e4-8239-2d58411efcf9","variableMapping":{"i":"y1","lastIndex":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"181ee59e-dbe1-11e4-8239-49a9955da10f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[21,22,23,24,25,27,33,34,36,39,40,41,42,43,45,393,2,115],"tindex":"181ee59f-dbe1-11e4-8239-1bc0483cbadf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"181f0cb0-dbe1-11e4-8239-e5229e214034","variableMapping":{"oldValueIndex":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[21,22,25,28,71,73,79,80,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,104,105,106,107,108],"tindex":"181f0cb1-dbe1-11e4-8239-83831ed3906f","variableMapping":{"this":"this","edgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"181f0cb2-dbe1-11e4-8239-875435553b99","variableMapping":{"weightLong":"mask","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[],"tindex":"181f0cb3-dbe1-11e4-8239-3113bb92aa6c","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":0},{"failures":[],"tindex":"181f0cb4-dbe1-11e4-8239-3d40d84b0abd","variableMapping":{"capacity":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":0},{"failures":[],"tindex":"181f0cb5-dbe1-11e4-8239-f90939b0c3c6","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"181f0cb6-dbe1-11e4-8239-c19a83a956f4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"181f0cb7-dbe1-11e4-8239-21bfff0ac299","variableMapping":{"i":"i","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":0},{"failures":[394],"tindex":"181f0cb8-dbe1-11e4-8239-cf0807126389","variableMapping":{"sacScale":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"181f0cb9-dbe1-11e4-8239-e7cf6037e73c","variableMapping":{"high":"length","len":"length","start":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[9],"tindex":"181f0cba-dbe1-11e4-8239-fb488cc4a9d8","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[10,11,12,14,15,361,362,17,18,140,146,148,149,363,167,173,175,176],"tindex":"181f0cbb-dbe1-11e4-8239-73d02e1b0c9f","variableMapping":{"encoded":"hash","backwardBit":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[6,7,8],"tindex":"181f0cbc-dbe1-11e4-8239-b16f65a18992","variableMapping":{"size":"start","index":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"181f0cbd-dbe1-11e4-8239-2ff1040614ee","variableMapping":{"size":"index","from":"index","end":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":0},{"failures":[],"tindex":"181f33ce-dbe1-11e4-8239-f7642c2a840c","variableMapping":{"mSize":"i","value":"i","mValues":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:303","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((int[][int]) == int) {\n        return int;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"181f33cf-dbe1-11e4-8239-13f9344efe16","variableMapping":{"dist":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"181f33d0-dbe1-11e4-8239-e58a00790a7d","variableMapping":{"store":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"181f33d1-dbe1-11e4-8239-c1fa619a2a4b","variableMapping":{"turnCostIndex":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","nextTurnCostIndex":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"181f33d2-dbe1-11e4-8239-b9a7c868a444","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:222","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"181f33d3-dbe1-11e4-8239-999c40a2a5fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[],"tindex":"181f33d4-dbe1-11e4-8239-f989ce12b00d","variableMapping":{"acceptBit":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir","ferryBit":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"181f33d5-dbe1-11e4-8239-c5e08dbccf24","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"i","nextEdge":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-2},{"failures":[],"tindex":"181f33d6-dbe1-11e4-8239-09778b0e908d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"181f33d7-dbe1-11e4-8239-a97592f75baf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"181f33d8-dbe1-11e4-8239-27372198f7b6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[11,12,14,15,362,17,18,140,148,149,167,175,176],"tindex":"181f33d9-dbe1-11e4-8239-09c55d163b3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"181f33da-dbe1-11e4-8239-3718fcd55733","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"181f33db-dbe1-11e4-8239-b96b3bc7bda4","variableMapping":{"newAdjIndex":"index","newBaseIndex":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-2},{"failures":[2],"tindex":"181f33dc-dbe1-11e4-8239-d3bf49b2858e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"181f33dd-dbe1-11e4-8239-ad2b124a2958","variableMapping":{"flags":"flags","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[33,39,45,395,396,364,365,366,397,367,368,373,398,374,375,376,377,385,399,378,379,380,381,386,400,382,383],"tindex":"181f33de-dbe1-11e4-8239-770c73c2d719","variableMapping":{"high":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"181f33df-dbe1-11e4-8239-f5519ea929aa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:99","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"Africa\" , \"Australia\" , \"Eurasia\" , \"Islands\" , \"North_America\" , \"South_America\" }"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"181f33e0-dbe1-11e4-8239-57b1fd1afad4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[19,21,25,26,27,29,34,37,38,401,402,403,48,54,55,58,61,62,105,112,113,114,115,118,404,405,406,407,408,142,144,169,171,210,227,230,234,255,261,266,268,272,275,279,300,306,311,313,318,322,343,349,354,356,409,410,411],"tindex":"181f5af1-dbe1-11e4-8239-37487013cb14","variableMapping":{"size":"indexDivisor","delta":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[10,11,412,12,13,14,15,16,17,18],"tindex":"181f5af2-dbe1-11e4-8239-53b6968e82d1","variableMapping":{"towerNodeDistance":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[9],"tindex":"181f5af3-dbe1-11e4-8239-4733948520f6","variableMapping":{"currentEntry":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"181f5af4-dbe1-11e4-8239-4bf26cd852e7","variableMapping":{"todoBytes":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"181f5af5-dbe1-11e4-8239-5f02dad1ce77","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[72,73,74,75,76,77,79,81,83,84,91,95,104,106,108,118,164,166,223,225,228],"tindex":"181f5af6-dbe1-11e4-8239-7b7fb5d2e078","variableMapping":{"inner":"nodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:135","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getSegments()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[],"tindex":"181f5af7-dbe1-11e4-8239-db4ea6141da7","variableMapping":{"workerThreads":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":0},{"failures":[413,372,414,373,415,416,417,398,418,419,420,374,421,3,375],"tindex":"181f5af8-dbe1-11e4-8239-31775fb36052","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[422,395,373,376,385,380,386],"tindex":"181f5af9-dbe1-11e4-8239-afb68dcf16af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if (int < int)\n    return com.graphhopper.routing.util.EncodedValue.setValue(0, int);\n"},"status":-1},{"failures":[],"tindex":"181f5afa-dbe1-11e4-8239-51a126d28ba1","variableMapping":{"counts":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","counter":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[79,83,86,91,92,94,95,98,101,103,104,106,107,108,390,391,392],"tindex":"181f5afb-dbe1-11e4-8239-f712c100a52f","variableMapping":{"segmentSizeInBytes":"child","length":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"181f5afc-dbe1-11e4-8239-5b1bd563803b","variableMapping":{"res":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.storage.index.QueryResult.getSnappedPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"181f5afd-dbe1-11e4-8239-d74d6bd3fe13","variableMapping":{"bytePos":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[73,75,76,77,78,79,81,83,84,86,87,88,91,92,94,95,97,98,100,101,102,103,104,105,106,107,108,388,389,390,391,423,392],"tindex":"181f5afe-dbe1-11e4-8239-73cd85d07def","variableMapping":{"values":"elem","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:323","type":"CtAssignmentImpl","sourcecode":"int[][int] = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"181f5aff-dbe1-11e4-8239-395912a88f3a","variableMapping":{"tmpNode":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"181f8210-dbe1-11e4-8239-ef002bd07e22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"181f8211-dbe1-11e4-8239-d53d6d5272ab","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-2},{"failures":[],"tindex":"181f8212-dbe1-11e4-8239-a19292f6b5cb","variableMapping":{"adjNodesToDelIter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1246","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.EdgeIterable.getEdge()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"181f8213-dbe1-11e4-8239-0be6c26230b4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"181f8214-dbe1-11e4-8239-b93f37edefb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:127","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":0},{"failures":[],"tindex":"181f8215-dbe1-11e4-8239-81035c762d99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"181f8216-dbe1-11e4-8239-27c956178d25","variableMapping":{"latSize":"err","lonSize":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"181f8217-dbe1-11e4-8239-d19edd06802a","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"child","edgeTo":"size","edgeFrom":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"181f8218-dbe1-11e4-8239-81ca7646d99a","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1470","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-2},{"failures":[19,21,22,23,25,27,28,32,34,35,36,37,38,39,40,41,42,43,44,45,61,114,118,424,425,426,404,142,169,205,210,216,230,255,266,272,275,300,311,318,343,354,427,428],"tindex":"181f8219-dbe1-11e4-8239-a14cf43a96d8","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":260,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":103,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":227,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":185,"com.graphhopper.reader.OSMReaderTest.testFerry":32,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":121,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":122,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":415,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":170,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":20,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":289,"com.graphhopper.coll.CompressedArrayTest.testCompress":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":420,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":75,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":205,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":81,"com.graphhopper.GraphHopperTest.testPrepare":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":71,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":340,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":95,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":112,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":157,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":374,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":110,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":167,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":93,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":143,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":272,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":361,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":234,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":391,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":84,"com.graphhopper.GraphHopperTest.testLoadOSM":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":144,"com.graphhopper.reader.OSMReaderTest.testSort":35,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":276,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":352,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":318,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":218,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":54,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":310,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":259,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":329,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":273,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":381,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":279,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":174,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":89,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":236,"com.graphhopper.coll.OSMIDMapTest.testGetLong":407,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":299,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":251,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":230,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":253,"com.graphhopper.coll.CompressedArrayTest.testCompress2":17,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":342,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":290,"com.graphhopper.GraphHopperAPITest.testLoad":124,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":334,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":324,"com.graphhopper.storage.LevelGraphStorageTest.testClone":238,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":384,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":8,"com.graphhopper.reader.OSMReaderTest.testBarriers":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":92,"com.graphhopper.util.GHUtilityTest.testCopy":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":183,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":130,"com.graphhopper.routing.PathTest.testFindInstruction":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":398,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":281,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":388,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":123,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":371,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":267,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":127,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":353,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":338,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":77,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":294,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":190,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":321,"com.graphhopper.util.InstructionListTest.testWayList2":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":213,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":151,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":358,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":377,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":69,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":319,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":242,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":91,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":323,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":105,"com.graphhopper.coll.OSMIDMapTest.testGet":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":288,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":1,"com.graphhopper.routing.PathBidirRefTest.testExtract":63,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":255,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":406,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":211,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":372,"com.graphhopper.util.GHUtilityTest.testSort2":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":100,"com.graphhopper.reader.OSMReaderTest.testMain":34,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":399,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":362,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":4,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":179,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":258,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":277,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":245,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":249,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":270,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":51,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":303,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":252,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":44,"com.graphhopper.storage.StorablePropertiesTest.testStore":411,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":410,"com.graphhopper.storage.GraphHopperStorageTest.testClone":326,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":2,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":336,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":191,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":225,"com.graphhopper.routing.PathTest.testTime":60,"com.graphhopper.util.BitUtilLittleTest.testToFloat":425,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":268,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":239,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":204,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":257,"com.graphhopper.reader.OSMReaderTest.testRelation":422,"com.graphhopper.util.GHUtilityTest.testSortDirected":120,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":423,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":50,"com.graphhopper.GraphHopperTest.testFootOnly":28,"com.graphhopper.util.BitUtilLittleTest.testToInt":426,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":414,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":159,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":173,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":200,"com.graphhopper.search.NameIndexTest.testCreate":403,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":47,"com.graphhopper.routing.QueryGraphTest.testOneWay":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":154,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":142,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":10,"com.graphhopper.reader.OSMReaderTest.testWithBounds":43,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":5,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":206,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":395,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":235,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":232,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":375,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":302,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":295,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":322,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":86,"com.graphhopper.util.BitUtilLittleTest.testToBitString":424,"com.graphhopper.util.InstructionListTest.testWayList":113,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":355,"com.graphhopper.GraphHopperAPITest.testDisconnected179":125,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":192,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":187,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":220,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":23,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":82,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":346,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":80,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":266,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":378,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":107,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":379,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":317,"com.graphhopper.routing.PathTest.testWayList":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":196,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":9,"com.graphhopper.coll.OSMIDMapTest.testGet2":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":108,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":301,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":286,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":327,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":175,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":176,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":177,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":390,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":365,"com.graphhopper.util.GHUtilityTest.testSort":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":209,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":16,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":416,"com.graphhopper.search.NameIndexTest.testPut":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":315,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":325,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":129,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":168,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":163,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":135,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":133,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":296,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":6,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":248,"com.graphhopper.routing.PathTest.testFound":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":210,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":29,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":364,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":265,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":224,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":292,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":389,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":402,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":195,"com.graphhopper.util.InstructionListTest.testEmptyList":111,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":94,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":98,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":421,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":101,"com.graphhopper.reader.PrinctonReaderTest.testRead":30,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":354,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":171,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":287,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":194,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":184,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":380,"com.graphhopper.reader.OSMReaderTest.testFoot":33,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":208,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":148,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":269,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":413,"com.graphhopper.reader.OSMReaderTest.testOneWay":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":149,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":335,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":350,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":418,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":202,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":330,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":76,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":74,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":136,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":198,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":49,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":320,"com.graphhopper.routing.PathBidirRefTest.testExtract2":64,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":85,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":367,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":348,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":137,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":221,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":369,"com.graphhopper.util.SimpleIntDequeTest.testPush":387,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":145,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":351,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":241,"com.graphhopper.GraphHopperTest.testFootAndCar":24,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":343,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":247,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":283,"com.graphhopper.GraphHopperTest.testPrepareOnly":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":104,"com.graphhopper.GraphHopperTest.testVia":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":186,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":41,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":226,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":115,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":347,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":370,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":201,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":264,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":262,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":275}}]
