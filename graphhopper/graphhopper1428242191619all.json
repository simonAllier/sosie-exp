[{"failures":[],"tindex":"90ab329d-db9b-11e4-921c-17dc8d520baa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:252","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[],"tindex":"90ac922e-db9b-11e4-921c-a960e0a56d2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[0],"tindex":"90ac922f-db9b-11e4-921c-c5c1fb1af82b","variableMapping":{"i":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"90ac9230-db9b-11e4-921c-41701d653594","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[1,2,3,4],"tindex":"90ac9231-db9b-11e4-921c-a94dab73621c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[5,6,1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"90ac9232-db9b-11e4-921c-2355f713ec64","variableMapping":{"i":"nodeB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"90ac9233-db9b-11e4-921c-af2c6fffc39a","variableMapping":{"midLat":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[23,24,5,6,25,26,1,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,7,8,101,102,103,9,104,10,11,105,12,106,107,13,14,15,16,108,17,18,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,19,267,268,269,20,21,270,271,22,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,302,303,303],"tindex":"90acb944-db9b-11e4-921c-d18935309baa","variableMapping":{"heights":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"90acb945-db9b-11e4-921c-bff40136cb6f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[32,61,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,255,256,258,259,20,277],"tindex":"90acb946-db9b-11e4-921c-45288f83a573","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"90acb947-db9b-11e4-921c-5bd9fe73662e","variableMapping":{"high":"importance","guess":"importance","low":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"90acb948-db9b-11e4-921c-cd8ad29dbe53","variableMapping":{"oldValueIndex":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"90acb949-db9b-11e4-921c-dfb86f5b666b","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[321,322,323],"tindex":"90acb94a-db9b-11e4-921c-b10ab50596da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:467","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"90acb94b-db9b-11e4-921c-f9ee43d142fa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"90acb94c-db9b-11e4-921c-5b949e0b877f","variableMapping":{"lastKey":"shift","key":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"90acb94d-db9b-11e4-921c-63775942a576","variableMapping":{"graphHopperFolder":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[],"tindex":"90acb94e-db9b-11e4-921c-6b7b6ea28ffc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:50","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState))"},"status":-2},{"failures":[],"tindex":"90acb94f-db9b-11e4-921c-2923a63a8709","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[324,325,326,327,259,260,261,264,265,19,267,20,271,22,272,273,275,276,277,286,290],"tindex":"90acb950-db9b-11e4-921c-73de188b0538","variableMapping":{"size":"i","newSize":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[59,60,61,328,329],"tindex":"90ace061-db9b-11e4-921c-43225bc01f35","variableMapping":{"deltaX":"resultOrientation","maxX":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[258,259,260,263,264,22,273,274,275,277,278,286,287],"tindex":"90ace062-db9b-11e4-921c-d57759f03584","variableMapping":{"iter":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:364","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-1},{"failures":[],"tindex":"90ace063-db9b-11e4-921c-e537c45ae557","variableMapping":{"shift":"low"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[5,45,61,309,311,312,314,330,331],"tindex":"90ace064-db9b-11e4-921c-613e3248e0d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"90ace065-db9b-11e4-921c-57241e0adab6","variableMapping":{"maxSpeed":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"90ace066-db9b-11e4-921c-6fd7135d92f8","variableMapping":{"str":"key","name":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:82","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[],"tindex":"90ace067-db9b-11e4-921c-0b226781abc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[332,333,132,147,174,189,216,231,244,247],"tindex":"90ace068-db9b-11e4-921c-47f0b9d154f2","variableMapping":{"initLeafSize":"low","maxLeafEntries":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-1},{"failures":[],"tindex":"90ace069-db9b-11e4-921c-f3bd48203eaa","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[334,59,61,335,336,337,328,256,257],"tindex":"90ace06a-db9b-11e4-921c-eda7ebb39722","variableMapping":{"turnCosts":"angle","weight":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"90ace06b-db9b-11e4-921c-234433750bb2","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":0},{"failures":[],"tindex":"90ace06c-db9b-11e4-921c-692d9ab15d75","variableMapping":{"offset":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"90ace06d-db9b-11e4-921c-050730d24cc5","variableMapping":{"high":"hash","highKey":"hash","key":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[338],"tindex":"90ace06e-db9b-11e4-921c-83f91588e2df","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"90ace06f-db9b-11e4-921c-5d20717d9569","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[5,6,25,26,1,339,29,241,258,259,260,261,262,263,264,265,266,19,267,269,20,21,270,271,22,273,274,275,276,277,278,280,286,287,291],"tindex":"90ad0780-db9b-11e4-921c-e9b637f0c886","variableMapping":{"enableIfAssert":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"90ad0781-db9b-11e4-921c-e9d0e6aa7721","variableMapping":{"line":"entry","key":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"90ad0782-db9b-11e4-921c-3be8f63a06f3","variableMapping":{"fromX":"maxLon","toX":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[57,340,341,342,343,344,345,346,347,348,349,2,350,114,351,116,129,142,352,158,171,184,353,200,213,226,268],"tindex":"90ad0783-db9b-11e4-921c-a353d6d8b2a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":-1},{"failures":[5,26,33,47,354,355,356,357,358,359,71,77,100,18,120,121,135,143,148,155,162,163,177,185,190,197,204,205,219,227,232,239,241,305,246,310,360,313,259,20,21,277,280,286,288,291,296,299],"tindex":"90ad0784-db9b-11e4-921c-3d8efeb1a632","variableMapping":{"flags2":"backwardBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags","flags1":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"90ad0785-db9b-11e4-921c-5b324ad24422","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"90ad0786-db9b-11e4-921c-1b0bc777a19c","variableMapping":{"min":"maxTurnCosts","tmpSize":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[],"tindex":"90ad0787-db9b-11e4-921c-7fac178c7dbd","variableMapping":{"need":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":-1},{"failures":[],"tindex":"90ad0788-db9b-11e4-921c-21d8302058b8","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:149","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:62","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"status":0},{"failures":[],"tindex":"90ad0789-db9b-11e4-921c-ff81e53f2b6d","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[41,318,361,319,362,320,363],"tindex":"90ad078a-db9b-11e4-921c-db7791a10377","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[26,364,32,33,34,35,36,37,38,39,40,42,43,44,45,47,365,354,355,366,367,368,369,370,371,372,373,64,374,332,375,376,356,377,378,379,380,381,382,383,357,384,65,385,333,358,386,387,388,389,390,391,359,392,71,77,100,18,109,110,111,112,113,350,114,115,393,351,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,394,352,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,395,396,199,397,353,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,398,399,304,243,400,305,401,306,402,307,246,308,403,404,309,310,405,406,360,311,312,313,407,408,409,410,411,412,413,414,415,416,417,418,321,419,420,421,422,423,424,425,426,427,317,428,318,429,430,431,432,433,434,435,436,437,438,439,440,441,361,442,443,330,319,444,445,446,447,448,322,449,450,451,452,453,454,455,456,250,251,457,458,362,459,460,331,320,461,462,463,464,465,323,466,467,468,469,470,471,472,473,474,0,475,258,259,260,261,262,263,264,265,266,19,267,268,269,20,21,270,271,22,272,273,274,275,276,277,476,292,477,478],"tindex":"90ad2e9b-db9b-11e4-921c-5782dfc2ba71","variableMapping":{"line":"encoderList"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1},{"failures":[],"tindex":"90ad2e9c-db9b-11e4-921c-53928b34ce24","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"i","nodeId":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-2},{"failures":[412,427,445,462],"tindex":"90ad2e9d-db9b-11e4-921c-69cd310bd2e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[310],"tindex":"90ad2e9e-db9b-11e4-921c-19cc1fe0c148","variableMapping":{"bytePos":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[334,59,60,335,336,337,256,257],"tindex":"90ad2e9f-db9b-11e4-921c-9f648ab395a9","variableMapping":{"lat":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[479,480,481,482,483,484,485,486,487],"tindex":"90ada3d0-db9b-11e4-921c-8963190e3c20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setWorldBounds()"},"status":-1},{"failures":[],"tindex":"90ada3d1-db9b-11e4-921c-134f68e941a6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[311],"tindex":"90ada3d2-db9b-11e4-921c-aba35f2a0206","variableMapping":{"fwdFaster":"backSpeed","incDist2DSum":"backSpeed","fwdSlower":"backSpeed","fullDist2D":"backSpeed","restDist2D":"maxSpeed","speed":"backSpeed","decDist2DSum":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[244,249],"tindex":"90ada3d3-db9b-11e4-921c-8dd7b380e18c","variableMapping":{"initLeafSize":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[414,422,436,443,319,452,460,320,469],"tindex":"90ada3d4-db9b-11e4-921c-57c22b5e394f","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return \"destinations: \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[5,6,1,54,110,114,258,259,260,261,262,264,265,266,267,268,269,20,21,270,271,22,273,274,275,277,278,279,280,281,282,283,284,286,287,288,290,291],"tindex":"90adcae5-db9b-11e4-921c-b1f4f5a75a67","variableMapping":{"bytePos":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"90adcae6-db9b-11e4-921c-19ba0d5f6e8d","variableMapping":{"value":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[],"tindex":"90adcae7-db9b-11e4-921c-61fecf74fc54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"90adcae8-db9b-11e4-921c-f76d33bbd188","variableMapping":{"i":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"90adcae9-db9b-11e4-921c-0f8aea160c88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:430","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[41,363,488],"tindex":"90adcaea-db9b-11e4-921c-6d680a792f26","variableMapping":{"bm":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[312,489,314],"tindex":"90adcaeb-db9b-11e4-921c-5f2611dcfd8e","variableMapping":{"key":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"90adcaec-db9b-11e4-921c-89b1c42e9707","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[488],"tindex":"90adcaed-db9b-11e4-921c-a1f8e99abb6e","variableMapping":{"nodeB":"shift","edgeId":"shift","nodeA":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-1},{"failures":[],"tindex":"90adcaee-db9b-11e4-921c-a76c16242741","variableMapping":{"acceptBit":"directionBitMask","ferryBit":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"90adcaef-db9b-11e4-921c-19afa1a77fac","variableMapping":{"type":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:198","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"90adcaf0-db9b-11e4-921c-594d47194fb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[479,480,84,90,92,93,490,102,105,106,107,481,482,483,484,485,486,491,487,492],"tindex":"90adcaf1-db9b-11e4-921c-3dcac9b2e8b4","variableMapping":{"size":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"90adcaf2-db9b-11e4-921c-b5ba2d69b99c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[260,263,264,22,273,275,278,286,287],"tindex":"90adcaf3-db9b-11e4-921c-1f60924cb6dd","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"90adcaf4-db9b-11e4-921c-61cffc97ae2f","variableMapping":{"shift":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"90adcaf5-db9b-11e4-921c-3b97efc6911e","variableMapping":{"turnCostIndex":"locs","NO_TURN_ENTRY":"locs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"90adf206-db9b-11e4-921c-655b135054a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[],"tindex":"90adf207-db9b-11e4-921c-1b035138bb49","variableMapping":{"str":"tt","i":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:418","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String += \",\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":0},{"failures":[361,362,363],"tindex":"90adf208-db9b-11e4-921c-6d35754bcabb","variableMapping":{"high":"shift","guess":"shift","low":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"90adf209-db9b-11e4-921c-2b0a8a2c7449","variableMapping":{"bitsForEdgeFlags":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[489],"tindex":"90adf20a-db9b-11e4-921c-41bd922c5b42","variableMapping":{"val":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-1},{"failures":[244,249],"tindex":"90adf20b-db9b-11e4-921c-adc4ab070ff6","variableMapping":{"allSegments":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"90adf20c-db9b-11e4-921c-4747caad9e79","variableMapping":{"start":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"90adf20d-db9b-11e4-921c-67e32a49acf7","variableMapping":{"res":"bits","maxBit":"bits","value":"spatialKey"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":0},{"failures":[111,113],"tindex":"90adf20e-db9b-11e4-921c-2f74506b1153","variableMapping":{"mainEdgeState":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-1},{"failures":[251],"tindex":"90adf20f-db9b-11e4-921c-cb15c4943b7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[39,412,424,438,330,445,454,331,462,471],"tindex":"90adf210-db9b-11e4-921c-83d1ca3b41b1","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"90adf211-db9b-11e4-921c-af42345b71c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"90adf212-db9b-11e4-921c-492280dfba2d","variableMapping":{"distance":"java.lang.Double.POSITIVE_INFINITY","maxSpeed":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"90adf213-db9b-11e4-921c-bbbe6e9aa888","variableMapping":{"nodeId":"shift","mainNodes":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"90adf214-db9b-11e4-921c-8778f82f5115","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[258,259,274,275,277,291],"tindex":"90adf215-db9b-11e4-921c-2fd38cfdf566","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[109,111,260,264,267,22,273,274,277,279,280,286,290],"tindex":"90adf216-db9b-11e4-921c-b504108cb1e4","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"90adf217-db9b-11e4-921c-937f02a15cb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isBool(long, int);\n}"},"status":-2},{"failures":[0],"tindex":"90adf218-db9b-11e4-921c-934207577503","variableMapping":{"nameIndexRef":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[424,438,454,471],"tindex":"90ae1929-db9b-11e4-921c-7f323bba9f1b","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"90af2a9a-db9b-11e4-921c-4f5ad3df352f","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[59,60,61,328,329],"tindex":"90af2a9b-db9b-11e4-921c-bfbf038a0283","variableMapping":{"resultOrientation":"resultOrientation","orientation":"resultOrientation","java.lang.Math.PI":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[258,259,274,277,291],"tindex":"90af2a9c-db9b-11e4-921c-e57e1ffc7235","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[5,6,25,26,1,339,29,30,31,32,33,34,36,39,40,42,43,44,47,49,50,61,365,354,355,372,64,357,358,388,359,393,119,120,121,128,130,143,148,151,155,394,161,162,163,170,172,185,190,193,197,395,397,203,204,205,212,214,227,232,235,239,241,399,244,248,249,403,310,405,313,410,416,430,446,463,474,258,259,263,266,268,20,21,277,278,280,281,286,287,288,291,296,299],"tindex":"90af2a9d-db9b-11e4-921c-bba0a283e738","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[],"tindex":"90af2a9e-db9b-11e4-921c-6d8ab6496be0","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[5,6,25,26,1,339,29,34,35,36,479,480,84,87,90,92,93,490,102,104,105,106,107,15,241,242,22,481,482,483,484,485,486,491,487,492],"tindex":"90af2a9f-db9b-11e4-921c-ebf5f16e7199","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":272,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":293,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":314,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":350,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":354,"com.graphhopper.reader.OSMReaderTest.testFerry":32,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":50,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":104,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":24,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":334,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":469,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":213,"com.graphhopper.coll.CompressedArrayTest.testCompress":480,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":435,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":196,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":381,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":172,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":101,"com.graphhopper.util.AngleCalcTest.testOrientation":335,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":288,"com.graphhopper.GraphHopperTest.testPrepare":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":389,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":278,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":442,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":267,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":436,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":63,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":117,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":102,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":248,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":441,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":260,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":87,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":395,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":491,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":119,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":291,"com.graphhopper.GraphHopperTest.testLoadOSM":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":94,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":88,"com.graphhopper.reader.OSMReaderTest.testSort":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":453,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":353,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":191,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":394,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":485,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":390,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":299,"com.graphhopper.routing.DijkstraTest.initializationError":477,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":234,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":144,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":168,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":396,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":460,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":426,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":12,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":176,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":21,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":11,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":263,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":217,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":223,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":136,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":393,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":138,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":337,"com.graphhopper.coll.CompressedArrayTest.testCompress2":479,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":413,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":214,"com.graphhopper.GraphHopperAPITest.testLoad":241,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":118,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":343,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":399,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":173,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":163,"com.graphhopper.storage.LevelGraphStorageTest.testClone":123,"com.graphhopper.reader.OSMReaderTest.testBarriers":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":204,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":249,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":461,"com.graphhopper.util.GHUtilityTest.testCopy":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":420,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":438,"com.graphhopper.routing.PathTest.testFindInstruction":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":432,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":205,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":324,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":49,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":306,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":152,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":459,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":192,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":177,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":232,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":467,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":476,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":125,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":369,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":2,"com.graphhopper.util.InstructionListTest.testWayList2":60,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":358,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":95,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":197,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":237,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":250,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":352,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":127,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":215,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":79,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":264,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":37,"com.graphhopper.routing.AStarTest.initializationError":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":212,"com.graphhopper.routing.PathBidirRefTest.testExtract":252,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":402,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":447,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":240,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":446,"com.graphhopper.util.GHUtilityTest.testSort2":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":270,"com.graphhopper.reader.OSMReaderTest.testMain":34,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":351,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":448,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":487,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":454,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":387,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":130,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":134,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":155,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":131,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":227,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":342,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":458,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":137,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":45,"com.graphhopper.storage.GraphHopperStorageTest.testClone":165,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":313,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":311,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":109,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":424,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":370,"com.graphhopper.routing.PathTest.testTime":255,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":419,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":153,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":97,"com.graphhopper.reader.OSMReaderTest.testRelation":41,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":380,"com.graphhopper.util.GHUtilityTest.testSortDirected":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":470,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":295,"com.graphhopper.GraphHopperTest.testFootOnly":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":428,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":406,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":105,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":356,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":292,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":346,"com.graphhopper.routing.QueryGraphTest.testOneWay":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":98,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":481,"com.graphhopper.reader.OSMReaderTest.testWithBounds":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":236,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":245,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":332,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":382,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":363,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":120,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":116,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":468,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":439,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":226,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":71,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":219,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":161,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":259,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":3,"com.graphhopper.util.InstructionListTest.testWayList":59,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":445,"com.graphhopper.GraphHopperAPITest.testDisconnected179":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":371,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":323,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":247,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":451,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":25,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":81,"com.graphhopper.routing.util.EncodedValueTest.testSwap":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":289,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":440,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":269,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":478,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":287,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":151,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":407,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":452,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":201,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":108,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":345,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":456,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":157,"com.graphhopper.routing.PathTest.testWayList":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":391,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":374,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":405,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":489,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":277,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":450,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":178,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":304,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":210,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":106,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":135,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":107,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":463,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":414,"com.graphhopper.util.GHUtilityTest.testSort":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":384,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":492,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":430,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":449,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":239,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":75,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":103,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":83,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":68,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":331,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":298,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":199,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":339,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":416,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":316,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":275,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":244,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":349,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":65,"com.graphhopper.routing.PathTest.testFound":254,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":0,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":364,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":150,"com.graphhopper.util.AngleCalcTest.testAtan2":336,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":322,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":216,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":64,"com.graphhopper.util.InstructionListTest.testEmptyList":57,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":20,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":410,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":404,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":403,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":437,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":271,"com.graphhopper.reader.PrinctonReaderTest.testRead":30,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":4,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":10,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":373,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":365,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":221,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":464,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":362,"com.graphhopper.reader.OSMReaderTest.testFoot":33,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":92,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":154,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":427,"com.graphhopper.reader.OSMReaderTest.testOneWay":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":93,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":174,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":189,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":233,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":433,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":462,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":378,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":283,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":490,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":290,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":312,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":281,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":375,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":294,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":46,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":158,"com.graphhopper.routing.PathBidirRefTest.testExtract2":253,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":422,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":187,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":425,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":392,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":400,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":466,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":89,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":190,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":408,"com.graphhopper.GraphHopperTest.testFootAndCar":26,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":182,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":415,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":367,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":474,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":409,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":207,"com.graphhopper.GraphHopperTest.testPrepareOnly":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":273,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":355,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":42,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":113,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":61,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":186,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":305,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":40,"com.graphhopper.util.AngleCalcTest.testCombined":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":377,"com.graphhopper.routing.AStarBidirectionTest.initializationError":475,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":308,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":149,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":147,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":397}}]
