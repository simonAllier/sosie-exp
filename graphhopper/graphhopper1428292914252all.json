[{"failures":[],"tindex":"ac66f27a-dc11-11e4-a2a2-139b77d2abb4","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"length","nodeId":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"ac67198b-dc11-11e4-a2a2-3bd8a938239d","variableMapping":{"maxLeafEntries":"sLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"ac67198c-dc11-11e4-a2a2-597f6eb70cb6","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"ac67198d-dc11-11e4-a2a2-ddcb5a800195","variableMapping":{"flags":"defaultValue","tmpValue":"defaultValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"ac67198e-dc11-11e4-a2a2-5b9e749cc232","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"ac67198f-dc11-11e4-a2a2-cbdd13aefd59","variableMapping":{"index":"start","entrySize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:294","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"ac671990-dc11-11e4-a2a2-2551dd79a660","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"ac6740a1-dc11-11e4-a2a2-898848eafc0e","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","edgeTo":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","edgeFrom":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"ac6740a2-dc11-11e4-a2a2-f7685060858c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[0],"tindex":"ac6740a3-dc11-11e4-a2a2-a1f643d58d34","variableMapping":{"empty":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"ac6740a4-dc11-11e4-a2a2-f3e878c78f9f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"ac6740a5-dc11-11e4-a2a2-b1a81dc0e595","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"ac6740a6-dc11-11e4-a2a2-c9fb18c49ebd","variableMapping":{"lastTime":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[34,5,6],"tindex":"ac6740a7-dc11-11e4-a2a2-eb3fdcd7d4d4","variableMapping":{"from":"biggestStart","end":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[35],"tindex":"ac6740a8-dc11-11e4-a2a2-ed070b2c7c01","variableMapping":{"err":"removed","tmpErr":"minOnewayNetworkSize","y1":"minOnewayNetworkSize","dLon":"removed","sLat":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[36,37,38,39,40,41],"tindex":"ac6740a9-dc11-11e4-a2a2-2778304459d8","variableMapping":{"eof":"restricted"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,33,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"ac6740aa-dc11-11e4-a2a2-1f5ef03ceac5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-1},{"failures":[81,82],"tindex":"ac6740ab-dc11-11e4-a2a2-7188372dc326","variableMapping":{"red":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[83],"tindex":"ac6740ac-dc11-11e4-a2a2-711364c86b9f","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"ac6740ad-dc11-11e4-a2a2-f3ccc8868771","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"ac6767be-dc11-11e4-a2a2-ad222bcc6b30","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[84,47,48,51,52,62,64,65,66,68,85,76,86,80],"tindex":"ac6767bf-dc11-11e4-a2a2-a36f3d49b623","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"ac6767c0-dc11-11e4-a2a2-f561ea8ebaf3","variableMapping":{"mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-2},{"failures":[],"tindex":"ac6767c1-dc11-11e4-a2a2-25d6957d954f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:159","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,18,122,123,124,125,126,20,21,127,128,129,130,131,132,133,42,43,44,45,46,134,84,47,48,49,50,51,52,53,54,33,55,56,57,58,59,60,61,62,63,64,65,66,67,68,85,69,70,71,72,73,74,75,76,86,77,79,80,135,136],"tindex":"ac6767c2-dc11-11e4-a2a2-9565e21b5ee9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"ac6767c3-dc11-11e4-a2a2-fd05f5472499","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":0},{"failures":[],"tindex":"ac6767c4-dc11-11e4-a2a2-594297586112","variableMapping":{"currentEntry":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"ac6767c5-dc11-11e4-a2a2-592f46ebf3a3","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":0},{"failures":[],"tindex":"ac6767c6-dc11-11e4-a2a2-3792d9a305d0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"ac6767c7-dc11-11e4-a2a2-a9d1f266d4d3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"ac6767c8-dc11-11e4-a2a2-731a515f364a","variableMapping":{"finishedTo":"out","finishedFrom":"out"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[52,66],"tindex":"ac6767c9-dc11-11e4-a2a2-b149a0123cfb","variableMapping":{"closed":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"ac6767ca-dc11-11e4-a2a2-ed6e315bf600","variableMapping":{"low":"shift","guess":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"ac6767cb-dc11-11e4-a2a2-352dfea35580","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[137,35],"tindex":"ac678edc-dc11-11e4-a2a2-35f352962a28","variableMapping":{"size":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"ac678edd-dc11-11e4-a2a2-57eb918aaccf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"ac678ede-dc11-11e4-a2a2-7da74fa16589","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[94,102,103,104,107,108,112,113,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,137,6],"tindex":"ac678edf-dc11-11e4-a2a2-97e69509b94e","variableMapping":{"segmentsToMap":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-1},{"failures":[],"tindex":"ac678ee0-dc11-11e4-a2a2-01b33754eb45","variableMapping":{"lastTime":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[162,90,93,94,97,101,163,105,106,110,111,114,115,116,118,164,165,166,138,167,168,169,170,171,172,173,174,175,176,177,178,179,146,180,181,182,183,184,185,186,187,188,189,190,191,154,192,193,194,195,196,197,198,199,200,201,202,43,44,203,204,45,205,206,207,81,208,209,210,37,211,212,213,34,214,215,216,137,217,6,218,219,84,47,48,49,52,55,57,58,60,62,64,65,66,68,85,70,71,72,73,74,76,86,77,79,80,135,220,221,222,136],"tindex":"ac678ee1-dc11-11e4-a2a2-13e863ce6879","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[223,224,225,226],"tindex":"ac678ee2-dc11-11e4-a2a2-7f4ef2ae062e","variableMapping":{"high":"ferryBit","highKey":"ferryBit","key":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[133,42,43,44,203,204,45,46,205,134,227,81,208,209,228,210,229,230,37,211,212,231,213,232,233,34,234,235,236,237,238,239,223,240,241,242,243,244,245,246,247,224,248,249,250,251,0,252,253,254,255,256,257,258,259,260,261,262,225,263,264,265,266,267,268,269,226,270,271],"tindex":"ac678ee3-dc11-11e4-a2a2-a98a153467ff","variableMapping":{"bits":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"ac678ee4-dc11-11e4-a2a2-c59c8c05e102","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"ac678ee5-dc11-11e4-a2a2-ddc41dea8d1d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"ac678ee6-dc11-11e4-a2a2-b1fdbda2564c","variableMapping":{"numTiles":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"ac678ee7-dc11-11e4-a2a2-d715b04cfd43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"ac67b5f8-dc11-11e4-a2a2-afe797bd6f85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:307","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"status":0},{"failures":[272,273,274,275,276,277,90,92,109,112,116,117,278,164,165,279,280,144,176,281,282,283,284,285,122,123,124,286,178,287,288,152,189,289,290,198,291,292,293,294,295,133,43,44,203,204,45,46,205,134,227,209,228,210,229,230,296,297,298,214,299,215,300,301,216,302,303,304,65,220,221,222,271,136],"tindex":"ac67b5f9-dc11-11e4-a2a2-631f11d88441","variableMapping":{"segmentSizeInBytes":"segmentSizePower","length":"segmentSizePower","index":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"ac67b5fa-dc11-11e4-a2a2-79bde85306f8","variableMapping":{"res":"d2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.Circle:172","type":"CtIfImpl","sourcecode":"if (double < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"ac67b5fb-dc11-11e4-a2a2-2d93188112e7","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"i","entityType":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[],"tindex":"ac67b5fc-dc11-11e4-a2a2-fff9478a7939","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"ac67b5fd-dc11-11e4-a2a2-d50344f1b118","variableMapping":{"d":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"ac67b5fe-dc11-11e4-a2a2-790730393d86","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[305,306,307,308,309],"tindex":"ac67b5ff-dc11-11e4-a2a2-3dc5e8c20d3e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"ac67b600-dc11-11e4-a2a2-abc083bac3c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:143","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"ac67b601-dc11-11e4-a2a2-ff3097c450d9","variableMapping":{"highwayValue":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":0},{"failures":[310,234,235],"tindex":"ac67b602-dc11-11e4-a2a2-d9893488a73b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[198],"tindex":"ac67b603-dc11-11e4-a2a2-1f2ad0aa687f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"ac67b604-dc11-11e4-a2a2-1ff685b3837b","variableMapping":{"fromNode":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":0},{"failures":[81,82],"tindex":"ac67b605-dc11-11e4-a2a2-7bb70181c420","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"ac67dd16-dc11-11e4-a2a2-8598d5af7e7b","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1024","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks().size()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"ac67dd17-dc11-11e4-a2a2-45ab44210f13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[310,234,235],"tindex":"ac67dd18-dc11-11e4-a2a2-e9ab25977a71","variableMapping":{"bytes":"flags","capacity":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"ac67dd19-dc11-11e4-a2a2-698f5011f0d0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[162,311,312,272,273,274,313,314,315,316,87,317,88,89,318,277,319,320,90,321,322,91,323,92,93,94,95,96,97,98,99,100,101,324,163,102,103,325,104,105,326,106,107,108,109,327,328,110,329,111,112,113,114,330,115,116,331,117,278,118,119,332,333,334,335,164,336,337,165,338,339,340,341,279,166,138,342,343,167,344,345,346,168,347,169,139,140,348,141,170,349,171,142,143,280,350,351,172,352,173,144,145,174,353,175,176,354,281,282,177,355,356,357,358,359,360,361,13,362,283,284,285,363,14,364,15,16,365,366,367,368,369,370,120,121,371,18,372,122,123,124,125,19,126,20,21,127,128,129,130,131,132,373,1,2,3,374,375,4,376,377,378,379,380,381,286,382,383,384,178,385,386,387,388,287,179,146,389,390,180,391,392,393,181,394,182,147,148,395,149,183,396,184,150,151,288,397,398,185,399,186,152,153,187,400,188,189,401,289,290,190,402,403,191,154,404,405,192,406,407,408,193,409,194,155,156,410,157,195,411,196,158,159,412,413,414,197,415,198,160,161,199,416,200,201,417,418,419,202,420,291,292,293,294,295,133,42,43,44,203,204,45,421,46,205,134,227,422,36,423,424,425,426,427,206,207,81,208,209,228,210,229,230,37,211,310,212,231,213,232,233,34,296,296,297,297,428,428,298,298,214,214,299,299,429,429,215,215,300,300,430,430,431,431,301,301,432,433,434,435,216,302,137,217,5,6,218,35,303,304,219,84,47,48,49,50,51,52,53,54,33,55,56,57,58,59,60,61,62,63,64,65,66,67,68,85,69,70,71,72,73,74,75,76,86,77,78,79,80,7,8,135,436,220,221,222,271,9,10,437,11,136,12,438],"tindex":"ac67dd1a-dc11-11e4-a2a2-79090758e8cc","variableMapping":{"key":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"ac67dd1b-dc11-11e4-a2a2-09a3eb3b5600","variableMapping":{"ex":"this","osmFile":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:321","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException((((\"Couldn\\'t process file \" + java.io.File) + \", error: \") + (java.lang.Exception.getMessage())) , java.lang.Exception)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[87,76,79],"tindex":"ac67dd1c-dc11-11e4-a2a2-1f7ef09d3bf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[],"tindex":"ac67dd1d-dc11-11e4-a2a2-15a6e7fabffe","variableMapping":{"cap":"flags","bytes":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[439],"tindex":"ac68042e-dc11-11e4-a2a2-71767086aaa8","variableMapping":{"size":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-1},{"failures":[],"tindex":"ac68042f-dc11-11e4-a2a2-0936ebbf71e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[],"tindex":"ac680430-dc11-11e4-a2a2-d7b7d817928e","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":0},{"failures":[],"tindex":"ac680431-dc11-11e4-a2a2-ef887dfee7fc","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","nextEdge":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[94,102,103,107,112,113,138,139,140,142,144,145,146,147,148,150,152,153,154,155,156,158,160,161,6],"tindex":"ac680432-dc11-11e4-a2a2-e3e8d4d5f73e","variableMapping":{"tmp":"high","initializedCounter":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-1},{"failures":[],"tindex":"ac680433-dc11-11e4-a2a2-c37087c557db","variableMapping":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"ac680434-dc11-11e4-a2a2-0f974c00911a","variableMapping":{"factor":"decDist2DSum","delta_lon":"decDist2DSum","a_lon":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[],"tindex":"ac680435-dc11-11e4-a2a2-bf5338ea1587","variableMapping":{"currentEntry":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[310,238,242,245,264,267],"tindex":"ac680436-dc11-11e4-a2a2-c3e663b3ab41","variableMapping":{"pos":"code","mSize":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,90,92,109,112,116,278,164,165,279,280,144,176,282,455,456,457,458,283,285,122,124,178,287,288,152,189,290,403,412,198,160,201,419,291,292,293,294,295,133,43,44,203,45,205,134,81,209,228,210,229,230,37,211,212,231,213,232,34,297,299,300,301,216,65,221,222,459,460,461,136],"tindex":"ac680437-dc11-11e4-a2a2-d124344d571e","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"ac680438-dc11-11e4-a2a2-31ee2e09d971","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-2},{"failures":[],"tindex":"ac680439-dc11-11e4-a2a2-b1f84b770e5a","variableMapping":{"edgePointer":"flags","maxEdges":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"ac682b4a-dc11-11e4-a2a2-7520a713190c","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"ac682b4b-dc11-11e4-a2a2-af7db45c752d","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,90,92,109,112,116,278,164,165,279,280,144,176,282,455,456,457,458,283,285,122,124,178,287,288,152,189,290,403,412,198,160,201,419,291,292,293,294,295,133,43,44,203,45,205,134,81,209,228,210,229,230,37,211,212,231,213,232,34,297,299,300,301,216,65,221,222,459,460,461,136],"tindex":"ac682b4c-dc11-11e4-a2a2-0947891ce462","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[462,463,464],"tindex":"ac682b4d-dc11-11e4-a2a2-31b8f0daf422","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:638","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[],"tindex":"ac682b4e-dc11-11e4-a2a2-9932ad9244cc","variableMapping":{"key":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"ac682b4f-dc11-11e4-a2a2-4bdb8707f176","variableMapping":{"r":"maxLat","x":"maxLat","absY":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"ac682b50-dc11-11e4-a2a2-41e84f07fca0","variableMapping":{"directionBitMask":"directionBitMask","blockByDefault":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":0},{"failures":[],"tindex":"ac682b51-dc11-11e4-a2a2-df6846e246a7","variableMapping":{"currEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":0},{"failures":[163,169,182,194,43,204,134,81,232,435,216,236,465,237,238,466,241,304,462,244,245,467,249,468,250,252,253,254,469,470,256,471,257,472,463,261,473,464,266,267,474,84,47,55,57,58,68,271],"tindex":"ac682b52-dc11-11e4-a2a2-83473d468966","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[57,70],"tindex":"ac682b53-dc11-11e4-a2a2-ef8ae4a4a52e","variableMapping":{"foundNext":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:809","type":"CtIfImpl","sourcecode":"if (boolean)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[],"tindex":"ac682b54-dc11-11e4-a2a2-5dca91684507","variableMapping":{"shift":"shift","preferWayEncoder":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[223,224,252,255,258,225,226],"tindex":"ac682b55-dc11-11e4-a2a2-f982a744c192","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[238],"tindex":"ac682b56-dc11-11e4-a2a2-73e4bc6253ba","variableMapping":{"encoderList":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"ac685267-dc11-11e4-a2a2-9b087de7efe3","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"ac685268-dc11-11e4-a2a2-43f22196c0ab","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[84,47,68,85,86],"tindex":"ac685269-dc11-11e4-a2a2-5f5593838a79","variableMapping":{"edgeId":"from","nextEdge":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[162,311,87,317,88,89,318,277,319,320,90,321,322,91,92,93,94,95,96,97,98,99,100,101,324,163,102,103,325,104,105,326,106,107,108,109,327,328,110,329,111,112,113,114,330,115,116,331,117,278,118,119,164,337,165,338,339,340,279,166,138,342,343,167,344,345,346,168,347,169,139,140,348,141,170,349,171,142,143,280,350,351,172,352,173,144,145,174,353,175,176,354,281,282,177,355,475,476,477,455,478,479,480,481,456,457,458,356,357,358,359,360,361,13,362,283,284,285,363,14,364,15,16,365,366,367,368,369,370,120,121,371,18,372,122,123,124,125,19,126,20,21,127,128,129,130,131,132,1,2,3,374,4,376,377,378,379,380,381,384,178,385,386,387,287,179,146,389,390,180,391,392,393,181,394,182,147,148,395,149,183,396,184,150,151,288,397,398,185,399,186,152,153,187,400,188,189,401,289,290,190,402,194,198,133,42,43,44,203,204,45,46,205,134,227,36,206,207,81,208,209,228,210,229,230,37,211,212,231,213,232,34,296,297,428,298,214,299,429,215,300,430,431,301,432,433,216,302,137,217,5,6,218,35,303,304,219,84,47,48,49,50,51,52,53,54,33,55,56,57,58,59,60,61,62,63,64,65,66,67,68,85,69,70,71,72,73,74,75,76,86,77,78,79,80,7,8,135,436,220,221,222,271,9,10,437,11,136,12,438],"tindex":"ac68526a-dc11-11e4-a2a2-238045bee6f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"ac68526b-dc11-11e4-a2a2-4fa8730bbb16","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"ac68526c-dc11-11e4-a2a2-075eb78056ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":63,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":297,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":249,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":277,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":191,"com.graphhopper.reader.OSMReaderTest.testFerry":81,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":9,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":266,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":123,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":42,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":347,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":424,"com.graphhopper.coll.CompressedArrayTest.testCompress":32,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":72,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":412,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":371,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":77,"com.graphhopper.GraphHopperTest.testPrepare":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":85,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":184,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":55,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":220,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":373,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":239,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":8,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":218,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":464,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":476,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":54,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":284,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":267,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":164,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":28,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":92,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":80,"com.graphhopper.GraphHopperTest.testLoadOSM":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":365,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":285,"com.graphhopper.reader.OSMReaderTest.testSort":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":474,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":5,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":338,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":448,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":400,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":178,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":418,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":215,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":175,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":454,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":329,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":392,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":336,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":279,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":473,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":126,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":59,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":125,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":421,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":50,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":94,"com.graphhopper.coll.OSMIDMapTest.testGetLong":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":348,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":342,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":326,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":90,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":107,"com.graphhopper.coll.CompressedArrayTest.testCompress2":31,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":151,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":463,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":169,"com.graphhopper.GraphHopperAPITest.testLoad":162,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":323,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":455,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":147,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":146,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":82,"com.graphhopper.storage.LevelGraphStorageTest.testClone":96,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":166,"com.graphhopper.reader.OSMReaderTest.testBarriers":210,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":53,"com.graphhopper.util.GHUtilityTest.testCopy":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":192,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":132,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":223,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":445,"com.graphhopper.routing.PathTest.testFindInstruction":302,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":138,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":305,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":135,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":257,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":331,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":357,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":188,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":174,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":437,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":141,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":320,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":439,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":98,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":406,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":458,"com.graphhopper.util.InstructionListTest.testWayList2":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":366,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":190,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":265,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":281,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":465,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":303,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":385,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":100,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":41,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":449,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":157,"com.graphhopper.storage.RAMDirectoryTest.testSynched":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":139,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":52,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":179,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":229,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":65,"com.graphhopper.coll.OSMIDMapTest.testGet":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":168,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":258,"com.graphhopper.routing.PathBidirRefTest.testExtract":432,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":109,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":293,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":128,"com.graphhopper.storage.RAMDataAccessTest.testCopy":440,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":160,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":237,"com.graphhopper.storage.RAMDataAccessTest.testSegments":444,"com.graphhopper.util.GHUtilityTest.testSort2":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":60,"com.graphhopper.reader.OSMReaderTest.testMain":209,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":321,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":142,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":29,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":226,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":110,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":339,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":163,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":104,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":118,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":102,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":462,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":477,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":106,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":232,"com.graphhopper.storage.StorablePropertiesTest.testStore":286,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":275,"com.graphhopper.storage.GraphHopperStorageTest.testClone":390,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":416,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":255,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":314,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":253,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":395,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":87,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":225,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":407,"com.graphhopper.routing.PathTest.testTime":435,"com.graphhopper.util.BitUtilLittleTest.testToFloat":460,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":117,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":469,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":159,"com.graphhopper.reader.OSMReaderTest.testRelation":310,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":328,"com.graphhopper.util.GHUtilityTest.testSortDirected":438,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":467,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":452,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":298,"com.graphhopper.GraphHopperTest.testFootOnly":134,"com.graphhopper.util.BitUtilLittleTest.testToInt":461,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":2,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":252,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":19,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":195,"com.graphhopper.search.NameIndexTest.testCreate":274,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":443,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":296,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":480,"com.graphhopper.routing.QueryGraphTest.testOneWay":430,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":25,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":283,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":22,"com.graphhopper.reader.OSMReaderTest.testWithBounds":213,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":156,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":217,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":472,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":234,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":93,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":259,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":240,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":351,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":170,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":287,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":47,"com.graphhopper.util.BitUtilLittleTest.testToBitString":459,"com.graphhopper.util.InstructionListTest.testWayList":221,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":268,"com.graphhopper.GraphHopperAPITest.testDisconnected179":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":408,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":404,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":334,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":207,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":158,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":202,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":203,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":391,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":78,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":185,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":86,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":269,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":67,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":388,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":479,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":270,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":384,"com.graphhopper.routing.PathTest.testWayList":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":419,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":155,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":83,"com.graphhopper.coll.OSMIDMapTest.testGet2":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":68,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":114,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":350,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":396,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":470,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":20,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":21,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":441,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":127,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":307,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":260,"com.graphhopper.util.GHUtilityTest.testSort":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":415,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":468,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":30,"com.graphhopper.search.NameIndexTest.testPut":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":341,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":389,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":359,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":372,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":4,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":378,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":456,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":244,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":429,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":304,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":376,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":337,"com.graphhopper.storage.MMapDirectoryTest.testSynched":332,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":349,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":137,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":457,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":198,"com.graphhopper.routing.PathTest.testFound":434,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":227,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":236,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":115,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":88,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":140,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":306,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":273,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":194,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":181,"com.graphhopper.util.InstructionListTest.testEmptyList":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":33,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":466,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":61,"com.graphhopper.reader.PrinctonReaderTest.testRead":206,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":124,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":346,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":23,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":403,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":171,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":38,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":242,"com.graphhopper.reader.OSMReaderTest.testFoot":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":197,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":301,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":15,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":27,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":16,"com.graphhopper.reader.OSMReaderTest.testOneWay":34,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":148,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":153,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":353,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":451,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":196,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":73,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":71,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":379,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":450,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":219,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":410,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":428,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":233,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":386,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":335,"com.graphhopper.routing.PathBidirRefTest.testExtract2":433,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":481,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":84,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":262,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":367,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":312,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":186,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":37,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":420,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":380,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":363,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":187,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":99,"com.graphhopper.GraphHopperTest.testFootAndCar":204,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":288,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":131,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":405,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":343,"com.graphhopper.storage.StorablePropertiesTest.testLoad":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":64,"com.graphhopper.GraphHopperTest.testPrepareOnly":133,"com.graphhopper.GraphHopperTest.testVia":43,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":154,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":212,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":318,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":271,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":399,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":471,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":411,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":241,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":330,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":113,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":165}}]
