[{"failures":[],"tindex":"35a379ea-dad6-11e4-904e-776203a09355","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"segmentSizeIntsPower","flags":"cap","roundaboutBit":"cap","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"segmentsToCreate","forwardBit":"cap","key":"segmentsToCreate","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"segmentsToCreate","backwardBit":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"35a5279b-dad6-11e4-904e-6137bb9a51af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"35a611fc-dad6-11e4-904e-556302e3530b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[0],"tindex":"35a611fd-dad6-11e4-904e-df6dc6c61bb5","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11],"tindex":"35a611fe-dad6-11e4-904e-2baa8db2d52e","variableMapping":{"retBucket":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"35a611ff-dad6-11e4-904e-53a43b3456da","variableMapping":{"alreadyRun":"found"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":0},{"failures":[],"tindex":"35a61200-dad6-11e4-904e-a328053299f0","variableMapping":{"encoder":"encoder","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:247","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[12,13,14,15],"tindex":"35a61201-dad6-11e4-904e-59bbd98a1413","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:400","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"35a61202-dad6-11e4-904e-0506d50028e9","variableMapping":{"i":"x1","lastIndex":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"35a61203-dad6-11e4-904e-3581fd8dca69","variableMapping":{"retBucket":"bits","bucketSize":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"35a61204-dad6-11e4-904e-95a56f269ceb","variableMapping":{"java.lang.Double.MAX_VALUE":"maxSpeed","existingDirectWeight":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"35a61205-dad6-11e4-904e-4bfcff75fc27","variableMapping":{"i":"nextNodeBit","to":"usedBits","lonSize":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"35a61206-dad6-11e4-904e-09849c33b4d2","variableMapping":{"empty":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"35a61207-dad6-11e4-904e-e70902f63642","variableMapping":{"nodeThis":"i","nextEdgeOther":"allBits","nodeOther":"i","nextEdge":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[37,38],"tindex":"35a63918-dad6-11e4-904e-91cf70f386b4","variableMapping":{"y1":"shortTripsSpeed","x1":"shortTripsSpeed","y2":"shortTripsSpeed","x2":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,28,52,53,54,30,31,55,56,57,58,59,60,61,32,62,63,64,33,65,66,67,35,36,68,69,70],"tindex":"35a63919-dad6-11e4-904e-ff65ba5ee2e4","variableMapping":{"fromNode":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-1},{"failures":[],"tindex":"35a6391a-dad6-11e4-904e-11f45a279949","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"35a6391b-dad6-11e4-904e-0dd388bcfe49","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":0},{"failures":[71],"tindex":"35a6602c-dad6-11e4-904e-71ccf359d77d","variableMapping":{"factor":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"35a6602d-dad6-11e4-904e-455acf69d922","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"35a6602e-dad6-11e4-904e-59772d610325","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[72,73],"tindex":"35a6602f-dad6-11e4-904e-5980b53c87f2","variableMapping":{"size":"maxCount","hash":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[74,75,38,76,77,78,79],"tindex":"35a68740-dad6-11e4-904e-4db22dd33954","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[74,77,78,79],"tindex":"35a68741-dad6-11e4-904e-d565033408d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"35a68742-dad6-11e4-904e-2ff8c0604ebb","variableMapping":{"flags":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"35a68743-dad6-11e4-904e-65f04e141c9c","variableMapping":{"factor":"backSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[39,40,41,42,43,44,80,81,37,82,46,83,84,85,86,87,72,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,0,107,108,109,110,111,112,113,114,49,115,116,117,118,119,120,121,122,123,50,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"tindex":"35a68744-dad6-11e4-904e-85cc09c8e0ab","variableMapping":{"nodeId":"flags","nodeIdOffset":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"35a6d565-dad6-11e4-904e-638d819b6095","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[184],"tindex":"35a6d566-dad6-11e4-904e-abaf9c955ed5","variableMapping":{"sacScale":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"35a6d567-dad6-11e4-904e-9db6298de19f","variableMapping":{"need":"noOfStates","i":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[],"tindex":"35a6d568-dad6-11e4-904e-ed8d421f9454","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"35a6d569-dad6-11e4-904e-bde239f1195b","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":0},{"failures":[],"tindex":"35a6d56a-dad6-11e4-904e-83b33cc4b3c2","variableMapping":{"dist":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"35a7e6db-dad6-11e4-904e-dd6c4d1315be","variableMapping":{"bits":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[185,186,3],"tindex":"35a80dec-dad6-11e4-904e-795c4f65992d","variableMapping":{"entry":"trackType","entryVal":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[187,39,40,41,42,43,188,44,45,189,37,82,46,47,83,190,191,84,85,86,192,87,193,72,25,113,48,49,50,51,28,194,52,53,195,54,30,31,196,55,56,57,197,126,198,58,59,60,61,32,62,63,64,199,33,200,65,201,66,67,35,36,202,68,69,203,70,127],"tindex":"35a834fd-dad6-11e4-904e-459e70ba6c50","variableMapping":{"segmentSizeInBytes":"dLon","index":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-1},{"failures":[],"tindex":"35a9e2ae-dad6-11e4-904e-b3617c0f2a17","variableMapping":{"i":"priorityFromRelation","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":0},{"failures":[],"tindex":"35a9e2af-dad6-11e4-904e-0be872af4c93","variableMapping":{"offset":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"35a9e2b0-dad6-11e4-904e-5590c47cab59","variableMapping":{"logMessages":"resultOrientation","logMessagesPercentage":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:158","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"35a9e2b1-dad6-11e4-904e-956c7b9f80b1","variableMapping":{"ref":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":0},{"failures":[],"tindex":"35a9e2b2-dad6-11e4-904e-b1b9cad3dfa2","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[204,205,206],"tindex":"35a9e2b3-dad6-11e4-904e-0717f73a6f09","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[207,1,5,6,8,9,11],"tindex":"35a9e2b4-dad6-11e4-904e-93c63b58f1e8","variableMapping":{"segmentSizeInBytes":"code","indexDivisor":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"35aa09c5-dad6-11e4-904e-7f0aa8b65318","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"35aa09c6-dad6-11e4-904e-090b3be20f38","variableMapping":{"latSize":"com.graphhopper.util.EdgeIterator.NO_EDGE","size":"com.graphhopper.util.EdgeIterator.NO_EDGE","lonSize":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"35aa09c7-dad6-11e4-904e-e9699361d21f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"35aa09c8-dad6-11e4-904e-a51544de42e0","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"35aa09c9-dad6-11e4-904e-cd95ab3c4ab3","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:99","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"35aa09ca-dad6-11e4-904e-af59efcb7c81","variableMapping":{"lastIndex":"offset","fromIndex":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[39,40,41,42,43,44,45,96,97,102,103,106,0,107,108,109,208,209,110,210,211,25,111,212,112,113,48,114,213,49,214,115,116,117,215,118,50,51],"tindex":"35aa09cb-dad6-11e4-904e-919b4fa4f725","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-1},{"failures":[],"tindex":"35aa09cc-dad6-11e4-904e-6726973cbac6","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"finishedFrom","v":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":0},{"failures":[],"tindex":"35aa09cd-dad6-11e4-904e-4b2df42c5ac4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"35aa09ce-dad6-11e4-904e-af266ed3b136","variableMapping":{"java.lang.Double.NaN":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:104","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":0},{"failures":[216],"tindex":"35aa09cf-dad6-11e4-904e-23b7f013a8a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"35aa09d0-dad6-11e4-904e-4bdddfb9aa65","variableMapping":{"max":"maxTurnCosts","tmpSize":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[187,217,39,40,41,42,43,188,44,45,189,80,81,207,88,89,218,219,90,220,221,222,223,224,2,225,185,186,3,226,227,228,229,230,231,232,12,233,74,234,235,236,237,91,238,239,240,241,75,242,243,244,184,245,246,38,247,248,249,76,204,250,251,252,253,254,255,216,92,93,73,94,95,256,257,4,258,5,259,260,261,262,263,264,265,13,266,77,267,205,268,6,269,270,7,8,271,272,273,274,275,276,277,278,279,14,280,78,281,282,283,71,206,284,9,285,286,10,11,287,288,289,290,291,292,293,294,295,15,296,79,297,298,96,299,300,97,98,99,100,101,301,102,103,104,302,105,106,0,107,108,109,208,209,110,210,211,25,111,212,112,113,48,114,213,49,214,115,116,117,215,118,303,119,120,121,304,122,305,306,123,50,51,124,125,126,199,127,307,128,129,308,309,130,310,311,312,131,313,132,314,315,316,317,133,318,134,319,320,321,322,323,135,324,136,325,326,137,327,138,139,328,329,330,140,331,332,333,334,335,336,337,338,339,141,340,341,342,343,344,142,143,345,346,144,347,348,349,145,350,146,351,352,353,354,147,355,148,356,357,358,359,360,149,361,150,362,363,151,364,152,153,365,366,367,154,368,155,369,370,156,371,372,373,374,375,157,158,376,377,159,378,379,380,160,381,161,382,383,384,385,162,386,163,387,388,389,390,391,164,392,165,393,394,166,395,167,168,396,397,398,169,399,400,170,401,402,403,404,405,171,172,406,407,173,408,409,410,174,411,175,412,413,414,415,176,416,177,417,418,419,420,421,178,422,179,423,424,180,425,181,182,426,427,428,183,429],"tindex":"35aa30e1-dad6-11e4-904e-5b05c3812d01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:176","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-1},{"failures":[],"tindex":"35aa30e2-dad6-11e4-904e-95d650ac5fc1","variableMapping":{"red":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":0},{"failures":[],"tindex":"35aa30e3-dad6-11e4-904e-0561932fc865","variableMapping":{"start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"35aa30e4-dad6-11e4-904e-b53daba04891","variableMapping":{"currentBucket":"nextNodeBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[39,255],"tindex":"35aa30e5-dad6-11e4-904e-2f9ac2b98677","variableMapping":{"lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[430],"tindex":"35aa30e6-dad6-11e4-904e-7fb9a1c50055","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[431],"tindex":"35aa30e7-dad6-11e4-904e-931be485eac4","variableMapping":{"weightLong":"flags","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[39,96,97,103,106,0,107,108,109,208,110,210,25,111,112,113,48,114,213,49,115,117,215,118],"tindex":"35aa57f8-dad6-11e4-904e-f940d11b95fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"35aa57f9-dad6-11e4-904e-1334bb40b7d8","variableMapping":{"from":"skippedEdge2","end":"skippedEdge2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[217,39,40,41,42,43,188,44,189,82,46,47,83,191,84,85,86,192,87,193,432,72,184,246,38,248,76,254],"tindex":"35aa57fa-dad6-11e4-904e-cbc574d7a950","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"35aa57fb-dad6-11e4-904e-538e217c1da6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"35aa57fc-dad6-11e4-904e-518d83db380f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:244","type":"CtLocalVariableImpl","sourcecode":"java.util.List<gnu.trove.list.array.TIntArrayList> java.util.List<gnu.trove.list.array.TIntArrayList> = new com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm(com.graphhopper.storage.GraphStorage , com.graphhopper.routing.util.EdgeFilter).findComponents()"},"status":-2},{"failures":[],"tindex":"35aa57fd-dad6-11e4-904e-d34b33e0be26","variableMapping":{"dist":"currDistToGoal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"35aa57fe-dad6-11e4-904e-2fdf9d409c40","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[84,433,186,3,12,235,4,5,13,267,6,270,7,8,14,282,9,286,10,11,15,298],"tindex":"35aa57ff-dad6-11e4-904e-c78d4e4573c8","variableMapping":{"time":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"35aa5800-dad6-11e4-904e-8b73b15a01aa","variableMapping":{"tmpNo":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[74,77,78,79],"tindex":"35aa5801-dad6-11e4-904e-2f01f0156292","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-1},{"failures":[219,2,71,0],"tindex":"35aa7f12-dad6-11e4-904e-316c0737c791","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[187,217,39,40,41,42,43,434,188,44,45,189,435,80,81,37,82,46,47,83,190,191,84,85,207,86,192,87,193,432,72,436,437,438,439,440,441,88,442,443,89,444,445,446,447,448,449,450,218,219,90,220,451,221,222,223,1,452,453,433,224,2,225,185,186,3,226,227,228,229,230,231,232,12,233,74,234,235,236,237,91,238,239,240,241,75,242,243,244,184,245,246,38,247,248,249,76,204,250,251,252,253,254,255,216,92,93,73,94,95,256,257,4,258,5,259,260,261,262,263,264,265,13,266,77,267,205,268,6,269,270,7,8,271,272,273,274,275,276,277,278,279,14,280,78,281,282,283,71,206,284,9,285,286,10,11,287,288,289,290,291,292,293,294,295,15,296,79,297,298,431,96,299,300,97,98,99,100,101,301,102,103,104,302,105,106,0,107,108,109,208,209,110,210,211,25,111,212,112,113,48,114,213,49,214,115,116,117,215,118,454,455,303,119,120,121,304,456,457,122,458,459,460,305,306,123,50,51,461,462,463,464,465,466,467,124,468,469,470,471,472,473,125,28,474,194,52,53,195,29,54,30,31,196,55,56,57,475,197,126,476,477,478,479,480,481,64,199,482,33,483,200,65,201,66,34,67,35,36,202,68,69,203,484,70,127,307,128,129,308,309,130,310,311,312,131,313,132,314,315,316,317,133,318,134,319,320,321,322,323,135,324,136,325,326,137,327,138,139,328,329,330,140,331,332,333,334,335,336,337,338,339,141,340,341,342,343,344,142,143,345,346,144,347,348,349,145,350,146,351,352,353,354,147,355,148,356,357,358,359,360,149,361,150,362,363,151,364,152,153,365,366,367,154,368,155,369,370,156,371,372,373,374,375,157,158,376,377,159,378,379,380,160,381,161,382,383,384,385,162,386,163,387,388,389,390,391,164,392,165,393,394,166,395,167,168,396,397,398,169,399,400,170,401,402,403,404,405,171,172,406,407,173,408,409,410,174,411,175,412,413,414,415,176,416,177,417,418,419,420,421,178,422,179,423,424,180,425,181,182,426,427,428,183,429],"tindex":"35aa7f13-dad6-11e4-904e-e502445a6925","variableMapping":{"size":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":-1},{"failures":[234,259,281,297],"tindex":"35aa7f14-dad6-11e4-904e-27f401fc1fe7","variableMapping":{"compressionLevel":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[246],"tindex":"35aa7f15-dad6-11e4-904e-75c2f008bc90","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"intendedValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[42,82,238],"tindex":"35aa7f16-dad6-11e4-904e-e10b737f744c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"35aa7f17-dad6-11e4-904e-61cb1d432e40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[],"tindex":"35aa7f18-dad6-11e4-904e-ffacf6e07e61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[39,40,43,96,299,97,98,99,100,101,102,103,104,105,106,0,107,108,109,208,110,210,211,111,212,112,113,48,114,213,49,115,116,117,118,122,333,338],"tindex":"35aa7f19-dad6-11e4-904e-b71c86155552","variableMapping":{"index":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[187,217,39,40,41,42,43,188,44,45,189,37,82,46,47,83,190,191,84,85,86,192,87,193,72,485,486,487,488,489,490,491,438,439,441,88,442,443,89,444,446,447,90,220,283,71,116,119,120,121,304,122,492,493,494,495,496,194,52,53,476,477,478,479,481,200,65,201,136,337,141,340,344,358,362,153,366,367,497,155,156,371,375,389,393,168,397,398,170,401,405,419,423,182,427,428,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522],"tindex":"35aaa62a-dad6-11e4-904e-7992371e499c","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"35aaa62b-dad6-11e4-904e-a990a2e390a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[],"tindex":"35aaa62c-dad6-11e4-904e-a9a8d20d8c21","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"35aaa62d-dad6-11e4-904e-43139ac5ae09","variableMapping":{"name":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[431],"tindex":"35aaa62e-dad6-11e4-904e-cf16fa5d34ab","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"35aaa62f-dad6-11e4-904e-e5b1197045e5","variableMapping":{"high":"shift","len":"shift","start":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[92,94,129,313,314,315,317,319,320,325,326,338,143,350,351,352,354,356,357,362,363,158,381,382,383,385,387,388,393,394,172,411,412,413,415,417,418,423,424],"tindex":"35aaa630-dad6-11e4-904e-5d7de7c32631","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"35aaa631-dad6-11e4-904e-358aa1b80241","variableMapping":{"acceptBit":"ferryBit","way":"way","sidewalks":"ferries"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"35aaa632-dad6-11e4-904e-3dd9611b8f8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[82,72,1,2],"tindex":"35aaa633-dad6-11e4-904e-69ed6cf05bf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[80,81,88,221,222,92,93,73,94,95,97,98,99,100,101,102,104,105,106,0,108,109,208,209,110,210,211,25,111,48,114,213,49,115,116,117,215,118,119,120,121,122,305,306,50,51,124,125,126,127,128,129,309,130,131,133,134,135,136,137,138,140,141,142,143,346,144,145,147,148,149,150,151,152,154,155,156,157,158,377,159,160,162,163,164,165,166,167,169,170,171,172,407,173,174,176,177,178,179,180,181,183],"tindex":"35aacd44-dad6-11e4-904e-4389f63627d1","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"35aacd45-dad6-11e4-904e-bfa8cbc29700","variableMapping":{"directionBitMask":"turnRestrictionBit","flags":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[187,39,40,43,188,45,96,299,97,98,99,100,101,301,102,103,104,302,105,106,0,107,108,109,208,209,110,210,211,25,111,212,112,113,48,114,213,49,214,115,116,117,215,118,456,122,123,64,199,482,33,483,200,65,201,66,34,67,35,36,202,68,69,203,484,70,127,332,333,334,335,336,337,338,339,141,340,342,344,142,143,345,346,144,347,348,349,145,350,351,352,353,354,147,355,148,356,357,358,359,360,149,361,150,362,363,151,364,152,153,365,366,367,154,368],"tindex":"35aacd46-dad6-11e4-904e-09735dc3d600","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.create(long)"},"status":-1},{"failures":[],"tindex":"35aacd47-dad6-11e4-904e-456f45f0b072","variableMapping":{"edgeId":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"35aacd48-dad6-11e4-904e-f7e80eb5a523","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"35aacd49-dad6-11e4-904e-1d58e0c1f36c","variableMapping":{"min":"priorityFromRelation","tmpSize":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":0},{"failures":[187,40,41,43,44,37,46,47,83,190,191,84,85,86,192,87,193,72,439,444,447,90,116,120,121,122,523,524,525,492,194,53,200,201,307,321,136,325,139,141,344,358,362,153,155,156,375,389,393,168,170,405,419,423,182,509,521],"tindex":"35aacd4a-dad6-11e4-904e-fb7fa5749eb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[231,74,75,246,38,76,264,77,278,78,294,79],"tindex":"35aacd4b-dad6-11e4-904e-1ff6ef4a36f0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"35aacd4c-dad6-11e4-904e-635a6b53d0d4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":214,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":439,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":337,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":431,"com.graphhopper.GraphHopperAPITest.testNoLoad":461,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":128,"com.graphhopper.reader.OSMReaderTest.testFerry":37,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":305,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":7,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":198,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":65,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":217,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":381,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":498,"com.graphhopper.coll.CompressedArrayTest.testCompress":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":265,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":428,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":99,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":321,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":175,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":482,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":499,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":516,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":104,"com.graphhopper.GraphHopperTest.testPrepare":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":96,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":111,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":119,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":455,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":95,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":211,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":52,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":155,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":22,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":106,"com.graphhopper.GraphHopperTest.testLoadOSM":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":53,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":224,"com.graphhopper.reader.OSMReaderTest.testSort":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":280,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":73,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":371,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":502,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":425,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":170,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":329,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":89,"com.graphhopper.storage.RAMDataAccessTest.testHeader":517,"com.graphhopper.routing.DijkstraTest.initializationError":448,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":167,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":497,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":58,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":361,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":409,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":369,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":159,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":286,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":375,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":235,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":67,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":66,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":209,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":208,"com.graphhopper.coll.OSMIDMapTest.testGetLong":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":384,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":388,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":355,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":141,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":356,"com.graphhopper.coll.CompressedArrayTest.testCompress2":26,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":418,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":185,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":462,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":161,"com.graphhopper.GraphHopperAPITest.testLoad":50,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":343,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":236,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":412,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":172,"com.graphhopper.storage.LevelGraphStorageTest.testClone":346,"com.graphhopper.reader.OSMReaderTest.testBarriers":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":157,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":287,"com.graphhopper.util.GHUtilityTest.testCopy":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":210,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":231,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":77,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":466,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":520,"com.graphhopper.routing.PathTest.testFindInstruction":220,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":262,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":158,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":123,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":241,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":365,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":285,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":463,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":181,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":166,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":101,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":294,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":453,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":451,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":310,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":403,"com.graphhopper.util.InstructionListTest.testWayList2":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":55,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":183,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":378,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":6,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":397,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":283,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":401,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":349,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":500,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":271,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":503,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":382,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":476,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":110,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":171,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":190,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":501,"com.graphhopper.routing.AStarTest.initializationError":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":116,"com.graphhopper.coll.OSMIDMapTest.testGet":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":160,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":75,"com.graphhopper.routing.PathBidirRefTest.testExtract":221,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":274,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":358,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":494,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":68,"com.graphhopper.storage.RAMDataAccessTest.testCopy":513,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":504,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":399,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":273,"com.graphhopper.storage.RAMDataAccessTest.testSegments":519,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":126,"com.graphhopper.util.GHUtilityTest.testSort2":457,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":114,"com.graphhopper.reader.OSMReaderTest.testMain":46,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":340,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":245,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":387,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":78,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":372,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":146,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":354,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":154,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":88,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":284,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":148,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":193,"com.graphhopper.storage.StorablePropertiesTest.testStore":522,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":512,"com.graphhopper.storage.GraphHopperStorageTest.testClone":407,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":327,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":248,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":414,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":332,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":311,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":335,"com.graphhopper.routing.PathTest.testTime":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":230,"com.graphhopper.util.BitUtilLittleTest.testToFloat":524,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":366,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":144,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":253,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":480,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":57,"com.graphhopper.reader.OSMReaderTest.testRelation":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":320,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":360,"com.graphhopper.util.GHUtilityTest.testSortDirected":460,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":296,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":508,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":441,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":63,"com.graphhopper.util.BitUtilLittleTest.testToInt":525,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":258,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":38,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":477,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":34,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":433,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":133,"com.graphhopper.search.NameIndexTest.testCreate":491,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":518,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":438,"com.graphhopper.routing.QueryGraphTest.testOneWay":445,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":475,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":194,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":16,"com.graphhopper.reader.OSMReaderTest.testWithBounds":87,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":521,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":79,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":511,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":396,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":442,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":322,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":1,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":142,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":341,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":267,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":391,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":125,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":162,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":405,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":107,"com.graphhopper.util.BitUtilLittleTest.testToBitString":523,"com.graphhopper.util.InstructionListTest.testWayList":120,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":426,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":272,"com.graphhopper.GraphHopperAPITest.testDisconnected179":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":312,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":392,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":292,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":279,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":41,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":408,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":302,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":205,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":112,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":437,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":103,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":204,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":215,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":484,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":282,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":400,"com.graphhopper.routing.PathTest.testWayList":90,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":314,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":430,"com.graphhopper.coll.OSMIDMapTest.testGet2":493,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":118,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":505,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":151,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":485,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":474,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":278,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":416,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":237,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":35,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":147,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":36,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":514,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":509,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":186,"com.graphhopper.util.GHUtilityTest.testSort":458,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":324,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":24,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":277,"com.graphhopper.search.NameIndexTest.testPut":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":374,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":406,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":465,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":483,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":481,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":470,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":10,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":71,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":468,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":370,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":226,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":216,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":486,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":386,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":92,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":136,"com.graphhopper.routing.PathTest.testFound":218,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":2,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":189,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":152,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":334,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":276,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":383,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":490,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":132,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":174,"com.graphhopper.util.InstructionListTest.testEmptyList":303,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":510,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":232,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":252,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":244,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":243,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":266,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":417,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":213,"com.graphhopper.reader.PrinctonReaderTest.testRead":80,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":201,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":380,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":313,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":307,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":290,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":452,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":9,"com.graphhopper.reader.OSMReaderTest.testFoot":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":135,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":447,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":487,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":30,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":367,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":31,"com.graphhopper.reader.OSMReaderTest.testOneWay":72,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":413,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":424,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":395,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":263,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":507,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":420,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":134,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":410,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":100,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":249,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":98,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":471,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":506,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":316,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":440,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":402,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":432,"com.graphhopper.routing.PathBidirRefTest.testExtract2":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":56,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":124,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":488,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":179,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":472,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":234,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":61,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":84,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":331,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":473,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":195,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":180,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":459,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":348,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":250,"com.graphhopper.GraphHopperTest.testFootAndCar":42,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":419,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":70,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":515,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":309,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":115,"com.graphhopper.GraphHopperTest.testPrepareOnly":187,"com.graphhopper.GraphHopperTest.testVia":39,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":467,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":129,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":86,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":336,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":304,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":422,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":239,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":318,"com.graphhopper.routing.AStarBidirectionTest.initializationError":450,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":254,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":364,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":363,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":156}}]
