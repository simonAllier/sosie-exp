[{"failures":[],"tindex":"09ca069d-db7c-11e4-bc79-4dfbf6c89425","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"09cb180e-db7c-11e4-bc79-a5acc10585d5","variableMapping":{"size":"priorityFromRelation","index":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"09cb180f-db7c-11e4-bc79-dd44c35904c7","variableMapping":{"baseNode":"maxTurnCosts","id":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[],"tindex":"09cb1810-db7c-11e4-bc79-a3694f41cd87","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"09cb1811-db7c-11e4-bc79-3bacd3034d6d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"09cb1812-db7c-11e4-bc79-c5590a44c68a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:74","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet instanceof com.graphhopper.coll.GHBitSetImpl) {\n    ((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this);\n} else {\n    int int = java.util.BitSet.size();\n    com.graphhopper.coll.GHBitSet.ensureCapacity(int);\n    for (int int = java.util.BitSet.nextSetBit(0) ; int >= 0 ; int = java.util.BitSet.nextSetBit((int + 1))) {\n        com.graphhopper.coll.GHBitSet.add(int);\n    }\n}"},"status":-2},{"failures":[6,13,14,15,20,21,25,30,31],"tindex":"09cb1813-db7c-11e4-bc79-739d14a3599e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[],"tindex":"09cb1814-db7c-11e4-bc79-5b1ab43446b8","variableMapping":{"finishedTo":"integ","finishedFrom":"integ"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"09cb1815-db7c-11e4-bc79-df9c4867d78d","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:188","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-2},{"failures":[6,46],"tindex":"09cb1816-db7c-11e4-bc79-d1b8a88924a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-1},{"failures":[47],"tindex":"09cb1817-db7c-11e4-bc79-8147a05d0b9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"09cb1818-db7c-11e4-bc79-33cefc2adeaf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"09cb3f29-db7c-11e4-bc79-49cd1eebe1f9","variableMapping":{"prepareFlagEncoder":"flagEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.FlagEncoder) == null)\n    throw new java.lang.IllegalStateException(\"No vehicle encoder set.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":0},{"failures":[],"tindex":"09cb3f2a-db7c-11e4-bc79-1d4d4f28c9cb","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"index","id":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"09cb3f2b-db7c-11e4-bc79-a752be02ebc4","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[14,15,48,49,20,21,50,51,25,52,53,30,31,54],"tindex":"09cb3f2c-db7c-11e4-bc79-318a2fdd9f5f","variableMapping":{"locs":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[55,56],"tindex":"09cb3f2d-db7c-11e4-bc79-3194c5fec033","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":-1},{"failures":[],"tindex":"09cb3f2e-db7c-11e4-bc79-05d0c779bee8","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":0},{"failures":[],"tindex":"09cb3f2f-db7c-11e4-bc79-2d0a0fe9323e","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"09cb3f30-db7c-11e4-bc79-9d04ca774c6b","variableMapping":{"bits":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"09cb3f31-db7c-11e4-bc79-f35b7bfaf47e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,56],"tindex":"09cb3f32-db7c-11e4-bc79-ede4a5772d8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"09cb3f33-db7c-11e4-bc79-13b8df3a6060","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"09cb3f34-db7c-11e4-bc79-95564bab595b","variableMapping":{"this":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1378","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.checkInit()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[15,49,53],"tindex":"09cb3f35-db7c-11e4-bc79-2501874d4b06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"09cb3f36-db7c-11e4-bc79-fd8f479c7c62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[],"tindex":"09cb3f37-db7c-11e4-bc79-a5941cfc5cc1","variableMapping":{"logMessagesPercentage":"java.lang.Double.MAX_VALUE","logMessages":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"09cb6648-db7c-11e4-bc79-75fb74f3c957","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"09cb6649-db7c-11e4-bc79-91aa65d78e5b","variableMapping":{"size":"nextNodeBit","i":"nextNodeBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"09cb664a-db7c-11e4-bc79-e31144f6596b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[47],"tindex":"09cb664b-db7c-11e4-bc79-9d360ffd88a8","variableMapping":{"str":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[10,55],"tindex":"09cb664c-db7c-11e4-bc79-3d6db52d0ce4","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"09cb664d-db7c-11e4-bc79-458776183dd7","variableMapping":{"high":"dir","highKey":"flags","key":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"09cb664e-db7c-11e4-bc79-1f87626b69d8","variableMapping":{"lastKey":"lastTime","key":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"09cb664f-db7c-11e4-bc79-ef9687c381cc","variableMapping":{"compressionLevel":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[95],"tindex":"09cb6650-db7c-11e4-bc79-232aef19a7a5","variableMapping":{"weightApproximation":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[6,46],"tindex":"09cb6651-db7c-11e4-bc79-431011dee901","variableMapping":{"red":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"09cb6652-db7c-11e4-bc79-a1b89bd3a8cd","variableMapping":{"finishedTo":"blockFords","finishedFrom":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"09cb6653-db7c-11e4-bc79-898d4b6c04d4","variableMapping":{"initLeafSize":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"09cb6654-db7c-11e4-bc79-0d80f24f75cc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"09cb6655-db7c-11e4-bc79-67d2b82d5a40","variableMapping":{"encoded":"encoded","backwardBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"09cb6656-db7c-11e4-bc79-810a46d344a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"09cb6657-db7c-11e4-bc79-b7120b3aa8fa","variableMapping":{"flags":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"09cb8d68-db7c-11e4-bc79-21bdd9d733c9","variableMapping":{"size":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"09cb8d69-db7c-11e4-bc79-358b7a0bce33","variableMapping":{"empty":"found"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"09cb8d6a-db7c-11e4-bc79-87be2d8560e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"09cb8d6b-db7c-11e4-bc79-91858ca60e53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"09cb8d6c-db7c-11e4-bc79-296aa6777b57","variableMapping":{"len":"ferryBit","start":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[38,39,42,45,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"09cb8d6d-db7c-11e4-bc79-65f6d0d09046","variableMapping":{"this":"this","edgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[123,95],"tindex":"09cb8d6e-db7c-11e4-bc79-09671f4e0f47","variableMapping":{"ref":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[124,0,1,2,3,125,4,5,6,7,126,127,128,8,9,10,129,130,11,46,131,12,13,55,132,14,133,15,48,134,135,136,137,138,139,16,140,141,17,142,123,95,143,49,18,144,19,20,21,145,146,147,148,149,150,151,152,153,22,154,155,50,23,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,51,24,25,181,182,183,184,185,186,187,26,188,189,52,27,190,53,28,191,29,30,31,192,193,194,195,196,197,198,199,200,32,201,202,54,33,96,106],"tindex":"09cb8d6f-db7c-11e4-bc79-3189df3b002b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":-1},{"failures":[34,35,203,204,124,205,206,207,57,208,209,210,211,212,213,214,215,58,216,217,218,219,220,221,222,59,223,60,61,224,62,225,226,227,63,64,228,229,230,231,232,233,65,66,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,67,253,254,255,256,257,258,259,68,260,69,70,261,71,262,263,264,72,73,265,266,267,268,269,270,74,75,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,76,293,294,295,296,297,298,299,77,300,78,79,301,80,302,303,304,81,82,305,306,307,308,309,310,83,84,311,312,313,314,315,316,317,318,319,320,321,85,322,323,324,325,326,327,328,86,329,87,88,330,89,331,332,333,90,91,334,335,336,337,338,36,92,93,339,340,341,342,343,344,345,346,347,348,37,38,39,40,41,42,43,44,45,349,350,351,126,352,353,354,355,356,129,357,358,130,359,13,360,361,94,362,55,56,363,364,132,14,133,15,48,134,135,136,137,138,139,16,140,141,17,142,123,95,143,49,18,144,19,20,21,145,146,147,148,149,150,151,152,153,22,154,155,50,23,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,51,24,25,181,182,183,184,185,186,187,26,188,189,52,27,190,53,28,191,29,30,31,192,193,194,195,196,197,198,199,200,32,201,202,54,33,96,97,98,99,100,101,102,103,104,105,106,365,107,108,109,110,111,112,366,113,114,115,116,117,118,367,368,119,369,370,371,372,373,120,121,374,375,376,122,377,378,379,380,381,382,383,384,385],"tindex":"09cbb480-db7c-11e4-bc79-3196005023a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[203,124,205,209,212,214,215,58,216,217,218,219,220,221,222,60,61,62,225,227,63,64,228,231,233,65,66,234,236,237,239,241,242,386,282,387,388,389,390,391,392,393,394,395,396,397,398,399,283,348,37,38,39,42,43,45,96,97,98,99,100,101,102,103,104,105,106,365,107,108,109,110,111,112,366,113,114,115,116,117,118,367,119,369,370,371,372,373,120,121,374,376,122,377,385],"tindex":"09cbb481-db7c-11e4-bc79-ed14929b47ba","variableMapping":{"edgeId":"I_SKIP_EDGE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"09cbb482-db7c-11e4-bc79-8f182110e5b3","variableMapping":{"highwayValue":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":0},{"failures":[34,35,203,204,124,205,206,207,57,208,209,210,211,212,214,215,58,216,217,218,219,220,221,222,59,223,60,61,224,62,225,226,227,63,64,228,229,230,231,232,233,65,66,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,251,252,67,253,254,255,256,257,258,259,68,260,69,70,261,71,262,263,264,72,73,265,266,267,268,269,270,74,75,271,272,273,274,275,276,277,278,279,400,401,402,403,404,405,406,407,408,409,280,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,281,386,282,425,387,426,388,389,390,391,427,392,393,394,395,396,397,398,399,283,428,429,430,431,432,433,434,435,436,437,438,284,285,286,287,288,289,291,292,76,293,294,295,296,297,298,299,77,300,78,79,301,80,302,303,304,81,82,305,306,307,308,309,310,83,84,311,312,313,314,315,316,317,318,319,329,36,348,37,38,39,40,41,42,43,44,45,349,439,350,351,0,1,2,3,125,4,5,6,7,127,128,8,9,10,440,440,441,441,442,442,443,443,352,352,444,444,445,445,353,353,446,446,447,447,448,448,449,449,354,355,356,129,357,358,94,362,55,56,363,364,123,95,173,96,97,98,99,100,101,102,103,104,105,106,365,107,108,109,110,111,112,366,113,114,115,116,117,118,367,119,369,370,371,372,373,120,121,374,375,376,122,450,451,377,378,379,380,381,382,383,384,452,453,385,454,455],"tindex":"09cbdb93-db7c-11e4-bc79-31f892f7bdcc","variableMapping":{"arrayLength":"segmentSizeInBytes","maxGeoRef":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[11,12],"tindex":"09cbdb94-db7c-11e4-bc79-ef7e360529a9","variableMapping":{"err":"usedBits","tmpErr":"usedBits","y1":"usedBits","dLon":"usedBits","sLat":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"09cbdb95-db7c-11e4-bc79-c90675d4083f","variableMapping":{"baseNode":"key","id":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"09cbdb96-db7c-11e4-bc79-112e932c6418","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[456],"tindex":"09cbdb97-db7c-11e4-bc79-491537e00077","variableMapping":{"version":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:82","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-1},{"failures":[],"tindex":"09cbdb98-db7c-11e4-bc79-e5c695608660","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"09cbdb99-db7c-11e4-bc79-636ad0280b62","variableMapping":{"cap":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"09cbdb9a-db7c-11e4-bc79-cd83032aad70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[],"tindex":"09cbdb9b-db7c-11e4-bc79-f3a10861107a","variableMapping":{"i":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[],"tindex":"09cbdb9c-db7c-11e4-bc79-119706bd7391","variableMapping":{"unpavedBit":"flags","shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[410,416,418,419,457,387,427,393,394,458,459,460,461,462,463,464,465,466,467,468],"tindex":"09cbdb9d-db7c-11e4-bc79-a7283f215508","variableMapping":{"minDistance":"lon","rMin":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[145,168,192],"tindex":"09cbdb9e-db7c-11e4-bc79-f3d05cc8ae8f","variableMapping":{"ref":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-1},{"failures":[],"tindex":"09cbdb9f-db7c-11e4-bc79-c1b4b034bc7b","variableMapping":{"tmp":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":0},{"failures":[203,204,124,205,206,207,57,208,209,210,212,214,215,58,216,217,218,219,220,221,222,59,60,61,224,62,225,226,227,63,64,228,229,230,231,232,233,65,66,234,235,236,237,238,239,240,241,242,386,282,425,387,426,388,389,390,391,427,392,393,394,395,396,397,398,469,399,283,348,38,39,42,43,45,96,97,98,99,100,101,102,103,104,105,106,365,107,108,109,110,111,112,366,113,114,115,116,117,118,367,119,369,370,371,372,373,120,121,374,375,376,122,377,452,385],"tindex":"09cc02b0-db7c-11e4-bc79-f3bf1d06b047","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.create(long)"},"status":-1},{"failures":[],"tindex":"09cc02b1-db7c-11e4-bc79-5d31950339e0","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"09cc02b2-db7c-11e4-bc79-69a1c211b1e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"09cc02b3-db7c-11e4-bc79-15e3a881d4e8","variableMapping":{"maxTurnCosts":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","turnRestrictionBit":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[203,120,376],"tindex":"09cc02b4-db7c-11e4-bc79-af7834a126dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"09cc02b5-db7c-11e4-bc79-a915fde0eafe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":0},{"failures":[],"tindex":"09cc02b6-db7c-11e4-bc79-0312031d5c28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"09cc02b7-db7c-11e4-bc79-91ab5c36ae94","variableMapping":{"elem":"mKeys","i":"i","element":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[],"tindex":"09cc02b8-db7c-11e4-bc79-efef6f9879a4","variableMapping":{"index":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-2},{"failures":[96,97,117,118,121],"tindex":"09cc02b9-db7c-11e4-bc79-03954a8e73b0","variableMapping":{"currentEntry":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,207,209,210,214,228,65,237,239,240,243,246,247,251,265,74,274,276,277,412,413,414,388,389,390,429,430,431,432,433,499,286,287,291,305,83,314,316,317,36,500,501,502,503,504,348,37,38,39,40,41,42,43,44,45,349,505,506,507,0,1,2,3,125,4,5,6,7,127,128,8,9,10,440,441,443,352,444,445,353,446,448,449,357,358,123,95,114,379,380,381,382,385],"tindex":"09cc02ba-db7c-11e4-bc79-e1e797723edd","variableMapping":{"lastKey":"cap","key":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:85","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-1},{"failures":[],"tindex":"09cc02bb-db7c-11e4-bc79-01596ba037b8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[0,161],"tindex":"09cc02bc-db7c-11e4-bc79-91df65588139","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"09cc02bd-db7c-11e4-bc79-196a1563064c","variableMapping":{"turnCosts":"java.lang.Double.POSITIVE_INFINITY","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[458,459,508,462,466,468],"tindex":"09cc29ce-db7c-11e4-bc79-73861e4438c5","variableMapping":{"hash":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[95],"tindex":"09cc29cf-db7c-11e4-bc79-1565dac1ac0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"09cc29d0-db7c-11e4-bc79-53222f10f707","variableMapping":{"res":"lastTime","value":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"09cc29d1-db7c-11e4-bc79-17b72ca3504c","variableMapping":{"iter":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"09cc29d2-db7c-11e4-bc79-1dd1331f6385","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:405","type":"CtLocalVariableImpl","sourcecode":"gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = new gnu.trove.map.hash.TLongObjectHashMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>()"},"status":-2},{"failures":[],"tindex":"09cc29d3-db7c-11e4-bc79-337a1ccea0df","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"09cc29d4-db7c-11e4-bc79-7d404e68ac80","variableMapping":{"lg":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:296","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.LevelGraphStorage.getNodes()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"09cdfe95-db7c-11e4-bc79-ffe146a53001","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"09cdfe96-db7c-11e4-bc79-073313e8a307","variableMapping":{"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.storage.index.LocationIndexTreeSC.NO_SHORTCUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:947","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:187","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTreeSC.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"09cdfe97-db7c-11e4-bc79-2b09dfd410f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"09cdfe98-db7c-11e4-bc79-2fc68f1b7217","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[509,510,511,512,376],"tindex":"09cdfe99-db7c-11e4-bc79-9bd8b964586d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[0,47],"tindex":"09ce25aa-db7c-11e4-bc79-012c0ce35343","variableMapping":{"name":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"09ce25ab-db7c-11e4-bc79-e7b5caf9e537","variableMapping":{"longSegmentSize":"flags","bufferStart":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"09ce25ac-db7c-11e4-bc79-c9ddd16c2c74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:154","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[14,15,48,49,20,21,50,51,25,52,53,30,31,54],"tindex":"09ce25ad-db7c-11e4-bc79-65f73f935011","variableMapping":{"size":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"09ce25ae-db7c-11e4-bc79-09e6b9c9330c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[],"tindex":"09ce4cbf-db7c-11e4-bc79-1fbf0011288e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[47],"tindex":"09ce4cc0-db7c-11e4-bc79-7bbc126e7989","variableMapping":{"location":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:55","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":366,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":441,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":207,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":321,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":383,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":384,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":30,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":389,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":37,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":68,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":486,"com.graphhopper.coll.CompressedArrayTest.testCompress":468,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":139,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":317,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":334,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":300,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":425,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":487,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":480,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":374,"com.graphhopper.GraphHopperTest.testPrepare":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":118,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":304,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":512,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":106,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":379,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":428,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":451,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":387,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":363,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":53,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":400,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":98,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":413,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":277,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":243,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":464,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":214,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":511,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":122,"com.graphhopper.GraphHopperTest.testLoadOSM":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":414,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":359,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":201,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":55,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":247,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":490,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":312,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":286,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":344,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":353,"com.graphhopper.storage.RAMDataAccessTest.testHeader":481,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":273,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":498,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":232,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":297,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":244,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":19,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":251,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":188,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":392,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":109,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":282,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":101,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":100,"com.graphhopper.coll.OSMIDMapTest.testGetLong":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":261,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":253,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":226,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":209,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":63,"com.graphhopper.coll.CompressedArrayTest.testCompress2":467,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":82,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":260,"com.graphhopper.GraphHopperAPITest.testLoad":34,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":213,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":171,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":78,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":76,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":47,"com.graphhopper.storage.LevelGraphStorageTest.testClone":217,"com.graphhopper.reader.OSMReaderTest.testBarriers":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":252,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":364,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":324,"com.graphhopper.util.GHUtilityTest.testCopy":385,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":186,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":283,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":141,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":136,"com.graphhopper.routing.PathTest.testFindInstruction":358,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":67,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":509,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":177,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":377,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":238,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":406,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":313,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":271,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":71,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":152,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":131,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":219,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":325,"com.graphhopper.util.InstructionListTest.testWayList2":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":421,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":318,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":276,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":123,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":287,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":221,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":488,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":192,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":491,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":69,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":102,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":292,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":4,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":489,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":114,"com.graphhopper.coll.OSMIDMapTest.testGet":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":259,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":178,"com.graphhopper.routing.PathBidirRefTest.testExtract":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":195,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":228,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":502,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":396,"com.graphhopper.storage.RAMDataAccessTest.testCopy":477,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":492,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":279,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":194,"com.graphhopper.storage.RAMDataAccessTest.testSegments":483,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":281,"com.graphhopper.util.GHUtilityTest.testSort2":453,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":110,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":196,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":465,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":202,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":158,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":341,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":223,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":62,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":241,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":60,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":49,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":402,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":227,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":9,"com.graphhopper.storage.StorablePropertiesTest.testStore":499,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":476,"com.graphhopper.storage.GraphHopperStorageTest.testClone":294,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":340,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":163,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":301,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":189,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":326,"com.graphhopper.routing.PathTest.testTime":129,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":185,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":239,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":218,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":91,"com.graphhopper.reader.OSMReaderTest.testRelation":126,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":230,"com.graphhopper.util.GHUtilityTest.testSortDirected":455,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":154,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":496,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":443,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":133,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":161,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":427,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":331,"com.graphhopper.search.NameIndexTest.testCreate":473,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":482,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":440,"com.graphhopper.routing.QueryGraphTest.testOneWay":447,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":461,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":412,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":458,"com.graphhopper.reader.OSMReaderTest.testWithBounds":8,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":485,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":155,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":275,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":362,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":444,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":335,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":11,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":215,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":211,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":180,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":153,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":17,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":267,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":162,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":262,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":291,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":446,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":97,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":315,"com.graphhopper.util.InstructionListTest.testWayList":380,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":193,"com.graphhopper.GraphHopperAPITest.testDisconnected179":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":327,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":508,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":150,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":346,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":40,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":296,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":190,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":308,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":166,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":32,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":116,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":469,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":33,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":285,"com.graphhopper.routing.PathTest.testWayList":357,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":87,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":160,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":456,"com.graphhopper.coll.OSMIDMapTest.testGet2":501,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":117,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":493,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":234,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":505,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":266,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":199,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":303,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":257,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":295,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":393,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":394,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":478,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":395,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":147,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":510,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":24,"com.graphhopper.util.GHUtilityTest.testSort":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":417,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":466,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":198,"com.graphhopper.search.NameIndexTest.testPut":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":278,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":293,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":408,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":426,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":433,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":436,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":404,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":20,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":445,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":95,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":434,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":181,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":361,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":506,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":94,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":36,"com.graphhopper.routing.PathTest.testFound":356,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":13,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":349,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":236,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":197,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":70,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":472,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":329,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":299,"com.graphhopper.util.InstructionListTest.testEmptyList":378,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":474,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":105,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":187,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":169,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":157,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":140,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":156,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":111,"com.graphhopper.reader.PrinctonReaderTest.testRead":350,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":390,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":459,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":504,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":320,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":216,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":264,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":184,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":18,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":337,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":449,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":507,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":418,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":132,"com.graphhopper.reader.OSMReaderTest.testOneWay":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":419,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":79,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":84,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":272,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":137,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":495,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":146,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":333,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":371,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":457,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":376,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":369,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":437,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":494,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":173,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":330,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":442,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":288,"com.graphhopper.routing.PathBidirRefTest.testExtract2":355,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":403,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":432,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":422,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":470,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":310,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":52,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":6,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":347,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":438,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":415,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":311,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":220,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":167,"com.graphhopper.GraphHopperTest.testFootAndCar":41,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":305,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":25,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":399,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":479,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":323,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":113,"com.graphhopper.GraphHopperTest.testPrepareOnly":348,"com.graphhopper.GraphHopperTest.testVia":38,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":85,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":127,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":206,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":309,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":382,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":175,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":332,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":142,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":235,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":66,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":246}}]
