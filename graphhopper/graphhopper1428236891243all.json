[{"failures":[],"tindex":"3a66a810-db8f-11e4-8b3e-a5ba4507c646","variableMapping":{"red":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":0},{"failures":[0,1],"tindex":"3a66a811-db8f-11e4-8b3e-71c5fe3a6b7f","variableMapping":{"tmp":"removed","initializedCounter":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"3a66a812-db8f-11e4-8b3e-d5658e5e8aef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[],"tindex":"3a66cf23-db8f-11e4-8b3e-5396f9a64d33","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"angle","speed":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"3a66cf24-db8f-11e4-8b3e-4d8509215411","variableMapping":{"mSize":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"3a66cf25-db8f-11e4-8b3e-71bfbb8e9b59","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[],"tindex":"3a66cf26-db8f-11e4-8b3e-85df29566e5c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,0,310,311,312,313,1,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371],"tindex":"3a6d5ed7-db8f-11e4-8b3e-05bcc7d641ce","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"3a6d5ed8-db8f-11e4-8b3e-2dd79748f21a","variableMapping":{"min":"start","tmpSize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":0},{"failures":[372],"tindex":"3a6d5ed9-db8f-11e4-8b3e-79b2435e77a5","variableMapping":{"str":"str","from":"knotInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:944","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (int) + \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[4,5,6,7,8,11,18,19,21,24,25,27,28,29,32,56,373,374],"tindex":"3a6d5eda-db8f-11e4-8b3e-9b70685e5cf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[163,354,358],"tindex":"3a6d5edb-db8f-11e4-8b3e-db022747ecdd","variableMapping":{"fullyLoaded":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1079","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[2,3,4,5,6,7,8,10,11,12,13,17,18,19,20,21,22,23,24,25,27,28,29,30,32,36,37,38,39,40,41,42,43,49,53,54,55,56,59,60,61,62,89,375,376,377,378,379,122,123,124,141,142,143,380,381,382,383,384,168,171,172,176,197,203,208,211,215,216,220,241,247,252,255,258,261,262,266,287,293,298,301,385,304,314,315,320,321,342,360,361,363,364,365,366,367,368,370,371],"tindex":"3a6d5edc-db8f-11e4-8b3e-2518ac44caad","variableMapping":{"i":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"3a6d5edd-db8f-11e4-8b3e-8d37a22ad241","variableMapping":{"currentBucket":"segmentSizeIntsPower","retBucket":"segmentSizeIntsPower","currentIndex":"segmentSizeIntsPower","bucketSize":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[386],"tindex":"3a6d5ede-db8f-11e4-8b3e-0b3544e25a1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"3a6d5edf-db8f-11e4-8b3e-612342df18e0","variableMapping":{"entry":"sacScale","entryVal":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[],"tindex":"3a6d5ee0-db8f-11e4-8b3e-a7c54d5e7cd5","variableMapping":{"mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[17,387],"tindex":"3a6d85f1-db8f-11e4-8b3e-dfdbcff3ca2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[375,380],"tindex":"3a6d85f2-db8f-11e4-8b3e-837921d0932a","variableMapping":{"width":"length","i":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:147","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"3a6d85f3-db8f-11e4-8b3e-dbfe005146fa","variableMapping":{"versionHint":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"3a6d85f4-db8f-11e4-8b3e-f5a5e52af8aa","variableMapping":{"item":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:256","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"3a6d85f5-db8f-11e4-8b3e-fb8392eea314","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"3a6d85f6-db8f-11e4-8b3e-97920a25ae2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"3a6d85f7-db8f-11e4-8b3e-658989212c0f","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1197","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":0},{"failures":[388],"tindex":"3a6d85f8-db8f-11e4-8b3e-79e0bd8cdd2a","variableMapping":{"key":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[4,323,325,329,331,334,338,340,341,342,343,344,345,348,354,358],"tindex":"3a6d85f9-db8f-11e4-8b3e-d7401e22c476","variableMapping":{"importance":"tmpPrevEdge","hash":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[389],"tindex":"3a6d85fa-db8f-11e4-8b3e-618677c9836b","variableMapping":{"value":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[4,5,6,7,8,11,12,19,20,21,120,122,123,124,125,127,128,129,130,131,132,133,134,135,390,391,392,393,394,395,396,136,137,139,141,142,143,144,146,147,148,149,150,151,152,153,154,307,308,331,335,336,339],"tindex":"3a6d85fb-db8f-11e4-8b3e-71c891d1c421","variableMapping":{"size":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[2,3,4,5,8,10,12,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,348,350,354,356,357,358,359],"tindex":"3a6d85fc-db8f-11e4-8b3e-bdf6a3f15276","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-1},{"failures":[397,398,399,400,401,402,403,404,405,406,407],"tindex":"3a6d85fd-db8f-11e4-8b3e-5feddd0ee11a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:488","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-1},{"failures":[],"tindex":"3a6d85fe-db8f-11e4-8b3e-01b00e5c98c8","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3a6d85ff-db8f-11e4-8b3e-afde3300f533","variableMapping":{"high":"segmentsToCreate","guess":"segmentsToCreate","low":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"3a6dad10-db8f-11e4-8b3e-290592a76388","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"3a6dad11-db8f-11e4-8b3e-4f9d41d6c91b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[372],"tindex":"3a6dad12-db8f-11e4-8b3e-aff03fec4e79","variableMapping":{"from":"kmInteger","end":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[315],"tindex":"3a6dad13-db8f-11e4-8b3e-114d0f4d7c12","variableMapping":{"usedBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","nodeBitMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,44,45,46,47,48,49,50,408,51,52,53,54,55,56,57,58,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,409,105,106,107,108,109,110,410,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,411,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,412,153,154,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,307,308,413,414,415,416,309,417,418,419,420,421,422,0,310,311,312,313,1,423,424,425,386,373,426,387,427,428,429,374,430,431,432,433,434,435,436,397,398,437,438,439,440,441,442,443,399,444,445,446,447,448,449,450,451,452,400,453,454,455,456,457,458,459,401,460,461,462,463,464,465,466,402,467,403,468,469,470,471,472,473,474,475,476,404,477,478,479,480,314,315,481,482,483,484,405,485,406,486,487,488,489,490,491,492,493,494,407,495,496,497,498,499,500,501,316,317,318,319,320,321,502,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,503,348,349,350,351,352,353,354,355,356,357,358,359,504,360,361,362,363,364,365,366,367,368,369,370,371,505,506],"tindex":"3a6dad14-db8f-11e4-8b3e-e19c37ea48bc","variableMapping":{"flags":"defaultL","scDirMask":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"3a6dd425-db8f-11e4-8b3e-85bec20412ab","variableMapping":{"err":"child","dLat":"child","tmpErr":"size","x1":"child","sLon":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-2},{"failures":[18,32,56,429,507,508,501],"tindex":"3a6dd426-db8f-11e4-8b3e-4be5b56aebb3","variableMapping":{"currentEntry":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[2,3,4,5,6,7,8,10,11,12,13,18,19,20,21,22,23,24,25,27,28,29,32,311],"tindex":"3a6dd427-db8f-11e4-8b3e-5f0092644840","variableMapping":{"ref":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-1},{"failures":[445,461,478,496],"tindex":"3a6dd428-db8f-11e4-8b3e-e9bb6f7fbc57","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"3a6dd429-db8f-11e4-8b3e-3fc666475d1d","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[],"tindex":"3a6dd42a-db8f-11e4-8b3e-41187aab3438","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:88","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DAType com.graphhopper.storage.DAType = java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"3a6dd42b-db8f-11e4-8b3e-8d5a4d6cdb61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:83","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator"},"status":-2},{"failures":[465,483],"tindex":"3a6dd42c-db8f-11e4-8b3e-5f609df98a02","variableMapping":{"ghLocation":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"3a6dd42d-db8f-11e4-8b3e-cb489186f539","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"3a71569e-db8f-11e4-8b3e-a7bbd5b1eea5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[428,429,444,507,460,477,495],"tindex":"3a71569f-db8f-11e4-8b3e-1dec4e27c33b","variableMapping":{"r":"speed","x":"speed","absY":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[508,509],"tindex":"3a717db0-db8f-11e4-8b3e-7b49df9cf918","variableMapping":{"size":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[32,311,312],"tindex":"3a717db1-db8f-11e4-8b3e-49905e0ae720","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"3a717db2-db8f-11e4-8b3e-a95735c297d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[397,398,399,400,401,402,403,404,405,406,407],"tindex":"3a717db3-db8f-11e4-8b3e-8142a52a54ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"3a717db4-db8f-11e4-8b3e-b182306cec7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:145","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"3a717db5-db8f-11e4-8b3e-edcc175c03e3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[74,510,187,231,277],"tindex":"3a717db6-db8f-11e4-8b3e-5b79ef1de8ea","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[],"tindex":"3a717db7-db8f-11e4-8b3e-9bedb63b7039","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"I_LEVEL","tmpNode":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-2},{"failures":[],"tindex":"3a717db8-db8f-11e4-8b3e-d7ecc685d89b","variableMapping":{"intIndex":"valueIfKeyNotFound","len":"valueIfKeyNotFound"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[63,64,65,67,69,70,71,72,74,75,76,78,79,81,82,83,87,89,90,91,92,95,99,171,187,215,231,258,259,261,277],"tindex":"3a717db9-db8f-11e4-8b3e-0989e3b2be4f","variableMapping":{"intVal":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:85","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-1},{"failures":[511,512,389,513],"tindex":"3a717dba-db8f-11e4-8b3e-23d6ccd13f01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[445,461,478,496],"tindex":"3a717dbb-db8f-11e4-8b3e-2f0cc6c40b08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"3a717dbc-db8f-11e4-8b3e-7f28bccdc92d","variableMapping":{"acceptBit":"acceptBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"3a717dbd-db8f-11e4-8b3e-a33b34b1f312","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"3a717dbe-db8f-11e4-8b3e-ddfff7338a43","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"start","keys":"nodeLowLink","values":"nodeLowLink","n":"connectedId","o":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:131","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = int[][int];\n    if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n        if (int != int) {\n            int[][int] = int[][int];\n            int[][int] = int;\n        } \n        int++;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[163,341,347,348,354,358],"tindex":"3a717dbf-db8f-11e4-8b3e-878c6e20b4aa","variableMapping":{"cap":"scDirMask","bytes":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"3a717dc0-db8f-11e4-8b3e-7bcd3486b267","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"3a717dc1-db8f-11e4-8b3e-0167d371a4cf","variableMapping":{"closed":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[65,76,82,90,91,178,189,195,203,204,222,233,239,247,248,268,279,285,293,294,0,312],"tindex":"3a71a4d2-db8f-11e4-8b3e-d31e644f6dd1","variableMapping":{"i":"mSize","child":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"3a71a4d3-db8f-11e4-8b3e-eb5c3e73f971","variableMapping":{"str":"val","d":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:276","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String.trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":0},{"failures":[],"tindex":"3a71a4d4-db8f-11e4-8b3e-5f001c80c805","variableMapping":{"high":"oldRelationFlags","len":"oldRelationFlags","start":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3a71a4d5-db8f-11e4-8b3e-cfde960a106b","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"3a71a4d6-db8f-11e4-8b3e-dfef3c54c9e7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[465,483],"tindex":"3a71a4d7-db8f-11e4-8b3e-676f77ce061a","variableMapping":{"hwInt":"hwInt","highwaySpeed":"highwaySpeed","way":"way","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"3a71a4d8-db8f-11e4-8b3e-49614ea47477","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[166],"tindex":"3a71a4d9-db8f-11e4-8b3e-9119dcfac007","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-1},{"failures":[],"tindex":"3a71a4da-db8f-11e4-8b3e-f9070dbb3219","variableMapping":{"tmp":"length","initializedCounter":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"3a71a4db-db8f-11e4-8b3e-e91e053aa206","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3a71a4dc-db8f-11e4-8b3e-d77397f42593","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"3a71a4dd-db8f-11e4-8b3e-0d620e349660","variableMapping":{"entry":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"3a71a4de-db8f-11e4-8b3e-3d5745b9b512","variableMapping":{"newName":"trackType","name":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[17,514],"tindex":"3a71a4df-db8f-11e4-8b3e-d1dcd6bad288","variableMapping":{"pos":"minutes","mSize":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"3a71a4e0-db8f-11e4-8b3e-f9df514dd2f0","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3a71f301-db8f-11e4-8b3e-b911453ca369","variableMapping":{"res":"encoded","value":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[2,3,4,5,6,7,8,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,32,33,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,74,89,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,511,515,516,517,518,389,513,519,510,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,307,308,309,0,310,311,312,313,1,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371],"tindex":"3a71f302-db8f-11e4-8b3e-5d04416b98df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"3a71f303-db8f-11e4-8b3e-99f42497e9a1","variableMapping":{"weightLong":"turnRestrictionBit","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":0},{"failures":[],"tindex":"3a71f304-db8f-11e4-8b3e-7beeae4ec769","variableMapping":{"high":"noOfStates","len":"noOfStates","start":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[520],"tindex":"3a71f305-db8f-11e4-8b3e-f1cf2c823ebc","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"3a721a16-db8f-11e4-8b3e-7fe3f25b5b16","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[372],"tindex":"3a721a17-db8f-11e4-8b3e-1fb41f378df7","variableMapping":{"size":"kmInteger","capacity":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[443,444,459,460,476,477,494,495],"tindex":"3a721a18-db8f-11e4-8b3e-5954e9e6bd4b","variableMapping":{"val":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"3a721a19-db8f-11e4-8b3e-cd203ace9f78","variableMapping":{"turnRelation":"turnRelation","this":"osmReader"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"3a721a1a-db8f-11e4-8b3e-f11eb28df224","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[501],"tindex":"3a721a1b-db8f-11e4-8b3e-59081aaa60af","variableMapping":{"factor":"speed","value":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[2,3,4,5,6,7,8,10,11,12,13,17,18,19,20,21,22,23,24,25,27,28,29,30,32,39,40,42,43,49,53,54,55,56,59,60,61,62,89,375,114,115,116,117,119,122,123,124,141,142,143,380,168,171,172,176,197,203,208,210,211,215,216,220,241,247,252,254,255,258,261,262,266,287,293,298,300,301,304,314,315,320,321,342,360,361,363,364,365,366,367,368,370,371],"tindex":"3a728f4c-db8f-11e4-8b3e-c39ae853c196","variableMapping":{"len":"bufferIndex","dim":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:968","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[((int * int) * 4) + 4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[],"tindex":"3a728f4d-db8f-11e4-8b3e-7b7ffc6c0a70","variableMapping":{"directionBitMask":"capacity","shift":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":0},{"failures":[521,522,523,524,331,352,354,358],"tindex":"3a728f4e-db8f-11e4-8b3e-f1ff0144f22e","variableMapping":{"currentEntry":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[],"tindex":"3a728f4f-db8f-11e4-8b3e-4977934e5eea","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[436,398,446,451,400,453,464,467,403,479,482,485,406,497],"tindex":"3a72b660-db8f-11e4-8b3e-1d0d771b76a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"3a72b661-db8f-11e4-8b3e-3b09d401d4f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":340,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":361,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":168,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":507,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":109,"com.graphhopper.GraphHopperAPITest.testNoLoad":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":64,"com.graphhopper.reader.OSMReaderTest.testFerry":17,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":45,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":467,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":142,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":407,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":498,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":276,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":35,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":459,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":255,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":84,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":231,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":138,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":383,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":356,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":339,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":346,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":524,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":466,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":332,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":113,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":401,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":58,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":174,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":139,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":313,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":464,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":511,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":324,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":330,"com.graphhopper.coll.BitSetImplTest.testCopy":520,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":123,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":301,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":403,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":258,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":176,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":523,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":359,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":130,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":517,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":124,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":500,"com.graphhopper.reader.OSMReaderTest.testSort":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":477,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":28,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":262,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":377,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":250,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":97,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":367,"com.graphhopper.routing.DijkstraTest.initializationError":505,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":297,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":385,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":201,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":390,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":227,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":259,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":405,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":266,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":447,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":146,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":235,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":144,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":327,"com.graphhopper.coll.OSMIDMapTest.testGetLong":42,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":280,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":286,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":193,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":171,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":195,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":240,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":436,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":277,"com.graphhopper.GraphHopperAPITest.testLoad":307,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":175,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":516,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":415,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":232,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":222,"com.graphhopper.storage.LevelGraphStorageTest.testClone":180,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":514,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":1,"com.graphhopper.reader.OSMReaderTest.testBarriers":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":486,"com.graphhopper.util.GHUtilityTest.testCopy":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":329,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":154,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":442,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":391,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":410,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":461,"com.graphhopper.routing.PathTest.testFindInstruction":321,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":456,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":268,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":521,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":44,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":420,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":209,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":484,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":251,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":236,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":295,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":493,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":504,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":69,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":218,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":510,"com.graphhopper.util.InstructionListTest.testWayList2":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":497,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":131,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":272,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":402,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":300,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":465,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":314,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":184,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":468,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":78,"com.graphhopper.storage.RAMDirectoryTest.testSynched":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":278,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":114,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":328,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":22,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":376,"com.graphhopper.routing.AStarTest.initializationError":414,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":342,"com.graphhopper.coll.OSMIDMapTest.testGet":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":275,"com.graphhopper.routing.PathBidirRefTest.testExtract":316,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":421,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":41,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":471,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":150,"com.graphhopper.storage.RAMDataAccessTest.testCopy":381,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":378,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":90,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":451,"com.graphhopper.storage.RAMDataAccessTest.testSegments":384,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":470,"com.graphhopper.util.GHUtilityTest.testSort2":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":337,"com.graphhopper.reader.OSMReaderTest.testMain":19,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":472,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":478,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":200,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":263,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":187,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":191,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":212,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":188,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":482,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":515,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":194,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":30,"com.graphhopper.storage.StorablePropertiesTest.testStore":304,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":380,"com.graphhopper.storage.GraphHopperStorageTest.testClone":224,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":374,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":160,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":234,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":428,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":163,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":70,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":166,"com.graphhopper.routing.PathTest.testTime":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":441,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":210,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":434,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":133,"com.graphhopper.reader.OSMReaderTest.testRelation":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":83,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":199,"com.graphhopper.util.GHUtilityTest.testSortDirected":51,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":495,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":363,"com.graphhopper.GraphHopperTest.testFootOnly":12,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":396,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":452,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":115,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":387,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":145,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":509,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":325,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":392,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":347,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":481,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":79,"com.graphhopper.search.NameIndexTest.testCreate":62,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":360,"com.graphhopper.routing.QueryGraphTest.testOneWay":369,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":411,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":455,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":122,"com.graphhopper.reader.OSMReaderTest.testWithBounds":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":496,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":299,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":310,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":85,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":422,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":508,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":177,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":494,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":462,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":289,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":282,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":220,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":323,"com.graphhopper.util.InstructionListTest.testWayList":54,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":469,"com.graphhopper.GraphHopperAPITest.testDisconnected179":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":71,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":66,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":491,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":476,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":226,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":357,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":463,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":334,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":506,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":355,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":430,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":438,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":404,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":264,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":412,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":512,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":518,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":480,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":214,"com.graphhopper.routing.PathTest.testWayList":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":426,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":372,"com.graphhopper.coll.OSMIDMapTest.testGet2":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":345,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":205,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":475,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":237,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":416,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":273,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":147,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":192,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":148,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":488,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":522,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":397,"com.graphhopper.util.GHUtilityTest.testSort":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":127,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":454,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":474,"com.graphhopper.search.NameIndexTest.testPut":60,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":302,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":140,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":119,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":103,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":513,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":485,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":366,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":315,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":260,"com.graphhopper.storage.MMapDirectoryTest.testSynched":155,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":437,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":37,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":449,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":343,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":0,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":519,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":89,"com.graphhopper.routing.PathTest.testFound":318,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":13,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":501,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":207,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":388,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":473,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":279,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":61,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":74,"com.graphhopper.util.InstructionListTest.testEmptyList":52,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":331,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":335,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":433,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":424,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":460,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":338,"com.graphhopper.reader.PrinctonReaderTest.testRead":15,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":143,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":274,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":63,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":284,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":458,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":489,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":483,"com.graphhopper.reader.OSMReaderTest.testFoot":18,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":87,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":128,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":211,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":450,"com.graphhopper.reader.OSMReaderTest.testOneWay":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":129,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":233,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":248,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":296,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":457,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":379,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":487,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":81,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":351,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":395,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":358,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":429,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":349,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":393,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":309,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":77,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":362,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":31,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":217,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":158,"com.graphhopper.routing.PathBidirRefTest.testExtract2":317,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":389,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":322,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":399,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":59,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":246,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":409,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":446,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":24,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":100,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":417,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":492,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":125,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":249,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":408,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":431,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":241,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":398,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":67,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":499,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":432,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":270,"com.graphhopper.storage.StorablePropertiesTest.testLoad":305,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":341,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":65,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":27,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":167,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":56,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":245,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":418,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":80,"com.graphhopper.routing.AStarBidirectionTest.initializationError":502,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":423,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":206,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":204,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":261}}]
