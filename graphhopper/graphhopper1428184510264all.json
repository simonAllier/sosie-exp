[{"failures":[0],"tindex":"43c668bb-db15-11e4-a492-a5baf6701a3b","variableMapping":{"edgeTo":"code","edgeFrom":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"43c668bc-db15-11e4-a492-eb22ce34942f","variableMapping":{"arrayLength":"allBits","maxGeoRef":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[17],"tindex":"43c668bd-db15-11e4-a492-e33436b39517","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"43c668be-db15-11e4-a492-61d323c64b62","variableMapping":{"values":"mKeys","index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:325","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return int[][int];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":0},{"failures":[],"tindex":"43c68fcf-db15-11e4-a492-75758a156761","variableMapping":{"edgeId":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"43c68fd0-db15-11e4-a492-e9b58e580e7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"43c68fd1-db15-11e4-a492-dd6f29f359e6","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":0},{"failures":[],"tindex":"43c68fd2-db15-11e4-a492-5bf77fc08213","variableMapping":{"freeIndex":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"43c68fd3-db15-11e4-a492-77afb25d15c6","variableMapping":{"lat":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"43c68fd4-db15-11e4-a492-27615f09517a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"43c68fd5-db15-11e4-a492-cf8fb1411e2c","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"43c68fd6-db15-11e4-a492-3927341d8979","variableMapping":{"val":"delta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:109","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[],"tindex":"43c68fd7-db15-11e4-a492-b1c0eda868bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[18,19,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"43c68fd8-db15-11e4-a492-4d3a0f1588c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,0,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,29],"tindex":"43c68fd9-db15-11e4-a492-6f3e7176906b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:192","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[72,28,31],"tindex":"43c68fda-db15-11e4-a492-9738177659ce","variableMapping":{"flags":"directionBitMask","scDirMask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[],"tindex":"43c68fdb-db15-11e4-a492-5ff24a4e34fc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"43c68fdc-db15-11e4-a492-f322644b2f11","variableMapping":{"len":"lastEdgeIndex","i":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[],"tindex":"43c6b6ed-db15-11e4-a492-0bcba58180d9","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"43c6ddfe-db15-11e4-a492-b1da705405ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[42,49,54,73,17,74,64],"tindex":"43c6ddff-db15-11e4-a492-8fd6ea4742ae","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[36,38,41,45,48,0,53,58,60,63],"tindex":"43c6de00-db15-11e4-a492-13cb89a72296","variableMapping":{"dir":"wayTypeName","tr":"tr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:260","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"slight_left\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,72,259,260,19,261,73,262,263,264,17,265,266,267,268,269,270,271,272,273,274,275,276,74,277,278,279,280,68,281,282,283,70,284,285,286,287,288,289,290,291,292,71,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,23,310,311,312,26,27,313,28,314,315,29,30,31,32,33,316,34],"tindex":"43c70511-db15-11e4-a492-81552aac49d2","variableMapping":{"originalEdgesCount":"shift","edgeDifference":"shift","contractedNeighbors":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[317,318],"tindex":"43c70512-db15-11e4-a492-5d6c02bf935e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[319,320,321,322,323,324],"tindex":"43c70513-db15-11e4-a492-e537fce6a9fb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-1},{"failures":[],"tindex":"43c70514-db15-11e4-a492-a9558c33c2a5","variableMapping":{"width":"skippedEdge1","lonSimilar":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":0},{"failures":[],"tindex":"43c72c25-db15-11e4-a492-cbd0b0db6214","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[325,326,70,284,305],"tindex":"43c72c26-db15-11e4-a492-9fd555888755","variableMapping":{"bytePos":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[56],"tindex":"43c88bb7-db15-11e4-a492-63df993478bc","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[327,328,329,330,331,332,333,334],"tindex":"43c88bb8-db15-11e4-a492-6db05c01fd43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"43c8b2c9-db15-11e4-a492-813007049e74","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"43c8b2ca-db15-11e4-a492-695642130b8b","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:245","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[37,39,42,44,49,54,59,61,64,29],"tindex":"43c8b2cb-db15-11e4-a492-41232dffed05","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[78,79,83,86,88,89,90,91,92,93,94,95,96,97,100,101,102,103,104,106,107,108,109,110,112,114,115,116,117,118,119,120,122,123,124,125,335,336,337,338,339,340,341,342,2,343,3,344,345,346,347,348,349,126,350,351,352,325,353,319,354,320,355,356,357,321,326,322,358,323,324,70,284,285,286,287,288,289,290,291,292,71,293,294,295,296,297,298,299,300,301,302,303,304,305,309,359,20,21,24,360,310],"tindex":"43c8b2cc-db15-11e4-a492-37da05a0fed2","variableMapping":{"maxLeafEntries":"edgeCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"43c8b2cd-db15-11e4-a492-37ef67456f32","variableMapping":{"size":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"43c8b2ce-db15-11e4-a492-61673e7a7e82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[81,90,98,100,101,103,107,108,115,116,132,140,142,143,145,149,150,157,158,176,184,186,187,189,193,194,201,202,222,230,232,233,235,239,240,247,248,361,362,363,34],"tindex":"43c8b2cf-db15-11e4-a492-970bfeb3ca41","variableMapping":{"oldPriorities":"mKeys"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"43c8d9e0-db15-11e4-a492-375ec716626f","variableMapping":{"this":"g","index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1126","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getRemovedNodes().add(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-2},{"failures":[18,19,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"43c8d9e1-db15-11e4-a492-035b4ed3c540","variableMapping":{"flags":"directionBitMask","mask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[36,58],"tindex":"43c8d9e2-db15-11e4-a492-99ae7b326841","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"43c8d9e3-db15-11e4-a492-e5399662670d","variableMapping":{"high":"backwardBit","guess":"backwardBit","low":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":0},{"failures":[80,83,84,88,109,115,120,122,123,364,365,366,367,368,339,340,341,369,370,371,372,156,169,170,174,195,201,206,208,209,373,374,375,376,377,378,379,380,381,382,383,384,385,212,215,216,220,241,247,252,254,255,386,387,388,389,390,391,392,393,394,395,396,397,351,317,398,399,18,400,401,402,403,404,405,56,318,406,302,308,407,408,409,410,411,412,413,414,415,309,359,20,21,22,23,24,360,25,310,311,312,26,27,313,28,314,315,29,30,31,32,33,316,34,416,417,418,419,420,421,422],"tindex":"43c8d9e4-db15-11e4-a492-673f6c15c650","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"43c8d9e5-db15-11e4-a492-6f285f42f551","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"43c8d9e6-db15-11e4-a492-ed61cc25f74b","variableMapping":{"value":"index","numberOfBits":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[423],"tindex":"43c8d9e7-db15-11e4-a492-812d86f6769a","variableMapping":{"str":"str","edge":"knotInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:448","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[56],"tindex":"43c8d9e8-db15-11e4-a492-bbc28c0a1dd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"43c8d9e9-db15-11e4-a492-1f2e917febc8","variableMapping":{"entry":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"43c900fa-db15-11e4-a492-d9678cc2e5b5","variableMapping":{"level":"locs","lg":"g","polledNode":"locs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:348","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.setLevel(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":-2},{"failures":[41,48,51,0,53,63],"tindex":"43c900fb-db15-11e4-a492-9bfc8f76533a","variableMapping":{"fullyLoaded":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:658","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,424,364,365,366,367,425,368,335,336,426,337,338,339,340,341,342,2,343,3,344,345,346,347,348,349,126,427,428,369,370,371,429,4,430,5,431,432,433,434,435,436,127,437,438,439,440,441,128,442,443,444,445,446,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,385,447,448,449,450,451,452,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,453,454,455,456,350,457,351,458,459,460,317,398,399,18,352,461,462,463,464,400,401,402,403,404,361,465,362,363,466,467,272,405,56,468,69,318,406,325,353,319,354,320,355,356,357,321,326,322,358,323,324,70,284,285,286,287,288,289,290,291,292,71,293,294,295,296,297,298,299,300,301,302,303,304,305,469,470,308,308,407,407,471,471,408,408,409,409,410,410,411,411,412,412,413,413,472,472,414,414,415,415,309,359,20,21,22,23,24,473,360,25,310,311,474,475,312,26,27,313,28,314,315,29,30,476,31,32,33,316,477,34,478,479,416,417,418,480,481,482,483,419,420,421,422],"tindex":"43c900fc-db15-11e4-a492-b3ad07d0c5cc","variableMapping":{"_location":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"43c900fd-db15-11e4-a492-4961c8fb5b92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:37","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalcEarth.calcDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"43c900fe-db15-11e4-a492-8f490a05e186","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"43c900ff-db15-11e4-a492-2d7f87d2b1b4","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"43c90100-db15-11e4-a492-57d080f4c95f","variableMapping":{"type":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:198","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[362,34],"tindex":"43c92811-db15-11e4-a492-55f6c36e5cad","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"43c92812-db15-11e4-a492-ad7b3cc3be89","variableMapping":{"maxSpeed":"currDistToGoal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":0},{"failures":[19],"tindex":"43c92813-db15-11e4-a492-99d0c7cfa63e","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"43c92814-db15-11e4-a492-5de98ddf899c","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"importance","entityType":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[484],"tindex":"43c92815-db15-11e4-a492-038db2451a8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[36,41,45,46,48,0,53,58,63],"tindex":"43c97636-db15-11e4-a492-df3d7712b976","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:520","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"43c97637-db15-11e4-a492-6bccf2c8cf16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"43c97638-db15-11e4-a492-01c73a41a077","variableMapping":{"nodes":"maxTurnCosts","adj":"maxTurnCosts","base":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"43c97639-db15-11e4-a492-813238f1e106","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"43c9763a-db15-11e4-a492-5115edf6d6c8","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"shift","id":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"43c9763b-db15-11e4-a492-97c3b1b031cf","variableMapping":{"x1":"absY","x2":"r"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":0},{"failures":[],"tindex":"43c9763c-db15-11e4-a492-954ac078d701","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[74],"tindex":"43c9763d-db15-11e4-a492-fd788e9eb4b6","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[80,83,84,88,92,109,115,120,122,123,364,365,366,367,368,339,340,341,369,370,371,372,156,169,170,174,178,195,200,201,206,208,209,373,374,375,376,377,378,379,380,381,382,383,384,385,452,212,215,216,220,224,241,246,247,252,254,255,386,387,388,389,390,391,392,393,394,395,396,397,351,317,398,399,18,400,401,402,403,404,405,56,318,406,302,308,407,408,409,410,411,412,413,414,415,309,359,20,21,22,23,24,360,25,310,311,312,26,27,313,28,314,315,29,30,31,32,33,316,34,416,417,418,419,420,421,422],"tindex":"43c9763e-db15-11e4-a492-11d0feae1a63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:114","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = new byte[1 << (int)]"},"status":-1},{"failures":[],"tindex":"43c9763f-db15-11e4-a492-4d0418e731b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder> java.util.List<com.graphhopper.routing.util.FlagEncoder> = new java.util.ArrayList<com.graphhopper.routing.util.FlagEncoder>()"},"status":-2},{"failures":[],"tindex":"43c97640-db15-11e4-a492-2729aae4abc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"43c99d51-db15-11e4-a492-57c4c6918300","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-2},{"failures":[],"tindex":"43c99d52-db15-11e4-a492-35d6507c4b4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[270],"tindex":"43c99d53-db15-11e4-a492-1f58a9e3d2bf","variableMapping":{"initialized":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"43c99d54-db15-11e4-a492-cba8e512d6bb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"43c99d55-db15-11e4-a492-d5b749398281","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isBool(long, int);\n}"},"status":-2},{"failures":[],"tindex":"43c99d56-db15-11e4-a492-8156c349ab07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[77,485,486,35,487,36,37,38,488,39,40,327,489,328,490,491,492,41,493,42,494,43,44,495,45,46,47,329,496,330,497,498,499,48,500,49,501,50,258,362,502,51,331,0,503,52,332,504,505,506,507,53,508,54,55,72,259,260,19,261,73,262,263,264,17,265,266,267,268,269,270,271,272,273,274,275,276,74,277,405,56,509,510,57,511,58,59,60,512,61,62,333,513,334,514,515,516,63,517,64,518,65,278,66,279,280,67,68,69,70,71,312,26,27,313,28,314,315,29,30,476,31,32,33,316,34],"tindex":"43c99d57-db15-11e4-a492-f3e74cae08cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[484,73,312],"tindex":"43c99d58-db15-11e4-a492-492438e72ed8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[56,68,69,70,71],"tindex":"43c99d59-db15-11e4-a492-f52f39524e6e","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-1},{"failures":[75,321,323],"tindex":"43c99d5a-db15-11e4-a492-eb26ec48b4be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[361,467],"tindex":"43c9c46b-db15-11e4-a492-8ffb7f4c1aa8","variableMapping":{"i":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[519,493,500,508,263,264,517],"tindex":"43c9c46c-db15-11e4-a492-c5cbeaa2a6a3","variableMapping":{"factor":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,364,365,366,367,425,368,335,336,426,337,338,339,340,341,342,2,343,3,344,345,346,347,348,520,349,126,427,428,369,370,371,429,4,430,5,431,432,433,434,435,521,436,127,437,438,439,440,522,441,128,442,443,444,445,523,446,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,350,457,351,458,524,459,460,317,398,399,18,352,461,462,463,464,525,526,485,486,35,487,36,37,38,488,39,40,327,489,328,490,491,492,41,493,42,494,43,44,495,45,46,47,329,496,330,497,498,499,48,500,49,501,50,258,361,465,362,363,466,467,502,51,331,0,503,52,332,504,505,506,507,53,508,54,55,72,259,260,19,261,73,262,263,264,17,265,266,267,268,269,270,271,272,273,274,275,276,74,277,405,56,509,510,57,511,58,59,60,512,61,62,333,513,334,514,515,516,63,517,64,518,65,278,527,68,281,468,69,318,406,282,283,325,353,528,319,354,320,355,356,357,321,326,322,358,323,324,70,284,285,286,287,288,289,290,291,292,71,293,294,295,296,297,298,299,300,301,302,303,304,305,469,470,306,307,308,407,471,408,409,410,411,412,413,472,414,415,309,359,20,21,22,23,24,473,360,25,310,311,474,312,26,27,313,28,314,315,29,30,476,31,32,33,316,34,480,481,482,483,529],"tindex":"43c9c46d-db15-11e4-a492-8dc47e408d26","variableMapping":{"val":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","existing":"com.graphhopper.routing.util.EncodingManager.FOOT","key":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"43c9c46e-db15-11e4-a492-53b10bc06663","variableMapping":{"i":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"43c9c46f-db15-11e4-a492-913a1033ba2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"43c9c470-db15-11e4-a492-b946008ee79a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[476],"tindex":"43c9c471-db15-11e4-a492-71e4c5ea8bba","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"43c9c472-db15-11e4-a492-41af45bb00a0","variableMapping":{"pushingSections":"pushingSections","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"43c9c473-db15-11e4-a492-37f15f5aadb0","variableMapping":{"angle":"maxLon","com.graphhopper.util.AngleCalc.PI3_4":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"43c9c474-db15-11e4-a492-07ea5bebebfe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"43c9eb85-db15-11e4-a492-2b98020ef127","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"43c9eb86-db15-11e4-a492-8b3811539ca4","variableMapping":{"eleDelta":"fwdSlower","decEleSum":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[486,495,510],"tindex":"43c9eb87-db15-11e4-a492-8953d612f9da","variableMapping":{"importance":"speed","hash":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"43c9eb88-db15-11e4-a492-03bd7eb17c4e","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,485,486,35,487,36,37,38,488,39,40,327,489,328,490,491,492,41,493,42,494,43,44,495,45,46,47,329,496,330,497,498,499,48,500,49,501,50,258,362,502,51,331,0,503,52,332,504,505,506,507,53,508,54,55,72,259,260,19,261,73,262,263,264,17,265,266,267,268,269,270,271,272,273,274,275,276,74,277,405,56,509,510,57,511,58,59,60,512,61,62,333,513,334,514,515,516,63,517,64,518,65,278,66,279,67,68,281,282,283,70,284,285,286,287,288,289,290,291,292,71,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,23,311,312,26,27,313,28,314,315,29,30,31,32,33,316,34],"tindex":"43ca1299-db15-11e4-a492-179826b6e436","variableMapping":{"edgeId":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"43ca129a-db15-11e4-a492-eddacde693d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"43ca129b-db15-11e4-a492-eb972259edbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[449,453],"tindex":"43ca129c-db15-11e4-a492-7bac86f93a6f","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[361,467],"tindex":"43ca129d-db15-11e4-a492-e3e9d7ef29a3","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[36,38,41,45,46,48,0,53,58,60,63],"tindex":"43ca129e-db15-11e4-a492-c7cd70a49736","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:420","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":300,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":407,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":80,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":519,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":444,"com.graphhopper.GraphHopperAPITest.testNoLoad":529,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":131,"com.graphhopper.reader.OSMReaderTest.testFerry":312,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":463,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":464,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":503,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":340,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":359,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":230,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":373,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":479,"com.graphhopper.coll.CompressedArrayTest.testCompress":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":507,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":209,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":151,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":426,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":374,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":392,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":322,"com.graphhopper.GraphHopperTest.testPrepare":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":299,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":325,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":487,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":71,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":317,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":424,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":53,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":462,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":337,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":466,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":486,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":285,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":370,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":38,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":474,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":212,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":14,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":324,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":432,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":371,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":527,"com.graphhopper.reader.OSMReaderTest.testSort":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":493,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":216,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":377,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":204,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":169,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":164,"com.graphhopper.storage.RAMDataAccessTest.testHeader":393,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":412,"com.graphhopper.routing.DijkstraTest.initializationError":306,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":251,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":372,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":113,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":181,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":528,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":213,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":58,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":220,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":500,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":343,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":296,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":342,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":473,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":288,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":287,"com.graphhopper.coll.OSMIDMapTest.testGetLong":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":234,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":240,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":105,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":83,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":107,"com.graphhopper.coll.CompressedArrayTest.testCompress2":6,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":194,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":495,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":231,"com.graphhopper.GraphHopperAPITest.testLoad":482,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":87,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":270,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":186,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":176,"com.graphhopper.storage.LevelGraphStorageTest.testClone":92,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":484,"com.graphhopper.reader.OSMReaderTest.testBarriers":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":467,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":512,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":290,"com.graphhopper.util.GHUtilityTest.testCopy":351,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":126,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":498,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":54,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":523,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":396,"com.graphhopper.routing.PathTest.testFindInstruction":406,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":504,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":222,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":276,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":352,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":121,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":511,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":205,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":249,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":350,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":515,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":280,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":307,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":136,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":172,"com.graphhopper.util.InstructionListTest.testWayList2":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":518,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":433,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":210,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":36,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":254,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":525,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":405,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":96,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":488,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":145,"com.graphhopper.storage.RAMDirectoryTest.testSynched":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":232,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":364,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":289,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":314,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":376,"com.graphhopper.routing.AStarTest.initializationError":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":302,"com.graphhopper.coll.OSMIDMapTest.testGet":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":229,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":74,"com.graphhopper.routing.PathBidirRefTest.testExtract":469,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":327,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":346,"com.graphhopper.storage.RAMDataAccessTest.testCopy":389,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":379,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":157,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":40,"com.graphhopper.storage.RAMDataAccessTest.testSegments":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":127,"com.graphhopper.util.GHUtilityTest.testSort2":457,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":297,"com.graphhopper.reader.OSMReaderTest.testMain":27,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":239,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":489,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":42,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":347,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":112,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":217,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":99,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":103,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":124,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":100,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":513,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":510,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":106,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":316,"com.graphhopper.storage.StorablePropertiesTest.testStore":385,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":388,"com.graphhopper.storage.GraphHopperStorageTest.testClone":178,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":160,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":17,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":450,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":263,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":75,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":49,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":137,"com.graphhopper.routing.PathTest.testTime":69,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":497,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":122,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":435,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":150,"com.graphhopper.reader.OSMReaderTest.testRelation":476,"com.graphhopper.util.GHUtilityTest.testSortDirected":459,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":454,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":517,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":383,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":408,"com.graphhopper.GraphHopperTest.testFootOnly":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":331,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":365,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":452,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":2,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":509,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":146,"com.graphhopper.search.NameIndexTest.testCreate":422,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":394,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":308,"com.graphhopper.routing.QueryGraphTest.testOneWay":472,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":521,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":332,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":369,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":8,"com.graphhopper.reader.OSMReaderTest.testWithBounds":33,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":64,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":253,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":410,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":152,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":277,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":66,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":89,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":85,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":516,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":55,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":243,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":236,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":174,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":413,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":284,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":207,"com.graphhopper.util.InstructionListTest.testWayList":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":39,"com.graphhopper.GraphHopperAPITest.testDisconnected179":483,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":138,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":133,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":455,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":334,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":481,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":166,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":492,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":22,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":180,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":358,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":485,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":294,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":326,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":265,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":41,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":218,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":520,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":43,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":168,"com.graphhopper.routing.PathTest.testWayList":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":496,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":261,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":423,"com.graphhopper.coll.OSMIDMapTest.testGet2":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":305,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":380,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":117,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":416,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":242,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":491,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":191,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":271,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":3,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":104,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":344,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":390,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":45,"com.graphhopper.util.GHUtilityTest.testSort":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":430,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":16,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":52,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":490,"com.graphhopper.search.NameIndexTest.testPut":420,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":338,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":445,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":368,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":59,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":56,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":437,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":47,"com.graphhopper.storage.MMapDirectoryTest.testSynched":453,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":417,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":526,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":303,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":361,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":156,"com.graphhopper.routing.PathTest.testFound":468,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":68,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":311,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":119,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":77,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":328,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":233,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":421,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":141,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":183,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":386,"com.graphhopper.util.InstructionListTest.testEmptyList":460,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":499,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":348,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":259,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":508,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":298,"com.graphhopper.reader.PrinctonReaderTest.testRead":480,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":206,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":341,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":228,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":140,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":130,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":238,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":333,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":506,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":279,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":451,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":330,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":57,"com.graphhopper.reader.OSMReaderTest.testFoot":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":154,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":415,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":418,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":5,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":13,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":123,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":502,"com.graphhopper.reader.OSMReaderTest.testOneWay":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":431,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":187,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":202,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":250,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":505,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":382,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":148,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":355,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":1,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":323,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":354,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":381,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":440,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":144,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":471,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":171,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":477,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":456,"com.graphhopper.routing.PathBidirRefTest.testExtract2":470,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":70,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":48,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":434,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":419,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":200,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":522,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":501,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":167,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":273,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":441,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":514,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":429,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":203,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":524,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":95,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":266,"com.graphhopper.GraphHopperTest.testFootAndCar":23,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":195,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":101,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":349,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":134,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":224,"com.graphhopper.storage.StorablePropertiesTest.testLoad":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":301,"com.graphhopper.GraphHopperTest.testPrepareOnly":309,"com.graphhopper.GraphHopperTest.testVia":20,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":446,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":494,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":132,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":31,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":79,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":18,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":199,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":274,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":147,"com.graphhopper.routing.AStarBidirectionTest.initializationError":283,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":258,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":118,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":116,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":215}}]
