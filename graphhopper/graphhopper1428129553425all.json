[{"failures":[0],"tindex":"4f989780-da95-11e4-b669-01509e746060","variableMapping":{"version":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"4f99f711-da95-11e4-b669-6fa131d710f1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"4f99f712-da95-11e4-b669-0da487b03cd1","variableMapping":{"id":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"4f99f713-da95-11e4-b669-25e4c7997ead","variableMapping":{"midLat":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"4f99f714-da95-11e4-b669-433e7feacb59","variableMapping":{"version":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:82","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"4f99f715-da95-11e4-b669-a5c02c66a0fd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"4f99f716-da95-11e4-b669-e763b31f9213","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"4f99f717-da95-11e4-b669-b9488fd70b50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[1,2,3,4,6,7,8,9,10,11,12,13,15,16,18,19,21,23,24,25,26,27,28,29,30,31,32,33,34,38,40,41,42,44,45,46,47,53,54,56,57,98,99,100,101,102,58,59,60,61,62,63,103,66,67,69,70,71,72,73,74,76,77,78,79,80,104,82,83,105,106,85,107,108,87,89,90,91,92,93,109,94,95,110,111,97,112,113],"tindex":"4f99f718-da95-11e4-b669-9fcbdca8e233","variableMapping":{"len":"indexDivisor","start":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[114,115,116,117,7,118,119,120,21,22,28,34],"tindex":"4f99f719-da95-11e4-b669-155918010b35","variableMapping":{"endIndexPlusOne":"shift","frontIndex":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"4f9a1e2a-da95-11e4-b669-f34c0c18c70e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[],"tindex":"4f9a1e2b-da95-11e4-b669-a7bfb87146ca","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[121,122,1,123,124,125,126,127,2,3,4,5,128,129,130,131,132,133,134,135,136,6,7,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,118,154,155,156,157,158,159,160,161,162,119,163,164,165,166,167,168,169,170,171,8,172,173,174,9,9,10,10,175,175,11,11,12,12,13,13,14,14,15,15,16,16,176,176,17,17,18,18,177,120,19,20,21,22,23,24,25,26,27,28,29,178,30,31,32,33,179,34,180,181,182,183,184,35,36,37,38,39,40,41,42,43,44,185,45,46,47,48,186,187,188,49,50,51,52,53,54,55,56,57,189,190,191,192,193,194,195,196,98,99,100,101,197,102,198,199,200,201,202,203,204,205,206,58,59,60,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,61,62,63,224,225,226,227,228,229,230,231,232,233,234,235,65,236,237,66,238,239,67,68,240,241,242,69,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,70,263,264,265,266,267,71,268,269,270,271,72,272,273,73,274,275,276,277,278,74,75,279,280,281,76,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,77,302,303,304,305,306,78,307,308,309,310,79,311,312,80,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,81,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,86,359,360,87,88,361,362,363,89,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,90,384,385,386,387,388,91,389,390,391,392,92,393,394,93,395,396],"tindex":"4f9a1e2c-da95-11e4-b669-c5b463e8c0e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[5,397,398,399,400,401,33,40],"tindex":"4f9a1e2d-da95-11e4-b669-4d78c901329a","variableMapping":{"tmp":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[402],"tindex":"4f9a1e2e-da95-11e4-b669-01e69d28db81","variableMapping":{"java.lang.Double.MAX_VALUE":"distance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:372","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-1},{"failures":[403,404,405,406,407,408,409,410,411,412],"tindex":"4f9a1e2f-da95-11e4-b669-29d59b65bd72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"4f9a1e30-da95-11e4-b669-69b3b65e67c6","variableMapping":{"bm":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":0},{"failures":[],"tindex":"4f9a4541-da95-11e4-b669-7d260e35b637","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-2},{"failures":[5,413,414,22,23,25,28,29,30,31,32,34,40,41,42,43,44,46],"tindex":"4f9a4542-da95-11e4-b669-ebcbdae22cf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"4f9a4543-da95-11e4-b669-8b00a39cb09c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"4f9a4544-da95-11e4-b669-a5df72e3a1ac","variableMapping":{"min":"level","tmpSize":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":0},{"failures":[415,118,119,163,166,174,66,67,243,244,251,258,265,269,274,74,282,283,290,297,304,308,313,318,319,326,333,341,345,352,87,364,365,372,379,386,390,395],"tindex":"4f9a4545-da95-11e4-b669-99821151d204","variableMapping":{"high":"defaultValue","highKey":"defaultValue","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-1},{"failures":[1,2,3,4,129,130,131,132,133,134,135,138,139,142,143,144,145,146,148,150,152,153,118,155,156,157,158,159,160,161,162,119,166,167,168,169,171,8,172,173,174,12,180,181,187,188,195,204,218,235,66,67,243,244,246,247,251,258,260,265,267,269,271,274,74,282,283,285,286,290,297,299,304,306,308,310,313,318,319,321,322,326,333,335,341,81,345,347,352,87,364,365,367,368,372,379,381,386,388,390,392,395],"tindex":"4f9a4546-da95-11e4-b669-5f9bfe743557","variableMapping":{"high":"flags","low":"flags","guess":"flags","guessedKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[416,417,418,419,114,116,420,421],"tindex":"4f9a4547-da95-11e4-b669-33e2745eeae4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"4f9a4548-da95-11e4-b669-13a21ac04495","variableMapping":{"high":"lastTime","guess":"lastTime","low":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"4f9a4549-da95-11e4-b669-0955d241171a","variableMapping":{"bytesForFlags":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"4f9a454a-da95-11e4-b669-c9a666deeef2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:652","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"4f9a454b-da95-11e4-b669-21981fb54006","variableMapping":{"err":"importance","dLat":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"4f9a454c-da95-11e4-b669-410b657af7b6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"4f9a454d-da95-11e4-b669-47bb19369a24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[422,423],"tindex":"4f9a6c5e-da95-11e4-b669-61bcf1d19378","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"4f9a6c5f-da95-11e4-b669-11dc664997f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"4f9a6c60-da95-11e4-b669-25c2ffbf8a8a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"4f9a6c61-da95-11e4-b669-eb27f20629bf","variableMapping":{"red":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","green":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-2},{"failures":[],"tindex":"4f9a6c62-da95-11e4-b669-aba159d9cdbe","variableMapping":{"key":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"4f9a6c63-da95-11e4-b669-899ababdb9ae","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"4f9a6c64-da95-11e4-b669-011269cbd731","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[131,135,136],"tindex":"4f9a6c65-da95-11e4-b669-6f3fb8cc537f","variableMapping":{"tmpEntries":"component"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[],"tindex":"4f9a6c66-da95-11e4-b669-2bc743c7641f","variableMapping":{"i":"kmInteger","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":0},{"failures":[121,122,1,123,124,125,126,127,2,3,4,5,128,129,130,131,132,133,134,135,136,6,7,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,118,154,155,156,157,158,159,160,161,162,119,163,164,165,166,167,168,169,170,171,8,172,173,174,9,9,10,10,175,175,11,11,12,12,13,13,14,14,15,15,16,16,176,176,17,17,18,18,177,120,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,180,181,182,38,39,40,41,42,43,44,45,46,47,48,187,188,189,190,191,192,193,194,195,196,98,99,100,101,197,102,198,199,200,201,202,203,204,205,206,58,59,60,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,61,62,63,224,225,226,227,228,229,230,231,232,233,234,235,66,238,239,67,68,240,241,69,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,70,263,264,265,266,267,71,268,269,270,271,72,272,273,73,274,275,278,74,75,279,280,76,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,77,302,303,304,305,306,78,307,308,309,310,79,311,312,80,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,81,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,86,359,360,87,88,361,362,89,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,90,384,385,386,387,388,91,389,390,391,392,92,393,394,93,395,396],"tindex":"4f9a6c67-da95-11e4-b669-45a76f7017bc","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[424],"tindex":"4f9a9378-da95-11e4-b669-1bba46e21476","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[117],"tindex":"4f9a9379-da95-11e4-b669-3b82ef969545","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"4f9a937a-da95-11e4-b669-2929b14202b1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":0},{"failures":[403,404,405,406,408,409,410,411,412],"tindex":"4f9a937b-da95-11e4-b669-6f75f590a32c","variableMapping":{"orientation":"lon","java.lang.Math.PI":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"4f9a937c-da95-11e4-b669-b1a7b4760bdc","variableMapping":{"latSimilar":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[],"tindex":"4f9a937d-da95-11e4-b669-750867660a53","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"length","nodeId":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-2},{"failures":[121,122,1,123,124,125,126,127,2,3,4,5,128,129,130,131,132,133,134,135,136,6,7,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,118,154,155,156,157,158,159,160,161,162,119,163,164,165,166,167,168,169,170,171,8,172,173,174,9,9,10,10,175,175,11,11,12,12,13,13,14,14,15,15,16,16,176,176,17,17,18,18,177,120,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,180,181,182,38,39,40,41,42,43,44,45,46,47,48,187,188,189,190,191,192,194,195,196,98,99,100,101,102,198,199,200,201,203,204,205,206,58,59,60,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,61,62,63,224,225,226,227,228,229,230,231,232,234,235,66,239,67,68,240,241,69,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,70,263,264,265,266,267,71,268,269,270,271,72,272,273,73,274,275,278,74,75,279,280,76,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,77,302,303,304,305,306,78,307,308,309,310,79,311,312,80,313,314,425,426,427,428,429,430,431,432,433,434,435,328,81,354,355,356,357,358,86,359,360,87,88,361,362,89,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,90,384,385,386,387,388,91,389,390,391,392,92,393,394,93,395,396],"tindex":"4f9a937e-da95-11e4-b669-95bb2996a4e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,98,99,100,101,102,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,273,73,74,75,76,77,78,79,312,80,81,436,104,437,82,83,105,84,438,106,85,107,108,86,87,88,89,90,91,92,394,93,439,109,440,94,95,110,96,441,111,97,112,113],"tindex":"4f9aba8f-da95-11e4-b669-ff88ed28565e","variableMapping":{"nameIndexRef":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failures":[],"tindex":"4f9aba90-da95-11e4-b669-718f01b23d08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[442,443,444,445],"tindex":"4f9aba91-da95-11e4-b669-330931d2ec6c","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"4f9aba92-da95-11e4-b669-35c6b3801ac0","variableMapping":{"width":"segmentSizeInBytes","i":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"4f9aba93-da95-11e4-b669-1d28afb9feaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:504","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[446,447,448,449,450,451,452,453,454,117,455,456,457,458],"tindex":"4f9aba94-da95-11e4-b669-41c634dbf6b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[],"tindex":"4f9aba95-da95-11e4-b669-e56285458ceb","variableMapping":{"d":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"4f9aba96-da95-11e4-b669-2bb2afaa41e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[142,144,145,146,147,148,150,152,153,154,155,156,159,160,162,119,164,165,167,168,169,170,171,8,172,173,174],"tindex":"4f9aba97-da95-11e4-b669-eb7ad12aa9bb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-1},{"failures":[459,460,461,462,28,182],"tindex":"4f9aba98-da95-11e4-b669-4be9b81cc0dd","variableMapping":{"closed":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[121,122,1,123,124,125,126,127,2,3,4,5,128,129,130,131,132,133,134,135,136,6,7,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,118,154,155,156,157,158,159,160,161,162,119,163,164,165,166,167,168,169,170,171,8,172,173,174,9,10,175,11,12,13,14,15,16,176,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,180,181,182,38,39,40,41,42,43,44,45,46,47,48,187,188,189,190,191,192,194,195,98,99,100,101,102,198,199,200,201,203,204,205,206,58,59,60,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,61,62,63,224,225,226,227,228,229,230,231,232,234,235,66,239,67,68,240,241,69,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,70,263,264,265,266,267,71,268,269,270,271,72,272,273,73,274,275,278,74,75,279,280,76,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,77,302,303,304,305,306,78,307,308,309,310,79,311,312,80,313,314,425,426,427,428,429,430,431,432,433,434,435,328,81,354,355,356,357,358,86,359,360,87,88,361,362,89,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,90,384,385,386,387,388,91,389,390,391,392,92,393,394,93,395,396],"tindex":"4f9aba99-da95-11e4-b669-6fa2633d11f1","variableMapping":{"segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"4f9aba9a-da95-11e4-b669-8d03db86e02c","variableMapping":{"weightToPrioMap":"weightToPrioMap","avoidHighwayTags":"safeHighwayTags","intendedValues":"sidewalks","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","maxSpeed":"maxSpeed","highway":"highway","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.PREFER","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"4f9aba9b-da95-11e4-b669-6f0b065b4cd7","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[117],"tindex":"4f9ae1ac-da95-11e4-b669-e1b79ec846cf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"4f9ae1ad-da95-11e4-b669-c1cdb7b64a05","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[463],"tindex":"4f9ae1ae-da95-11e4-b669-019445051c7e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[162,169,40,47,219],"tindex":"4f9ae1af-da95-11e4-b669-d98e274ad849","variableMapping":{"high":"nodeA","len":"nodeB","start":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"4f9ae1b0-da95-11e4-b669-895d7f10b26c","variableMapping":{"turnCosts":"currDistToGoal","weight":"currDistToGoal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[5,397,398,399,400,401,33,40],"tindex":"4f9ae1b1-da95-11e4-b669-2167298995cf","variableMapping":{"midLat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[403,404,405,406,408,409,410,411,412],"tindex":"4f9ae1b2-da95-11e4-b669-e72c84ddafa0","variableMapping":{"factor":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"4f9ae1b3-da95-11e4-b669-97d812cbe827","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[117,7,118,119,120],"tindex":"4f9ae1b4-da95-11e4-b669-295ae1fa8868","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-1},{"failures":[],"tindex":"4f9ae1b5-da95-11e4-b669-b9d0d2940530","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxTurnCosts","prevOrNextEdgeId":"maxTurnCosts","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:74","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    return double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[131,134,244,254,255,257,261,262,71,268,283,293,294,296,300,301,78,307,319,329,330,332,336,337,343,344,365,375,376,378,382,383,91,389],"tindex":"4f9ae1b6-da95-11e4-b669-85faec7d1e35","variableMapping":{"arr":"a","length":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:57","type":"CtReturnImpl","sourcecode":"return int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[],"tindex":"4f9ae1b7-da95-11e4-b669-dd3d6611f452","variableMapping":{"freeIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[414],"tindex":"4f9ae1b8-da95-11e4-b669-b91447f2a236","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[118],"tindex":"4f9ae1b9-da95-11e4-b669-8bc0f8ba1165","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"4f9ae1ba-da95-11e4-b669-7f632eee5518","variableMapping":{"lastIndex":"speed","fromIndex":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[1,2,3,4,6,7,8,9,10,11,12,13,15,16,18,19,21,23,24,25,26,27,28,29,30,31,32,33,34,38,40,41,42,44,45,46,47,53,54,56,57,98,99,100,101,102,58,59,60,61,62,63,103,66,67,69,70,71,72,73,74,76,77,78,79,80,104,82,83,105,106,85,107,108,87,89,90,91,92,93,109,94,95,110,111,97,112,113],"tindex":"4f9ae1bb-da95-11e4-b669-d5ba86bc8fb5","variableMapping":{"size":"indexDivisor","i":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"4f9ae1bc-da95-11e4-b669-63017d5e98eb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[464,117,465,466,137,467,468,469,470,463,415,118,154,155,156,157,158,159,160,161,162,119,163,164,165,166,167,168,169,170,171,8,172,173,174,38,43,47,195,204,218,235,66,238,239,67,68,240,241,242,69,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,70,263,264,265,266,267,71,268,269,270,271,72,272,273,73,274,275,278,74,75,279,280,281,76,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,77,302,303,304,305,306,78,307,308,309,310,79,311,312,80,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,81,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,86,359,360,87,88,361,362,363,89,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,90,384,385,386,387,388,91,389,390,391,392,92,393,394,93,395,396],"tindex":"4f9b08cd-da95-11e4-b669-87c76637d5e2","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-1},{"failures":[471,472,473,474,465,475,476,477,25,26,30],"tindex":"4f9b08ce-da95-11e4-b669-fb8aaab83daf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[403,404,405,406,407,408,409,410,411,412],"tindex":"4f9b08cf-da95-11e4-b669-b7117312eedc","variableMapping":{"encoded":"bits","backwardBit":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"4f9b08d0-da95-11e4-b669-4ff713a1390f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[403,404,405,406,407,408,409,410,411,412],"tindex":"4f9b08d1-da95-11e4-b669-d36de9895fe4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"4f9b08d2-da95-11e4-b669-11d4f1198382","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[117],"tindex":"4f9b08d3-da95-11e4-b669-85c5497f7153","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"4f9b08d4-da95-11e4-b669-fdd8e2b3d619","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[5,397,478,446,398,450,457,402,479,466,468,470,415,399,413,400,401,414,118,154,165,174,120,19,21],"tindex":"4f9b08d5-da95-11e4-b669-cbc346603a71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"4f9b08d6-da95-11e4-b669-4bc290575e21","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[446,447,449,450,451,453,480,454,456,457,458],"tindex":"4f9b08d7-da95-11e4-b669-f7d0e9a8037e","variableMapping":{"byteCount":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"4f9b08d8-da95-11e4-b669-b3f2b21351b7","variableMapping":{"origEdgeId":"err","mainEdges":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[117,6,7,118,119,120,356],"tindex":"4f9b08d9-da95-11e4-b669-659cb50c9652","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:55","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Reverse Speed\" , int , int , double , com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"4f9b08da-da95-11e4-b669-4be841d8370e","variableMapping":{"periodicUpdates":"locs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[446,447,417,449,450,451,453,480,454,114,116,420,456,457,458],"tindex":"4f9b08db-da95-11e4-b669-9ffec24a80b8","variableMapping":{"shift":"relationFlags","tmpValue":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[7],"tindex":"4f9b2fec-da95-11e4-b669-c73ee7f59e68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[424,21],"tindex":"4f9b2fed-da95-11e4-b669-59ac42dc9174","variableMapping":{"initLeafSize":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[5,413,414,22,23,25,28,29,30,31,32,34,40,41,42,43,44,46],"tindex":"4f9b2fee-da95-11e4-b669-439847c93de9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"4f9b2fef-da95-11e4-b669-87c687dbf23b","variableMapping":{"byteCount":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":0},{"failures":[],"tindex":"4f9b2ff0-da95-11e4-b669-09929f316cc3","variableMapping":{"other":"this","message":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:96","type":"CtIfImpl","sourcecode":"if ((this.java.lang.String) == null ? (com.graphhopper.util.InstructionAnnotation.java.lang.String) != null : !(this.java.lang.String.equals(com.graphhopper.util.InstructionAnnotation.java.lang.String)))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"4f9b2ff1-da95-11e4-b669-c541a61b3f2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[121,122,1,123,124,125,126,127,2,3,4,5,128,129,130,131,132,133,134,135,136,6,7,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,118,154,155,156,157,158,159,160,161,162,119,163,164,165,166,167,168,169,170,171,8,172,173,174,9,9,10,10,175,175,11,11,12,12,13,13,14,14,15,15,16,16,176,176,17,17,18,18,177,120,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,180,181,182,38,39,40,41,42,43,44,45,46,47,48,187,188,189,190,191,192,193,194,195,196,98,99,100,101,197,102,198,199,200,201,202,203,204,205,206,58,59,60,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,61,62,63,224,225,226,227,228,229,230,231,232,233,234,235,237,66,238,239,67,68,240,241,69,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,70,263,264,265,266,267,71,268,269,270,271,72,272,273,73,274,275,278,74,75,279,280,76,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,77,302,303,304,305,306,78,307,308,309,310,79,311,312,80,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,81,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,86,359,360,87,88,361,362,89,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,90,384,385,386,387,388,91,389,390,391,392,92,393,394,93,395,396],"tindex":"4f9b2ff2-da95-11e4-b669-8908d652431f","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"4f9b2ff3-da95-11e4-b669-511cbabc56d2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":388,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":170,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":86,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":397,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":318,"com.graphhopper.reader.OSMReaderTest.testFerry":21,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":129,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":130,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":62,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":39,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":458,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":252,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":184,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":436,"com.graphhopper.coll.CompressedArrayTest.testCompress":404,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":144,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":338,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":292,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":221,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":104,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":150,"com.graphhopper.GraphHopperTest.testPrepare":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":140,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":299,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":423,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":119,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":196,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":447,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":126,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":362,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":446,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":448,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":161,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":59,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":450,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":66,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":89,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":422,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":153,"com.graphhopper.GraphHopperTest.testLoadOSM":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":212,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":429,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":60,"com.graphhopper.reader.OSMReaderTest.testSort":24,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":68,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":83,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":309,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":74,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":350,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":15,"com.graphhopper.storage.RAMDataAccessTest.testHeader":441,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":182,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":271,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":387,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":288,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":238,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":456,"com.graphhopper.reader.OSMNodeTest.testSetTags":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":69,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":373,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":419,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":226,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":166,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":220,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":224,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":457,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":158,"com.graphhopper.coll.OSMIDMapTest.testGetLong":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":157,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":365,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":262,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":380,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":87,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":382,"com.graphhopper.coll.CompressedArrayTest.testCompress2":403,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":301,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":452,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":253,"com.graphhopper.GraphHopperAPITest.testLoad":187,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":363,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":428,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":465,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":293,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":283,"com.graphhopper.storage.LevelGraphStorageTest.testClone":367,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":424,"com.graphhopper.reader.OSMReaderTest.testBarriers":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":461,"com.graphhopper.util.GHUtilityTest.testCopy":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":235,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":202,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":442,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":112,"com.graphhopper.routing.PathTest.testFindInstruction":20,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":244,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":128,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":470,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":393,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":199,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":310,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":297,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":257,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":360,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":115,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":369,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":323,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":435,"com.graphhopper.util.InstructionListTest.testWayList2":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":345,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":213,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":313,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":449,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":273,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":402,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":6,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":75,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":371,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":437,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":459,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":254,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":159,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":282,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":26,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":8,"com.graphhopper.coll.OSMIDMapTest.testGet":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":251,"com.graphhopper.routing.PathBidirRefTest.testExtract":138,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":463,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":55,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":90,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":230,"com.graphhopper.storage.RAMDataAccessTest.testCopy":94,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":343,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":478,"com.graphhopper.storage.RAMDataAccessTest.testSegments":97,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":472,"com.graphhopper.util.GHUtilityTest.testSort2":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":167,"com.graphhopper.reader.OSMReaderTest.testMain":23,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":261,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":231,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":443,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":347,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":374,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":378,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":395,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":12,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":265,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":455,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":381,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":33,"com.graphhopper.storage.StorablePropertiesTest.testStore":65,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":440,"com.graphhopper.storage.GraphHopperStorageTest.testClone":285,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":414,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":315,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":400,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":354,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":324,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":357,"com.graphhopper.routing.PathTest.testTime":120,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":394,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":368,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":215,"com.graphhopper.reader.OSMReaderTest.testRelation":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":337,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":385,"com.graphhopper.util.GHUtilityTest.testSortDirected":124,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":276,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":107,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":11,"com.graphhopper.GraphHopperTest.testFootOnly":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":99,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":225,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":333,"com.graphhopper.search.NameIndexTest.testCreate":52,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":111,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":9,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":431,"com.graphhopper.routing.QueryGraphTest.testOneWay":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":216,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":408,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":58,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":405,"com.graphhopper.reader.OSMReaderTest.testWithBounds":32,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":113,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":445,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":339,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":415,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":114,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":364,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":416,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":264,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":258,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":76,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":154,"com.graphhopper.util.InstructionListTest.testWayList":3,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":311,"com.graphhopper.GraphHopperAPITest.testDisconnected179":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":325,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":409,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":320,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":336,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":352,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":42,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":287,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":151,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":304,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":149,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":241,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":173,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":233,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":430,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":418,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":278,"com.graphhopper.routing.PathTest.testWayList":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":329,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":476,"com.graphhopper.coll.OSMIDMapTest.testGet2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":174,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":438,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":390,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":263,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":298,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":249,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":227,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":228,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":95,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":108,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":474,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":453,"com.graphhopper.util.GHUtilityTest.testSort":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":342,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":412,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":471,"com.graphhopper.search.NameIndexTest.testPut":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":274,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":284,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":201,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":223,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":191,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":433,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":7,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":189,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":473,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":36,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":479,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":469,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":131,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":434,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":81,"com.graphhopper.routing.PathTest.testFound":177,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":48,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":117,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":392,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":0,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":356,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":255,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":51,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":328,"com.graphhopper.util.InstructionListTest.testEmptyList":127,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":290,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":475,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":168,"com.graphhopper.reader.PrinctonReaderTest.testRead":180,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":79,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":63,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":250,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":327,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":317,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":260,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":103,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":460,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":420,"com.graphhopper.reader.OSMReaderTest.testFoot":22,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":18,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":341,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":210,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":411,"com.graphhopper.reader.OSMReaderTest.testOneWay":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":211,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":294,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":307,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":270,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":85,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":302,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":335,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":152,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":401,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":192,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":331,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":175,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":179,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":279,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":277,"com.graphhopper.routing.PathBidirRefTest.testExtract2":139,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":432,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":118,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":454,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":49,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":306,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":193,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":467,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":207,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":308,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":370,"com.graphhopper.GraphHopperTest.testFootAndCar":43,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":77,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":376,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":480,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":234,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":321,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":464,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":462,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":163,"com.graphhopper.storage.StorablePropertiesTest.testLoad":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":246,"com.graphhopper.GraphHopperTest.testPrepareOnly":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":171,"com.graphhopper.GraphHopperTest.testVia":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":319,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":30,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":358,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":5,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":305,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":468,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":334,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":398,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":391,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":389,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":67}}]
