[{"failures":[0,1],"tindex":"3a33d1f4-db18-11e4-921d-ab3348b59d79","variableMapping":{"nodesContracted":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"3a33f905-db18-11e4-921d-91b9c940954e","variableMapping":{"mGarbage":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[],"tindex":"3a33f906-db18-11e4-921d-c17e6125a79c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"3a33f907-db18-11e4-921d-13d65456f76a","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"3a33f908-db18-11e4-921d-63df892507a1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"3a33f909-db18-11e4-921d-f90077e7961a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"3a33f90a-db18-11e4-921d-8d5aaf4b598c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"3a33f90b-db18-11e4-921d-bb725839b8de","variableMapping":{"tmp":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"3a33f90c-db18-11e4-921d-6737e9652a56","variableMapping":{"freeIndex":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":0},{"failures":[],"tindex":"3a33f90d-db18-11e4-921d-418f47a477f5","variableMapping":{"lastKey":"forwardBit","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,0,59,60,61,1,62],"tindex":"3a33f90e-db18-11e4-921d-613a687890fe","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"factor","com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR":"factor","weight":"factor","weightLong":"tmpValue","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-1},{"failures":[58,0,63,64,1,65],"tindex":"3a33f90f-db18-11e4-921d-0179fd38eaac","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"3a33f910-db18-11e4-921d-695389210e9e","variableMapping":{"is3D":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[],"tindex":"3a342021-db18-11e4-921d-91ee76539271","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"3a342022-db18-11e4-921d-7313b03d44d0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[59],"tindex":"3a342023-db18-11e4-921d-3f33b9df7940","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[],"tindex":"3a342024-db18-11e4-921d-31075e22133e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"3a342025-db18-11e4-921d-bd02db0103f0","variableMapping":{"initializedCounter":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":0},{"failures":[66,14,16,67,68,69],"tindex":"3a346e46-db18-11e4-921d-3327c470c911","variableMapping":{"bytePointer":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[70,24],"tindex":"3a346e47-db18-11e4-921d-91ba2663e7ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[71,72,66,73,74,14,75,76,77,78,79,15,16,80,81,82,83,84,85,86,87,88,89,17,67,70,90,20,62],"tindex":"3a346e48-db18-11e4-921d-d703d8d63e1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"3a346e49-db18-11e4-921d-35368acbc3dc","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"3a346e4a-db18-11e4-921d-3360f073c529","variableMapping":{"minLatInit":"java.lang.Double.NaN","maxLonInit":"java.lang.Double.NaN","minLonInit":"java.lang.Double.NaN","bounds":"this","maxLatInit":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,71,72,66,73,74,14,75,115,76,77,78,79,116,15,16,80,81,82,83,84,85,86,87,88,89,17,67],"tindex":"3a34955b-db18-11e4-921d-af48a2beb77b","variableMapping":{"numTiles":"bytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[],"tindex":"3a34955c-db18-11e4-921d-4faa3394d589","variableMapping":{"high":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3a34955d-db18-11e4-921d-43757fe2eda2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"3a34955e-db18-11e4-921d-bf4946e71423","variableMapping":{"edgeCount":"removed","lastEdgeIndex":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"3a34955f-db18-11e4-921d-ef8a46d22284","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:346","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":0},{"failures":[14,78,16,43,117],"tindex":"3a349560-db18-11e4-921d-8f16fe98a312","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"3a349561-db18-11e4-921d-d9eea53d2834","variableMapping":{"resultOrientation":"fwdFaster","orientation":"fwdFaster","java.lang.Math.PI":"fwdFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"3a349562-db18-11e4-921d-2d07e830ced3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:71","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"3a349563-db18-11e4-921d-8516d613e591","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"3a349564-db18-11e4-921d-135546c68543","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:185","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[118,119,120,121],"tindex":"3a349565-db18-11e4-921d-bdb2e72ba2fb","variableMapping":{"sInt":"hwInt","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[122],"tindex":"3a349566-db18-11e4-921d-b5a44033c986","variableMapping":{"calcMean":"closed","eleCalcMean":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:75","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"3a34bc77-db18-11e4-921d-e3d9d3cd8dd4","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"3a34bc78-db18-11e4-921d-bbeff2b419a0","variableMapping":{"dist":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"3a34bc79-db18-11e4-921d-93a1501acce5","variableMapping":{"resultOrientation":"backSpeed","orientation":"maxSpeed","java.lang.Math.PI":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"3a34bc7a-db18-11e4-921d-67fedafa7c96","variableMapping":{"longSegmentSize":"hash","bufferStart":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"3a34bc7b-db18-11e4-921d-692d97a6eeaa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"3a34bc7c-db18-11e4-921d-61b1a5ae0b04","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[144,74,14,77,78,58,145,146,143,147,148,149,150,151],"tindex":"3a34bc7d-db18-11e4-921d-6f6aeefd44f0","variableMapping":{"possibleToAdd":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:85","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPlace method.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"3a34bc7e-db18-11e4-921d-4ff8e38fd1f2","variableMapping":{"distance":"key","foundMinDistance":"key","index":"size","foundInstruction":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:361","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":0},{"failures":[152,153,154,155,156,157,158,159,160,2,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,128,179,180,181,182,183,129,184,130,131,185,186,187,188,189,8,71,72,66,73,75,76,78,58,0,145,190,191,192,146,193,194,143,59,195,60,61,147,196,197,148,149,198,63,64,199,1,150,200,201,202,203,204,205,206,207,151,208,209,210,65,211,212,213],"tindex":"3a34e38f-db18-11e4-921d-3b1011c3eec5","variableMapping":{"from":"edgeCount","hash":"edgeCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"3a34e390-db18-11e4-921d-f77801e65ba7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"3a34e391-db18-11e4-921d-2b0475a474bf","variableMapping":{"bm":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":0},{"failures":[37],"tindex":"3a350aa2-db18-11e4-921d-738744b2daa5","variableMapping":{"osmFileStr":"tt","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:379","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"OSM file cannot be empty.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"3a350aa3-db18-11e4-921d-6d49fa2ef9bb","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"3a350aa4-db18-11e4-921d-5d1df2449f68","variableMapping":{"latSize":"to","size":"to","lonSize":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":0},{"failures":[],"tindex":"3a350aa5-db18-11e4-921d-a9c7061827c6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[144,214,66,73,74,14,75,77,78,58,0,145,190,191,192,146,193,194,143,59,195,60,61,147,196,197,148,149,198,63,64,199,1,150,201,207,151,65],"tindex":"3a350aa6-db18-11e4-921d-290462f13e2b","variableMapping":{"segmentSizePower":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[144,214,215,216,217,218,219,220,221,222,223,224,152,153,225,226,227,154,228,229,155,230,156,157,231,232,158,233,159,160,2,161,234,3,162,163,235,164,165,236,166,167,237,238,239,240,168,241,169,170,171,172,242,243,173,244,174,175,176,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,4,262,263,5,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,6,123,295,296,297,298,299,124,300,125,126,301,302,303,304,305,7,177,178,306,128,179,180,181,182,183,129,184,130,131,185,186,187,188,189,8,307,308,309,310,311,312,313,314,315,316,317,318,9,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,10,336,337,11,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,13,364,365,366,367,368,369,71,72,66,73,74,14,75,115,76,77,78,79,116,370,371,372,373,374,375,15,16,80,81,82,83,84,85,86,376,87,88,89,17,377,67,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,387,387,388,388,389,389,390,391,392,18,19,393,394,395,396,397,398,399,400,27,401,58,0,145,190,191,192,146,193,194,143,59,195,60,61,147,196,197,148,149,198,63,64,199,1,150,200,201,202,203,204,205,206,207,151,208,209,210,65,402,403,211,404,405,406,407,62,408,409,212,410,213,411,412],"tindex":"3a350aa7-db18-11e4-921d-194857590f38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"3a350aa8-db18-11e4-921d-5d4e459c5e51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"3a350aa9-db18-11e4-921d-4fab07923c7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.DefaultEdgeFilter.this(com.graphhopper.routing.util.FlagEncoder, true, true)"},"status":-2},{"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"3a350aaa-db18-11e4-921d-6d0e3cff503e","variableMapping":{"flags":"hash","nodeFlags":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[24,25,29,31,32,48,49,50,53,55,56],"tindex":"3a350aab-db18-11e4-921d-3da14debfb53","variableMapping":{"_location":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[14,15,16,67,20,45],"tindex":"3a350aac-db18-11e4-921d-b3ace154a41f","variableMapping":{"len":"encoded","start":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"3a3531bd-db18-11e4-921d-652739e065dd","variableMapping":{"lazyUpdates":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":0},{"failures":[23,24,25,32,50,56],"tindex":"3a3531be-db18-11e4-921d-15409c9632c5","variableMapping":{"closed":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:181","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"3a3531bf-db18-11e4-921d-7d341c0dc312","variableMapping":{"edgePointer":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"3a3531c0-db18-11e4-921d-433800d416dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"3a3531c1-db18-11e4-921d-fff820ee2262","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[23,24,25,413,414,29,30,31,32,415,48,49,50,416,417,53,54,55,56,418],"tindex":"3a3531c2-db18-11e4-921d-69d7105bdff6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"3a3531c3-db18-11e4-921d-9df6942ff80e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"3a3531c4-db18-11e4-921d-ddcd6359d8c8","variableMapping":{"factor":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"3a3531c5-db18-11e4-921d-5ddbbebf7b0b","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"3a3531c6-db18-11e4-921d-dd7fdf83ed51","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[],"tindex":"3a3531c7-db18-11e4-921d-4fab21d1447b","variableMapping":{"logMessagesPercentage":"fwdFaster","logMessages":"fwdFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"3a3531c8-db18-11e4-921d-919afe6cd6fe","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[23,24,30,31,49,54,55],"tindex":"3a3531c9-db18-11e4-921d-49cf093856bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[144,214,123,296,297,298,299,300,126,301,302,303,304,305,7,177,178,128,180,181,182,183,184,131,185,186,187,188,189,8,308,309,310,313,71,72,66,73,74,14,75,76,77,78,79,16,80,81,82,83,84,85,86,87,88,89,67,395,396,397,143,61,147,148,402,403,419,420],"tindex":"3a3531ca-db18-11e4-921d-ffce46560712","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"3a3531cb-db18-11e4-921d-93c8a85d6c79","variableMapping":{"edgeCount":"segmentSizePower","lastEdgeIndex":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"3a3531cc-db18-11e4-921d-87d84758faac","variableMapping":{"a_lon_deg":"maxLonTmp","factor":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"3a3531cd-db18-11e4-921d-998b2563b971","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"3a3531ce-db18-11e4-921d-c9d8e614bc2b","variableMapping":{"high":"defaultValue","highKey":"flags","key":"defaultValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-2},{"failures":[],"tindex":"3a3531cf-db18-11e4-921d-0584527c3f6d","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[394,399],"tindex":"3a3558e0-db18-11e4-921d-8501ad1bb2af","variableMapping":{"endIndexPlusOne":"removed","frontIndex":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[71,79,80],"tindex":"3a3558e1-db18-11e4-921d-3fd4d5f7c9ce","variableMapping":{"str":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[66,73,74,14,75,77,16,80,82,85,86,87,88,89,68,69,62],"tindex":"3a3558e2-db18-11e4-921d-cda636e6ec04","variableMapping":{"shift":"directionBitMask","tmpValue":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"3a3558e3-db18-11e4-921d-457f6de94e41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:153","type":"CtIfImpl","sourcecode":"if ((java.util.Map<java.lang.Integer, java.lang.Integer>.size()) < 2)\n    return ;\n"},"status":0},{"failures":[19,405],"tindex":"3a3558e4-db18-11e4-921d-4b584403b65b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[421],"tindex":"3a3558e5-db18-11e4-921d-51ea6738845e","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"3a3558e6-db18-11e4-921d-7b2b43208ddb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"3a3558e7-db18-11e4-921d-37165010d675","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"i","entityType":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":0},{"failures":[394,398,399],"tindex":"3a3558e8-db18-11e4-921d-eda943d5d8b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"3a3558e9-db18-11e4-921d-f15b7e5804a5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"3a3558ea-db18-11e4-921d-3d30999e7704","variableMapping":{"incEleSum":"com.graphhopper.util.AngleCalc.PI_4","eleDelta":"r","incDist2DSum":"r","decEleSum":"com.graphhopper.util.AngleCalc.PI3_4","fullDist2D":"absY","decDist2DSum":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"3a3558eb-db18-11e4-921d-61b602b6a733","variableMapping":{"y1":"x","x1":"absY","y2":"angle","x2":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[422],"tindex":"3a3558ec-db18-11e4-921d-372c0d415e98","variableMapping":{"E_ADDITIONAL":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1455","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"3a3558ed-db18-11e4-921d-75366b019905","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"angle","java.lang.Double.POSITIVE_INFINITY":"angle","weight":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":0},{"failures":[],"tindex":"3a357ffe-db18-11e4-921d-4944deedadcb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[396,397],"tindex":"3a357fff-db18-11e4-921d-65ed52c6cab6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[163,171,265,280,339,354,423,424,397],"tindex":"3a358000-db18-11e4-921d-51d2cab1057d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"3a358001-db18-11e4-921d-8d685497c7ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"3a358002-db18-11e4-921d-c1eca8a89e97","variableMapping":{"latSimilar":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":0},{"failures":[],"tindex":"3a358003-db18-11e4-921d-2591c0c5cdf9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"3a358004-db18-11e4-921d-c906cbc52c59","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"3a358005-db18-11e4-921d-7bcd0ae842ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[],"tindex":"3a358006-db18-11e4-921d-9f8d9627b8ee","variableMapping":{"scDirMask":"value","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":149,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":379,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":34,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":225,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":292,"com.graphhopper.reader.OSMReaderTest.testFerry":15,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":408,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":54,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":118,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":181,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":72,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":415,"com.graphhopper.storage.MMapDataAccessTest.testSegments":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":263,"com.graphhopper.coll.CompressedArrayTest.testCompress":142,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":361,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":203,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":226,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":11,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":306,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":208,"com.graphhopper.GraphHopperTest.testPrepare":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":150,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":59,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":405,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":25,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":403,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":128,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":398,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":52,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":194,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":337,"com.graphhopper.coll.BitSetImplTest.testCopy":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":297,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":55,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":247,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":138,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":65,"com.graphhopper.GraphHopperTest.testLoadOSM":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":298,"com.graphhopper.reader.OSMReaderTest.testSort":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":57,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":88,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":250,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":356,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":323,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":136,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":385,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":283,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":241,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":335,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":110,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":259,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":29,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":254,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":51,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":184,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":147,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":178,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":183,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":115,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":191,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":231,"com.graphhopper.coll.OSMIDMapTest.testGetLong":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":266,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":272,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":236,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":154,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":167,"com.graphhopper.coll.CompressedArrayTest.testCompress2":141,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":346,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":47,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":5,"com.graphhopper.GraphHopperAPITest.testLoad":144,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":230,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":338,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":330,"com.graphhopper.storage.LevelGraphStorageTest.testClone":158,"com.graphhopper.reader.OSMReaderTest.testBarriers":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":255,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":399,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":109,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":193,"com.graphhopper.util.GHUtilityTest.testCopy":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":8,"com.graphhopper.routing.PathTest.testFindInstruction":393,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":256,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":45,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":211,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":244,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":291,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":357,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":342,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":93,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":205,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":267,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":159,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":326,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":104,"com.graphhopper.util.InstructionListTest.testWayList2":407,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":302,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":362,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":53,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":321,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":417,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":400,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":2,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":97,"com.graphhopper.storage.RAMDirectoryTest.testSynched":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":264,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":146,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":329,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":63,"com.graphhopper.coll.OSMIDMapTest.testGet":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":262,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":117,"com.graphhopper.routing.PathBidirRefTest.testExtract":390,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":238,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":367,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":289,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":23,"com.graphhopper.storage.RAMDataAccessTest.testSegments":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":7,"com.graphhopper.util.GHUtilityTest.testSort2":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":196,"com.graphhopper.reader.OSMReaderTest.testMain":80,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":271,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":187,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":37,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":251,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":3,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":164,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":419,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":176,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":162,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":28,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":166,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":17,"com.graphhopper.storage.StorablePropertiesTest.testStore":319,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":92,"com.graphhopper.storage.GraphHopperStorageTest.testClone":332,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":363,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":69,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":220,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":39,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":340,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":222,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":152,"com.graphhopper.routing.PathTest.testTime":18,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":174,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":41,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":304,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":240,"com.graphhopper.reader.OSMReaderTest.testRelation":376,"com.graphhopper.util.GHUtilityTest.testSortDirected":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":33,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":381,"com.graphhopper.GraphHopperTest.testFootOnly":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":38,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":309,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":129,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":90,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":305,"com.graphhopper.search.NameIndexTest.testCreate":218,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":94,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":378,"com.graphhopper.routing.QueryGraphTest.testOneWay":387,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":296,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":132,"com.graphhopper.reader.OSMReaderTest.testWithBounds":89,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":107,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":285,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":383,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":423,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":46,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":70,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":157,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":229,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":413,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":275,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":268,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":328,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":0,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":359,"com.graphhopper.util.InstructionListTest.testWayList":406,"com.graphhopper.GraphHopperAPITest.testDisconnected179":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":12,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":123,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":375,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":397,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":74,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":334,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":209,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":350,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":151,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":173,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":56,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":199,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":327,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":418,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":322,"com.graphhopper.routing.PathTest.testWayList":19,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":422,"com.graphhopper.coll.OSMIDMapTest.testGet2":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":1,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":172,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":274,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":343,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":261,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":130,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":131,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":185,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":48,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":102,"com.graphhopper.util.GHUtilityTest.testSort":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":300,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":35,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":140,"com.graphhopper.search.NameIndexTest.testPut":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":288,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":331,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":179,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":293,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":313,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":316,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":30,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":27,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":314,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":248,"com.graphhopper.storage.MMapDirectoryTest.testSynched":246,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":22,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":269,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":394,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":364,"com.graphhopper.routing.PathTest.testFound":392,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":20,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":79,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":98,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":243,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":224,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":265,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":106,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":217,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":13,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":336,"com.graphhopper.util.InstructionListTest.testEmptyList":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":61,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":26,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":197,"com.graphhopper.reader.PrinctonReaderTest.testRead":374,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":122,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":358,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":182,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":4,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":133,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":273,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":414,"com.graphhopper.reader.OSMReaderTest.testFoot":16,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":373,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":125,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":137,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":175,"com.graphhopper.reader.OSMReaderTest.testOneWay":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":126,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":339,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":354,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":282,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":100,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":348,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":204,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":127,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":210,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":202,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":317,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":401,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":108,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":180,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":380,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":325,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":377,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":113,"com.graphhopper.routing.PathBidirRefTest.testExtract2":391,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":58,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":303,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":215,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":120,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":85,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":43,"com.graphhopper.util.SimpleIntDequeTest.testPush":420,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":299,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":355,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":160,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":347,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":163,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":49,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":189,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":258,"com.graphhopper.storage.StorablePropertiesTest.testLoad":320,"com.graphhopper.GraphHopperTest.testPrepareOnly":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":198,"com.graphhopper.GraphHopperTest.testVia":66,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":294,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":121,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":87,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":153,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":62,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":351,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":44,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":86,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":242,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":171,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":249}}]
