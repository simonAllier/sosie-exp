[{"failures":[0,1,2,3],"tindex":"be78e40f-db14-11e4-a4f6-331ce09923f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"be798050-db14-11e4-a4f6-6b3c0b3e20fe","variableMapping":{"pointIndex":"bufferIndex","index":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[65,66,67,68,69],"tindex":"be798051-db14-11e4-a4f6-c7a6194c3d40","variableMapping":{"edgePointer":"turnRestrictionBit","lastEdgeIndex":"maxTurnCosts","edgeEntryBytes":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:321","type":"CtReturnImpl","sourcecode":"return ((long) / (int)) > (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"be79a762-db14-11e4-a4f6-dd759d0826f9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"be79a763-db14-11e4-a4f6-d55f062a25fb","variableMapping":{"turnRelation":"turnRelation","this":"osmReader"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"be79a764-db14-11e4-a4f6-c99cf4eb8bb5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[70,71,8,72,73,9,10,65,74,75,76,77,78,79,80,81,82,83,84,18,85,86,19,87,88,89,90,20,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,21,111,112,113,114,115,22,116,117,118,119,23,120,24,121,122,123,25,124,125,26,126,127,128,129,27,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,28,150,151,152,153,154,29,155,156,157,158,30,159,31,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,40,206,207,208,209,41,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,42,230,231,232,233,234,43,235,236,237,238,44,239,45,240,241,242,49,243,54,55,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,66,265,266,267,67,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,64,297,298,299],"tindex":"be79a765-db14-11e4-a4f6-abb1c1bef452","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"be79a766-db14-11e4-a4f6-550648cb40ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:485","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[92,102,103,109,22,116,131,141,142,148,29,155,169,179,180,186,194,195,211,221,222,228,43,235,300,301],"tindex":"be79a767-db14-11e4-a4f6-6df2a7638d2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"be79a768-db14-11e4-a4f6-c3278dcf17e8","variableMapping":{"turnCostsCount":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"be79ce79-db14-11e4-a4f6-7b4660f2a6fd","variableMapping":{"latSize":"nextNodeBit","size":"usedBits","lonSize":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"be79ce7a-db14-11e4-a4f6-53dea56ef198","variableMapping":{"nanoTime":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"be79ce7b-db14-11e4-a4f6-49be9528fd12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"be79ce7c-db14-11e4-a4f6-196b2d03435d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"be79ce7d-db14-11e4-a4f6-156bd1fabefb","variableMapping":{"maxSpeed":"speed","fwdSpeed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":0},{"failures":[],"tindex":"be79ce7e-db14-11e4-a4f6-f54ae2661c51","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[70,302],"tindex":"be79ce7f-db14-11e4-a4f6-c7c86f15ed63","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"be79ce80-db14-11e4-a4f6-0173139506c0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1063","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-2},{"failures":[],"tindex":"be79ce81-db14-11e4-a4f6-6f99d466c68a","variableMapping":{"str":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[71,79,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"tindex":"be79ce82-db14-11e4-a4f6-edd6ac4ad2b0","variableMapping":{"len":"encoded","start":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[71,65,79,303,268,304,269,305,309,323,314,318,324,277,287],"tindex":"be79ce83-db14-11e4-a4f6-ff04993102f8","variableMapping":{"segmentSizeInBytes":"shift","indexDivisor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"be79ce84-db14-11e4-a4f6-4125a589eaf4","variableMapping":{"err":"importance","dLat":"importance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"be79ce85-db14-11e4-a4f6-191ebc8be75d","variableMapping":{"line":"encoderList"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[323],"tindex":"be79ce86-db14-11e4-a4f6-1303c75fab87","variableMapping":{"orientation":"incEleSum","java.lang.Math.PI":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"be79ce87-db14-11e4-a4f6-09c3ec5f6e2d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[267],"tindex":"be79ce88-db14-11e4-a4f6-11f7a512408c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[325],"tindex":"be79f599-db14-11e4-a4f6-4fa242a50da0","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[326,327,328,329,330,331,332,333,334,335,336,337],"tindex":"be79f59a-db14-11e4-a4f6-7d4d83792a3a","variableMapping":{"elem":"elem","i":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"be79f59b-db14-11e4-a4f6-d317a00cd270","variableMapping":{"segmentSizeInBytes":"encoderCount","length":"nextNodeBit","index":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"be79f59c-db14-11e4-a4f6-ef79e273a4a0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"be79f59d-db14-11e4-a4f6-2bb97553bf46","variableMapping":{"tmp":"lastPrio","tmpNo":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:145","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"be79f59e-db14-11e4-a4f6-87b7e263f944","variableMapping":{"silent":"edgeBased"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"be79f59f-db14-11e4-a4f6-036b8b874c1f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"be79f5a0-db14-11e4-a4f6-2df64046a3e6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[306,307,308,315,316,317],"tindex":"be79f5a1-db14-11e4-a4f6-77f84722a911","variableMapping":{"segmentSizeInBytes":"shift","capacity":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[323],"tindex":"be79f5a2-db14-11e4-a4f6-37553def800c","variableMapping":{"r":"fullDist2D","angle":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"be79f5a3-db14-11e4-a4f6-f9398d354898","variableMapping":{"oldValueIndex":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[260],"tindex":"be79f5a4-db14-11e4-a4f6-35dcd37ac78e","variableMapping":{"tmp":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"be79f5a5-db14-11e4-a4f6-e5ccee4415eb","variableMapping":{"weight":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-2},{"failures":[],"tindex":"be79f5a6-db14-11e4-a4f6-1d5cd4f7691c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"be79f5a7-db14-11e4-a4f6-6951ee872026","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[338,339,308,309,340,341,312,313,342,343,317,318,344,345,321,322],"tindex":"be79f5a8-db14-11e4-a4f6-b3bc4a8ea74b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:449","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"be7a1cb9-db14-11e4-a4f6-e7587e12d155","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"be7a1cba-db14-11e4-a4f6-cb114ad37e51","variableMapping":{"incDist2DSum":"fwdDecline","fullDist2D":"fwdDecline","decDist2DSum":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[346,347,348,71,73,10,65,75,349,350,32,33,351,352,353,354,355,356,34,35,37,38,39,357,358,359,360,361,362,363,364,50,365,243,51,55,366,367,301,290,291,294],"tindex":"be7a1cbb-db14-11e4-a4f6-9b11fa43f678","variableMapping":{"size":"v"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[92,102,103,109,22,116,131,141,142,148,29,155,169,179,180,186,194,195,211,221,222,228,43,235,301],"tindex":"be7a1cbc-db14-11e4-a4f6-53e4b6240d59","variableMapping":{"length":"high","factor":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-1},{"failures":[],"tindex":"be7a1cbd-db14-11e4-a4f6-0fbc06d0821e","variableMapping":{"err":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"be7a1cbe-db14-11e4-a4f6-e188023cc482","variableMapping":{"mask":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"be7a1cbf-db14-11e4-a4f6-63901866d81e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"be7a1cc0-db14-11e4-a4f6-634dcdfb6a35","variableMapping":{"mKeys":"arr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:62","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"be7a1cc1-db14-11e4-a4f6-f3e8b8f126a4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"be7a1cc2-db14-11e4-a4f6-793dbb81a4ee","variableMapping":{"entries":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[],"tindex":"be7a1cc3-db14-11e4-a4f6-1556bcebcb74","variableMapping":{"shift":"wayBitMask","flags":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"be7a1cc4-db14-11e4-a4f6-5f0c4f533515","variableMapping":{"finishedTo":"storing","finishedFrom":"storing"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"be7a1cc5-db14-11e4-a4f6-fba81c20391b","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"be7a1cc6-db14-11e4-a4f6-23293a7fc707","variableMapping":{"tmpNode":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"be7a43d7-db14-11e4-a4f6-e1f4d9622316","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"be7a43d8-db14-11e4-a4f6-ad0cd2921bac","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"be7a43d9-db14-11e4-a4f6-73c623a0fc29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:329","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return com.graphhopper.routing.util.EncodedValue.setValue(long, long);\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setLong(long, int, long);\n}"},"status":-2},{"failures":[71,10,65,50,243,55,258],"tindex":"be7a43da-db14-11e4-a4f6-2babc96e973d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[70,71,8,72,73,9,10,65,74,75,76,77,78,368,79,49,369,50,365,370,243,51,52,53,54,55,247,250,255,256,260,262,303,304,269,270,371,305,372,306,307,338,339,373,308,374,375,309,310,340,311,376,341,377,312,378,313,379,314,380,315,316,342,343,381,317,382,383,318,325,319,320,344,345,384,321,385,386,322],"tindex":"be7a43db-db14-11e4-a4f6-8d1f464ad608","variableMapping":{"costs":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"be7a43dc-db14-11e4-a4f6-39a56737e8a3","variableMapping":{"edgeTo":"int0","edgeFrom":"int0"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-2},{"failures":[308,312,317,321],"tindex":"be7a43dd-db14-11e4-a4f6-5fde91c0d4e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[267,387,371,305,372,306,388,307,68,389,390,338,391,339,373,392,393,308,374,0,375,309,394,323,395,379,314,380,315,396,316,69,397,398,342,399,343,381,400,401,317,382,2,383,318],"tindex":"be7a43de-db14-11e4-a4f6-e1c602cd52e7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[269,371,379,325],"tindex":"be7a43df-db14-11e4-a4f6-39b10243a6ef","variableMapping":{"max":"speed","tmpSize":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[49,55],"tindex":"be7a43e0-db14-11e4-a4f6-ef11d9fbd475","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[70,71,8,73,65,74,75,76,77,79,253,257,268,269,402,403,313,323,404,405,322,324,277,287],"tindex":"be7a43e1-db14-11e4-a4f6-49a16020e354","variableMapping":{"index":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"be7a43e2-db14-11e4-a4f6-2917f595e76b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"be7a43e3-db14-11e4-a4f6-9780e77f721a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"be7a43e4-db14-11e4-a4f6-a3263c410df4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[7,71,8,73,65,74,75,76,77,79,50,365,370,243,51,53,256,262],"tindex":"be7a6af5-db14-11e4-a4f6-d3b7fa38bf2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[406,407,408,409,5,6,70,8,72,73,9,10,65,74,75,76,77,78,79,11,410,411,19,20,21,22,23,25,26,27,28,29,30,32,33,38,39,167,188,193,194,199,40,41,42,43,44,49,365,370,51,53,56,58,62,63,64],"tindex":"be7a6af6-db14-11e4-a4f6-c3d764b221f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"be7a6af7-db14-11e4-a4f6-0b4caa285230","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"be7a6af8-db14-11e4-a4f6-89e2d52b8be5","variableMapping":{"a":"locked","approx":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"be7ae029-db14-11e4-a4f6-5d80828b84a5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"be7ae02a-db14-11e4-a4f6-0f3e589845a9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[406,407,408,409,6,70,8,72,73,9,10,65,74,75,76,77,78,79,11,410,411,19,21,23,25,26,28,30,32,38,188,193,199,40,42,44,49,50,365,370,51,53,54,56],"tindex":"be7ae02b-db14-11e4-a4f6-f99bb53a54d1","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"be7ae02c-db14-11e4-a4f6-2ddd65857c6c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"be7ae02d-db14-11e4-a4f6-119eacd4963b","variableMapping":{"edgePointer":"nodeBitMask","edgeEntryBytes":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"be7ae02e-db14-11e4-a4f6-53662964322d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[412,409,413,83,84,19,89,20,91,92,93,94,95,96,97,98,99,102,103,104,105,106,108,109,110,21,111,113,115,22,116,117,118,119,23,24,121,122,123,349,350,414,415,32,416,33,417,418,351,419,420,352,353,354,355,356,164,49,369,50,365,51,52,54,421,422,331,423,332,333,334,424,335,425,336,426,337,427,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,64,297,298,299],"tindex":"be7b073f-db14-11e4-a4f6-e552fe9c2dad","variableMapping":{"tmpNo":"edgeCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"be7b0740-db14-11e4-a4f6-07e8f130b6b4","variableMapping":{"size":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[251],"tindex":"be7b0741-db14-11e4-a4f6-250c7b5f9fbe","variableMapping":{"len":"acceptBit","start":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"be7b0742-db14-11e4-a4f6-c17c31634026","variableMapping":{"time":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[70,251],"tindex":"be7b0743-db14-11e4-a4f6-717a8b7e85f7","variableMapping":{"high":"ferryBit","highKey":"acceptBit","key":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-1},{"failures":[],"tindex":"be7b0744-db14-11e4-a4f6-ebc1e2011e8c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[428,429,430,431,432,433,434,435,436,437,438,439,414,418,419,420,440,441,442,443,444],"tindex":"be7b0745-db14-11e4-a4f6-877ac3181d56","variableMapping":{"capacity":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"be7b0746-db14-11e4-a4f6-75994b5168bf","variableMapping":{"midLat":"bwSlower","lat":"bwSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[8,72,414,416,420,445,446,440,447,448,441,449,39,357,444,359,360,361,50,365,370,243,51,53],"tindex":"be7b0747-db14-11e4-a4f6-17ebacc742f4","variableMapping":{"segmentsToMap":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-1},{"failures":[],"tindex":"be7b0748-db14-11e4-a4f6-d94c0e0ec973","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizePower","nextEdge":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[300,450],"tindex":"be7b0749-db14-11e4-a4f6-c39240f04d81","variableMapping":{"foundIndex":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[8,72,9,65,74,77,303,304,305,306,307,391,308,309,311,403,312,313,314,315,316,399,317,318,319,320,405,321,322],"tindex":"be7b074a-db14-11e4-a4f6-5bff938e490d","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[306,311,315,319],"tindex":"be7b2e5b-db14-11e4-a4f6-dd35f85e6419","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[86,94,101,125,133,140,154,178,193,205,213,220,234],"tindex":"be7b2e5c-db14-11e4-a4f6-399156ac10cb","variableMapping":{"da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"be7b2e5d-db14-11e4-a4f6-9b8f2bbff0bd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[],"tindex":"be7b2e5e-db14-11e4-a4f6-f568cfb4ad40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:153","type":"CtIfImpl","sourcecode":"if ((java.util.Map<java.lang.Integer, java.lang.Integer>.size()) < 2)\n    return ;\n"},"status":0},{"failures":[],"tindex":"be7b2e5f-db14-11e4-a4f6-63580b79a40f","variableMapping":{"file":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:221","type":"CtReturnImpl","sourcecode":"return java.io.File.delete()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"be7b2e60-db14-11e4-a4f6-ed2d72fc8089","variableMapping":{"pointer":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":0},{"failures":[],"tindex":"be7b2e61-db14-11e4-a4f6-dd2b19cc1a97","variableMapping":{"currentBucket":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":115,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":295,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":168,"com.graphhopper.reader.OSMReaderTest.testFerry":70,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":388,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":416,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":369,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":123,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":139,"com.graphhopper.coll.CompressedArrayTest.testCompress":439,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":240,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":188,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":336,"com.graphhopper.GraphHopperTest.testPrepare":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":294,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":421,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":372,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":287,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":312,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":347,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":414,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":279,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":449,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":160,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":25,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":435,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":20,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":427,"com.graphhopper.GraphHopperTest.testLoadOSM":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":358,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":39,"com.graphhopper.reader.OSMReaderTest.testSort":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":374,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":126,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":237,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":40,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":433,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":201,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":61,"com.graphhopper.routing.DijkstraTest.initializationError":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":158,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":114,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":216,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":124,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":27,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":351,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":350,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":282,"com.graphhopper.coll.OSMIDMapTest.testGetLong":13,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":149,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":107,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":19,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":109,"com.graphhopper.coll.CompressedArrayTest.testCompress2":438,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":140,"com.graphhopper.GraphHopperAPITest.testLoad":363,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":90,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":244,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":221,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":211,"com.graphhopper.storage.LevelGraphStorageTest.testClone":94,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":302,"com.graphhopper.reader.OSMReaderTest.testBarriers":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":450,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":284,"com.graphhopper.util.GHUtilityTest.testCopy":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":164,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":1,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":445,"com.graphhopper.routing.PathTest.testFindInstruction":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":403,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":131,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":326,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":250,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":413,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":380,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":238,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":156,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":412,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":400,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":268,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":273,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":173,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":208,"com.graphhopper.util.InstructionListTest.testWayList2":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":359,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":241,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":305,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":206,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":394,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":447,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":98,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":141,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":283,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":9,"com.graphhopper.routing.AStarTest.initializationError":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":64,"com.graphhopper.coll.OSMIDMapTest.testGet":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":138,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":251,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":194,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":310,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":390,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":292,"com.graphhopper.reader.OSMReaderTest.testMain":8,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":87,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":391,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":436,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":0,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":354,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":198,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":101,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":105,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":122,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":59,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":379,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":108,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":78,"com.graphhopper.storage.StorablePropertiesTest.testStore":15,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":17,"com.graphhopper.storage.GraphHopperStorageTest.testClone":213,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":262,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":260,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":80,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":3,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":174,"com.graphhopper.routing.PathTest.testTime":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":384,"com.graphhopper.util.BitUtilLittleTest.testToFloat":407,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":24,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":95,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":361,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":187,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":382,"com.graphhopper.GraphHopperTest.testFootOnly":54,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":448,"com.graphhopper.util.BitUtilLittleTest.testToInt":408,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":340,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":418,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":183,"com.graphhopper.search.NameIndexTest.testCreate":48,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":275,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":431,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":38,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":428,"com.graphhopper.reader.OSMReaderTest.testWithBounds":77,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":2,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":189,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":252,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":303,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":91,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":401,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":151,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":145,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":41,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":278,"com.graphhopper.util.BitUtilLittleTest.testToBitString":406,"com.graphhopper.util.InstructionListTest.testWayList":5,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":239,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":389,"com.graphhopper.GraphHopperAPITest.testDisconnected179":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":175,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":432,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":343,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":393,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":370,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":215,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":426,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":232,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":387,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":289,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":425,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":308,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":128,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":309,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":205,"com.graphhopper.routing.PathTest.testWayList":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":179,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":257,"com.graphhopper.coll.OSMIDMapTest.testGet2":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":299,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":392,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":226,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":136,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":214,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":106,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":419,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":420,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":398,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":357,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":437,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":373,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":402,"com.graphhopper.search.NameIndexTest.testPut":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":161,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":415,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":323,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":404,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":297,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":300,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":193,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":55,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":269,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":119,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":339,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":142,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":327,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":47,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":178,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":355,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":290,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":253,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":378,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":293,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":44,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":33,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":137,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":177,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":167,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":342,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":314,"com.graphhopper.reader.OSMReaderTest.testFoot":71,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":191,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":121,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":434,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":443,"com.graphhopper.reader.OSMReaderTest.testOneWay":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":444,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":222,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":235,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":157,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":377,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":185,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":333,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":440,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":331,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":423,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":181,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":207,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":368,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":277,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":163,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":360,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":386,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":65,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":204,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":247,"com.graphhopper.util.SimpleIntDequeTest.testPush":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":381,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":236,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":264,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":42,"com.graphhopper.GraphHopperTest.testFootAndCar":243,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":171,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":267,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":424,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":133,"com.graphhopper.GraphHopperTest.testPrepareOnly":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":296,"com.graphhopper.GraphHopperTest.testVia":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":169,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":75,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":84,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":7,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":233,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":248,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":184,"com.graphhopper.routing.AStarBidirectionTest.initializationError":276,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":270,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":118,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":116,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":26}}]
