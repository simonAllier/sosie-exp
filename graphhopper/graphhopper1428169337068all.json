[{"failures":[],"tindex":"f015ee83-daf1-11e4-91cc-fd97dfcbb033","variableMapping":{"freeIndex":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-2},{"failures":[],"tindex":"f0172704-daf1-11e4-91cc-fdbf3fb5a8f3","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[0,1,2,3,4,5],"tindex":"f0174e15-daf1-11e4-91cc-d562caf5add1","variableMapping":{"cap":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"f0174e16-daf1-11e4-91cc-c92b7ecfa60b","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-1},{"failures":[36,14,22,23],"tindex":"f0174e17-daf1-11e4-91cc-63ff5952d214","variableMapping":{"usedBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","nodeBitMask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[37,0,38,39,40,41,42,43,44],"tindex":"f0174e18-daf1-11e4-91cc-e9bed25c69cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[45,0,1,46,4],"tindex":"f0174e19-daf1-11e4-91cc-699d5a5a2b98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"f0174e1a-daf1-11e4-91cc-b765dc0156c4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"f0174e1b-daf1-11e4-91cc-7d5e73cd2dee","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"f0174e1c-daf1-11e4-91cc-532ddc89e645","variableMapping":{"ref":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":0},{"failures":[26,30],"tindex":"f0174e1d-daf1-11e4-91cc-855ddef2ba70","variableMapping":{"precision":"speed","lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[6,7,8,9,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"f0174e1e-daf1-11e4-91cc-8d9a4d4251e4","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"f0174e1f-daf1-11e4-91cc-795f1c094fae","variableMapping":{"length":"allBits","factor":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[66,14,67,23,68,69,70,71,72],"tindex":"f0174e20-daf1-11e4-91cc-41afd975083c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation.setEmpty()"},"status":-1},{"failures":[],"tindex":"f0177531-daf1-11e4-91cc-05b3c6e9b9c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[1,2,3,4,5],"tindex":"f0177532-daf1-11e4-91cc-3dc4400924b0","variableMapping":{"neighborUpdates":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[73,74,6,7,8,9,10,75,11,47,48,76,77,49,50,51,78,52,53,54,79,55,56,57,58,12,59,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,37,108,109,110,111,112,45,113,0,38,114,115,1,116,117,118,39,119,120,40,41,121,122,46,123,124,125,126,127,128,129,42,130,43,131,44,132,133,134,135,136,137,138,139,35,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350],"tindex":"f0177533-daf1-11e4-91cc-5fb2b114a18c","variableMapping":{"flags":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"f0177534-daf1-11e4-91cc-9181cd2f0ca3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"f0177535-daf1-11e4-91cc-dd873f557ae8","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"f0177536-daf1-11e4-91cc-693db7166180","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"f0177537-daf1-11e4-91cc-599514ce2e01","variableMapping":{"segmentSizeInBytes":"start","length":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":0},{"failures":[],"tindex":"f0177538-daf1-11e4-91cc-7f521c6c0ce8","variableMapping":{"factor":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[37,38,117,118,133],"tindex":"f0179c49-daf1-11e4-91cc-ad1fafea8c8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"f0179c4a-daf1-11e4-91cc-29c8001cd8fd","variableMapping":{"baseUrl":"_location","fileDetails":"_location","zippedURL":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:274","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[100,104,105],"tindex":"f0179c4b-daf1-11e4-91cc-9bd6908c9377","variableMapping":{"retBucket":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"f0179c4c-daf1-11e4-91cc-c7803721f543","variableMapping":{"towerNodeDistance":"r"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":0},{"failures":[],"tindex":"f0179c4d-daf1-11e4-91cc-5d7f72ccea31","variableMapping":{"edgeId":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-2},{"failures":[],"tindex":"f0179c4e-daf1-11e4-91cc-4b1498a9bab7","variableMapping":{"tmpNode":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":0},{"failures":[],"tindex":"f0179c4f-daf1-11e4-91cc-05398d396cce","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"f0179c50-daf1-11e4-91cc-ebfcf9d58cb1","variableMapping":{"compressionLevel":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"f0179c51-daf1-11e4-91cc-e357b5ecef42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"f0179c52-daf1-11e4-91cc-e75532b12d57","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"f0179c53-daf1-11e4-91cc-2906207ce285","variableMapping":{"java.lang.Double.NaN":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:104","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"f0179c54-daf1-11e4-91cc-9528689aee5b","variableMapping":{"resultOrientation":"fwdSpeed","orientation":"fwdSpeed","java.lang.Math.PI":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[6,7,10,47,37,109,0,38,116,117,118,39,119,120,40,41,121,122,46,123,125,126,127,128,129,42,43,131,44,132,133],"tindex":"f0179c55-daf1-11e4-91cc-b1f6dfcaa506","variableMapping":{"turnCostIndex":"endNode","nextTurnCostIndex":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[],"tindex":"f0179c56-daf1-11e4-91cc-fbd23f4c8998","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[107],"tindex":"f017c367-daf1-11e4-91cc-c14fbdf427a7","variableMapping":{"orientation":"fullDist2D","resultOrientation":"maxSpeed","baseOrientation":"restDist2D","java.lang.Math.PI":"incDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"f017c368-daf1-11e4-91cc-7f90be3d2d71","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-2},{"failures":[],"tindex":"f017c369-daf1-11e4-91cc-41f002b60479","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[0,4,5],"tindex":"f017c36a-daf1-11e4-91cc-27e9bbb46f73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[351,352,353,354],"tindex":"f017c36b-daf1-11e4-91cc-bdfec71be803","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"f017c36c-daf1-11e4-91cc-7bbab8fdcf39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"f017c36d-daf1-11e4-91cc-2d211bf0fc61","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"f017c36e-daf1-11e4-91cc-43cc8f5b57b8","variableMapping":{"workerThreads":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"f017c36f-daf1-11e4-91cc-d3404da0186f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f017c370-daf1-11e4-91cc-87ba46d5dd9d","variableMapping":{"this":"this","unknownSpeed":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[355],"tindex":"f017c371-daf1-11e4-91cc-7de099e3b48e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[356,357,358,359],"tindex":"f017c372-daf1-11e4-91cc-39a840a9218e","variableMapping":{"factor":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[13,360,361,362],"tindex":"f017c373-daf1-11e4-91cc-2dbfc5346388","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[],"tindex":"f017c374-daf1-11e4-91cc-577c9d50ac0d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-2},{"failures":[],"tindex":"f017c375-daf1-11e4-91cc-4599981b57dd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"f017c376-daf1-11e4-91cc-ebc548b6cfc0","variableMapping":{"visitedCountFrom":"index","visitedCountTo":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[],"tindex":"f017c377-daf1-11e4-91cc-e311853b5928","variableMapping":{"a_lon_deg":"minLat","factor":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[363,364,365,366],"tindex":"f017ea88-daf1-11e4-91cc-2bc9957e9db6","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[100,104,105],"tindex":"f017ea89-daf1-11e4-91cc-dd74948bec33","variableMapping":{"high":"index","guess":"index","low":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[49,367],"tindex":"f017ea8a-daf1-11e4-91cc-190edb370125","variableMapping":{"estimatedDist":"longTripsSpeed","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:364","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-1},{"failures":[],"tindex":"f017ea8b-daf1-11e4-91cc-331639183b93","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"f017ea8c-daf1-11e4-91cc-61c5145b2f59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"f017ea8d-daf1-11e4-91cc-79bbb181b364","variableMapping":{"shift":"bits","tmpValue":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[37,38,117,118,133],"tindex":"f017ea8e-daf1-11e4-91cc-315b46c99dd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"f017ea8f-daf1-11e4-91cc-47c993df7e2a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":-2},{"failures":[],"tindex":"f017ea90-daf1-11e4-91cc-17db9c13db6d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"f017ea91-daf1-11e4-91cc-253bd7f7ecf5","variableMapping":{"high":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[368,369,370,371],"tindex":"f017ea92-daf1-11e4-91cc-b556259a4235","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:471","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"f017ea93-daf1-11e4-91cc-3feb96f18e7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[372,373,374,375,376,377,378,379,380,381,382,162,168,170,171,383,187,193,195,196],"tindex":"f017ea94-daf1-11e4-91cc-d113a401f66d","variableMapping":{"edgePointer":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[103,384,385,386,387,388,389,219,229,230,236,244,245,263,273,274,280,288,289,306,316,317,323,331,332],"tindex":"f017ea95-daf1-11e4-91cc-a3a99487b103","variableMapping":{"tmpNode":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-1},{"failures":[],"tindex":"f017ea96-daf1-11e4-91cc-7d5d067330b1","variableMapping":{"finishedTo":"uTurnSupport","finishedFrom":"uTurnSupport"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"f017ea97-daf1-11e4-91cc-dbb1209b70f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[6,170,195,213,255,257,300],"tindex":"f017ea98-daf1-11e4-91cc-77d68f9c6a0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[],"tindex":"f01811a9-daf1-11e4-91cc-db99e8bc2911","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":0},{"failures":[104,105],"tindex":"f01811aa-daf1-11e4-91cc-3f1a81dcbbbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[390,117,123,133,148],"tindex":"f01811ab-daf1-11e4-91cc-45e13cfa6dee","variableMapping":{"cap":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-1},{"failures":[],"tindex":"f01811ac-daf1-11e4-91cc-47b533de5a0f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"f01811ad-daf1-11e4-91cc-fb5cdb3df020","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[100,104,105],"tindex":"f01811ae-daf1-11e4-91cc-1b8313295753","variableMapping":{"segmentsToMap":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[73,9,47,50,54,79,391,351,392,393,355,62,367,394,352,26,395,353,30,396,354],"tindex":"f01811af-daf1-11e4-91cc-3715ac575b75","variableMapping":{"properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:107","type":"CtReturnImpl","sourcecode":"return !(java.util.Map<java.lang.String, java.lang.Object>.isEmpty())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"f01811b0-daf1-11e4-91cc-51417e76867f","variableMapping":{"time":"defaultL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f01811b1-daf1-11e4-91cc-b1c03f4d8857","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"f01811b2-daf1-11e4-91cc-e567187712dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[66,14,67,23,68,69,27,70,71,31,72],"tindex":"f01811b3-daf1-11e4-91cc-e31184717cd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[],"tindex":"f01811b4-daf1-11e4-91cc-1588afcd6c42","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[],"tindex":"f01811b5-daf1-11e4-91cc-5b688f48cfdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"f01811b6-daf1-11e4-91cc-7fcad52982d4","variableMapping":{"cap":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[100,105],"tindex":"f01811b7-daf1-11e4-91cc-4399bcca74bb","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"minOnewayNetworkSize","speed":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"f01811b8-daf1-11e4-91cc-5dc42219c62a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"f01811b9-daf1-11e4-91cc-f342f3360441","variableMapping":{"mKeys":"mValues","nkeys":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[],"tindex":"f01838ca-daf1-11e4-91cc-bd1f99cf15da","variableMapping":{"costs":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":0},{"failures":[],"tindex":"f01838cb-daf1-11e4-91cc-691451f89a19","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"f01838cc-daf1-11e4-91cc-7fbe3ba8b4ac","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"f01838cd-daf1-11e4-91cc-d76d82a93e8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[73,74,6,7,8,9,10,397,75,11,47,48,398,76,77,49,50,51,78,52,53,54,79,55,399,56,57,58,12,400,59,401,402,403,404,405,80,406,407,408,409,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,37,108,109,110,111,112,45,113,0,38,114,115,1,116,117,118,39,119,120,40,41,121,122,46,123,124,125,126,127,128,129,42,130,43,131,44,132,133,134,135,136,137,138,139,35,140,141,142,143,144,145,146,147,148,149,410,411,412,413,414,150,151,152,153,415,154,155,156,157,158,159,416,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,417,176,177,178,179,180,181,182,418,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,419,201,202,420,421,422,423,384,424,425,426,427,428,429,430,431,203,385,386,432,433,434,435,436,387,437,438,439,440,441,442,204,388,389,443,444,445,446,447,448,449,450,451,452,453,205,206,207,208,209,210,211,212,213,214,215,216,454,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,455,256,257,258,259,260,456,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,457,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,458,459,460],"tindex":"f01838ce-daf1-11e4-91cc-8d264409f41c","variableMapping":{"type":"defaultType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[],"tindex":"f01838cf-daf1-11e4-91cc-b346bf87a2c3","variableMapping":{"edgeId":"start","nextEdge":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"f0192230-daf1-11e4-91cc-c9242df4316a","variableMapping":{"r":"fullDist2D","x":"speed","absY":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[95,96,138,139,35,461,462],"tindex":"f0192231-daf1-11e4-91cc-39c49011591e","variableMapping":{"dX":"resultOrientation","dY":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:86","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[368,463,67,464,465,369,68,466,370,467,70,468,371,469,72,470],"tindex":"f0192232-daf1-11e4-91cc-e345c50b3829","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:449","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"f0192233-daf1-11e4-91cc-951cdf61216e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"f0192234-daf1-11e4-91cc-e5a12d274155","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:131","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[59,471],"tindex":"f0192235-daf1-11e4-91cc-8bed921d9e6f","variableMapping":{"currentEntry":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[351,355,367,394,352,353,354],"tindex":"f0192236-daf1-11e4-91cc-2f7bab456bed","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":243,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":130,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":34,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":210,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":423,"com.graphhopper.reader.OSMReaderTest.testFerry":49,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":145,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":190,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":74,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":470,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":271,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":402,"com.graphhopper.coll.CompressedArrayTest.testCompress":382,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":24,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":111,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":438,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":315,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":114,"com.graphhopper.GraphHopperTest.testPrepare":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":447,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":37,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":322,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":123,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":137,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":178,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":68,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":135,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":216,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":104,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":361,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":122,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":165,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":27,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":255,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":378,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":217,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":116,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":172,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":345,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":166,"com.graphhopper.reader.OSMReaderTest.testSort":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":29,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":258,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":334,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":300,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":448,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":88,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":292,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":242,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":311,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":455,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":266,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":71,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":464,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":194,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":127,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":192,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":120,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":219,"com.graphhopper.coll.OSMIDMapTest.testGetLong":413,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":281,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":234,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":213,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":236,"com.graphhopper.coll.CompressedArrayTest.testCompress2":381,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":360,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":272,"com.graphhopper.GraphHopperAPITest.testLoad":148,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":454,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":344,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":61,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":316,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":306,"com.graphhopper.storage.LevelGraphStorageTest.testClone":221,"com.graphhopper.reader.OSMReaderTest.testBarriers":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":184,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":121,"com.graphhopper.util.GHUtilityTest.testCopy":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":363,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":352,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":415,"com.graphhopper.routing.PathTest.testFindInstruction":96,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":239,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":263,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":147,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":393,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":250,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":151,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":335,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":320,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":45,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":366,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":223,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":427,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":350,"com.graphhopper.util.InstructionListTest.testWayList2":139,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":443,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":173,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":340,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":69,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":295,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":106,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":301,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":273,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":41,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":305,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":131,"com.graphhopper.coll.OSMIDMapTest.testGet":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":270,"com.graphhopper.routing.PathBidirRefTest.testExtract":97,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":355,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":370,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":412,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":298,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":388,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":64,"com.graphhopper.util.GHUtilityTest.testSort2":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":128,"com.graphhopper.reader.OSMReaderTest.testMain":51,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":280,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":353,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":18,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":445,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":228,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":232,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":253,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":85,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":285,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":362,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":235,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.StorablePropertiesTest.testStore":458,"com.graphhopper.storage.GraphHopperStorageTest.testClone":308,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":444,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":394,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":452,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":19,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":318,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":205,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":351,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":428,"com.graphhopper.routing.PathTest.testTime":94,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":251,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":418,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":175,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":240,"com.graphhopper.reader.OSMReaderTest.testRelation":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":437,"com.graphhopper.util.GHUtilityTest.testSortDirected":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":33,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":420,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":84,"com.graphhopper.GraphHopperTest.testFootOnly":47,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":465,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":367,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":193,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":434,"com.graphhopper.search.NameIndexTest.testCreate":409,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":81,"com.graphhopper.routing.QueryGraphTest.testOneWay":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":417,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":375,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":369,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":401,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":164,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":372,"com.graphhopper.reader.OSMReaderTest.testWithBounds":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":354,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":386,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":439,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":218,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":215,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":32,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":466,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":284,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":277,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":304,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":118,"com.graphhopper.util.InstructionListTest.testWayList":138,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":337,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":395,"com.graphhopper.GraphHopperAPITest.testDisconnected179":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":429,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":286,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":469,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":387,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":450,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":8,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":310,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":288,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":115,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":328,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":38,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":70,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":132,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":419,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":468,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":299,"com.graphhopper.routing.PathTest.testWayList":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":449,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":385,"com.graphhopper.coll.OSMIDMapTest.testGet2":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":133,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":246,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":283,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":365,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":268,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":309,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":195,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":196,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":197,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":65,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":66,"com.graphhopper.util.GHUtilityTest.testSort":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":442,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":380,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":63,"com.graphhopper.search.NameIndexTest.testPut":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":297,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":456,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":153,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":188,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":183,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":158,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":30,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":107,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":156,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":256,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":60,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":278,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":100,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":349,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":231,"com.graphhopper.routing.PathTest.testFound":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":204,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":13,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":48,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":248,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":467,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":274,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":408,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":203,"com.graphhopper.util.InstructionListTest.testEmptyList":136,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":15,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":25,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":129,"com.graphhopper.reader.PrinctonReaderTest.testRead":76,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":336,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":191,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":269,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":373,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":422,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":279,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":371,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":356,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":463,"com.graphhopper.reader.OSMReaderTest.testFoot":50,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":92,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":441,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":170,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":252,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":377,"com.graphhopper.reader.OSMReaderTest.testOneWay":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":171,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":317,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":332,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":291,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":396,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":112,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":383,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":1,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":110,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":159,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":432,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":83,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":302,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":400,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":421,"com.graphhopper.routing.PathBidirRefTest.testExtract2":98,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":67,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":174,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":406,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":330,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":416,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":79,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":451,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":167,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":333,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":224,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":325,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":230,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":265,"com.graphhopper.storage.StorablePropertiesTest.testLoad":459,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":43,"com.graphhopper.GraphHopperTest.testPrepareOnly":73,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":384,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":56,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":209,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":35,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":329,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":435,"com.graphhopper.util.AngleCalcTest.testCombined":461,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":21,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":247,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":245,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":257}}]
