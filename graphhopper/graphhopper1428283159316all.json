[{"failures":[],"tindex":"f374756a-dbfa-11e4-a2ad-637fce89b961","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.BIKE","key":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[0,1,2,3,4,5],"tindex":"f375fc0b-dbfa-11e4-a2ad-fdee6300002e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[6],"tindex":"f375fc0c-dbfa-11e4-a2ad-bd1b7c13d72d","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"f375fc0d-dbfa-11e4-a2ad-7be318de9893","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[6],"tindex":"f375fc0e-dbfa-11e4-a2ad-9b49277dd4c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"f375fc0f-dbfa-11e4-a2ad-cf19d0eefd5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[21,22,23,24,25,26,27,28],"tindex":"f375fc10-dbfa-11e4-a2ad-95d2e028c252","variableMapping":{"lat":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-1},{"failures":[],"tindex":"f375fc11-dbfa-11e4-a2ad-7d172734e70d","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"nodeA","id":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"f375fc12-dbfa-11e4-a2ad-e77a72cd1a53","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"f3762323-dbfa-11e4-a2ad-6fdba73dba8f","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"f3762324-dbfa-11e4-a2ad-5bdd13af4768","variableMapping":{"origEdgeId":"y1","mainEdges":"y2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"f3762325-dbfa-11e4-a2ad-f7edb79dc2c1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"f3762326-dbfa-11e4-a2ad-776f661c7656","variableMapping":{"capacity":"nextTurnBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"f3762327-dbfa-11e4-a2ad-6ba5cc16b78a","variableMapping":{"ar_y":"maxLon","ab_y":"maxLon","ar_x":"maxLon","ab_x":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"f3762328-dbfa-11e4-a2ad-dff54ff2b0e3","variableMapping":{"enabled3D":"reverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:56","type":"CtReturnImpl","sourcecode":"return boolean ? 3 : 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[],"tindex":"f3762329-dbfa-11e4-a2ad-3b65c7704176","variableMapping":{"ret":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","retBucket":"speed","i":"speed","bucketSize":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"f376232a-dbfa-11e4-a2ad-934d961d407a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,24,25,39,40,41,42,43,7,44,8,9,0,45,46,47,48,49,50,51,52,53,54,55,10,56,57,58,11,12,59,60,1,61,62,63,64,65,66,67,68,69,13,70,71,72,73,74,75,76,77,14,78,15,2,79,80,81,82,83,84,85,86,87,16,88,89,90,91,92,93,94,17,95,96,97,18,19,98,99,3,100,101,102,103,104,105,106,107,108,20,109,110,111,4,112,113,114,115,116,117,6,118,119,5,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,27,28,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462],"tindex":"f3764a3b-dbfa-11e4-a2ad-eddaf3da64dc","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"defaultD","speed":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":-1},{"failures":[],"tindex":"f3764a3c-dbfa-11e4-a2ad-ffabbe603b9e","variableMapping":{"str":"value","this":"value","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:97","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-2},{"failures":[93],"tindex":"f3764a3d-dbfa-11e4-a2ad-e3f280bb4aa9","variableMapping":{"r":"fullDist2D","angle":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"f3764a3e-dbfa-11e4-a2ad-b51433b831d3","variableMapping":{"origEdgeId":"length","mainEdges":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[463,116],"tindex":"f3764a3f-dbfa-11e4-a2ad-578d64af7e47","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"f3764a40-dbfa-11e4-a2ad-6d0e4ca44a60","variableMapping":{"orientation":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","resultOrientation":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","baseOrientation":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","java.lang.Math.PI":"weight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[52,69,87,108],"tindex":"f3764a41-dbfa-11e4-a2ad-5fdd01b26ead","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[39,40,41,0,1,71,75,76,2,89,3,4,5,122,123,128,132,138,141,142,147,148,149,152,153,154,158,161,164,166,167,176,181,184,194,195,196,198,201,202,204,205,206,208,209,210,213,214,215,216,217,220,221,224,284,287,292,293,294,301,303,316,321,324,328,331,336,337,338,345,347,360,365,368,372,374,375,376,383,385,398,403,406,410,420,425,426,427,434,436,449,454,457,461],"tindex":"f3764a42-dbfa-11e4-a2ad-43daa257a125","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"status":-1},{"failures":[50,67,85,106],"tindex":"f3764a43-dbfa-11e4-a2ad-8325e58c18ff","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:197","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[39,464,7,8,50,52,53,54,56,58,11,12,60,67,69,70,77,78,15,85,87,88,465,466,91,95,97,18,19,99,106,108,109,114,117,6,121,122,123,124,126,127,128,194,195,196,197,198,199,200,201,202,204,205,206,207,467,208,211,212,213,214,215,216,217,219,220,221,222],"tindex":"f3767154-dbfa-11e4-a2ad-2d58fb284292","variableMapping":{"shift":"acceptBit","flags":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[119],"tindex":"f3767155-dbfa-11e4-a2ad-89fbf32d13a8","variableMapping":{"str":"s","s":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:132","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \".\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[8,50,58,12,67,78,15,85,97,19,106],"tindex":"f3767156-dbfa-11e4-a2ad-2d0350ae8001","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"f3767157-dbfa-11e4-a2ad-274923c12d7d","variableMapping":{"workerThreads":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[141,147,149,152,154,158,176,412],"tindex":"f3767158-dbfa-11e4-a2ad-29406a954f38","variableMapping":{"time":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:136","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[128],"tindex":"f3767159-dbfa-11e4-a2ad-f777d59cb3f4","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-1},{"failures":[],"tindex":"f376715a-dbfa-11e4-a2ad-a14c55bbe765","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"f376715b-dbfa-11e4-a2ad-89c2ce0e5ea1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[152,153,154,173,176],"tindex":"f376715c-dbfa-11e4-a2ad-dbdab5114172","variableMapping":{"currentBucket":"to","currentIndex":"to","bucketSize":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"f376715d-dbfa-11e4-a2ad-e101509e077d","variableMapping":{"hasOther":"storing","hasRel":"storing"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"f37734ae-dbfa-11e4-a2ad-33e19243497b","variableMapping":{"high":"flags","highKey":"backwardBit","key":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[93],"tindex":"f37734af-dbfa-11e4-a2ad-8389f8afc875","variableMapping":{"res":"flags","maxBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:261","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"f37734b0-dbfa-11e4-a2ad-9ff3128b66be","variableMapping":{"red":"start","green":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[73,74,305,349,387,438],"tindex":"f37734b1-dbfa-11e4-a2ad-01736a356437","variableMapping":{"value":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":-1},{"failures":[],"tindex":"f37734b2-dbfa-11e4-a2ad-471ae733b95d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[71,74,294,305,311,319,320,338,349,355,363,364,376,387,393,401,402,427,438,444,452,453],"tindex":"f37734b3-dbfa-11e4-a2ad-b7282e3d0e36","variableMapping":{"shift":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"f37734b4-dbfa-11e4-a2ad-ab51666a13d2","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"f37734b5-dbfa-11e4-a2ad-e11dd68f17c8","variableMapping":{"java.lang.Integer.MAX_VALUE":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"f37734b6-dbfa-11e4-a2ad-19af377e3014","variableMapping":{"str":"sacScale","minLon":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:210","type":"CtIfImpl","sourcecode":"if (int < 100)\n    java.lang.String += \"0\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[],"tindex":"f37734b7-dbfa-11e4-a2ad-1766626cf3c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:413","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId())"},"status":-2},{"failures":[],"tindex":"f37734b8-dbfa-11e4-a2ad-57b61e7d8dbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"f37734b9-dbfa-11e4-a2ad-d960b8b38831","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"f3775bca-dbfa-11e4-a2ad-0b55eb623e09","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"f3775bcb-dbfa-11e4-a2ad-dfde15f54bc5","variableMapping":{"high":"mSize","guess":"mSize","low":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"f3775bcc-dbfa-11e4-a2ad-7703e3c1fa2c","variableMapping":{"bytePos":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[468,469,247,253,256,267,273,276,470,471,472,473,474,475],"tindex":"f3775bcd-dbfa-11e4-a2ad-5d1ed31f2553","variableMapping":{"resultOrientation":"minLonTmp","orientation":"midLon","java.lang.Math.PI":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"f3775bce-dbfa-11e4-a2ad-0f9739159bd3","variableMapping":{"version":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[468,469,476,247,253,255,256,267,273,275,276,477,470,471,472,473,478,474],"tindex":"f3775bcf-dbfa-11e4-a2ad-97307b805dcf","variableMapping":{"bytePointer":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[71,75],"tindex":"f3775bd0-dbfa-11e4-a2ad-39b9cf7fdf6d","variableMapping":{"shiftSum":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"f3775bd1-dbfa-11e4-a2ad-cbb096f35480","variableMapping":{"weightLong":"encoded","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":0},{"failures":[],"tindex":"f3775bd2-dbfa-11e4-a2ad-2d0ee33b650a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"f3775bd3-dbfa-11e4-a2ad-79060c776689","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[152,153,154,173,174,176],"tindex":"f3775bd4-dbfa-11e4-a2ad-f78ce2e05311","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:81","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[],"tindex":"f3775bd5-dbfa-11e4-a2ad-1728bd5439bd","variableMapping":{"equalNormedDelta":"d1","currNormedDist":"com.graphhopper.util.NumHelper.DEFAULT_PRECISION"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:883","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[],"tindex":"f3775bd6-dbfa-11e4-a2ad-c5a7bbe48027","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:652","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"f3775bd7-dbfa-11e4-a2ad-d9ca133ffbd5","variableMapping":{"shift":"includeWay","flags":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"f3775bd8-dbfa-11e4-a2ad-9748dc9495e9","variableMapping":{"tt":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":0},{"failures":[],"tindex":"f3775bd9-dbfa-11e4-a2ad-e5640a87e618","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[163],"tindex":"f3775bda-dbfa-11e4-a2ad-913414a9303b","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[],"tindex":"f3775bdb-dbfa-11e4-a2ad-f585f68ac17e","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[31,38,24,25,39,92,93,173,177,178,180,181,182,183,184,185,187,188,27,28,194,195,196,197,198,199,200,201,202,204,205,206,207,208,479,480,481,211,213,214,215,217,219,220,221,482,483,484,485,486,487,488,489,490,249,250,251,269,270,271,491,284,287,331,420],"tindex":"f37782ec-dbfa-11e4-a2ad-91cc0f6a9a0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[38,24,25,39,173,178,181,182,184,185,188,27,28,196,199,200,211,213,217,219,220,221,222,483,484,485,486,487,489,490,235,236,237,239,249,251,269,271,492,284,287,292,313,319,324,326,331,336,357,363,368,370,493,417,420,425,446,452,457,459,494],"tindex":"f37782ed-dbfa-11e4-a2ad-47a56187e728","variableMapping":{"width":"index","lonSimilar":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[147,154,155,156,160,166,167,168,170,172,174,176],"tindex":"f37782ee-dbfa-11e4-a2ad-5be14fd1c1a1","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[73,154,160,161,162,163,164,165,166,167,168,169,170,171,173,175,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,187,187,188,188,191,192,27,28,194,195,196,197,198,199,200,201,202,203,204,205,206,207,467,208,209,210,495,479,480,481,211,213,214,215,216,217,219,220,221,222,224,225,482,483,484,485,486,487,488,489,490,227,228,229,230,232,233,496,234,235,236,237,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,491,492,284,286,287,288,289,303,330,331,332,333,347,497,385,498,499,414,417,419,420,421,422,436,500,501],"tindex":"f37782ef-dbfa-11e4-a2ad-85c3ca065ceb","variableMapping":{"tmpNo":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[159,174],"tindex":"f37782f0-dbfa-11e4-a2ad-ef0d198fb497","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[163],"tindex":"f37782f1-dbfa-11e4-a2ad-79eb219b56ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[6],"tindex":"f37782f2-dbfa-11e4-a2ad-f7323aa55776","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[93],"tindex":"f37782f3-dbfa-11e4-a2ad-1d21d41095a6","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[31,139,141,142,143,144,145,147,149,151,152,159,163,172,174,176,264,266,413,415,418],"tindex":"f37782f4-dbfa-11e4-a2ad-a795a6d95f8e","variableMapping":{"inner":"nodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:129","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getSegmentSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[502,194],"tindex":"f37782f5-dbfa-11e4-a2ad-21c34d1f85b8","variableMapping":{"cap":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"f37782f6-dbfa-11e4-a2ad-9f27a7da045a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[39,49,51,66,68,84,86,105,107,207],"tindex":"f37782f7-dbfa-11e4-a2ad-e9541ff57898","variableMapping":{"java.lang.Double.MAX_VALUE":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:372","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"f37782f8-dbfa-11e4-a2ad-5d637905ea71","variableMapping":{"index":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"f37782f9-dbfa-11e4-a2ad-d511dea6941b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:302","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.close()"},"status":0},{"failures":[],"tindex":"f377aa0a-dbfa-11e4-a2ad-6b27ea3e7a87","variableMapping":{"iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:364","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterator.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[93],"tindex":"f377aa0b-dbfa-11e4-a2ad-991e55cd691a","variableMapping":{"towerNodeDistance":"speedReverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"f377aa0c-dbfa-11e4-a2ad-4566e43ea631","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[44,45,61,63,79,81,100,102],"tindex":"f377aa0d-dbfa-11e4-a2ad-d71f4e5a3de0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[153],"tindex":"f377aa0e-dbfa-11e4-a2ad-43bdd23fc9ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:250","type":"CtIfImpl","sourcecode":"if (!boolean)\n    return com.graphhopper.storage.GraphHopperStorage.reverseFlags(long, long);\n"},"status":-1},{"failures":[],"tindex":"f377aa0f-dbfa-11e4-a2ad-0f272f78cce8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":-2},{"failures":[71,75,76],"tindex":"f377aa10-dbfa-11e4-a2ad-c79402038991","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"start","edge":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[152,153,154,173,174,176],"tindex":"f377aa11-dbfa-11e4-a2ad-83e1177cd8bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"f377aa12-dbfa-11e4-a2ad-77eb9221d428","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[468,469,477,470,503,471,504,472,473],"tindex":"f377aa13-dbfa-11e4-a2ad-73e9b3293237","variableMapping":{"distInMeter":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"f377aa14-dbfa-11e4-a2ad-abf08d144b41","variableMapping":{"speedVal":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[],"tindex":"f377aa15-dbfa-11e4-a2ad-13ed948dfb21","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"f377aa16-dbfa-11e4-a2ad-3b18ce703cf8","variableMapping":{"segmentSizeInBytes":"length","index":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[126],"tindex":"f377aa17-dbfa-11e4-a2ad-cfce15c23fe6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[194],"tindex":"f377aa18-dbfa-11e4-a2ad-8df78a82bdec","variableMapping":{"factor":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"f377aa19-dbfa-11e4-a2ad-d7cb5eae4870","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[31,38,24,25,39,173,178,184,185,188,27,28,196,199,200,211,213,217,219,220,222,483,484,485,486,487,488,489,490,249,251,269,271,492,284,287,292,313,319,324,326,331,336,357,363,368,370,493,417,420,425,446,452,457,459,494],"tindex":"f377aa1a-dbfa-11e4-a2ad-8fbae36bfc89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"f377aa1b-dbfa-11e4-a2ad-8d8c53e48cbb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[43],"tindex":"f377aa1c-dbfa-11e4-a2ad-5d336206ebb5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[8,50,58,12,67,78,15,85,97,19,106],"tindex":"f377d02d-dbfa-11e4-a2ad-4d457c47bbd5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":451,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":171,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":178,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":417,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":464,"com.graphhopper.GraphHopperAPITest.testNoLoad":226,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":375,"com.graphhopper.reader.OSMReaderTest.testFerry":194,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":41,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":9,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":270,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":212,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":26,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":302,"com.graphhopper.coll.CompressedArrayTest.testCompress":469,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":49,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":371,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":143,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":395,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":266,"com.graphhopper.util.AngleCalcTest.testOrientation":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":149,"com.graphhopper.GraphHopperTest.testPrepare":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":407,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":138,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":57,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":496,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":50,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":36,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":267,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":75,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":161,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":250,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":284,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":478,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":425,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":152,"com.graphhopper.GraphHopperTest.testLoadOSM":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":251,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":90,"com.graphhopper.reader.OSMReaderTest.testSort":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":73,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":288,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":366,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":331,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":408,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":184,"com.graphhopper.routing.DijkstraTest.initializationError":134,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":323,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":491,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":450,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":343,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":285,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":292,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":435,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":88,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":274,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":265,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":272,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":218,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":157,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":427,"com.graphhopper.coll.OSMIDMapTest.testGetLong":489,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":312,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":442,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":420,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":444,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":23,"com.graphhopper.coll.CompressedArrayTest.testCompress2":468,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":356,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":14,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":303,"com.graphhopper.GraphHopperAPITest.testLoad":224,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":424,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":4,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":348,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":338,"com.graphhopper.storage.LevelGraphStorageTest.testClone":429,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":502,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":76,"com.graphhopper.reader.OSMReaderTest.testBarriers":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":293,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":98,"com.graphhopper.util.GHUtilityTest.testCopy":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":83,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":283,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":52,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":244,"com.graphhopper.routing.PathTest.testFindInstruction":28,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":46,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":294,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":40,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":117,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":458,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":96,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":241,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":367,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":352,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":307,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":104,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":137,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":431,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":380,"com.graphhopper.util.InstructionListTest.testWayList2":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":258,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":372,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":56,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":92,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":332,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":433,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":493,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":304,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":159,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":337,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":199,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":498,"com.graphhopper.routing.AStarTest.initializationError":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":173,"com.graphhopper.coll.OSMIDMapTest.testGet":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":301,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":6,"com.graphhopper.routing.PathBidirRefTest.testExtract":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":61,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":446,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":488,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":278,"com.graphhopper.storage.RAMDataAccessTest.testCopy":500,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":329,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":1,"com.graphhopper.storage.RAMDataAccessTest.testSegments":501,"com.graphhopper.util.GHUtilityTest.testSort2":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":168,"com.graphhopper.reader.OSMReaderTest.testMain":196,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":421,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":311,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":474,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":279,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":121,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":405,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":436,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":440,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":461,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":181,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":437,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":17,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":443,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":207,"com.graphhopper.storage.StorablePropertiesTest.testStore":492,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":494,"com.graphhopper.storage.GraphHopperStorageTest.testClone":340,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":404,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":126,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":350,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":412,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":381,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":415,"com.graphhopper.routing.PathTest.testTime":192,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":82,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":459,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":430,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":133,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":260,"com.graphhopper.reader.OSMReaderTest.testRelation":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":394,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":448,"com.graphhopper.util.GHUtilityTest.testSortDirected":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":107,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":180,"com.graphhopper.GraphHopperTest.testFootOnly":221,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":44,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":124,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":235,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":273,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":390,"com.graphhopper.search.NameIndexTest.testCreate":485,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":177,"com.graphhopper.routing.QueryGraphTest.testOneWay":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":261,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":249,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":477,"com.graphhopper.reader.OSMReaderTest.testWithBounds":206,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":108,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":72,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":396,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":465,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":426,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":422,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":53,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":315,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":125,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":308,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":336,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":154,"com.graphhopper.util.InstructionListTest.testWayList":24,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":369,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":60,"com.graphhopper.GraphHopperAPITest.testDisconnected179":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":382,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":504,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":377,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":102,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":393,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":410,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":215,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":342,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":55,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":360,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":165,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":129,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":457,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":290,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":445,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":175,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":281,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":70,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":330,"com.graphhopper.routing.PathTest.testWayList":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":409,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":386,"com.graphhopper.coll.OSMIDMapTest.testGet2":487,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":176,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":454,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":479,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":65,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":299,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":275,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":78,"com.graphhopper.util.GHUtilityTest.testSort":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":399,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":475,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":64,"com.graphhopper.search.NameIndexTest.testPut":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":328,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":339,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":268,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":239,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":18,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":93,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":227,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":2,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":111,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":480,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":309,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":71,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":439,"com.graphhopper.routing.PathTest.testFound":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":400,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":91,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":222,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":456,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":119,"com.graphhopper.util.AngleCalcTest.testAtan2":22,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":63,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":305,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":484,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":385,"com.graphhopper.util.InstructionListTest.testEmptyList":37,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":84,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":280,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":166,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":51,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":169,"com.graphhopper.reader.PrinctonReaderTest.testRead":209,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":271,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":384,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":470,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":374,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":428,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":310,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":463,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":95,"com.graphhopper.reader.OSMReaderTest.testFoot":195,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":398,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":481,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":255,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":460,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":473,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":43,"com.graphhopper.reader.OSMReaderTest.testOneWay":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":256,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":349,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":364,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":322,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":47,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":499,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":99,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":392,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":144,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":476,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":142,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":230,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":113,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":388,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":179,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":333,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":467,"com.graphhopper.routing.PathBidirRefTest.testExtract2":136,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":153,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":85,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":259,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":482,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":362,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":16,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":201,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":411,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":252,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":365,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":33,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":432,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":130,"com.graphhopper.GraphHopperTest.testFootAndCar":216,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":357,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":438,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":282,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":378,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":172,"com.graphhopper.GraphHopperTest.testPrepareOnly":211,"com.graphhopper.GraphHopperTest.testVia":213,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":245,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":376,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":204,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":416,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":39,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":361,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":115,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":202,"com.graphhopper.routing.AStarBidirectionTest.initializationError":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":391,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":54,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":455,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":453,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":287}}]
