[{"failures":[],"tindex":"91253d39-da90-11e4-b71f-11d775345391","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"912675ba-da90-11e4-b71f-8f496c27deca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"912675bb-da90-11e4-b71f-51c8984400e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"912675bc-da90-11e4-b71f-7b09c02fcdd3","variableMapping":{"width":"child","lonSimilar":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-2},{"failures":[],"tindex":"912675bd-da90-11e4-b71f-6fc6c63e7b13","variableMapping":{"baseUrl":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[],"tindex":"912675be-da90-11e4-b71f-31b87141379a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,25,35,36,37,38,39,40,41],"tindex":"912675bf-da90-11e4-b71f-c1ed2fccfb35","variableMapping":{"i":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[42],"tindex":"91269cd0-da90-11e4-b71f-a112f98e2f9e","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:155","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"91269cd1-da90-11e4-b71f-0d539d4e830c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[43,44,45,46,47,48,49,50,35,51,52,53,54,36,37,40,55],"tindex":"91269cd2-da90-11e4-b71f-3f6a11027807","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"91269cd3-da90-11e4-b71f-bb96c21aa34a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[56,57,58,59,60,61],"tindex":"91269cd4-da90-11e4-b71f-6b06cfbdec2a","variableMapping":{"edgeTo":"int1","edgeFrom":"int1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-2},{"failures":[62],"tindex":"91269cd5-da90-11e4-b71f-a1b23fcc3250","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"91269cd6-da90-11e4-b71f-439d39c23617","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"91269cd7-da90-11e4-b71f-51f8f2ddac96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"91269cd8-da90-11e4-b71f-d1f7c4031b9b","variableMapping":{"i":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":0},{"failures":[63,64,65,66,67,68,69,1,70,71,72,73,74,75,76,3,4,77,78,79,80,81,82,83,84,5,6,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,57,113,114,115,58,116,59,61,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,46,47,48,49,51,52,54],"tindex":"91269cd9-da90-11e4-b71f-5f59717f7ad6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"91269cda-da90-11e4-b71f-9f93828f6ce6","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[109,111,112,57,58,116,59,60,61,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,46,47,48,49,51,52,54],"tindex":"91269cdb-da90-11e4-b71f-7370b85b8bcd","variableMapping":{"tmp":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[124,139],"tindex":"91269cdc-da90-11e4-b71f-375750e8fe78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"9126c3ed-da90-11e4-b71f-79718439bd45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[142,143,144,145,40],"tindex":"9126c3ee-da90-11e4-b71f-af9cd1985fc6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-1},{"failures":[],"tindex":"9126c3ef-da90-11e4-b71f-ad2443636128","variableMapping":{"lockFile":"value","failedReason":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SimpleFSLockFactory:97","type":"CtTryImpl","sourcecode":"try {\n    return java.io.File.createNewFile();\n} catch (java.io.IOException java.io.IOException) {\n    java.io.IOException = java.io.IOException;\n    return false;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[146,111,57,114,58,59,61],"tindex":"9126c3f0-da90-11e4-b71f-5de6e0f8088f","variableMapping":{"size":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"9126c3f1-da90-11e4-b71f-df5d9aecafb3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[147],"tindex":"9126c3f2-da90-11e4-b71f-d90535bc0dbc","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"9126c3f3-da90-11e4-b71f-2f02fa79abe2","variableMapping":{"intVal":"shift","degree":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"9126c3f4-da90-11e4-b71f-8b0a6ce27aed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[148],"tindex":"9126c3f5-da90-11e4-b71f-9ff223efd257","variableMapping":{"ret":"index","retBucket":"index","i":"index","bucketSize":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"9126c3f6-da90-11e4-b71f-41a5ed38e7f1","variableMapping":{"baseUrl":"s","name":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:162","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[149,150,151,152,153,154,155,156,157],"tindex":"9126c3f7-da90-11e4-b71f-795197e058a3","variableMapping":{"weightLong":"initialBits","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[158,159,160,161,162,163,164],"tindex":"9126c3f8-da90-11e4-b71f-559a4d769b44","variableMapping":{"guess":"bytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-1},{"failures":[],"tindex":"9126c3f9-da90-11e4-b71f-f51395287ebb","variableMapping":{"closed":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[],"tindex":"9126c3fa-da90-11e4-b71f-31398a797ed9","variableMapping":{"size":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":0},{"failures":[165,166,167,168,43,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,45,198,199,118,119,128,130,131,141,48,35,54,200,201],"tindex":"9126eb0b-da90-11e4-b71f-a3cb96780e65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"9126eb0c-da90-11e4-b71f-bf817c4f4436","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"9126eb0d-da90-11e4-b71f-af1372c2f9ba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[],"tindex":"9126eb0e-da90-11e4-b71f-c9dceaa1a477","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-2},{"failures":[202],"tindex":"9126eb0f-da90-11e4-b71f-97bd4404cd70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"9126eb10-da90-11e4-b71f-5327ba8fa653","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"9126eb11-da90-11e4-b71f-9578129e485b","variableMapping":{"edgeId":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[],"tindex":"9126eb12-da90-11e4-b71f-5f9aa079ce82","variableMapping":{"shift":"maxValue","preferWayEncoder":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[64,203,172,204,205,206,173,174,142,207,208,209,210,211,212,213,214,215,175,216,217,218,219,176,220,177,221,222,223,224,225,226,227,228,178,229,230,231,179,34,232,180,233,181,234,235,236,237,238,239,240,241,182,242,243,244,245,183,246,247,184,248,185,186,249,250,251,143,252,187,202,188,253,189,190,254,191,147,192,255,193,256,194,257,258,259,195,196,144,260,261,262,263,264,265,266,267,268,197,269,270,271,62,44,145,272,273,45,198,118,128,200,37,274,275,38,276,39,40,277,278,41,279,280,201,55],"tindex":"9126eb13-da90-11e4-b71f-936b8464d112","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[281,93,282,99,100,283,284,285,286,149,150,127,151,152,287,153,155,156,288,289,157],"tindex":"9126eb14-da90-11e4-b71f-f7f254b8bdbc","variableMapping":{"size":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"9126eb15-da90-11e4-b71f-f1a1ad45af3e","variableMapping":{"longSegmentSize":"lastTime","bufferStart":"nanoTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[290,291,292,43,293,294,295,199,296],"tindex":"9126eb16-da90-11e4-b71f-b73b00cf4531","variableMapping":{"r":"angle","x":"com.graphhopper.util.AngleCalc.PI_4","absY":"com.graphhopper.util.AngleCalc.PI_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-1},{"failures":[109,58,116,117,118,119,120,123,124,135,137,138,139,141],"tindex":"9126eb17-da90-11e4-b71f-33a1030c562b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"9126eb18-da90-11e4-b71f-8b0ffc7d2e4d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"91271229-da90-11e4-b71f-eb672abb2073","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[40],"tindex":"9127122a-da90-11e4-b71f-bd679ad258b8","variableMapping":{"bm":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"9127122b-da90-11e4-b71f-13b66bf38772","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"9127122c-da90-11e4-b71f-8f794e87d1f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:94","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"9127122d-da90-11e4-b71f-270a2e65b347","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[27,28,29,91,92,94,96,98,101,102,103,104,105,297,298,299,300,301,302,303,304,30,31,32,33,34,25,131,132,135,48,49,35,51,36,37,38,39,40,41,305,306],"tindex":"9127122e-da90-11e4-b71f-51ac347559fd","variableMapping":{"tmpNo":"v"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[27,28,29,30,31,307,32,33,34,25,35,36,37,38,39,40,41],"tindex":"9127122f-da90-11e4-b71f-67531153ad7d","variableMapping":{"tmpNo":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"91271230-da90-11e4-b71f-bd26b771051f","variableMapping":{"edgeId":"tmp","nextEdge":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"91271231-da90-11e4-b71f-27005cde36b5","variableMapping":{"incEleSum":"minLat","incDist2DSum":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"91271232-da90-11e4-b71f-19510d858d93","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[308],"tindex":"91271233-da90-11e4-b71f-736eac20177f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-1},{"failures":[66,68,82,5,87,309,27,28,310,29,96,298,311,312,313,314,17,315,316,317,318,319,159,160,320,321,322,323,324,325,23,326,327,328,329,330,162,163,331,332,291,164,333,199,138,47,49,50,51,52,53,54,200,274,275,38,276,40,277,41,280,201,55],"tindex":"91271234-da90-11e4-b71f-3fda6987d7f3","variableMapping":{"index":"bytePos","entriesPerSegment":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:99","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"91271235-da90-11e4-b71f-11b688cb89a9","variableMapping":{"foundIndex":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"91271236-da90-11e4-b71f-07ea533093c2","variableMapping":{"systemProperty":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[63,334,64,65,335,0,336,66,337,67,68,69,1,70,71,72,73,74,75,76,2,165,3,4,338,77,78,339,79,80,81,82,340,341,83,84,5,6,85,342,86,87,343,88,309,89,90,26,27,28,310,29,91,92,344,93,345,94,95,96,97,282,98,99,100,101,102,103,104,105,106,283,346,297,347,298,348,284,299,285,286,300,301,302,303,304,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,166,369,370,312,371,372,313,373,13,374,375,376,377,378,379,380,14,167,15,16,381,382,383,384,385,386,387,314,388,389,390,391,17,18,392,393,394,315,395,396,316,397,398,322,399,323,400,401,324,402,19,403,404,405,406,407,408,409,20,168,21,22,410,411,412,413,414,415,416,325,417,418,419,420,23,24,421,422,423,326,424,425,327,426,427,428,429,107,430,431,432,433,291,292,43,108,30,31,434,435,436,33,34,25,437,438,253,255,193,199,296,109,110,111,112,57,113,114,115,58,116,59,60,61,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,439,440,441,442,443,444,445,446,447,448,449,450,451,452,46,47,48,49,50,35,51,52,53,54,36,453,200,37,274,275,38,276,39,40,277,41,279,280,201,55,454,455,305,306],"tindex":"91273947-da90-11e4-b71f-6dc8dad583a0","variableMapping":{"splitIndex":"indexDivisor","entrySize":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[64,255,193,45,198,118,128],"tindex":"91273948-da90-11e4-b71f-4dac65814ac2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:54","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"91273949-da90-11e4-b71f-b92e800cb409","variableMapping":{"intLow":"code","intHigh":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[],"tindex":"9127394a-da90-11e4-b71f-f5592fd948a3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[34,25,55],"tindex":"9127394b-da90-11e4-b71f-1d703039d738","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[128],"tindex":"9127394c-da90-11e4-b71f-9913f80bd78b","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[],"tindex":"9127394d-da90-11e4-b71f-29dbdb20a604","variableMapping":{"from":"size","hash":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[308],"tindex":"9127394e-da90-11e4-b71f-bdc6e1345eef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[193],"tindex":"9127394f-da90-11e4-b71f-112679541e40","variableMapping":{"encoded":"flags","backwardBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"91273950-da90-11e4-b71f-05724d12bd72","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[63,334,64,65,335,456,0,336,66,457,337,67,68,69,1,70,71,72,73,74,75,76,2,165,3,4,338,77,78,339,79,80,81,82,340,341,83,458,84,5,6,85,342,86,87,343,88,309,89,90,459,26,27,28,310,460,29,91,92,344,93,345,94,95,96,97,282,98,99,100,101,102,103,104,105,106,283,346,297,347,298,348,284,299,285,286,300,301,302,303,461,304,349,350,351,352,353,462,354,355,356,357,358,359,463,360,361,464,465,466,467,468,469,470,362,363,364,471,365,366,472,7,8,166,10,473,369,11,12,474,475,476,370,312,477,371,372,313,373,13,374,375,376,377,378,379,380,14,167,15,16,381,382,383,384,385,386,387,314,388,389,390,478,391,17,18,392,393,394,315,395,396,316,397,398,158,479,480,319,159,160,481,482,483,484,322,485,399,323,486,400,401,324,402,19,403,404,405,406,407,408,409,20,168,21,22,410,411,412,413,414,415,416,325,417,418,419,487,420,23,24,421,422,423,326,424,425,327,426,427,161,488,489,330,162,163,428,429,107,430,431,432,433,291,292,43,108,30,31,434,435,436,33,34,25,437,438,253,255,193,490,198,199,296,109,110,111,112,57,113,114,115,58,116,59,60,61,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,439,440,441,441,442,442,443,443,444,444,445,445,446,446,447,447,448,448,449,449,450,450,451,451,452,452,46,47,48,49,50,35,51,52,53,54,36,453,200,37,274,275,38,276,39,40,277,41,279,280,201,55,491,492,454,455,305,306],"tindex":"91276061-da90-11e4-b71f-9d7626bf648b","variableMapping":{"size":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"91284ac2-da90-11e4-b71f-cb59730fe2a8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"91284ac3-da90-11e4-b71f-bd45113661f4","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"91284ac4-da90-11e4-b71f-ed03ed649b28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"91284ac5-da90-11e4-b71f-6f779e97bd13","variableMapping":{"time":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":0},{"failures":[43,44,273,45,46,47,48,49,50,35,51,52,53,54,36,200,37,274,275,38,276,39,40,277,41,279,280,201,55],"tindex":"91284ac6-da90-11e4-b71f-4327f357b2e9","variableMapping":{"edgePointer":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[146,110,111,112,57,113,114,115,58,59,60,61,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,47,48,49,51,52],"tindex":"91284ac7-da90-11e4-b71f-7f0a0e071552","variableMapping":{"index":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[63,334,64,65,335,456,0,336,66,457,337,67,493,68,69,1,70,71,72,73,74,75,76,2,165,3,4,338,77,78,339,79,80,81,82,340,341,83,458,84,5,6,85,342,86,87,343,88,309,89,90,459,26,27,28,310,460,29,91,92,344,93,345,94,95,96,97,282,98,99,100,101,102,103,104,105,106,283,346,297,347,298,348,284,299,285,286,300,301,302,303,304,349,350,351,352,353,354,355,356,357,358,359,360,361,166,369,370,312,477,371,372,494,313,373,13,374,375,376,377,378,379,380,14,167,15,16,381,382,383,384,385,386,387,314,388,389,390,478,391,17,18,392,393,394,315,395,396,316,397,398,484,495,496,497,498,499,322,399,323,486,400,401,500,324,402,19,403,404,405,406,407,408,409,20,168,21,22,410,411,412,413,414,415,416,325,417,418,419,487,420,23,24,421,422,423,326,424,425,327,426,427,501,428,429,107,430,431,432,433,291,292,43,108,30,31,434,435,164,333,502,503,504,436,33,34,25,437,438,253,255,193,490,198,199,296,109,110,111,112,57,113,114,115,58,116,59,60,61,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,439,440,441,441,442,442,443,443,444,444,445,445,446,446,447,447,448,448,449,449,450,450,451,451,452,452,46,47,48,49,50,35,51,505,52,53,54,36,506,453,200,37,274,275,38,276,39,40,277,278,41,279,280,201,507,55,508,509,510,454,455,305,306,511,512,513,514],"tindex":"912871d8-da90-11e4-b71f-59d91e49cbdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[207,219,260],"tindex":"912871d9-da90-11e4-b71f-1547ad49b554","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"912871da-da90-11e4-b71f-217e0647e611","variableMapping":{"mGarbage":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[],"tindex":"912871db-da90-11e4-b71f-a707e86a6bb3","variableMapping":{"size":"length","i":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[44,273,278],"tindex":"912871dc-da90-11e4-b71f-8ba3db025715","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"912871dd-da90-11e4-b71f-ad6904453521","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[1,4,77,80,5,6,7,10,515,516,11,12,13,16,382,386,17,18,19,22,411,415,23,24,25],"tindex":"912871de-da90-11e4-b71f-03c3ad653cd4","variableMapping":{"numTiles":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[63,91,111,57,58,59,60,61,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,46,47,48,49,51,52,54],"tindex":"912871df-da90-11e4-b71f-ab28ed5bfb0b","variableMapping":{"alreadyRun":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[184,200],"tindex":"912871e0-da90-11e4-b71f-85d6bae1b4f6","variableMapping":{"speedVal":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-1},{"failures":[63,335,66,68,69,1,71,72,75,76,165,78,79,83,84,85,86,87,89,517,472,7,518,519,520,521,166,522,523,473,369,524,525,475,526,312,313,373,13,375,376,379,380,167,383,385,390,391,392,394,315,397,322,323,324,402,19,404,405,408,409,168,412,414,419,420,421,423,326,426,107,433,291,292,43,108,434,435,436,33,25,437,246,248,249,251,252,253,190,193,272,198,199,296,109,110,111,112,57,113,114,58,116,59,60,61,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,439,440,445,448,46,47,48,49,50,35,51,52,53,54,37,274,38,40,277,41,279,280,55,454,455,305],"tindex":"912871e1-da90-11e4-b71f-c52d1cad119f","variableMapping":{"flags":"forwardBit","nodeFlags":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"912898f2-da90-11e4-b71f-37547de199b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"912898f3-da90-11e4-b71f-377835b4b7a4","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"912898f4-da90-11e4-b71f-39df20f5d9a8","variableMapping":{"lastIndex":"valueIfKeyNotFound","fromIndex":"valueIfKeyNotFound"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"912898f5-da90-11e4-b71f-652a543b9019","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[183],"tindex":"912898f6-da90-11e4-b71f-fdef862b387f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:163","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"EOF reached\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:280","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))))"},"status":-1},{"failures":[],"tindex":"912898f7-da90-11e4-b71f-7f92675f8b9f","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[109,111,116,117,118,119,120,121,122,124,125,127,128,130,131,132,133,134,135,137,139,140,141,48],"tindex":"912898f8-da90-11e4-b71f-05bd40ec308b","variableMapping":{"midLat":"dist"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[26,27,28,29,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,283,297,347,298,348,299,286,300,301,302,303,304,349,30,31,32,33,34,25,127,131,132,135,46,47,48,49,50,35,51,52,53,54,36,37,274,275,38,276,39,40,277,41,279,280,55,305,306],"tindex":"912898f9-da90-11e4-b71f-a18b75a72be3","variableMapping":{"mKeys":"arr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:62","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[46,36,274],"tindex":"912898fa-da90-11e4-b71f-fb6620d3eafd","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:424","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":136,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":442,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":170,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":456,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":472,"com.graphhopper.reader.OSMReaderTest.testFerry":200,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":434,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":95,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":47,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":290,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":20,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":492,"com.graphhopper.coll.CompressedArrayTest.testCompress":150,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":240,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":316,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":57,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":344,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":158,"com.graphhopper.util.AngleCalcTest.testOrientation":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":59,"com.graphhopper.GraphHopperTest.testPrepare":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":109,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":128,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":433,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":459,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":241,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":31,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":67,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":437,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":172,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":469,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":120,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":347,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":174,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":322,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":288,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":467,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":117,"com.graphhopper.GraphHopperTest.testLoadOSM":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":300,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":298,"com.graphhopper.reader.OSMReaderTest.testSort":275,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":175,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":34,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":279,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":486,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":393,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":312,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":155,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":448,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":423,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":458,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":378,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":485,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":259,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":178,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":98,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":97,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":505,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":521,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":123,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":122,"com.graphhopper.coll.OSMIDMapTest.testGetLong":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":410,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":416,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":339,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":56,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":66,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":80,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":295,"com.graphhopper.coll.CompressedArrayTest.testCompress2":149,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":387,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":176,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":168,"com.graphhopper.GraphHopperAPITest.testLoad":305,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":493,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":363,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":202,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":15,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":13,"com.graphhopper.storage.LevelGraphStorageTest.testClone":71,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":148,"com.graphhopper.reader.OSMReaderTest.testBarriers":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":402,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":144,"com.graphhopper.util.GHUtilityTest.testCopy":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":519,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":106,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":226,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":242,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":463,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":237,"com.graphhopper.routing.PathTest.testFindInstruction":296,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":19,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":108,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":191,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":357,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":394,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":383,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":421,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":428,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":114,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":266,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":272,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":73,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":372,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":468,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":368,"com.graphhopper.util.InstructionListTest.testWayList2":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":524,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":301,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":397,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":406,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":206,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":496,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":255,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":477,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":75,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":479,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":142,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":319,"com.graphhopper.storage.RAMDirectoryTest.testSynched":497,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":515,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":124,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":373,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":276,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":138,"com.graphhopper.coll.OSMIDMapTest.testGet":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":409,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":147,"com.graphhopper.routing.PathBidirRefTest.testExtract":439,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":209,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":502,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":102,"com.graphhopper.storage.RAMDataAccessTest.testCopy":328,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":180,"com.graphhopper.storage.RAMDataAccessTest.testSegments":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":349,"com.graphhopper.util.GHUtilityTest.testSort2":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":133,"com.graphhopper.reader.OSMReaderTest.testMain":274,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":457,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":415,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":289,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":216,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":83,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":525,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":165,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":77,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":307,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":89,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":3,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":445,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":194,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":362,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":79,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":201,"com.graphhopper.storage.StorablePropertiesTest.testStore":484,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":488,"com.graphhopper.storage.GraphHopperStorageTest.testClone":375,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":474,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":249,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":498,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":185,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":381,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":229,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":65,"com.graphhopper.routing.PathTest.testTime":198,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":225,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":88,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":187,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":460,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":303,"com.graphhopper.reader.OSMReaderTest.testRelation":278,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":341,"com.graphhopper.util.GHUtilityTest.testSortDirected":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":197,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":320,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":444,"com.graphhopper.GraphHopperTest.testFootOnly":54,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":27,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":184,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":499,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":282,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":273,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":522,"com.graphhopper.search.NameIndexTest.testCreate":514,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":162,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":441,"com.graphhopper.routing.QueryGraphTest.testOneWay":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":461,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":153,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":236,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":491,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":297,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":151,"com.graphhopper.reader.OSMReaderTest.testWithBounds":280,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":332,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":482,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":424,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":192,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":44,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":69,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":337,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":267,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":243,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":418,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":248,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":412,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":313,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":119,"com.graphhopper.util.InstructionListTest.testWayList":291,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":395,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":207,"com.graphhopper.GraphHopperAPITest.testDisconnected179":306,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":520,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":487,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":264,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":455,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":516,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":526,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":50,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":377,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":203,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":390,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":389,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":116,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":87,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":215,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":140,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":494,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":470,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":471,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":218,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":370,"com.graphhopper.routing.PathTest.testWayList":199,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":247,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":42,"com.graphhopper.coll.OSMIDMapTest.testGet2":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":141,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":85,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":508,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":213,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":188,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":407,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":78,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":100,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":329,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":321,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":220,"com.graphhopper.util.GHUtilityTest.testSort":430,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":465,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":299,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":171,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":157,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":212,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":235,"com.graphhopper.search.NameIndexTest.testPut":512,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":500,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":345,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":359,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":29,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":352,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":195,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":447,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":193,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":350,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":221,"com.graphhopper.storage.MMapDirectoryTest.testSynched":501,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":509,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":413,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":436,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":367,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":369,"com.graphhopper.routing.PathTest.testFound":490,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":36,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":45,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":86,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":480,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":308,"com.graphhopper.util.AngleCalcTest.testAtan2":294,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":211,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":22,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":146,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":481,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":513,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":166,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":380,"com.graphhopper.util.InstructionListTest.testEmptyList":432,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":252,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":245,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":244,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":134,"com.graphhopper.reader.PrinctonReaderTest.testRead":454,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":315,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":96,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":8,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":152,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":504,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":517,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":414,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":311,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":145,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":257,"com.graphhopper.reader.OSMReaderTest.testFoot":37,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":473,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":510,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":285,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":232,"com.graphhopper.reader.OSMReaderTest.testOneWay":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":286,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":16,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":18,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":238,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":160,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":260,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":523,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":113,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":111,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":112,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":253,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":483,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":94,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":443,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":371,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":507,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":365,"com.graphhopper.routing.PathBidirRefTest.testExtract2":440,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":118,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":302,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":361,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":511,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":391,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":462,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":230,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":40,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":476,"com.graphhopper.util.SimpleIntDequeTest.testPush":32,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":354,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":348,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":392,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":251,"com.graphhopper.GraphHopperTest.testFootAndCar":35,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":314,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":177,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":105,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":330,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":518,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":464,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":404,"com.graphhopper.storage.StorablePropertiesTest.testLoad":495,"com.graphhopper.GraphHopperTest.testPrepareOnly":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":137,"com.graphhopper.GraphHopperTest.testVia":48,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":360,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":7,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":41,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":335,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":43,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":478,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":190,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":277,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":179,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":342,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":6,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":323}}]
