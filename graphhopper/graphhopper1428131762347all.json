[{"failures":[],"tindex":"73f78ed2-da9a-11e4-a897-c1a255137fa3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"73f8c753-da9a-11e4-a897-a14a74ef44e4","variableMapping":{"i":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-1},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,0,1,2,3,4,5,6,7,8,79,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,30,105,106,32,33,34,35,36,37,38,39,40,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,41,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,42,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,43,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,44,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459],"tindex":"73f91574-da9a-11e4-a897-bdfc6b423e37","variableMapping":{"max":"index","tmpSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"73f91575-da9a-11e4-a897-0de397006834","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[189],"tindex":"73f91576-da9a-11e4-a897-2b2d6b3b1812","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeFlagEncoder.reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"73f91577-da9a-11e4-a897-cfd50342ecd5","variableMapping":{"flags":"includeWay","mask":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"73f91578-da9a-11e4-a897-ada8cec5845e","variableMapping":{"mKeys":"mValues","nkeys":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-2},{"failures":[460,461,462,463,464,465,466,467,468],"tindex":"73f91579-da9a-11e4-a897-892904a8f0c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[48,51,55,194,195,198,208,210,212,216,218,226,271,411,413,416],"tindex":"73f9157a-da9a-11e4-a897-e1db8205c9af","variableMapping":{"allSegments":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[85,87,96,97,101,108,114,115,119,131,135,146,148,157,158,162],"tindex":"73f9157b-da9a-11e4-a897-d1c3ec1046dd","variableMapping":{"slice":"maxSpeed","azimuth":"maxSpeed","cp":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:126","type":"CtIfImpl","sourcecode":"if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"73f9157c-da9a-11e4-a897-83bd484369a7","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxTurnCosts","prevOrNextEdgeId":"maxTurnCosts","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:74","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    return double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[469],"tindex":"73f9157d-da9a-11e4-a897-716dab55c0d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"73f9157e-da9a-11e4-a897-379a0705ff64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"73f93c8f-da9a-11e4-a897-19ec0da66b10","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[139,144],"tindex":"73f93c90-da9a-11e4-a897-5bef34eaf4bb","variableMapping":{"initLeafSize":"removed","maxLeafEntries":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[460,461,462,463,470,464,465,466,467,468,275,312],"tindex":"73f93c91-da9a-11e4-a897-332bf3f47254","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"73f93c92-da9a-11e4-a897-5f309d78c7e3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"73f93c93-da9a-11e4-a897-21db462d02e4","variableMapping":{"heights":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:77","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[7,31],"tindex":"73f93c94-da9a-11e4-a897-ab25a1e9743e","variableMapping":{"cap":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[45,46,47,48,51,53,55,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,216,217,218,222,223,224,225,226,227],"tindex":"73f963a5-da9a-11e4-a897-678704592a08","variableMapping":{"tmp":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"73f963a6-da9a-11e4-a897-27d143475395","variableMapping":{"nodeB":"shift","edgeId":"shift","nodeA":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":0},{"failures":[],"tindex":"73f963a7-da9a-11e4-a897-2f740db637a0","variableMapping":{"weight":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[102,120,136,163],"tindex":"73f963a8-da9a-11e4-a897-81b51ac3db30","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"73f963a9-da9a-11e4-a897-df2ef5ad5065","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"73f963aa-da9a-11e4-a897-f5307ef23389","variableMapping":{"res":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"73f963ab-da9a-11e4-a897-073f60cae368","variableMapping":{"len":"y1","i":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[45,46,47,48,49,50,51,53,54,55,56,64,65,66,67,71,471,472,473,474,475,476,477,0,1,2,3,4,5,6,7,8,9,10,11,12,13,478,479,480,481,482,82,83,168,169,173,174,176,177,178,179,180,181,183,184,209,229,230,234,254,260,265,268,276,277,278,313,314,315,353,483,484,485,486,365,368,369,373,393,399,404,407,487,415,418,419,423,443,449,454,457,488,489,490,491,492],"tindex":"73f963ac-da9a-11e4-a897-f73b3f57a8b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"73f963ad-da9a-11e4-a897-15b2e4c6936b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"73f9ffee-da9a-11e4-a897-cff0e638c26f","variableMapping":{"str":"location","this":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:154","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    java.lang.String += \"_STORE\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[105],"tindex":"73f9ffef-da9a-11e4-a897-f1bc0ab576cd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-1},{"failures":[],"tindex":"73fa2700-da9a-11e4-a897-23c73a1c8a74","variableMapping":{"freeIndex":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-2},{"failures":[],"tindex":"73fa2701-da9a-11e4-a897-57f7cee8458a","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"73fa2702-da9a-11e4-a897-730f55761963","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:566","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return com.graphhopper.routing.util.EncodedValue.setValue(long, long);\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setLong(long, int, long);\n}"},"status":-2},{"failures":[493,494],"tindex":"73fb3873-da9a-11e4-a897-1d52369132da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"73fb3874-da9a-11e4-a897-8dbb4753ac6f","variableMapping":{"low":"size","guess":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":0},{"failures":[],"tindex":"73fb3875-da9a-11e4-a897-79b4b6e9534f","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"73fb3876-da9a-11e4-a897-d92ed62e1f05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"73fb3877-da9a-11e4-a897-5102bf3a637d","variableMapping":{"empty":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[495,496],"tindex":"73fb3878-da9a-11e4-a897-0d64d4dba34c","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[],"tindex":"73fb3879-da9a-11e4-a897-9bd856bfbf9e","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"73fb5f8a-da9a-11e4-a897-d3458380a310","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"73fb5f8b-da9a-11e4-a897-39b7e9468fcf","variableMapping":{"bytePointer":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[88,90,100,109,118,134,149,151,161],"tindex":"73fb5f8c-da9a-11e4-a897-7fb2f5e7534e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-1},{"failures":[],"tindex":"73fb5f8d-da9a-11e4-a897-5dcef4119f2e","variableMapping":{"sacScale":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":0},{"failures":[],"tindex":"73fb5f8e-da9a-11e4-a897-0b37b59bcdf0","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"73fb5f8f-da9a-11e4-a897-fb80c813c394","variableMapping":{"maxLatTmp":"lon","minLatTmp":"lon","lat":"lon","hash":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-2},{"failures":[],"tindex":"73fb5f90-da9a-11e4-a897-5b44b69018bc","variableMapping":{"importance":"maxCount","hash":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"73fb5f91-da9a-11e4-a897-af3d7c6d2924","variableMapping":{"time":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[497,108,109,110,112,114,115,118,119,121,122],"tindex":"73fb5f92-da9a-11e4-a897-a74213192741","variableMapping":{"val":"highway","existing":"highway","key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"73fb5f93-da9a-11e4-a897-fbc704bb9000","variableMapping":{"line":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[139],"tindex":"73fb5f94-da9a-11e4-a897-395c2677398f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[45,51,53,54,56,229,365,368,498,415,418],"tindex":"73fb5f95-da9a-11e4-a897-092141732621","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"73fb5f96-da9a-11e4-a897-4f9aac8dbf46","variableMapping":{"lat":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[85,88,90,100,108,109,118,134,146,149,151,161],"tindex":"73fb5f97-da9a-11e4-a897-3bf01c611282","variableMapping":{"id":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[32],"tindex":"73fb5f98-da9a-11e4-a897-2d61015adbe4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[47,50,55,499,174,176,177,178,198,202,203,206],"tindex":"73fb5f99-da9a-11e4-a897-dd44180688b5","variableMapping":{"com.graphhopper.util.NumHelper.DEFAULT_PRECISION":"lon","this":"this","d1":"lat","d2":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-1},{"failures":[],"tindex":"73fb86aa-da9a-11e4-a897-d78ca74dad0a","variableMapping":{"key":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[45,46,47,48,49,50,51,53,54,55,56,67,0,1,2,3,4,5,6,7,8,9,10,11,12,500,13,14,16,17,18,19,21,23,29,85,86,87,89,90,92,93,94,96,97,100,101,102,103,106,32,35,38,39,107,108,111,112,114,115,118,119,120,121,125,126,127,128,129,131,134,135,136,146,147,148,150,151,153,154,155,157,158,161,162,163,164],"tindex":"73fb86ab-da9a-11e4-a897-b3a5046fac0e","variableMapping":{"properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:107","type":"CtReturnImpl","sourcecode":"return !(java.util.Map<java.lang.String, java.lang.Object>.isEmpty())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failures":[],"tindex":"73fb86ac-da9a-11e4-a897-c5cb6da7354a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[460,461,462,463,464,465,466,467,468],"tindex":"73fb86ad-da9a-11e4-a897-7d71c4fce0f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[0,469],"tindex":"73fb86ae-da9a-11e4-a897-758e1ce9fac9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"73fb86af-da9a-11e4-a897-4dff6988b378","variableMapping":{"value":"segmentSizeInBytes","numberOfBits":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-2},{"failures":[],"tindex":"73fb86b0-da9a-11e4-a897-c95555a025f5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[89,90,110,124,126,150,151],"tindex":"73fb86b1-da9a-11e4-a897-dddcf5f19aeb","variableMapping":{"high":"encoded","guess":"encoded","low":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[469],"tindex":"73fb86b2-da9a-11e4-a897-bde517fb359e","variableMapping":{"key":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"73fb86b3-da9a-11e4-a897-b3db298f572e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"73fb86b4-da9a-11e4-a897-0f68c2aa9058","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[45,46,47,48,51,53,55,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,216,217,218,222,223,224,225,226,227],"tindex":"73fb86b5-da9a-11e4-a897-d5215e81ea01","variableMapping":{"tmp":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"73fb86b6-da9a-11e4-a897-795f04ee18d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[47,190,202,212,213,216,217,222,223,224,227,410,412,421,424,425,432,446,452,454,458],"tindex":"73fb86b7-da9a-11e4-a897-5fd182c8bd24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.next()"},"status":-1},{"failures":[460,461,462,463,464,466,467,501,502,503,274,280,282,283,311,317,319,320],"tindex":"73fbadc8-da9a-11e4-a897-d1562f7094b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"73fbadc9-da9a-11e4-a897-e51873f31e17","variableMapping":{"red":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"73fbadca-da9a-11e4-a897-1d17a69f99ab","variableMapping":{"lastIndex":"key","fromIndex":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"73fbadcb-da9a-11e4-a897-e5b40e8b3e10","variableMapping":{"cap":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[189],"tindex":"73fbadcc-da9a-11e4-a897-59764d793ec0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeFlagEncoder.reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"73fbadcd-da9a-11e4-a897-65c2c323e36d","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[189,190,212,213,223],"tindex":"73fbadce-da9a-11e4-a897-b52474f2be3d","variableMapping":{"ret":"to","retBucket":"to","i":"tmp","bucketSize":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,0,1,2,3,4,5,6,7,8,79,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,30,105,106,32,33,34,35,36,37,38,39,40,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,41,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,42,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,43,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,44,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459],"tindex":"73fbadcf-da9a-11e4-a897-cdc58eeef111","variableMapping":{"acceptBit":"defaultL","ferryBit":"defaultL","footTag":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[],"tindex":"73fbadd0-da9a-11e4-a897-e17487905058","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[0,1,2,3,5,6,7,8,11,12,13,85,86,87,88,89,90,94,96,97,100,101,103,104,497,504,106,108,109,110,112,114,115,118,119,121,122,124,125,126,127,129,131,134,135,137,146,147,148,149,150,151,155,157,158,161,162,164,165],"tindex":"73fbd4e1-da9a-11e4-a897-1735e91c484f","variableMapping":{"val":"highway","existing":"highway","key":"service"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"73fbd4e2-da9a-11e4-a897-7902608b4066","variableMapping":{"nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-2},{"failures":[],"tindex":"73fbd4e3-da9a-11e4-a897-cbde771a9db2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"73fbd4e4-da9a-11e4-a897-f15fbf673f2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"73fbd4e5-da9a-11e4-a897-196ae07bc715","variableMapping":{"item":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:256","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[139,143,144],"tindex":"73fbd4e6-da9a-11e4-a897-2b2a9a61ee28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:60","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"status":-1},{"failures":[],"tindex":"73fbd4e7-da9a-11e4-a897-1990b3b550c2","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"start","speed":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[85,89,90,103,108,110,121,124,126,127,146,150,151,164],"tindex":"73fbd4e8-da9a-11e4-a897-ad7a16a411f4","variableMapping":{"initializedCounter":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"73fbd4e9-da9a-11e4-a897-5ddaad776256","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"73fbd4ea-da9a-11e4-a897-a3711c156ad6","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"73fbd4eb-da9a-11e4-a897-5d07915773b8","variableMapping":{"osmValue":"osmValue","values":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:151","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    if (java.lang.String.equals(java.lang.Object))\n        return true;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[139,143,144],"tindex":"73fbd4ec-da9a-11e4-a897-6d6cd046b3fa","variableMapping":{"index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[13,141],"tindex":"73fbd4ed-da9a-11e4-a897-0bca88a29505","variableMapping":{"importance":"maxCount","hash":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"73fbd4ee-da9a-11e4-a897-210a232c6768","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[],"tindex":"73fbd4ef-da9a-11e4-a897-bd7b413c87f1","variableMapping":{"i":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"73fbd4f0-da9a-11e4-a897-9d8e6678ac12","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"73fbd4f1-da9a-11e4-a897-039ab1169ee3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[23],"tindex":"73fbfc02-da9a-11e4-a897-81ad0eaeb586","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-1},{"failures":[45,46,47,48,51,53,55,68,71,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,226,227,271,272,274,276,277,278,279,281,282,283,284,285,286,287,289,290,410,412,413,418,421,423,424,425,426,427,428,429,430,431,432,434,435,437,438,440,441,442,443,446,448,449,450,451,453,454,456,458,459],"tindex":"73fbfc03-da9a-11e4-a897-8bc55afeaa3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":448,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":207,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":415,"com.graphhopper.GraphHopperAPITest.testNoLoad":60,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":329,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":75,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":150,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":127,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":277,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":46,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":383,"com.graphhopper.coll.CompressedArrayTest.testCompress":461,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":133,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":218,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":348,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":273,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":485,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":224,"com.graphhopper.GraphHopperTest.testPrepare":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":213,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":148,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":199,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":134,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":62,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":274,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":143,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":146,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":493,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":197,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":314,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":407,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":151,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":365,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":501,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":423,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":227,"com.graphhopper.GraphHopperTest.testLoadOSM":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":315,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":105,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":162,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":369,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":489,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":263,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":229,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":361,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":180,"com.graphhopper.routing.DijkstraTest.initializationError":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":403,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":492,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":447,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":241,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":411,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":366,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":378,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":373,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":433,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":122,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":119,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":281,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":203,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":279,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":193,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":425,"com.graphhopper.coll.OSMIDMapTest.testGetLong":481,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":392,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":439,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":418,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":441,"com.graphhopper.coll.CompressedArrayTest.testCompress2":460,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":253,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":108,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":43,"com.graphhopper.GraphHopperAPITest.testLoad":58,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":422,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":32,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":245,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":236,"com.graphhopper.storage.LevelGraphStorageTest.testClone":427,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":469,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":91,"com.graphhopper.util.GHUtilityTest.testCopy":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":333,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":116,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":136,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":130,"com.graphhopper.routing.PathTest.testFindInstruction":169,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":375,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":38,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":68,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":455,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":87,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":292,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":264,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":249,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":401,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":387,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":98,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":172,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":429,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":334,"com.graphhopper.util.InstructionListTest.testWayList2":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":356,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":322,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":269,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":379,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":149,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":498,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":82,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":230,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":431,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":152,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":499,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":342,"com.graphhopper.storage.RAMDirectoryTest.testSynched":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":384,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":195,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":235,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":488,"com.graphhopper.routing.AStarTest.initializationError":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":209,"com.graphhopper.coll.OSMIDMapTest.testGet":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":382,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":39,"com.graphhopper.routing.PathBidirRefTest.testExtract":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":155,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":443,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":480,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":285,"com.graphhopper.storage.RAMDataAccessTest.testCopy":483,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":490,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":409,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":154,"com.graphhopper.storage.RAMDataAccessTest.testSegments":486,"com.graphhopper.util.GHUtilityTest.testSort2":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":204,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":419,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":391,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":502,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":163,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":286,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":16,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":370,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":44,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":437,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":458,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":177,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":85,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":440,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.StorablePropertiesTest.testStore":487,"com.graphhopper.storage.GraphHopperStorageTest.testClone":238,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":357,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":21,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":247,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":410,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":335,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":413,"com.graphhopper.routing.PathTest.testTime":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":115,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":456,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":428,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":28,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":302,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":324,"com.graphhopper.reader.OSMReaderTest.testRelation":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":347,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":445,"com.graphhopper.util.GHUtilityTest.testSortDirected":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":101,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":176,"com.graphhopper.GraphHopperTest.testFootOnly":55,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":125,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":19,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":280,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":504,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":343,"com.graphhopper.search.NameIndexTest.testCreate":474,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":173,"com.graphhopper.routing.QueryGraphTest.testOneWay":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":325,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":464,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":313,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":462,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":102,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":140,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":405,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":349,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":497,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":424,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":420,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":99,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":137,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":20,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":388,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":234,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":190,"com.graphhopper.util.InstructionListTest.testWayList":65,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":266,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":153,"com.graphhopper.GraphHopperAPITest.testDisconnected179":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":336,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":465,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":331,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":96,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":363,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":49,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":240,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":399,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":225,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":145,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":257,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":201,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":24,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":454,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":371,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":211,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":165,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":228,"com.graphhopper.routing.PathTest.testWayList":168,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":362,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":339,"com.graphhopper.coll.OSMIDMapTest.testGet2":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":212,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":451,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":475,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":394,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":159,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":250,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":33,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":282,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":283,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":484,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":93,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":109,"com.graphhopper.util.GHUtilityTest.testSort":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":352,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":468,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":158,"com.graphhopper.search.NameIndexTest.testPut":472,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":408,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":275,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":294,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":303,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":89,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":83,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":304,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":367,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":111,"com.graphhopper.storage.MMapDirectoryTest.testSynched":496,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":81,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":476,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":389,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":139,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":436,"com.graphhopper.routing.PathTest.testFound":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":353,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":56,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":106,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":453,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":138,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":412,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":157,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":385,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":473,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":42,"com.graphhopper.util.InstructionListTest.testEmptyList":63,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":198,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":117,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":287,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":202,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":15,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":135,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":205,"com.graphhopper.reader.PrinctonReaderTest.testRead":77,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":265,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":278,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":338,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":463,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":328,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":426,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":390,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":31,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":86,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":351,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":477,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":319,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":457,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":467,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":123,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":320,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":246,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":261,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":402,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":131,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":491,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":92,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":219,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":503,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":217,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":307,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":34,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":341,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":175,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":231,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":500,"com.graphhopper.routing.PathBidirRefTest.testExtract2":186,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":494,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":118,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":297,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":323,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":471,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":259,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":308,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":121,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":364,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":316,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":262,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":73,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":430,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":25,"com.graphhopper.GraphHopperTest.testFootAndCar":50,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":254,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":435,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":289,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":332,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":377,"com.graphhopper.GraphHopperTest.testPrepareOnly":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":208,"com.graphhopper.GraphHopperTest.testVia":47,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":330,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":414,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":67,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":258,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":36,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.routing.AStarBidirectionTest.initializationError":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":344,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":29,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":452,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":450,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":368}}]
