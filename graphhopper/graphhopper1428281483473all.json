[{"failures":[0,1,2],"tindex":"0dfda8e8-dbf7-11e4-9d68-3f7a46c591d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"0dfe6c39-dbf7-11e4-9d68-f1ff1fb23450","variableMapping":{"retBucket":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":0},{"failures":[],"tindex":"0dfe6c3a-dbf7-11e4-9d68-8f0c879c2fdd","variableMapping":{"line":"entryVal","key":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"0dfe6c3b-dbf7-11e4-9d68-87229f02c1ca","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":0},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,0,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,1,2],"tindex":"0dfe934c-dbf7-11e4-9d68-ddb3f95e43e9","variableMapping":{"turnRestrictionBit":"flags","restricted":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:615","type":"CtReturnImpl","sourcecode":"return boolean ? long : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"0dfe934d-dbf7-11e4-9d68-39b918987bf4","variableMapping":{"endIndexPlusOne":"index","frontIndex":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"0dfe934e-dbf7-11e4-9d68-dbcd4973389e","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"0dfe934f-dbf7-11e4-9d68-15e913a50d9f","variableMapping":{"edgeId":"edgeEntryBytes","iter":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-2},{"failures":[],"tindex":"0dfe9350-dbf7-11e4-9d68-eff8e6d55b2b","variableMapping":{"i":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[],"tindex":"0dfe9351-dbf7-11e4-9d68-29644631d6fd","variableMapping":{"bytesForFlags":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,46,84,85,86,87,88,89,90,91,92,93,94],"tindex":"0dfe9352-dbf7-11e4-9d68-dbd90efadc40","variableMapping":{"len":"defaultL","start":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[60,68],"tindex":"0dfe9353-dbf7-11e4-9d68-1d987eb7aadd","variableMapping":{"initialized":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"0dfe9354-dbf7-11e4-9d68-5f237c101208","variableMapping":{"start":"maxCount","delta":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[95,96],"tindex":"0dfe9355-dbf7-11e4-9d68-ab4d84298b26","variableMapping":{"shift":"relBitMask","flags":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"0dfe9356-dbf7-11e4-9d68-37cbbff31070","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[97],"tindex":"0dfe9357-dbf7-11e4-9d68-5f69d019cb39","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:146","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"Empty edge cannot happen\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[98,6,7,99,100,101,102,103,55,104],"tindex":"0dfe9358-dbf7-11e4-9d68-bbce6c736f32","variableMapping":{"deltaX":"r","maxX":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"0dfe9359-dbf7-11e4-9d68-d1f0b23a7b2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"0dfeba6a-dbf7-11e4-9d68-613da18870f5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"0dfeba6b-dbf7-11e4-9d68-4d2241ef4321","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"0dfeba6c-dbf7-11e4-9d68-8b286fb76717","variableMapping":{"java.lang.Integer.MAX_VALUE":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"0dfeba6d-dbf7-11e4-9d68-0f904bf1d8be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:83","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator"},"status":-2},{"failures":[],"tindex":"0dfeba6e-dbf7-11e4-9d68-11f07c104a18","variableMapping":{"r":"java.lang.Math.PI","x":"java.lang.Math.PI","absY":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[105,106,107,84,108,85,109,86,110,87,111,112,88,113,114,89,115,90,91,116,117,92,118,93,95,96],"tindex":"0dfeba6f-dbf7-11e4-9d68-519d052ba98b","variableMapping":{"flags":"flags","scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-1},{"failures":[],"tindex":"0dfeba70-dbf7-11e4-9d68-17632577bc89","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[119,120,121,122,123,124,125],"tindex":"0dfeba71-dbf7-11e4-9d68-634d221cdefb","variableMapping":{"res":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[107],"tindex":"0dfeba72-dbf7-11e4-9d68-e512c3c60da7","variableMapping":{"byteCount":"oldRelationFlags","longSegmentSize":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"0dfeba73-dbf7-11e4-9d68-8f1dd548caa7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Use setDoubleValue instead\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":0},{"failures":[126,127,128,129,130,131,132,133,134,135,136,137,106,107,108,138,85,139,109,140,110,87,141,88,113,142,114,115,143,90,144,91,116,145,117,118,146,93,95,96,94],"tindex":"0dfeba74-dbf7-11e4-9d68-df2ee1ecbced","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","edgeId":"speed","edgeCount":"speed","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:654","type":"CtIfImpl","sourcecode":"if ((int <= (com.graphhopper.util.EdgeIterator.int)) || (int >= (int)))\n    throw new java.lang.IllegalStateException(((((\"edgeId \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \"]\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"0dfeba75-dbf7-11e4-9d68-89099b630874","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[],"tindex":"0dfeba76-dbf7-11e4-9d68-a3d7ab6d59d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"0dfeba77-dbf7-11e4-9d68-534bfb26ebbe","variableMapping":{"weightToPrioMap":"weightToPrioMap","highway":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.VERY_NICE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[147,148,149,150,57,58,59,151,60,152,153,61,154,62,63,155,64,156,65,157,66,67,68,158,69,70,72,1,159,160,2,161],"tindex":"0dfee188-dbf7-11e4-9d68-9538640671b9","variableMapping":{"shift":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:213","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[],"tindex":"0dfee189-dbf7-11e4-9d68-4dab7151d36d","variableMapping":{"param":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:65","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":0},{"failures":[],"tindex":"0dfee18a-dbf7-11e4-9d68-1b98acb85144","variableMapping":{"precision":"bwFaster","lat":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[162,147,148,163,149,164,165,126,128,129,166,130,131,132,133,167,168,134,135,136,169,170,171,172,173,174,175,176,6,7,177,178,12,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,17,203,204,205,206,26,207,208,209,210,35,36,211,212,213,214,215,55,67,216,217,218,219,220,221],"tindex":"0dfee18b-dbf7-11e4-9d68-8704ad848055","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"0dfee18c-dbf7-11e4-9d68-9961621d3d86","variableMapping":{"newUniqueOsmId":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"0dfee18d-dbf7-11e4-9d68-431eeb1981c7","variableMapping":{"tmpDegreeCounter":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"0dfee18e-dbf7-11e4-9d68-6bc5a773dea8","variableMapping":{"precision":"midLat","lat":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[126,222],"tindex":"0dfee18f-dbf7-11e4-9d68-5fad94b74b95","variableMapping":{"shift":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"0dfee190-dbf7-11e4-9d68-e75dcf40285b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"0dfee191-dbf7-11e4-9d68-f56ebd4852c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"0dfee192-dbf7-11e4-9d68-8901e03685a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[137,141,144,94],"tindex":"0dfee193-dbf7-11e4-9d68-359af9c82daf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[98,6,99,100,101,102,103,55,104],"tindex":"0dfee194-dbf7-11e4-9d68-9944a5103bc3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"0dff07a5-dbf7-11e4-9d68-7f54aa20dffe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[53],"tindex":"0dff07a6-dbf7-11e4-9d68-c95827967d26","variableMapping":{"resultOrientation":"incDist2DSum","orientation":"restDist2D","java.lang.Math.PI":"speedReverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[75,223,94],"tindex":"0dff07a7-dbf7-11e4-9d68-1f43f9e74a3b","variableMapping":{"shift":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","backwardBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[106,108,109,110,113,114,115,116,117,118],"tindex":"0dff07a8-dbf7-11e4-9d68-b52c87701cf0","variableMapping":{"cp":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[224],"tindex":"0dff07a9-dbf7-11e4-9d68-5d69b900e98c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"status":-1},{"failures":[148,149,165,225,226,227,228,229,60,153,66,68,230,70,72,1,159,2],"tindex":"0dff07aa-dbf7-11e4-9d68-7390f4b1e095","variableMapping":{"i":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[107,85,139,109,87,88,142,114,90,91,145,117,93,95,96],"tindex":"0dff07ab-dbf7-11e4-9d68-5b56501434e8","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[162,231,147,148,163,75,149,232,164,165,233,234,235,126,127,128,129,166,130,131,132,133,167,168,134,135,136,236,3,237,238,239,240,4,241,242,243,5,6,7,99,244,245,177,246,247,248,249,8,250,251,76,252,253,9,254,255,256,257,10,258,11,259,260,178,261,262,263,264,12,179,265,13,266,14,180,267,268,269,15,270,271,272,273,274,275,276,77,277,278,279,280,281,282,78,283,284,285,286,287,288,289,290,291,188,292,189,293,294,295,296,297,298,299,300,301,302,303,79,225,304,226,305,306,190,307,191,308,309,310,311,312,313,314,315,316,317,318,80,0,227,319,228,16,320,229,321,17,322,323,324,203,325,326,327,328,18,329,330,81,331,332,19,333,334,335,336,20,337,21,338,339,204,340,341,342,343,22,205,344,23,345,24,206,346,347,348,25,349,350,26,351,352,353,207,354,355,356,357,27,358,359,82,360,361,28,362,363,364,365,29,366,30,367,368,208,369,370,371,372,31,209,373,32,374,33,210,375,376,377,34,378,35,379,380,36,381,382,383,211,384,385,386,387,37,388,389,83,390,391,38,392,393,394,395,39,396,40,397,398,212,399,400,401,402,41,213,403,42,404,43,214,405,406,407,44,408,45,409,46,48,410,411,412,49,413,414,53,415,416,417,54,55,104,56,57,58,59,151,418,60,152,419,153,61,154,62,63,155,64,156,65,157,66,67,68,158,69,420,230,70,71,72,73,74,421,1,422,159,160,2,161,423,423,216,216,424,424,425,425,217,217,218,218,426,426,219,219,220,220,427,427,428,428,221,221],"tindex":"0dff2ebc-dbf7-11e4-9d68-41a8fe691cfb","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[56,57,67,69,161],"tindex":"0dff2ebd-dbf7-11e4-9d68-750c479cf2e5","variableMapping":{"initialized":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"0dff2ebe-dbf7-11e4-9d68-cde69c613ea0","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"0dff2ebf-dbf7-11e4-9d68-53580737b9b8","variableMapping":{"i":"subNetworks","child":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[127,132,136,106,107,84,108,85,109,86,110,87,88,113,114,89,115,90,91,116,117,92,118,93,95,96,94],"tindex":"0dff2ec0-dbf7-11e4-9d68-315fcde91f07","variableMapping":{"len":"flags","start":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[162,233],"tindex":"0dff2ec1-dbf7-11e4-9d68-7b41bfb085b6","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:307","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":-1},{"failures":[],"tindex":"0dff2ec2-dbf7-11e4-9d68-9f4c29f75118","variableMapping":{"distance":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[166,167,429,430,431,432,433,434],"tindex":"0dff2ec3-dbf7-11e4-9d68-6d628156e6ab","variableMapping":{"tt":"res"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"0dff2ec4-dbf7-11e4-9d68-83fce423ac3f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"0dff2ec5-dbf7-11e4-9d68-ed13f40544e5","variableMapping":{"flags":"hash","tmpValue":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[56,57,69,420,422],"tindex":"0dff2ec6-dbf7-11e4-9d68-ad733e3ab778","variableMapping":{"tmpNo":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"0dff2ec7-dbf7-11e4-9d68-c7732c7cef30","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"0dff2ec8-dbf7-11e4-9d68-f7d19aa01311","variableMapping":{"flags":"acceptBit","scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"0dff2ec9-dbf7-11e4-9d68-7350062e5057","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:41","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"0dff55da-dbf7-11e4-9d68-a71a2dbb5808","variableMapping":{"lastTime":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"0dff55db-dbf7-11e4-9d68-dd541df8180b","variableMapping":{"need":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"0dff55dc-dbf7-11e4-9d68-31ed0702e026","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"0dff55dd-dbf7-11e4-9d68-a5ec4dc04ebc","variableMapping":{"flags":"defaultValue","scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":0},{"failures":[],"tindex":"0dff55de-dbf7-11e4-9d68-c3a8173da595","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"0dff55df-dbf7-11e4-9d68-6bc26d8499bd","variableMapping":{"java.lang.Double.MAX_VALUE":"minLon","com.graphhopper.util.shapes.BBox.INVERSE":"com.graphhopper.util.shapes.BBox.INVERSE","maxLon":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"0dff55e0-dbf7-11e4-9d68-5d75357d4899","variableMapping":{"edgeId":"i","nextEdge":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[128,129,130,132,133,134,106,107,84,108,85,109,86,110,87,88,113,114,89,115,90,91,116,117,92,118,93,95,96],"tindex":"0e008e61-dbf7-11e4-9d68-eb68bad92936","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"0e008e62-dbf7-11e4-9d68-73a87cec9779","variableMapping":{"maxMCSpeed":"java.lang.Double.MAX_VALUE","speed":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[48,49,413],"tindex":"0e008e63-dbf7-11e4-9d68-4526d3e3b292","variableMapping":{"edgeCount":"index","lastEdgeIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[94],"tindex":"0e008e64-dbf7-11e4-9d68-6fc371623cb9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"0e008e65-dbf7-11e4-9d68-5b16eca6ca01","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"0e008e66-dbf7-11e4-9d68-ab06236085ed","variableMapping":{"bytePos":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[162,231,147,148,163,75,149,435,232,165,234,235,126,127,128,129,166,130,131,132,133,105,167,168,134,135,436,136,236,3,237,238,239,240,4,241,242,243,5,6,7,99,244,245,9,12,271,272,273,274,276,77,277,278,279,280,282,78,283,284,285,286,287,289,290,291,188,292,189,293,294,295,296,297,298,299,300,301,302,303,79,225,304,226,305,306,190,307,191,308,309,310,311,312,313,314,315,316,317,318,80,0,227,319,228,16,229,321,323,324,437,203,325,326,327,328,18,329,330,81,331,332,19,333,334,335,336,20,337,21,338,339,204,340,341,342,343,22,205,344,23,345,24,206,346,347,348,25,349,350,352,353,438,207,354,355,356,357,27,358,359,82,360,361,28,362,363,364,365,29,366,30,367,368,208,369,370,371,372,31,209,373,32,374,33,210,375,376,377,34,378,380,382,383,439,211,384,385,386,387,37,388,389,83,390,391,38,392,393,394,395,39,396,40,397,398,212,399,400,401,402,41,213,403,42,404,43,214,405,406,407,44,408,45,409,46,48,410,411,412,49,413,414,53,415,416,417,54,55,104,56,57,58,59,151,418,60,152,419,153,61,154,62,63,155,64,156,65,157,66,67,68,158,69,420,230,70,71,72,73,74,421,1,422,159,160,2,161,423,423,216,216,424,424,425,425,217,217,218,218,426,426,219,219,220,220,427,427,428,428,221,221],"tindex":"0e00b577-dbf7-11e4-9d68-8fd1bd6439dc","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[53],"tindex":"0e00b578-dbf7-11e4-9d68-ff49b8e97651","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"0e00b579-dbf7-11e4-9d68-4d273fd14551","variableMapping":{"bb":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:279","type":"CtIfImpl","sourcecode":"if (java.nio.ByteBuffer instanceof java.nio.MappedByteBuffer) {\n    try {\n        ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).isLoaded();\n        return true;\n    } catch (java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":0},{"failures":[],"tindex":"0e00b57a-dbf7-11e4-9d68-77fda2871187","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[56,57,67,68,69,161],"tindex":"0e00b57b-dbf7-11e4-9d68-dfdd326af2d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"0e00b57c-dbf7-11e4-9d68-77d9cb560df8","variableMapping":{"distInMeter":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"0e00b57d-dbf7-11e4-9d68-e5fe125eb0f9","variableMapping":{"currentEntry":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[162,147,149,232,164,165,233,128,130,131,169,170,172,173,5,6,7,99,440,441,442,443,285,286,287,289,188,189,190,191,444,320,17,203,204,205,206,347,26,207,208,209,210,376,35,36,211,212,213,214,406,445,55,104,67,216,217,218,219,220,221],"tindex":"0e00b57e-dbf7-11e4-9d68-e9c8b2fa433e","variableMapping":{"minResolutionInMeter":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"0e00b57f-dbf7-11e4-9d68-e90741e81623","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[48,49],"tindex":"0e00b580-dbf7-11e4-9d68-a57bdc5add28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[429,431,432,433,434],"tindex":"0e00dc91-dbf7-11e4-9d68-6f61e3c14e15","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"0e00dc92-dbf7-11e4-9d68-8f94fe45a78a","variableMapping":{"high":"allBits","low":"i","guess":"i","guessedKey":"hash","key":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:477","type":"CtIfImpl","sourcecode":"if (long < long) {\n    int = int;\n} else {\n    int = int;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":0},{"failures":[446,447,57,61,63],"tindex":"0e00dc93-dbf7-11e4-9d68-53efbd8cc155","variableMapping":{"mainEdgeState":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-1},{"failures":[119,120,290,296,297,305,311,312,122,448,124,449,450],"tindex":"0e00dc94-dbf7-11e4-9d68-f301d2c60468","variableMapping":{"distance":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"0e00dc95-dbf7-11e4-9d68-67db74d54954","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"0e00dc96-dbf7-11e4-9d68-e16a5650d320","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"0e00dc97-dbf7-11e4-9d68-21bcd38c9dc1","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR":"dist","weight":"dist","weightLong":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[132],"tindex":"0e00dc98-dbf7-11e4-9d68-79b21268666c","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"0e00dc99-dbf7-11e4-9d68-4dff71c99319","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":157,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":216,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":320,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":246,"com.graphhopper.reader.OSMReaderTest.testFerry":126,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":237,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":238,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":142,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":140,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":307,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":231,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":98,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":391,"com.graphhopper.coll.CompressedArrayTest.testCompress":120,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":72,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":178,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":28,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":226,"com.graphhopper.util.AngleCalcTest.testOrientation":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":159,"com.graphhopper.GraphHopperTest.testPrepare":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":267,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":420,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":283,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":110,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":245,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":305,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":49,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":58,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":292,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":407,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":35,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":161,"com.graphhopper.GraphHopperTest.testLoadOSM":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":189,"com.graphhopper.reader.OSMReaderTest.testSort":129,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":168,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":411,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":381,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":374,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":26,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":268,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":219,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":43,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":215,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":343,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":359,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":379,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":211,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":332,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":85,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":310,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":308,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":151,"com.graphhopper.coll.OSMIDMapTest.testGetLong":172,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":394,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":398,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":337,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":150,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":17,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":338,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":102,"com.graphhopper.coll.CompressedArrayTest.testCompress2":119,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":368,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":137,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":38,"com.graphhopper.GraphHopperAPITest.testLoad":45,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":437,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":192,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":429,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":362,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":355,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":222,"com.graphhopper.storage.LevelGraphStorageTest.testClone":328,"com.graphhopper.reader.OSMReaderTest.testBarriers":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":384,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":225,"com.graphhopper.util.GHUtilityTest.testCopy":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":152,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":80,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":281,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":201,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":86,"com.graphhopper.routing.PathTest.testFindInstruction":104,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":385,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":3,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":346,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":278,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":33,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":42,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":74,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":395,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":97,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":250,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":353,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":195,"com.graphhopper.util.InstructionListTest.testWayList2":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":299,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":388,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":113,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":406,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":446,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":414,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":81,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":443,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":392,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":60,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":354,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":130,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":67,"com.graphhopper.coll.OSMIDMapTest.testGet":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":390,"com.graphhopper.routing.PathBidirRefTest.testExtract":415,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":171,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":314,"com.graphhopper.storage.RAMDataAccessTest.testCopy":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":408,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":179,"com.graphhopper.storage.RAMDataAccessTest.testSegments":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":433,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":79,"com.graphhopper.util.GHUtilityTest.testSort2":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":64,"com.graphhopper.reader.OSMReaderTest.testMain":128,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":322,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":397,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":450,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":315,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":224,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":382,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":19,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":336,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":25,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":112,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":217,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":144,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":21,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":135,"com.graphhopper.storage.StorablePropertiesTest.testStore":445,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":444,"com.graphhopper.storage.GraphHopperStorageTest.testClone":357,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":266,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":364,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":0,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":251,"com.graphhopper.routing.PathTest.testTime":54,"com.graphhopper.util.BitUtilLittleTest.testToFloat":175,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":347,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":18,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":301,"com.graphhopper.reader.OSMReaderTest.testRelation":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":260,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":341,"com.graphhopper.util.GHUtilityTest.testSortDirected":242,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":186,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":425,"com.graphhopper.GraphHopperTest.testFootOnly":165,"com.graphhopper.util.BitUtilLittleTest.testToInt":176,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":285,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":309,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":10,"com.graphhopper.search.NameIndexTest.testCreate":442,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":199,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":423,"com.graphhopper.routing.QueryGraphTest.testOneWay":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":302,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":448,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":188,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":121,"com.graphhopper.reader.OSMReaderTest.testWithBounds":134,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":202,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":405,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":261,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":95,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":325,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":323,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":87,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":400,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":51,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":39,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":207,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":57,"com.graphhopper.util.BitUtilLittleTest.testToBitString":174,"com.graphhopper.util.InstructionListTest.testWayList":6,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":375,"com.graphhopper.GraphHopperAPITest.testDisconnected179":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":76,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":123,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":248,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":235,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":15,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":163,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":358,"com.graphhopper.routing.util.EncodedValueTest.testSwap":111,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":160,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":371,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":422,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":115,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":158,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":90,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":350,"com.graphhopper.routing.PathTest.testWayList":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":254,"com.graphhopper.coll.OSMIDMapTest.testGet2":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":69,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":399,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":366,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":389,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":20,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":312,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":197,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":187,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":434,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":106,"com.graphhopper.util.GHUtilityTest.testSort":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":295,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":125,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":432,"com.graphhopper.search.NameIndexTest.testPut":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":44,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":439,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":306,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":289,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":273,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":145,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":426,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":53,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":271,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":380,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":431,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":396,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":48,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":194,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":12,"com.graphhopper.routing.PathTest.testFound":417,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":94,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":233,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":24,"com.graphhopper.util.AngleCalcTest.testAtan2":101,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":319,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":393,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":441,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":9,"com.graphhopper.util.InstructionListTest.testEmptyList":243,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":153,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":316,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":430,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":156,"com.graphhopper.reader.PrinctonReaderTest.testRead":234,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":210,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":191,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":83,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":122,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":177,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":91,"com.graphhopper.reader.OSMReaderTest.testFoot":127,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":296,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":348,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":449,"com.graphhopper.reader.OSMReaderTest.testOneWay":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":297,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":363,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":373,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":404,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":185,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":11,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":71,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":184,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":274,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":256,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":424,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":352,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":436,"com.graphhopper.routing.PathBidirRefTest.testExtract2":416,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":56,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":300,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":31,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":275,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":138,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":132,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":270,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":293,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":32,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":330,"com.graphhopper.GraphHopperTest.testFootAndCar":75,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":208,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":107,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":318,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":66,"com.graphhopper.GraphHopperTest.testPrepareOnly":162,"com.graphhopper.GraphHopperTest.testVia":147,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":247,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":167,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":16,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":99,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":372,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":47,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":133,"com.graphhopper.util.AngleCalcTest.testCombined":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":258,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":345,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":344,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":36}}]
