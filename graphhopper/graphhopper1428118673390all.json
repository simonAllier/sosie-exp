[{"failures":[],"tindex":"fae1c4af-da7b-11e4-acca-9d2a69a505c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"fae483d0-da7b-11e4-acca-9de8cbac7725","variableMapping":{"segmentSizeInBytes":"index","indexDivisor":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"fae483d1-da7b-11e4-acca-1133ad4b6725","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":0},{"failures":[],"tindex":"fae4aae2-da7b-11e4-acca-6f46b7ba7721","variableMapping":{"ghLocation":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"fae4aae3-da7b-11e4-acca-47898fee3090","variableMapping":{"latSize":"i","size":"i","lonSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[],"tindex":"fae4aae4-da7b-11e4-acca-0dc1f52d44e2","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[0],"tindex":"fae4aae5-da7b-11e4-acca-e1f75d5845b0","variableMapping":{"edgePointer":"ferryBit","edgeEntryBytes":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[1],"tindex":"fae4aae6-da7b-11e4-acca-513758f71c6a","variableMapping":{"tmp":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"fae4aae7-da7b-11e4-acca-fd6162fd184d","variableMapping":{"resultOrientation":"bwFaster","orientation":"bwFaster","java.lang.Math.PI":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"fae4aae8-da7b-11e4-acca-5db93eada103","variableMapping":{"heights":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[35,36,37,38,39,40,41,3,4,5,6,7,8,9,10,11,12,13,15,16,42,17,18,19,20,21,22,23,24,25,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"fae4aae9-da7b-11e4-acca-efa4f9032142","variableMapping":{"value":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"fae4aaea-da7b-11e4-acca-cbed389f1160","variableMapping":{"nodeFlags":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-2},{"failures":[],"tindex":"fae4aaeb-da7b-11e4-acca-499a28988692","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,35,95,96,97,36,37,98,99,38,100,101,102,103,104,105,17,18,19,20,21,23,24,79,80],"tindex":"fae4d1fc-da7b-11e4-acca-d1a098061448","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"from","edgeTo":"from","edgeFrom":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[],"tindex":"fae4d1fd-da7b-11e4-acca-ab472e4b2609","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"fae4d1fe-da7b-11e4-acca-6b9dc5910a3b","variableMapping":{"max":"delta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[],"tindex":"fae4d1ff-da7b-11e4-acca-8d795fc6de6a","variableMapping":{"dx":"minLon","dy":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"fae4d200-da7b-11e4-acca-ab39e3326d7d","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"fae4d201-da7b-11e4-acca-8d09cc3c24ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"fae4d202-da7b-11e4-acca-3fc626eae89c","variableMapping":{"mKeys":"elem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:62","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"fae4d203-da7b-11e4-acca-eb117490220d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"fae4d204-da7b-11e4-acca-6bf9e604de97","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","edge":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[106,107,108],"tindex":"fae4d205-da7b-11e4-acca-cd23d3641aa0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"fae4d206-da7b-11e4-acca-997df891fa05","variableMapping":{"oldValueIndex":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[109],"tindex":"fae4d207-da7b-11e4-acca-db6c69253160","variableMapping":{"encoderList":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[110,111,112,113,114,115,9],"tindex":"fae4d208-da7b-11e4-acca-87eca148b107","variableMapping":{"sacScale":"sacScale","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"fae4d209-da7b-11e4-acca-c144421b363b","variableMapping":{"value":"i","numberOfBits":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-2},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,35,95,97,36,37,98,99,38,101,102,103,104,105,17,18,21,24],"tindex":"fae4d20a-da7b-11e4-acca-79c55c19a2f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[35,36,37,38,4,5,6,17,18,19,20,21,23,24,116,117,118,119,120,121,122,123,124,125,126,127,47,48,49,128,50,51,52,53,129,54,130,55,56,57,58,59,60,61,62,131,63,64,65,66,132,67,133,68,69,70,71,72,73,74,79,80],"tindex":"fae4f91b-da7b-11e4-acca-ff088a41b85b","variableMapping":{"segmentsToMap":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"fae4f91c-da7b-11e4-acca-c361ca98ba9a","variableMapping":{"err":"high","dLat":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[86,87,88,89,90,91,92,93,94,35,95,96,97,36,37,98,99,38,100,101,102,103,104,105,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,109,150,151,152,153,154,155,156,157,158,1,159,160,161,162,163,164,165,166,167,0,20,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,26,206,207,27,28,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,61,250,74,251,29,30,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,32,298,299,33,34,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"fae4f91d-da7b-11e4-acca-63ffe345a007","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"fae4f91e-da7b-11e4-acca-b55f8aba9fc1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[3,15],"tindex":"fae4f91f-da7b-11e4-acca-b53aa532f3f6","variableMapping":{"edgeId":"shift","nextEdge":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[341,342,343,344,345,346,147,347,150,151,348],"tindex":"fae4f920-da7b-11e4-acca-456c5c72a8f9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"fae4f921-da7b-11e4-acca-95af191eabad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"fae4f922-da7b-11e4-acca-9d3d27ab0f2b","variableMapping":{"reverseSpeed":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failures":[349,350],"tindex":"fae4f923-da7b-11e4-acca-25e0458302d3","variableMapping":{"minStr":"str","index":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"fae4f924-da7b-11e4-acca-8da9aabfd3f4","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":0},{"failures":[138,141,0,2,3,4,5,7,8,10,13,14,15,16,20,24,25],"tindex":"fae52035-da7b-11e4-acca-1f639e5565b5","variableMapping":{"allBits":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"fae52036-da7b-11e4-acca-ed00966eb1aa","variableMapping":{"orientation":"backSpeed","resultOrientation":"backSpeed","baseOrientation":"backSpeed","java.lang.Math.PI":"backSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":0},{"failures":[41,170,178,180,181,195,196,213,221,223,224,238,239,257,265,267,268,282,283,298,305,313,315,316,330,331],"tindex":"fae52037-da7b-11e4-acca-69355d6ebf71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"fae52038-da7b-11e4-acca-8dff94eccfe1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"fae52039-da7b-11e4-acca-c5e7106cd59e","variableMapping":{"nodeFlags":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failures":[116,117,118,119,120,121,122,123,124,125,126,127,49,129,130,55,62,132,133,68],"tindex":"fae5203a-da7b-11e4-acca-a75487fdbc5d","variableMapping":{"min":"i","tmpSize":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[81,82,351,352,83,84,85,86,87,88,89,90,91,92,93,94,95,97,36,37,98,99,38,101,102,103,104,105,17,18,21,295,33,323,332,337],"tindex":"fae5203b-da7b-11e4-acca-b7c7a4680557","variableMapping":{"edgeId":"nodeId","nodeId":"nodeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-1},{"failures":[166],"tindex":"fae5203c-da7b-11e4-acca-b3bc5c963ad1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"fae5203d-da7b-11e4-acca-47386877444f","variableMapping":{"orientation":"angle","java.lang.Math.PI":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[116,117,118,119,121,122,123,124,125,126,127,49,129,130,55,62,132,133,68],"tindex":"fae5203e-da7b-11e4-acca-d1b56c966eee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[16,21,22,23,25,26,27,29,353,32,33],"tindex":"fae5203f-da7b-11e4-acca-6fd4f2243619","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[92,101,103],"tindex":"fae52040-da7b-11e4-acca-f158bcf2aec0","variableMapping":{"allBits":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"fae52041-da7b-11e4-acca-51becdc5f60b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[149,109,150,151,354,355,356,357,358,359,360,348,361,115,362,363],"tindex":"fae52042-da7b-11e4-acca-930c065ab1ed","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-1},{"failures":[],"tindex":"fae54753-da7b-11e4-acca-0362706de536","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[364],"tindex":"fae54754-da7b-11e4-acca-f7e1d46312de","variableMapping":{"str":"minStr","kmInteger":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"fae54755-da7b-11e4-acca-5192dea1f2a1","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.PREFER","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"fae54756-da7b-11e4-acca-b131deeb45a2","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-2},{"failures":[341,342,343,344,345,346,147,347,150,151,348],"tindex":"fae54757-da7b-11e4-acca-915955bf975a","variableMapping":{"high":"encoded","guess":"relationFlags","low":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"fae54758-da7b-11e4-acca-453b7db3cd0b","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[349],"tindex":"fae5bc89-da7b-11e4-acca-d3a480d1190c","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[],"tindex":"fae5bc8a-da7b-11e4-acca-e5396acdebcc","variableMapping":{"newName":"val","name":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[365],"tindex":"fae5bc8b-da7b-11e4-acca-0d4588395b91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"fae5bc8c-da7b-11e4-acca-69ec0ddbb89b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"fae5bc8d-da7b-11e4-acca-7571968783e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[157,160],"tindex":"fae5e39e-da7b-11e4-acca-df84c4357a4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"fae5e39f-da7b-11e4-acca-85cca6993d6d","variableMapping":{"max":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[],"tindex":"fae5e3a0-da7b-11e4-acca-db1c88ece25c","variableMapping":{"directionBitMask":"encoded","flags":"encoded","dir":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[366,367,146,357],"tindex":"fae5e3a1-da7b-11e4-acca-2512fdcb47f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:457","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[81,83,84,88,91,92,38,101,103],"tindex":"fae5e3a2-da7b-11e4-acca-8793827c0cec","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"fae5e3a3-da7b-11e4-acca-e3ecb477731b","variableMapping":{"elem":"nodeLowLink","size":"start","keys":"nodeLowLink","i":"start","key":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:158","type":"CtWhileImpl","sourcecode":"while ((int * 2) <= (int)) {\n    int int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n        int = int;\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"fae5e3a4-da7b-11e4-acca-7fa455488d59","variableMapping":{"cap":"com.graphhopper.routing.ch.PrepareEncoder.scFwdDir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:41","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":0},{"failures":[116,117,118,119,120,121,368,122,123,126,128,131],"tindex":"fae5e3a5-da7b-11e4-acca-57db5d54b2c7","variableMapping":{"r":"midLat","com.graphhopper.util.AngleCalc.PI_4":"midLat","x":"lat","angle":"lat","absY":"lat","com.graphhopper.util.AngleCalc.PI3_4":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"fae5e3a6-da7b-11e4-acca-27e6dc3ba1c8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"fae631c7-da7b-11e4-acca-df7ca51b98f8","variableMapping":{"latSimilar":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":0},{"failures":[],"tindex":"fae631c8-da7b-11e4-acca-6381c454f362","variableMapping":{"hash":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"fae631c9-da7b-11e4-acca-a77cb6764558","variableMapping":{"shift":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":0},{"failures":[369,370,135,371,354],"tindex":"fae631ca-da7b-11e4-acca-4905afa5ddf0","variableMapping":{"mGarbage":"blockByDefault"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[157],"tindex":"fae631cb-da7b-11e4-acca-513df8e50ad4","variableMapping":{"r":"shortTripsSpeed","x":"longTripsSpeed","absY":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[102,372,373,374,375,376,377,378,379,380,381,382,383,384,2,4,5,6,7,8,9,10,11,12,13,14,15,16,42,17,18,19,21,22,23,24,25,385,386,387,388,389,390,391,392,393,394,168,189,194,195,200,203,26,27,28,211,232,238,243,246,50,51,52,63,64,65,395,396,397,398,399,400,401,402,403,404,405,406,407,408,29,30,255,276,282,287,290,32,33,34,303,324,330,335,338,409,410,411,412],"tindex":"fae631cc-da7b-11e4-acca-5b46421786b9","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"fae658dd-da7b-11e4-acca-1d7b364525be","variableMapping":{"cap":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"fae658de-da7b-11e4-acca-31223c310717","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"fae658df-da7b-11e4-acca-53dd26581c2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"fae658e0-da7b-11e4-acca-ab31499da818","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"fae658e1-da7b-11e4-acca-c11338856a6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[],"tindex":"fae658e2-da7b-11e4-acca-8bc62d545c33","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"closed","v":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"fae658e3-da7b-11e4-acca-059b557b1ddc","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"fae658e4-da7b-11e4-acca-298ce4995da6","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"fae658e5-da7b-11e4-acca-5717df0cf0bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:145","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"fae658e6-da7b-11e4-acca-af2c5bfae4b6","variableMapping":{"equalNormedDelta":"lon","tmpNormedDist":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:924","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[413,414,163,415,9,416],"tindex":"fae658e7-da7b-11e4-acca-eb0ff4bd197c","variableMapping":{"i":"nextTurnBit","to":"nextTurnBit","lonSize":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[341,342,343,344,345,346,147,347,150,151,348],"tindex":"fae658e8-da7b-11e4-acca-cf92e2ad84c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":-1},{"failures":[],"tindex":"fae658e9-da7b-11e4-acca-3f14688858b5","variableMapping":{"high":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[154],"tindex":"fae658ea-da7b-11e4-acca-6925d075d8fd","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[85,86,87,102,103,105],"tindex":"fae7434b-da7b-11e4-acca-9b7d63ff26ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"fae7434c-da7b-11e4-acca-65e8a6f21256","variableMapping":{"val":"i","com.graphhopper.coll.SparseIntIntArray.DELETED":"size","keys":"elem","values":"elem","i":"size","o":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:134","type":"CtIfImpl","sourcecode":"if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n    if (int != int) {\n        int[][int] = int[][int];\n        int[][int] = int;\n    } \n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"fae7434d-da7b-11e4-acca-8f06cb69bebc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:54","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[81,82,417,351,352,83,84,418,419,85,86,87,88,89,90,91,92,93,94,35,95,97,36,37,98,99,38,101,102,103,104,105,17,18,19,20,21,23,24,79],"tindex":"fae7434e-da7b-11e4-acca-73493c57d0fb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"fae7434f-da7b-11e4-acca-9d0d93d38092","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[420,366,343,421,422,423,367,346,424,425,347,426,109,151,357,348,361,362],"tindex":"fae74350-da7b-11e4-acca-4bc13103ce79","variableMapping":{"systemProperty":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[427,428,429,341,342,430,369,366,431,432,343,421,111,422,433,434,344,345,435,370,367,436,437,346,424,113,425,135,138,142,144,147,371,438,439,347,426,114,149,109,150,151,354,357,358,359,348,361,115,362,152,154,155,156,157,1,159,160,0,2,3,4,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,23,24,25,350],"tindex":"fae74351-da7b-11e4-acca-efb292326efa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":100,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":373,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":32,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.reader.OSMReaderTest.testFerry":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":110,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":51,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":42,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":221,"com.graphhopper.coll.CompressedArrayTest.testCompress":117,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":290,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":189,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":266,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":395,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":418,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":81,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":95,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":391,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":347,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":46,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":428,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":94,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":64,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":26,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":124,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":85,"com.graphhopper.GraphHopperTest.testLoadOSM":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":65,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":167,"com.graphhopper.reader.OSMReaderTest.testSort":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":421,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":28,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":285,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":29,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":202,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":378,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":242,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":328,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":262,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":206,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":211,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":54,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":90,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":225,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":231,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":320,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":33,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":322,"com.graphhopper.coll.CompressedArrayTest.testCompress2":116,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":275,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":222,"com.graphhopper.GraphHopperAPITest.testLoad":79,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":302,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":135,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":267,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":257,"com.graphhopper.storage.LevelGraphStorageTest.testClone":307,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":364,"com.graphhopper.reader.OSMReaderTest.testBarriers":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":47,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":414,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":173,"com.graphhopper.util.GHUtilityTest.testCopy":394,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":359,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":114,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":407,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":213,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":141,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":434,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":286,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":226,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":437,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":174,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":253,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":412,"com.graphhopper.util.InstructionListTest.testWayList2":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":70,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":291,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":341,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":245,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":420,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":383,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":413,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":223,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":92,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":256,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":7,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":102,"com.graphhopper.coll.OSMIDMapTest.testGet":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":220,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":142,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":324,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":57,"com.graphhopper.storage.RAMDataAccessTest.testCopy":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":248,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":195,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":369,"com.graphhopper.storage.RAMDataAccessTest.testSegments":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":98,"com.graphhopper.reader.OSMReaderTest.testMain":4,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":230,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":125,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":111,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":154,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":208,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":314,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":43,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":318,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":339,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":315,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":235,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":433,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":321,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":14,"com.graphhopper.storage.StorablePropertiesTest.testStore":31,"com.graphhopper.storage.GraphHopperStorageTest.testClone":259,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":160,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":1,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":269,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":175,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":358,"com.graphhopper.util.BitUtilLittleTest.testToFloat":389,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":337,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":308,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":188,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":424,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":400,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":374,"com.graphhopper.GraphHopperTest.testFootOnly":24,"com.graphhopper.util.BitUtilLittleTest.testToInt":390,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":146,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":157,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":184,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":405,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":372,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":63,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":118,"com.graphhopper.reader.OSMReaderTest.testWithBounds":13,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":113,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":402,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":244,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":376,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":190,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":304,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":300,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":234,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":158,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":227,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":255,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":87,"com.graphhopper.util.BitUtilLittleTest.testToBitString":388,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":288,"com.graphhopper.util.InstructionListTest.testWayList":392,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":430,"com.graphhopper.GraphHopperAPITest.testDisconnected179":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":176,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":368,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":171,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":367,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":204,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":261,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":238,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":279,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":84,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":161,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":335,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":355,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":209,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":104,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":254,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":251,"com.graphhopper.routing.PathTest.testWayList":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":356,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":180,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":349,"com.graphhopper.coll.OSMIDMapTest.testGet2":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":105,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":432,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":272,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":218,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":260,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":130,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":319,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":55,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":370,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":193,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":126,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":371,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":247,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":78,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":112,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":377,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":384,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":207,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":354,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":228,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":106,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":411,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":194,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":0,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":25,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":334,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":366,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":224,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":179,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":35,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":360,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":36,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":164,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":152,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":426,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":99,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":52,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":219,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":168,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":229,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":439,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":415,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":423,"com.graphhopper.reader.OSMReaderTest.testFoot":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":192,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":381,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":133,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":338,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":144,"com.graphhopper.reader.OSMReaderTest.testOneWay":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":68,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":268,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":283,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":241,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":438,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":399,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":186,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":351,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":419,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":398,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":182,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":252,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":71,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":348,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":362,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":9,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":205,"com.graphhopper.util.SimpleIntDequeTest.testPush":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":436,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":66,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":284,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":310,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":162,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":276,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":316,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":60,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":404,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":215,"com.graphhopper.GraphHopperTest.testPrepareOnly":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":101,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":170,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":11,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":297,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":280,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":350,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":139,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":185,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":134,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":333,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":331,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":27}}]
