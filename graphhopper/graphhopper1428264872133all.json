[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"tindex":"5fcb8089-dbd0-11e4-a71f-2f57f017eca4","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"5fcd072a-dbd0-11e4-a71f-9d07c54c0c34","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[345],"tindex":"5fcd072b-dbd0-11e4-a71f-7b4728b3573d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"5fcd072c-dbd0-11e4-a71f-938c2554b032","variableMapping":{"str":"highway","lat":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:194","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    java.lang.String += \"N\";\nelse\n    java.lang.String += \"S\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[11,12,27,28,29,31,32,33,34,35,36,37,38,39,44,45,47,48,49,50,51,52,56,57,58,59,60,61,62,63,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,142,143,144,145,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,175,177,180,181,182,183,184,185,186,187,188,191,192,194,195,196,197,199,202,203,204,205,206,209,213,214,217,218,219,220,221,222,223,225,227,230,231,232,233,234,235,236,237,238,241,242,244,245,246,247,249,252,253,254,255,256,257,258,259,262,263,264,265,266,267,268,270,272,275,276,277,278,279,280,281,282,283,286,287,289,290,291,292,294,297,298,299,300,301,302,305,306,307,308,309,310,311,313,315,318,319,320,321,322,323,324,325,326,329,330,332,333,334,335,337,340,341,342,343],"tindex":"5fceb4dd-dbd0-11e4-a71f-efb1cc2b3809","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"5fceb4de-dbd0-11e4-a71f-ad79120b611d","variableMapping":{"width":"nextNodeBit","latSimilar":"encoderCount","lonSimilar":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"5fceb4df-dbd0-11e4-a71f-e9fb46154c2e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[57,59,60,61,63,65,67,68,213,214,219,230,231,232,234,238,242,248],"tindex":"5fceb4e0-dbd0-11e4-a71f-814840d75a42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"5fceb4e1-dbd0-11e4-a71f-0d1d60b7b7af","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[0,2,3,4,6,8,9,13,15,16,17,18,19,20,21,22,23,24,25,26,29,33,36,39,42,89,97,98,102,346,347,348,349,350,351,352,353,126,128,153,155,168,189,194,195,200,203,214,218,239,245,250,253,354,256,259,263,284,290,295,298,302,306,327,333,338,341,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"tindex":"5fceb4e2-dbd0-11e4-a71f-93172454303a","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[373],"tindex":"5fceb4e3-dbd0-11e4-a71f-ad8b25e04718","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"5fceb4e4-dbd0-11e4-a71f-8bdcc7d9ad19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"5fceb4e5-dbd0-11e4-a71f-a3e3271ced99","variableMapping":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","osmFile":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,374,375,376,377,378,379,380,381,382,383,78,82,83,86,108,109,384,385,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,386,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"5fcedaf6-dbd0-11e4-a71f-bf4d7c4ece28","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[],"tindex":"5fcedaf7-dbd0-11e4-a71f-034afcc0d000","variableMapping":{"len":"edgeEntryBytes","i":"lastEdgeIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[2,3,6,55,57,60,61,63,64,68,69,70,71,72,73,74,75,76,77,79,81,82,83,84,85,86,88,89,90,91,92,208,214,238,247,252],"tindex":"5fcedaf8-dbd0-11e4-a71f-67bb1773d1c8","variableMapping":{"edgeId":"edge","nodeId":"nodeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-1},{"failures":[373],"tindex":"5fcedaf9-dbd0-11e4-a71f-2b72243bd5d8","variableMapping":{"str":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"5fcedafa-dbd0-11e4-a71f-a7a6a386d86d","variableMapping":{"entries":"mKeys"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:183","type":"CtAssignmentImpl","sourcecode":"this.int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":0},{"failures":[],"tindex":"5fcedafb-dbd0-11e4-a71f-97f4f5038b75","variableMapping":{"str":"this","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:95","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Boolean.java.lang.Boolean.parseBoolean(java.lang.String);\n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"5fcedafc-dbd0-11e4-a71f-c7107a0ee6b6","variableMapping":{"radiusInMeter":"minLon","com.graphhopper.util.DistanceCalcEarth.C":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"5fcedafd-dbd0-11e4-a71f-5b4045614e71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[387],"tindex":"5fcedafe-dbd0-11e4-a71f-8dc536190097","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"5fcedaff-dbd0-11e4-a71f-05720193e081","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"5fcedb00-dbd0-11e4-a71f-6f9c8104f4e2","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":0},{"failures":[3,6,57,63,68,70,71,72,73,74,75,76,77,79,82,83,84,85,86,88,89,90,91,92],"tindex":"5fcedb01-dbd0-11e4-a71f-459d66e2acf4","variableMapping":{"this":"this","finishedFrom":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[20,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414],"tindex":"5fcf0212-dbd0-11e4-a71f-a944c72d4bfe","variableMapping":{"encoded":"value","backwardBit":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[415],"tindex":"5fcf0213-dbd0-11e4-a71f-55e121750c4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"5fcf0214-dbd0-11e4-a71f-9957fee8b202","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[55,63,64,71,74,75,86,88,90],"tindex":"5fcf0215-dbd0-11e4-a71f-eb771796a8e9","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[47,51,52],"tindex":"5fcf2926-dbd0-11e4-a71f-0fd156707448","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"start","nextEdge":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[],"tindex":"5fcf2927-dbd0-11e4-a71f-91d4da04bb4b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[20],"tindex":"5fcf2928-dbd0-11e4-a71f-efb380ba264c","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"5fcf2929-dbd0-11e4-a71f-d585be5b213a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"5fcf292a-dbd0-11e4-a71f-27f05129b2ac","variableMapping":{"java.lang.Integer.MAX_VALUE":"dLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[0,1,2,3,6,7,9,57,59,63,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,148,206],"tindex":"5fcf292b-dbd0-11e4-a71f-25cf6f1d58d3","variableMapping":{"numTiles":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[],"tindex":"5fcf292c-dbd0-11e4-a71f-b95f4aced74e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[416],"tindex":"5fcf292d-dbd0-11e4-a71f-91e3760c5262","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[2,3,6,9,76,78,82,83,85,86,89,102,212],"tindex":"5fcf503e-dbd0-11e4-a71f-894dda2c14bd","variableMapping":{"start":"I_LEVEL","delta":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"5fcf503f-dbd0-11e4-a71f-7552e868a3a1","variableMapping":{"instruction":"obj"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[417,418,419,420,421],"tindex":"5fcf5040-dbd0-11e4-a71f-ad0f31d556f7","variableMapping":{"acceptBit":"directionBitMask","ferryBit":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"status":-1},{"failures":[],"tindex":"5fcf5041-dbd0-11e4-a71f-6f13f077707d","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"5fcf5042-dbd0-11e4-a71f-e3d886e1e777","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":0},{"failures":[],"tindex":"5fcf5043-dbd0-11e4-a71f-9b494a7660b5","variableMapping":{"silent":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"5fcf5044-dbd0-11e4-a71f-9f85f7ce5233","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"toSize","speed":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"5fcf5045-dbd0-11e4-a71f-4de07df4733e","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"i","speed":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[11,12,14,26,32,35,422,47,51,52,55,57,58,63,64,65,68,69,70,74,77,80,82,83,92,105,107,108,168,169,170,177,179,192,197,200,204,214,218,219,220,227,229,242,247,250,254,256,259,263,264,265,272,274,287,292,295,299,302,306,307,308,315,317,330,335,338,342],"tindex":"5fcf5046-dbd0-11e4-a71f-1d716af572da","variableMapping":{"lastKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:85","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"5fcf5047-dbd0-11e4-a71f-8df8048ef9de","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"5fcf5048-dbd0-11e4-a71f-efac93470002","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"5fcf5049-dbd0-11e4-a71f-af8e7765824a","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"segmentsToCreate","sign":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"5fcf504a-dbd0-11e4-a71f-4371c1646f7b","variableMapping":{"closestNode":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"5fcf504b-dbd0-11e4-a71f-0b5290c41c6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"5fcf504c-dbd0-11e4-a71f-b756e524b9a1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,179,194,206,207,208,209,210,212,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,423,424,369,425,426,370,371,372],"tindex":"5fcf775d-dbd0-11e4-a71f-a53624b4fc1c","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-1},{"failures":[],"tindex":"5fcf775e-dbd0-11e4-a71f-e7846395d4cf","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"5fcf775f-dbd0-11e4-a71f-efe14f1dd9ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDirectory:31","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDirectory.this(\"\", false)"},"status":-2},{"failures":[],"tindex":"5fcf7760-dbd0-11e4-a71f-03316e50079f","variableMapping":{"name":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"5fcf7761-dbd0-11e4-a71f-a3bc78f9a18c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"5fcf7762-dbd0-11e4-a71f-3d7e084d8817","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"5fcf7763-dbd0-11e4-a71f-d33315560f63","variableMapping":{"size":"cap","hash":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[207,212],"tindex":"5fcf7764-dbd0-11e4-a71f-1f4a53e00d47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[0,1,2,3,4,5,6,427,7,8,9,10,428,11,12,13,14,15,16,17,18,19,20,21,429,22,23,24,25,430,26,431,432,433,434,435,27,436,437,438,439,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,349,350,351,352,353,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,440,441,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,442,443,206,207,208,209,210,211,212,213,214,215,216,217,444,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,445,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,446,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,447,448,344],"tindex":"5fcf9e75-dbd0-11e4-a71f-97aeffe9bef9","variableMapping":{"daType":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-1},{"failures":[47,50,170,180,181,183,187,188,195,196,220,230,231,233,237,238,245,246,265,275,276,278,282,283,290,291,308,318,319,321,325,326,333,334],"tindex":"5fcf9e76-dbd0-11e4-a71f-1d9e9b63bb57","variableMapping":{"err":"mSize","dLat":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"5fcf9e77-dbd0-11e4-a71f-ab677e8579b5","variableMapping":{"closestEdge":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:138","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":0},{"failures":[],"tindex":"5fcf9e78-dbd0-11e4-a71f-1b418c6d83b7","variableMapping":{"segmentSizeInBytes":"high","indexDivisor":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[374,375,376,377,378,379,380,381,382,383,384,385,386],"tindex":"5fcf9e79-dbd0-11e4-a71f-b16b764a8780","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[5,9,14,391,449,450],"tindex":"5fcf9e7a-dbd0-11e4-a71f-17583c7465b8","variableMapping":{"nodeId":"encoded","nodeIdOffset":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[209,240],"tindex":"5fcf9e7b-dbd0-11e4-a71f-e19a89ac4d0f","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"I_SKIP_EDGE1","speed":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"5fcf9e7c-dbd0-11e4-a71f-d94307ddb1d2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[],"tindex":"5fcf9e7d-dbd0-11e4-a71f-a579f13e827a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"5fcf9e7e-dbd0-11e4-a71f-5d6334e8ead3","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[451],"tindex":"5fcf9e7f-dbd0-11e4-a71f-b1ea78398040","variableMapping":{"str":"hourStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:195","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"5fcf9e80-dbd0-11e4-a71f-f3f13891dd21","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"5fcf9e81-dbd0-11e4-a71f-a3e7534b8c13","variableMapping":{"radiusInMeter":"fwdIncline","com.graphhopper.util.DistanceCalcEarth.C":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"5fcfc592-dbd0-11e4-a71f-dd9b0f6f478c","variableMapping":{"nodes":"length","adj":"length","base":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[],"tindex":"5fcfc593-dbd0-11e4-a71f-e9ff7f2751e8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[373,452,453],"tindex":"5fcfc594-dbd0-11e4-a71f-87b942789658","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"5fcfc595-dbd0-11e4-a71f-bbbd9108cf7d","variableMapping":{"newAdjIndex":"length","newBaseIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"5fcfc596-dbd0-11e4-a71f-c9481643a5e5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"5fcfc597-dbd0-11e4-a71f-27c33665e76f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"5fcfc598-dbd0-11e4-a71f-75fffbf8526d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"5fcfc599-dbd0-11e4-a71f-09d9e5883a17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[],"tindex":"5fcfc59a-dbd0-11e4-a71f-a580270b668f","variableMapping":{"cp":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[],"tindex":"5fcfc59b-dbd0-11e4-a71f-958816730840","variableMapping":{"size":"guess","from":"high","end":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[454,415,455],"tindex":"5fcfc59c-dbd0-11e4-a71f-4f387929e759","variableMapping":{"cap":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[415],"tindex":"5fcfc59d-dbd0-11e4-a71f-23a4c2357cca","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[],"tindex":"5fcfc59e-dbd0-11e4-a71f-5b03181f453b","variableMapping":{"empty":"blockByDefault"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[0,1,2,3,4,5,6,427,7,8,10,428,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,430,26,27,456,28,29,30,31,32,33,34,35,36,37,38,39,457,458,459,40,41,42,43,460,44,45,461,389,462,463,418,464,46,449,465,466,450,416,467,468,469,470,471,472,345,473,474,454,475,476,477,478,422,479,480,481,482,47,48,49,50,51,52,455,55,56,483,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,484,104,105,106,107,108,109,485,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,444,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,445,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,446,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"5fcfecaf-dbd0-11e4-a71f-c354f898fb9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:138","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"secondary\") , java.util.Map<java.lang.String, java.lang.Integer>.get(\"motorway\"))"},"status":-1},{"failures":[429,388,390],"tindex":"5fcfecb0-dbd0-11e4-a71f-31add33ee5b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"5fcfecb1-dbd0-11e4-a71f-f3e77fcb8598","variableMapping":{"flags2":"internalFlags","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit","flags1":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"5fcfecb2-dbd0-11e4-a71f-69b337cfe7d9","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"5fcfecb3-dbd0-11e4-a71f-dd7543377795","variableMapping":{"size":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":0},{"failures":[],"tindex":"5fcfecb4-dbd0-11e4-a71f-c36ae29c71a6","variableMapping":{"i":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"5fcfecb5-dbd0-11e4-a71f-bdf0830a2b3e","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":0},{"failures":[0,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,374,375,376,377,378,379,380,381,382,383,78,82,83,86,108,109,384,385,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,386,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"5fcfecb6-dbd0-11e4-a71f-c9c7e4232f10","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[392,393,395,399,401,404,405,407,410,411,413],"tindex":"5fcfecb7-dbd0-11e4-a71f-fb52972f2aeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"5fcfecb8-dbd0-11e4-a71f-7fa0f33e42ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"5fcfecb9-dbd0-11e4-a71f-0d14933de63c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:625","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"5fcfecba-dbd0-11e4-a71f-a9e7c9dde41f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[417,418,468,419,420,421],"tindex":"5fcfecbb-dbd0-11e4-a71f-3359ed4a732c","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":244,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":87,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":211,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":455,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":112,"com.graphhopper.GraphHopperAPITest.testNoLoad":485,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":105,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":106,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":154,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":413,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":273,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":432,"com.graphhopper.coll.CompressedArrayTest.testCompress":385,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":59,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":189,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":65,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":55,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":79,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":96,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":401,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":94,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":217,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":399,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":452,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":423,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":77,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":127,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":298,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":405,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":256,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":381,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":68,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":134,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":128,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":463,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":260,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":356,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":336,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":302,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":202,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":35,"com.graphhopper.routing.DijkstraTest.initializationError":457,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":294,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":354,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":243,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":313,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":257,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":410,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":396,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":158,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":83,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":156,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":73,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":220,"com.graphhopper.coll.OSMIDMapTest.testGetLong":352,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":283,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":235,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":214,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":237,"com.graphhopper.coll.CompressedArrayTest.testCompress2":384,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":373,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":274,"com.graphhopper.GraphHopperAPITest.testLoad":108,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":444,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":369,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":418,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":318,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":308,"com.graphhopper.storage.LevelGraphStorageTest.testClone":222,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":451,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":76,"com.graphhopper.util.GHUtilityTest.testCopy":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":173,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":167,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":114,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":367,"com.graphhopper.routing.PathTest.testFindInstruction":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":400,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":265,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":107,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":450,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":251,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":111,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":337,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":322,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":61,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":278,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":462,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":460,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":174,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":305,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":372,"com.graphhopper.util.InstructionListTest.testWayList2":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":135,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":342,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":404,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":403,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":481,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":53,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":303,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":226,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":275,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":75,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":307,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":355,"com.graphhopper.routing.AStarTest.initializationError":458,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":89,"com.graphhopper.coll.OSMIDMapTest.testGet":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":272,"com.graphhopper.routing.PathBidirRefTest.testExtract":44,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":416,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":239,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":351,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":162,"com.graphhopper.storage.RAMDataAccessTest.testCopy":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":195,"com.graphhopper.storage.RAMDataAccessTest.testSegments":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":420,"com.graphhopper.util.GHUtilityTest.testSort2":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":84,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":215,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":406,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":163,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":242,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":470,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":261,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":229,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":233,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":254,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":398,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":32,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":287,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":453,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":236,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":25,"com.graphhopper.storage.StorablePropertiesTest.testStore":447,"com.graphhopper.storage.GraphHopperStorageTest.testClone":310,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":475,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":442,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":474,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":175,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":209,"com.graphhopper.routing.PathTest.testTime":41,"com.graphhopper.util.BitUtilLittleTest.testToFloat":347,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":252,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":479,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":188,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":241,"com.graphhopper.reader.OSMReaderTest.testRelation":429,"com.graphhopper.util.GHUtilityTest.testSortDirected":104,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":440,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":360,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":31,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.util.BitUtilLittleTest.testToInt":348,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":345,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":157,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":184,"com.graphhopper.search.NameIndexTest.testCreate":439,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":365,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":28,"com.graphhopper.routing.QueryGraphTest.testOneWay":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":138,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":377,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":126,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":374,"com.graphhopper.reader.OSMReaderTest.testWithBounds":24,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":368,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":190,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":467,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":388,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":219,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":216,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":402,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":286,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":279,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":306,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":70,"com.graphhopper.util.BitUtilLittleTest.testToBitString":346,"com.graphhopper.util.InstructionListTest.testWayList":97,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":339,"com.graphhopper.GraphHopperAPITest.testDisconnected179":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":176,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":378,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":171,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":204,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":312,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":144,"com.graphhopper.routing.util.EncodedValueTest.testSwap":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":66,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":330,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":81,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":64,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":250,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":476,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":407,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":91,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":446,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":408,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":301,"com.graphhopper.routing.PathTest.testWayList":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":472,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":415,"com.graphhopper.coll.OSMIDMapTest.testGet2":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":92,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":247,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":433,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":285,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":323,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":270,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":159,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":160,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":363,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":421,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":392,"com.graphhopper.util.GHUtilityTest.testSort":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":193,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":383,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":419,"com.graphhopper.search.NameIndexTest.testPut":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":299,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":445,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":113,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":152,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":119,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":370,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":54,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":117,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":417,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":434,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":482,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":280,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":47,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":371,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":232,"com.graphhopper.routing.PathTest.testFound":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":194,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":10,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":391,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":249,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":387,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":208,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":276,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":438,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":179,"com.graphhopper.util.InstructionListTest.testEmptyList":95,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":78,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":422,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":469,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":468,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":85,"com.graphhopper.reader.PrinctonReaderTest.testRead":11,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":155,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":178,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":353,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":168,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":281,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":409,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":192,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":435,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":132,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":253,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":380,"com.graphhopper.reader.OSMReaderTest.testOneWay":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":133,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":319,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":334,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":293,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":359,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":186,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":60,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":386,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":454,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":58,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":120,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":358,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":182,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":30,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":304,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":430,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":441,"com.graphhopper.routing.PathBidirRefTest.testExtract2":45,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":426,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":69,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":136,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":395,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":436,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":332,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":121,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":205,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":449,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":129,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":335,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":484,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":477,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":327,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":393,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":166,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":172,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":461,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":478,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":267,"com.graphhopper.storage.StorablePropertiesTest.testLoad":448,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":88,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":170,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":210,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":99,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":331,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":465,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":185,"com.graphhopper.routing.AStarBidirectionTest.initializationError":459,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":480,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":248,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":246,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":259}}]
