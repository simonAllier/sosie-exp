[{"failures":[0,1,2,3,4],"tindex":"8e57b932-db8e-11e4-a374-254f34c87beb","variableMapping":{"orientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"8e58caa3-db8e-11e4-a374-87ec4c2a4319","variableMapping":{"arr":"elem","length":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:57","type":"CtReturnImpl","sourcecode":"return int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,1,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,2,61,62,63,64,3,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,4,125],"tindex":"8e58f1b4-db8e-11e4-a374-1349aca3bd8b","variableMapping":{"red":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"8e58f1b5-db8e-11e4-a374-035abd5743aa","variableMapping":{"dist":"minLon","com.graphhopper.util.DistanceCalcEarth.R":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[108],"tindex":"8e58f1b6-db8e-11e4-a374-83b96d069b94","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"8e58f1b7-db8e-11e4-a374-23bb4ab74aeb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[10,87],"tindex":"8e58f1b8-db8e-11e4-a374-3f1ff3877bdf","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[126,127,128,129,130,131,132,133,134,135],"tindex":"8e58f1b9-db8e-11e4-a374-bd9ec32244b2","variableMapping":{"intVal":"allBits","degree":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[25,41,48,102],"tindex":"8e58f1ba-db8e-11e4-a374-5388c5397a49","variableMapping":{"red":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[136],"tindex":"8e58f1bb-db8e-11e4-a374-01efb55671a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-1},{"failures":[],"tindex":"8e58f1bc-db8e-11e4-a374-03e5306d9ba9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"8e58f1bd-db8e-11e4-a374-39d11be3d9a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8e58f1be-db8e-11e4-a374-871bac0f1e4e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[82],"tindex":"8e58f1bf-db8e-11e4-a374-154cbf08815e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"8e58f1c0-db8e-11e4-a374-d781ede97c43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:451","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[137,138],"tindex":"8e58f1c1-db8e-11e4-a374-7d41c8a4cf8b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-1},{"failures":[139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"8e5918d2-db8e-11e4-a374-4bf59ad032a2","variableMapping":{"maxLeafEntries":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"8e5918d3-db8e-11e4-a374-adda1649cdbe","variableMapping":{"mask":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-2},{"failures":[],"tindex":"8e5918d4-db8e-11e4-a374-2bf8c96701a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:310","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":0},{"failures":[],"tindex":"8e5918d5-db8e-11e4-a374-656706363477","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"8e5918d6-db8e-11e4-a374-3f775d8eb1d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[159],"tindex":"8e5918d7-db8e-11e4-a374-b5a0540d1989","variableMapping":{"indexWithMaxDist":"i","lastIndex":"i","fromIndex":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[82,108,109,110,111],"tindex":"8e5918d8-db8e-11e4-a374-bb9d939a4e11","variableMapping":{"speedEncoder":"reverseSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-1},{"failures":[],"tindex":"8e5918d9-db8e-11e4-a374-034cdf61edd2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"8e5918da-db8e-11e4-a374-dfdf190da9c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"8e5918db-db8e-11e4-a374-6b58b454d217","variableMapping":{"err":"toSize","tmpErr":"toSize","y1":"toSize","dLon":"toSize","sLat":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[66,112,4,125],"tindex":"8e5918dc-db8e-11e4-a374-5792e85f22ba","variableMapping":{"systemProperty":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[],"tindex":"8e5918dd-db8e-11e4-a374-b38a2291a3ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"))"},"status":-2},{"failures":[],"tindex":"8e5918de-db8e-11e4-a374-4104db86b91d","variableMapping":{"workerThreads":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[13,69,90],"tindex":"8e5918df-db8e-11e4-a374-43c417c1f57e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:146","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"Empty edge cannot happen\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-1},{"failures":[8,12,30,47,85,89,105,107,121],"tindex":"8e593ff0-db8e-11e4-a374-ff3029d8e05b","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"8e593ff1-db8e-11e4-a374-d1ea01c74f4e","variableMapping":{"min":"child","tmpSize":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-2},{"failures":[125],"tindex":"8e593ff2-db8e-11e4-a374-ebf1cd05ed5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:165","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"8e593ff3-db8e-11e4-a374-25c9dcd6eae1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-2},{"failures":[],"tindex":"8e593ff4-db8e-11e4-a374-016c3bf9e561","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"8e593ff5-db8e-11e4-a374-bb4944e9b6b1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"8e593ff6-db8e-11e4-a374-ffd8d389815f","variableMapping":{"key":"location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[],"tindex":"8e593ff7-db8e-11e4-a374-5f0790ae89af","variableMapping":{"red":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":0},{"failures":[161,162,163],"tindex":"8e593ff8-db8e-11e4-a374-07bdc7d10cc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[],"tindex":"8e593ff9-db8e-11e4-a374-2f016f38291d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"8e593ffa-db8e-11e4-a374-d1f73952da23","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"speed","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":0},{"failures":[],"tindex":"8e593ffb-db8e-11e4-a374-1bd4c106abdb","variableMapping":{"incEleSum":"maxLat","incDist2DSum":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[0,164,2,3,65,165,4],"tindex":"8e593ffc-db8e-11e4-a374-5fb19a1be105","variableMapping":{"x1":"speed","x2":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"8e593ffd-db8e-11e4-a374-5d1fa0078999","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-2},{"failures":[],"tindex":"8e593ffe-db8e-11e4-a374-d79e25ba959d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"8e593fff-db8e-11e4-a374-878867a95278","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[161,166,5,167,168,169,170,171,172,173,174,175,176,177,178,139,179,180,181,182,183,184,185,186,187,188,140,189,190,191,192,193,141,194,195,196,197,198,199,200,142,143,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,144,269,270,271,272,273,274,275,276,277,278,145,279,280,281,282,283,146,284,285,286,287,288,289,137,147,148,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,149,307,308,309,310,311,312,313,314,315,316,150,317,318,319,320,321,151,322,323,324,325,326,327,328,152,153,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,154,348,349,350,351,352,353,354,355,356,357,155,358,359,360,361,362,156,363,364,365,366,367,368,369,157,158,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,0,389,390,391,392,393,394,395,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,1,159,396,43,160,397,398,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,2,61,62,63,64,3,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,399,108,400,401,109,402,403,404,405,406,407,408,409,410,411,412,413,414,162,415,416,417,163,418,110,136,419,420,421,422,423,424,425,426,111,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,165,458,459,460,461,462,463,464,138,465,466,112,113,114,115,116,117,118,119,120,121,122,123,124,4,125,467,468,469,470,471],"tindex":"8e596710-db8e-11e4-a374-3743ea2b3b81","variableMapping":{"val":"com.graphhopper.routing.util.EncodingManager.CAR","existing":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","key":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[406,162,415,418,110,136,419,422,423,433,435,436,437,439],"tindex":"8e596711-db8e-11e4-a374-2750fc3ca2a6","variableMapping":{"numTiles":"skippedEdge1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[24,40,57,101],"tindex":"8e596712-db8e-11e4-a374-c1469912748f","variableMapping":{"high":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"8e596713-db8e-11e4-a374-493fd5bbf8d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"8e596714-db8e-11e4-a374-271a772acdd2","variableMapping":{"tmp":"speedReverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[472,387,388,0,473,474,475,476,402,403],"tindex":"8e596715-db8e-11e4-a374-3920b63de777","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"8e596716-db8e-11e4-a374-13e1556b62a1","variableMapping":{"nodeId":"shift","mainNodes":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[169,172,173,177,195,142,204,207,221,222,223,238,239,240,477,137,300,301,305,323,152,332,335,478,479,480,481,482,483,484,485,486,487,338,341,342,346,364,157,373,376,488,489,490,491,492,493,494,495,496,381,386,387,388,0,497,498,499,500,501,81,82,402,403,436,444,445,447,448,449,450,451,452,454,455,456,457,165,458,459,460,461,463,464,138,465,112,113,114,115,116,117,118,119,120,122,123,124,4,125,502,503,504,505,506,507,508],"tindex":"8e598e27-db8e-11e4-a374-a11d6d68cbf7","variableMapping":{"bytePos":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"8e598e28-db8e-11e4-a374-eb53aa4a3518","variableMapping":{"d":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[172,177,195,142,204,207,210,211,212,213,215,221,222,223,238,239,240,509,300,305,323,152,332,335,480,481,510,511,484,485,486,338,341,346,364,157,373,376,490,491,512,513,494,495,496,381,386,387,388,497,498,500,501,81,82,402,436,444,445,447,448,449,451,452,455,456,457,165,458,459,461,463,464,138,112,114,115,116,117,118,119,120,122,123,124,4,125],"tindex":"8e598e29-db8e-11e4-a374-9b2bed6e16c7","variableMapping":{"size":"segmentSizePower","delta":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"8e598e2a-db8e-11e4-a374-177e46bf07a8","variableMapping":{"c":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:228","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[105,107],"tindex":"8e598e2b-db8e-11e4-a374-7529f1722a04","variableMapping":{"initLeafSize":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"8e598e2c-db8e-11e4-a374-15bbb4839adb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"8e598e2d-db8e-11e4-a374-7fe2a72242a8","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[7,45,47,84],"tindex":"8e598e2e-db8e-11e4-a374-83be0be587ee","variableMapping":{"arrayLength":"speed","maxGeoRef":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"8e598e2f-db8e-11e4-a374-e171fcd3ba4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"8e598e30-db8e-11e4-a374-e1bca2346d34","variableMapping":{"res":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"8e598e31-db8e-11e4-a374-e3412aaa832d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"8e598e32-db8e-11e4-a374-2922386ffcb0","variableMapping":{"turnCostIndex":"i","nextTurnCostIndex":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"8e598e33-db8e-11e4-a374-4b66ced9ee14","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"8e598e34-db8e-11e4-a374-df16cff3fcb7","variableMapping":{"str":"value","this":"value","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:97","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"8e598e35-db8e-11e4-a374-cbe40bc34de2","variableMapping":{"name":"res"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"8e59b446-db8e-11e4-a374-f12513cd3f15","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[159],"tindex":"8e59b447-db8e-11e4-a374-85b7bcfb1273","variableMapping":{"max":"i","tmpSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[],"tindex":"8e59b448-db8e-11e4-a374-4197b6e86e17","variableMapping":{"ret":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:99","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return \"\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"8e59b449-db8e-11e4-a374-b9257e995732","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"8e59b44a-db8e-11e4-a374-5b711a32af4e","variableMapping":{"initLeafSize":"encoderCount","maxLeafEntries":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[514,515,516,517,518,519,520],"tindex":"8e5a9eab-db8e-11e4-a374-597be4923b57","variableMapping":{"newAdjIndex":"err","newBaseIndex":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"8e5a9eac-db8e-11e4-a374-ad0c61ca369d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[136],"tindex":"8e5a9ead-db8e-11e4-a374-e97947948ca2","variableMapping":{"ret":"from","retBucket":"from","i":"from","bucketSize":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[82],"tindex":"8e5a9eae-db8e-11e4-a374-27ef2bab6bba","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[],"tindex":"8e5a9eaf-db8e-11e4-a374-dfb7fdb68173","variableMapping":{"pointer":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[],"tindex":"8e5ac5c0-db8e-11e4-a374-c95056f0b6cb","variableMapping":{"endIndexPlusOne":"high","frontIndex":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8e5ac5c1-db8e-11e4-a374-e1331c1541a7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[521],"tindex":"8e5ac5c2-db8e-11e4-a374-4f17ef8a2061","variableMapping":{"str":"str","lonInt":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:282","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int < 10 ? \"0\" : \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"8e5ac5c3-db8e-11e4-a374-87b8fee10eae","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[47],"tindex":"8e5ac5c4-db8e-11e4-a374-af93cf33670e","variableMapping":{"algo":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"8e5ac5c5-db8e-11e4-a374-33b1809c1e5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[119],"tindex":"8e5ac5c6-db8e-11e4-a374-677d5d4e3d9e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"8e5ac5c7-db8e-11e4-a374-9d5fe11508fc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"8e5ac5c8-db8e-11e4-a374-45c3f95fcb03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[522],"tindex":"8e5ac5c9-db8e-11e4-a374-43f9da9c7b43","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1063","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[13,69,90,106,119],"tindex":"8e5ac5ca-db8e-11e4-a374-fd138511cebf","variableMapping":{"r":"costs","x":"costs","absY":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"8e5ac5cb-db8e-11e4-a374-9f6cd7e5a65b","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:185","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"8e5ac5cc-db8e-11e4-a374-9dfcd0e22a9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[110,136,111,428,439],"tindex":"8e5b13ed-db8e-11e4-a374-a93324a62b39","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[63],"tindex":"8e5b13ee-db8e-11e4-a374-8bae96603b02","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"8e5b3aff-db8e-11e4-a374-4bfc7969a29d","variableMapping":{"start":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[523,514,515,524,516,517,518,519,520],"tindex":"8e5b3b00-db8e-11e4-a374-afb8746eec36","variableMapping":{"index":"y2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"8e5b3b01-db8e-11e4-a374-5b824442d8db","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[161,162,163],"tindex":"8e5b3b02-db8e-11e4-a374-b3f72fda3e0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[],"tindex":"8e5b3b03-db8e-11e4-a374-952dc3a69682","variableMapping":{"instruction":"obj"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[43],"tindex":"8e5b3b04-db8e-11e4-a374-675d5d604324","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":434,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":445,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":164,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":169,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":262,"com.graphhopper.GraphHopperAPITest.testNoLoad":471,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":268,"com.graphhopper.reader.OSMReaderTest.testFerry":112,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":392,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":393,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":48,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":523,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":222,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":457,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":472,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":355,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":478,"com.graphhopper.coll.CompressedArrayTest.testCompress":127,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":54,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":335,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":411,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":285,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":315,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":218,"com.graphhopper.util.AngleCalcTest.testOrientation":473,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":492,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":416,"com.graphhopper.GraphHopperTest.testPrepare":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":433,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":406,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":111,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":386,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":55,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":391,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":175,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":219,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":397,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":419,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":239,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":376,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":338,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":418,"com.graphhopper.GraphHopperTest.testLoadOSM":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":240,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":399,"com.graphhopper.reader.OSMReaderTest.testSort":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":43,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":342,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":481,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":330,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":300,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":295,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":451,"com.graphhopper.storage.RAMDataAccessTest.testHeader":493,"com.graphhopper.routing.DijkstraTest.initializationError":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":372,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":477,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":199,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":514,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":311,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":339,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":87,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":346,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":39,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":226,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":318,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":224,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":422,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":421,"com.graphhopper.coll.OSMIDMapTest.testGetLong":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":358,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":363,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":192,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":172,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":141,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":475,"com.graphhopper.coll.CompressedArrayTest.testCompress2":126,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":356,"com.graphhopper.GraphHopperAPITest.testLoad":469,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":176,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":72,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":316,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":149,"com.graphhopper.storage.LevelGraphStorageTest.testClone":180,"com.graphhopper.reader.OSMReaderTest.testBarriers":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":347,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":398,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":271,"com.graphhopper.util.GHUtilityTest.testCopy":381,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":424,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":36,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":57,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":264,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":515,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":495,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":51,"com.graphhopper.routing.PathTest.testFindInstruction":403,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":154,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":78,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":389,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":205,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":261,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":331,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":370,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":379,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":413,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":97,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":443,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":272,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":303,"com.graphhopper.util.InstructionListTest.testWayList2":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":247,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":336,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":351,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":375,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":394,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":81,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":301,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":519,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":184,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":479,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":13,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":510,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":357,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":210,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":423,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":117,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":480,"com.graphhopper.routing.AStarTest.initializationError":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":436,"com.graphhopper.coll.OSMIDMapTest.testGet":497,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":354,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":79,"com.graphhopper.routing.PathBidirRefTest.testExtract":440,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":16,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":195,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":499,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":230,"com.graphhopper.storage.RAMDataAccessTest.testCopy":490,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":482,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":378,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":15,"com.graphhopper.storage.RAMDataAccessTest.testSegments":494,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":252,"com.graphhopper.util.GHUtilityTest.testSort2":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":431,"com.graphhopper.reader.OSMReaderTest.testMain":114,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":173,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":156,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":24,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":2,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":343,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":187,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":190,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":208,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":188,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":84,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":193,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":4,"com.graphhopper.storage.StorablePropertiesTest.testStore":487,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":489,"com.graphhopper.storage.GraphHopperStorageTest.testClone":308,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":291,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":66,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":3,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":317,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":40,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":273,"com.graphhopper.routing.PathTest.testTime":109,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":35,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":206,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":71,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":249,"com.graphhopper.reader.OSMReaderTest.testRelation":121,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":284,"com.graphhopper.util.GHUtilityTest.testSortDirected":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":100,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":485,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":447,"com.graphhopper.GraphHopperTest.testFootOnly":138,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":520,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":63,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":211,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":225,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":420,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":524,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":407,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":281,"com.graphhopper.search.NameIndexTest.testCreate":508,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":513,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":444,"com.graphhopper.routing.QueryGraphTest.testOneWay":453,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":250,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":131,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":238,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":128,"com.graphhopper.reader.OSMReaderTest.testWithBounds":124,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":496,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":374,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":396,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":449,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":286,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":105,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":178,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":98,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":58,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":366,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":64,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":360,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":305,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":136,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":333,"com.graphhopper.util.InstructionListTest.testWayList":387,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":14,"com.graphhopper.GraphHopperAPITest.testDisconnected179":470,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":274,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":368,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":95,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":468,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":297,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":459,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":310,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":6,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":326,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":428,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":67,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":204,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":22,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":344,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":26,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":299,"com.graphhopper.routing.PathTest.testWayList":402,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":296,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":278,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":521,"com.graphhopper.coll.OSMIDMapTest.testGet2":498,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":439,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":483,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":201,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":502,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":20,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":320,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":73,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":352,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":228,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":491,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":486,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":92,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":29,"com.graphhopper.util.GHUtilityTest.testSort":382,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":289,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":49,"com.graphhopper.search.NameIndexTest.testPut":506,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":220,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":215,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":88,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":450,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":340,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":464,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":31,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":395,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":503,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":437,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":159,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":137,"com.graphhopper.routing.PathTest.testFound":401,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":108,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":465,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":203,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":522,"com.graphhopper.util.AngleCalcTest.testAtan2":474,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":18,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":155,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":507,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":277,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":313,"com.graphhopper.util.InstructionListTest.testEmptyList":385,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":426,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":232,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":429,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":59,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":432,"com.graphhopper.reader.PrinctonReaderTest.testRead":467,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":223,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":353,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":276,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":267,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":179,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":362,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":509,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":106,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":85,"com.graphhopper.reader.OSMReaderTest.testFoot":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":288,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":455,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":504,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":134,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":244,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":44,"com.graphhopper.reader.OSMReaderTest.testOneWay":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":245,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":150,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":153,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":371,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":52,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":484,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":283,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":312,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":412,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":518,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":409,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":410,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":511,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":516,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":74,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":279,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":446,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":302,"com.graphhopper.routing.PathBidirRefTest.testExtract2":441,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":248,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":266,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":505,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":328,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":257,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":41,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":119,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":517,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":298,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":241,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":329,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":383,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":68,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":323,"com.graphhopper.GraphHopperTest.testFootAndCar":460,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":140,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":30,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":234,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":512,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":270,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":414,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":435,"com.graphhopper.GraphHopperTest.testPrepareOnly":456,"com.graphhopper.GraphHopperTest.testVia":165,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":144,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":122,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":168,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":0,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":327,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":76,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":282,"com.graphhopper.routing.AStarBidirectionTest.initializationError":405,"com.graphhopper.util.AngleCalcTest.testCombined":476,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":202,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":143,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":341}}]
