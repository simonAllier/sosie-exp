[{"failures":[0,1,2,3,4],"tindex":"6e468056-dab4-11e4-920e-b1ab80f7276d","variableMapping":{"iter":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-1},{"failures":[5],"tindex":"6e476ab7-dab4-11e4-920e-0d43d739afaf","variableMapping":{"orientation":"bwSlower","java.lang.Math.PI":"incDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"6e4791c8-dab4-11e4-920e-d3609de1efb2","variableMapping":{"index":"err","entrySize":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:294","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[6],"tindex":"6e4791c9-dab4-11e4-920e-27c2c66041e4","variableMapping":{"id":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"6e4791ca-dab4-11e4-920e-2139c120e6b4","variableMapping":{"periodicUpdates":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":0},{"failures":[7,5,8,9],"tindex":"6e4791cb-dab4-11e4-920e-a93c77c00d2d","variableMapping":{"cap":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"6e4791cc-dab4-11e4-920e-dd50609d31fb","variableMapping":{"size":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[],"tindex":"6e4791cd-dab4-11e4-920e-75e8a2919a89","variableMapping":{"high":"acceptBit","len":"acceptBit","start":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:262","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6e4791ce-dab4-11e4-920e-2d55fc3e8001","variableMapping":{"id":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"6e4791cf-dab4-11e4-920e-e7084cbfca6e","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"6e4791d0-dab4-11e4-920e-b332baa28f36","variableMapping":{"allSegments":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":0},{"failures":[26,27,28],"tindex":"6e4791d1-dab4-11e4-920e-659c4b97037e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[],"tindex":"6e4791d2-dab4-11e4-920e-69baba2e998c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[29,30],"tindex":"6e4791d3-dab4-11e4-920e-c7a837fafb53","variableMapping":{"retBucket":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[10,11,12,31,13,14,32,33,15,16,34,17,18,19,20,21,22,23,24,25],"tindex":"6e47b8e4-dab4-11e4-920e-e9563bc8e532","variableMapping":{"keyIndex":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"6e47b8e5-dab4-11e4-920e-abe110f26d2b","variableMapping":{"level":"removed","lg":"g","polledNode":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:348","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.setLevel(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"6e47b8e6-dab4-11e4-920e-07aecaedb57f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[47,48,49],"tindex":"6e47b8e7-dab4-11e4-920e-0b95d0f5e173","variableMapping":{"elem":"nodeIndex","keys":"nodeIndex","i":"nodes","key":"nodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:180","type":"CtWhileImpl","sourcecode":"while ((int[][(int / 2)]) > int) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[],"tindex":"6e47dff8-dab4-11e4-920e-b9c041098537","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[5],"tindex":"6e47dff9-dab4-11e4-920e-952317992766","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"6e48070a-dab4-11e4-920e-f140c6c0f80a","variableMapping":{"directionBitMask":"encoded","flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,47,65,66,67,48,49,68,5,69,70,71,72,73,74,75,76,77,78,79,26,80,81,82,27,83,8,2,84,85,86,87,88,89,90,91,3,92,93,4,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,31,165,166,167,168,169,13,170,14,32,171,172,173,174,175,176,177,178,179,33,180,181,182,183,184,15,185,16,34,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,28,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"6e48070b-dab4-11e4-920e-19b86082c641","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[67,200,210,211,217,225,226,243,253,254,260,268,269,334,335,336,337,338,339,298,308,309,315,323,324],"tindex":"6e48070c-dab4-11e4-920e-e981583f957c","variableMapping":{"tmpNode":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-1},{"failures":[],"tindex":"6e48070d-dab4-11e4-920e-6575e5c76999","variableMapping":{"this":"g","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1330","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.getAllEdges()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[340],"tindex":"6e48070e-dab4-11e4-920e-1598a1edc80b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"6e48070f-dab4-11e4-920e-55ef582f509a","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[72,80,8,2,103],"tindex":"6e480710-dab4-11e4-920e-050b4a29eb7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"6e480711-dab4-11e4-920e-dd9e6abbb3f9","variableMapping":{"ref":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"6e482e22-dab4-11e4-920e-e1d32961159d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[341,342,343,344,345,346,347,348,349,35,350,351,352,36,353,354,355,356,29,357,358,359,360,361,362,363,364,365,366,367,37,368,369,370,38,371,372,66,373,374,375,376,377,378,379,380,381,39,382,383,384,40,385,386,387,388,389,390,7,68,5,391,392,30,393,394,395,396,397,398,399,400,401,402,403,41,404,405,406,42,407,408,409,410,69,411,412,413,414,43,415,416,417,418,419,44,45,420,340,421,46,422,423,424,425,426,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"6e498db3-dab4-11e4-920e-1f420f63fdb2","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[55,56,427,428],"tindex":"6e498db4-dab4-11e4-920e-e97ef617d217","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"frontIndex","speed":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"6e498db5-dab4-11e4-920e-1b94783b515e","variableMapping":{"oldValueIndex":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[5],"tindex":"6e498db6-dab4-11e4-920e-fd0737c84f96","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"6e498db7-dab4-11e4-920e-ff794aa299e3","variableMapping":{"bit":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[],"tindex":"6e498db8-dab4-11e4-920e-89c3ba0b6717","variableMapping":{"nodeThis":"paveType","nextEdgeOther":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","nodeOther":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","nextEdge":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-2},{"failures":[7,411,414,119,140,144],"tindex":"6e498db9-dab4-11e4-920e-6f87039e5923","variableMapping":{"directionBitMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[135,141,142,143,145,429,192,194,195,237,238,430,431,289,292,293,432,433],"tindex":"6e498dba-dab4-11e4-920e-8fcdf2c8dafc","variableMapping":{"workerThreads":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"6e498dbb-dab4-11e4-920e-75209f256ce8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"6e498dbc-dab4-11e4-920e-b32fd45c63bd","variableMapping":{"flags":"flags","this":"this","speed":"otherValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[341,342,343,344,345,346,347,348,349,35,350,351,352,36,353,354,355,356,29,357,358,359,360,361,362,363,364,365,366,367,37,368,369,370,38,371,372,66,373,374,375,376,377,378,379,380,381,39,382,383,384,40,385,386,387,388,389,434,390,7,68,5,391,392,30,393,394,395,396,397,398,399,400,401,402,403,41,404,405,406,42,407,408,409,410,69,411,412,413,414,43,415,416,417,418,419,44,45,420,340,421,46,422,423,424,425,426,8,3,9,118,119,120,121,122,123,124,125,126,435,127,128,129,130,131,286],"tindex":"6e49b4cd-dab4-11e4-920e-affaf7953f66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":-1},{"failures":[47,66,67,131,200,208,210,211,213,217,218,225,226,243,251,253,254,256,260,261,268,269,334,436,335,336,437,337,438,338,339,290,298,306,308,309,311,315,316,323,324],"tindex":"6e49b4ce-dab4-11e4-920e-11a49acf3306","variableMapping":{"mKeys":"mValues","nkeys":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"6e49b4cf-dab4-11e4-920e-952b706a63ad","variableMapping":{"str":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":0},{"failures":[],"tindex":"6e49b4d0-dab4-11e4-920e-55775fdd5953","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[344,348,351,353,29,358,360,365,369,372,375,376,379,383,386,388,390,30,394,396,401,405,408,120,121,123,125,126,129],"tindex":"6e49b4d1-dab4-11e4-920e-0733ac3a1f5d","variableMapping":{"wayTypeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"6e49b4d2-dab4-11e4-920e-152beca2e148","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[],"tindex":"6e49b4d3-dab4-11e4-920e-a547f1b83be9","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"6e49dbe4-dab4-11e4-920e-2157413cb6c3","variableMapping":{"high":"scDirMask","len":"flags","start":"dir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[],"tindex":"6e4a2a05-dab4-11e4-920e-49337fc1f4ff","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:133","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"6e4a2a06-dab4-11e4-920e-49bf61dc1d89","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[47,48,49],"tindex":"6e4a2a07-dab4-11e4-920e-f345a70c4dad","variableMapping":{"pointIndex":"start","index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[],"tindex":"6e4a2a08-dab4-11e4-920e-2d9e24ed7e2e","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"6e4a2a09-dab4-11e4-920e-b10f626fa10a","variableMapping":{"err":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN","dLat":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"6e4a2a0a-dab4-11e4-920e-55bfc43ef3dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:88","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DAType com.graphhopper.storage.DAType = java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"6e4a2a0b-dab4-11e4-920e-efa47bbb5fce","variableMapping":{"freeIndex":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"6e4a2a0c-dab4-11e4-920e-8587dee562d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"6e4a2a0d-dab4-11e4-920e-c5b04da0ae78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"6e4a2a0e-dab4-11e4-920e-9512cf302f8e","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","edge":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-2},{"failures":[439],"tindex":"6e4a2a0f-dab4-11e4-920e-d325ef22c573","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[72,80,8,2,103],"tindex":"6e4a2a10-dab4-11e4-920e-eb202e9eb32b","variableMapping":{"shift":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"6e4a2a11-dab4-11e4-920e-07f8478b20c4","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":0},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,47,65,66,67,48,49,68,5,69,70,71,72,73,74,75,76,77,78,79,26,80,81,82,27,83,8,2,84,85,86,87,88,89,90,91,3,92,93,4,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,31,165,166,167,168,169,13,170,14,32,171,172,173,174,175,176,177,178,179,33,180,181,182,183,184,15,185,16,34,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,440,441,282,442,443,283,284,28,285,286,287,288,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"6e4a5122-dab4-11e4-920e-a130e868b5d8","variableMapping":{"mSize":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[61,352,359,370,384,395,406,444,417,418,340,130,137],"tindex":"6e4a5123-dab4-11e4-920e-e561c8635ad6","variableMapping":{"edgeId":"kmInteger","nextEdge":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"6e4a5124-dab4-11e4-920e-ab4c7149c1c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[72,26,80,83,8,2,84,87,88,97,99,100,101,103],"tindex":"6e4a5125-dab4-11e4-920e-438dce3634c3","variableMapping":{"mainEdgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-1},{"failures":[],"tindex":"6e4a5126-dab4-11e4-920e-097094669ee0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[388,390],"tindex":"6e4a5127-dab4-11e4-920e-c38b5a555fb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[346,363,377,399,409,416,44,118,119,120,122,123,124,126,127,128,129,131,137,138,139,140,144,145],"tindex":"6e4a5128-dab4-11e4-920e-e13cdaca0572","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"6e4a5129-dab4-11e4-920e-83990cc0feca","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[],"tindex":"6e4a512a-dab4-11e4-920e-bd6d521edd9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:413","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId())"},"status":-2},{"failures":[],"tindex":"6e4a512b-dab4-11e4-920e-a9c3930d28bb","variableMapping":{"id":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[78,26,27,91,445,446,447,448],"tindex":"6e4a783c-dab4-11e4-920e-6f684545ef3d","variableMapping":{"initLeafSize":"size","maxLeafEntries":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[],"tindex":"6e4a783d-dab4-11e4-920e-951f81121b4f","variableMapping":{"workerThreads":"sLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"6e4a783e-dab4-11e4-920e-63ff9d30c3b5","variableMapping":{"node":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":0},{"failures":[],"tindex":"6e4a783f-dab4-11e4-920e-b36ffc3499e7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"6e4a7840-dab4-11e4-920e-83beaeca1da3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-2},{"failures":[],"tindex":"6e4a7841-dab4-11e4-920e-b9b27b3bfb2d","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[10,11,13,14,32,15,16,34,17,18,20,21,22,23,24,25],"tindex":"6e4a7842-dab4-11e4-920e-8f2c30edf77f","variableMapping":{"eleDelta":"midLon","decEleSum":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[449,5],"tindex":"6e4a7843-dab4-11e4-920e-b1fc08f2d0d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"6e4a7844-dab4-11e4-920e-f35c57fab64d","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"6e4a7845-dab4-11e4-920e-eb38f644e454","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"6e4a7846-dab4-11e4-920e-6d46e72d7b07","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,47,65,66,67,48,49,68,5,69,70,71,72,73,74,75,76,77,78,79,26,80,81,82,27,83,8,2,84,85,86,87,88,89,90,91,3,92,93,4,94,95,96,97,98,99,100,101,102,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,450,9,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,451,142,144,146,147,148,149,150,151,152,153,452,154,155,156,157,158,159,160,161,162,163,164,31,165,166,167,168,169,13,170,14,32,171,172,173,174,453,175,176,177,178,179,33,180,181,182,183,184,15,185,16,34,186,187,188,189,454,190,191,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,283,284,28,285,286,287,288,290,291,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"6e4a7847-dab4-11e4-920e-2747709a0d2d","variableMapping":{"heights":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:185","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[10,11,165,180,17,18,19,20,455,21,22,25],"tindex":"6e4a7848-dab4-11e4-920e-776d1575caba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"6e4a9f59-dab4-11e4-920e-dd13e43ccbf1","variableMapping":{"indexWithMaxDist":"to","lastIndex":"from","fromIndex":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":0},{"failures":[],"tindex":"6e4a9f5a-dab4-11e4-920e-250f1db29644","variableMapping":{"lastIndex":"noOfStates","fromIndex":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":-1},{"failures":[5],"tindex":"6e4a9f5b-dab4-11e4-920e-b1b7018dc4a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[],"tindex":"6e4a9f5c-dab4-11e4-920e-cb1b5035e141","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[52,58,59,60,61,68,5,100,104,105,107,108,109,111,112,115,116,117,120,121,122,123,124,135,137,138,139,140,141,142,143,144,145,456,457,458,459,460,461,462,463,166,167,168,181,182,183,429,192,194,198,219,225,230,232,233,237,241,262,268,273,275,276,284,464,289,292,296,317,323,328,330,331,465],"tindex":"6e4a9f5d-dab4-11e4-920e-5727538dd891","variableMapping":{"width":"index","i":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"6e4a9f5e-dab4-11e4-920e-bf527906eab0","variableMapping":{"edgeId":"bytePos","nextEdge":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[342,344,351,353,29,358,359,360,369,372,375,376,383,386,388,390,7,30,394,395,396,405,408],"tindex":"6e4a9f5f-dab4-11e4-920e-1daf69207c1e","variableMapping":{"high":"allowed","highKey":"allowed","key":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,47,65,66,67,48,49,68,5,69,70,71,72,73,74,75,76,77,78,79,26,80,81,82,27,83,8,2,84,85,86,87,88,89,90,91,3,92,93,4,94,95,96,97,98,99,100,101,102,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,450,9,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,452,154,155,156,157,158,159,160,161,162,163,164,31,165,166,167,168,169,13,170,14,32,171,172,173,174,175,176,177,178,179,33,180,181,182,183,184,15,185,16,34,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,466,279,280,440,281,441,282,442,443,283,284,28,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"6e4ac670-dab4-11e4-920e-7974d41d92d9","variableMapping":{"lastTime":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"6e4ac671-dab4-11e4-920e-43772b857100","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[58,59,60,61,74,78,26,8,2,84,85,86,88,89,91,3,92,93,4,94,95,96,97,99,100,101,102,103,137,138,139,140,141,143,144,146,147],"tindex":"6e4ac672-dab4-11e4-920e-313b500b6bc3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[],"tindex":"6e4ac673-dab4-11e4-920e-1b6e588f8a83","variableMapping":{"towerNodeDistance":"x"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[],"tindex":"6e4ac674-dab4-11e4-920e-25c05570dc34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[47,48],"tindex":"6e4ac675-dab4-11e4-920e-517f5ccb17d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[61,449,341,342,343,344,345,346,347,349,35,350,351,352,36,353,354,356,29,357,358,359,360,362,363,364,366,367,37,368,369,370,38,371,372,373,374,375,376,377,378,380,381,39,382,383,384,40,385,386,388,390,7,68,392,30,393,394,395,396,398,399,400,402,403,41,404,405,406,42,407,408,409,411,414,43,416,417,418,419,44,45,340,421,46,467,118,119,120,121,122,123,124,125,126,435,127,128,129,130,468,131,469,470,135,136,137,138,139,140,141,142,143,144,145],"tindex":"6e4ac676-dab4-11e4-920e-9b44041a2ef9","variableMapping":{"str":"name","this":"value","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:97","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"6e4ac677-dab4-11e4-920e-8fc45828e010","variableMapping":{"val":"prio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":98,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":105,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":289,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":449,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":161,"com.graphhopper.reader.OSMReaderTest.testFerry":118,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":63,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":359,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":182,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":136,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":208,"com.graphhopper.coll.CompressedArrayTest.testCompress":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":350,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":76,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":290,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":81,"com.graphhopper.GraphHopperTest.testPrepare":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":72,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":259,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":3,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":58,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":452,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":351,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":56,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":295,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":356,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":90,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":251,"com.graphhopper.coll.BitSetImplTest.testCopy":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":167,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":192,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":23,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":296,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":447,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":83,"com.graphhopper.GraphHopperTest.testLoadOSM":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":171,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":440,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":168,"com.graphhopper.reader.OSMReaderTest.testSort":121,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":370,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":66,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":195,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":271,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":237,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":21,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":111,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":229,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":321,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":248,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":285,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":394,"com.graphhopper.reader.OSMNodeTest.testSetTags":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":198,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":306,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":386,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":384,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":185,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":94,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":178,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":184,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":451,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":86,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":298,"com.graphhopper.coll.OSMIDMapTest.testGetLong":462,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":218,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":313,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":292,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":315,"com.graphhopper.coll.CompressedArrayTest.testCompress2":10,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":374,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":209,"com.graphhopper.GraphHopperAPITest.testLoad":146,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":280,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":409,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":253,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":243,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":6,"com.graphhopper.storage.LevelGraphStorageTest.testClone":300,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":49,"com.graphhopper.reader.OSMReaderTest.testBarriers":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":199,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":397,"com.graphhopper.util.GHUtilityTest.testCopy":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":89,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":39,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":191,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":36,"com.graphhopper.routing.PathTest.testFindInstruction":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":348,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":200,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":445,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":62,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":414,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":329,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":393,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":272,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":257,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":213,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":41,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":434,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":302,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":240,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":443,"com.graphhopper.util.InstructionListTest.testWayList2":60,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":172,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":277,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":204,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":358,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":0,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":68,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":238,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":304,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":464,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":210,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":88,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":123,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":100,"com.graphhopper.coll.OSMIDMapTest.testGet":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":207,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":43,"com.graphhopper.routing.PathBidirRefTest.testExtract":70,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":364,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":461,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":187,"com.graphhopper.storage.RAMDataAccessTest.testCopy":432,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":338,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":342,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":363,"com.graphhopper.storage.RAMDataAccessTest.testSegments":433,"com.graphhopper.util.GHUtilityTest.testSort2":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":95,"com.graphhopper.reader.OSMReaderTest.testMain":120,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":293,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":365,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":38,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":188,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":196,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":307,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":311,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":427,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":332,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":108,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":222,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":392,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":314,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":130,"com.graphhopper.storage.StorablePropertiesTest.testStore":429,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":465,"com.graphhopper.storage.GraphHopperStorageTest.testClone":245,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":46,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":255,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":340,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":28,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":40,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":287,"com.graphhopper.routing.PathTest.testTime":9,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":381,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":330,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":301,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":426,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":174,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":319,"com.graphhopper.reader.OSMReaderTest.testRelation":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":438,"com.graphhopper.util.GHUtilityTest.testSortDirected":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":406,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":107,"com.graphhopper.GraphHopperTest.testFootOnly":144,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":45,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":15,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":85,"com.graphhopper.reader.OSMElementTest.testSetTags":470,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":175,"com.graphhopper.search.NameIndexTest.testCreate":458,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":104,"com.graphhopper.routing.QueryGraphTest.testOneWay":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":453,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":166,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":17,"com.graphhopper.reader.OSMReaderTest.testWithBounds":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":65,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":336,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":415,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":388,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":297,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":404,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":353,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":221,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":214,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":241,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":2,"com.graphhopper.util.InstructionListTest.testWayList":59,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":274,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":362,"com.graphhopper.GraphHopperAPITest.testDisconnected179":147,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":455,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":31,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":402,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":337,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":368,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":139,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":82,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":355,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":80,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":328,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":422,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":378,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":197,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":102,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":454,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":281,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":372,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":236,"com.graphhopper.routing.PathTest.testWayList":116,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":379,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":335,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":444,"com.graphhopper.coll.OSMIDMapTest.testGet2":460,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":103,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":220,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":37,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":258,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":205,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":246,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":16,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":34,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":186,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":399,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":446,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":375,"com.graphhopper.util.GHUtilityTest.testSort":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":170,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":367,"com.graphhopper.search.NameIndexTest.testPut":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":234,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":244,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":180,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":158,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":150,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":282,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":395,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":5,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":148,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":377,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":1,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":413,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":215,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":47,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":442,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":284,"com.graphhopper.routing.PathTest.testFound":450,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":7,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":145,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":327,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":366,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":211,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":457,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":283,"com.graphhopper.util.InstructionListTest.testEmptyList":57,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":91,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":4,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":417,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":352,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":416,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":96,"com.graphhopper.reader.PrinctonReaderTest.testRead":132,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":273,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":183,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":206,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":436,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":219,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":299,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":216,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":400,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":389,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":30,"com.graphhopper.reader.OSMReaderTest.testFoot":119,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":14,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":22,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":32,"com.graphhopper.reader.OSMReaderTest.testOneWay":131,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":254,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":269,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":228,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":349,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":431,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":398,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":77,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":421,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":151,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":181,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":106,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":239,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":468,"com.graphhopper.routing.PathBidirRefTest.testExtract2":71,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":441,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":8,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":383,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":267,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":385,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":125,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":411,"com.graphhopper.util.SimpleIntDequeTest.testPush":428,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":169,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":270,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":423,"com.graphhopper.GraphHopperTest.testFootAndCar":140,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":262,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":309,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":376,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":190,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":387,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":424,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":99,"com.graphhopper.GraphHopperTest.testPrepareOnly":135,"com.graphhopper.GraphHopperTest.testVia":137,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":334,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":127,"com.graphhopper.reader.OSMElementTest.testHasTag":469,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":288,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":61,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":266,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":412,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":126,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":354,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":326,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":324,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":194}}]
