[{"failures":[0],"tindex":"13ddba38-da59-11e4-b4a2-4bffa073e182","variableMapping":{"factor":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"13de7d89-da59-11e4-b4a2-776996075e26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"13de7d8a-da59-11e4-b4a2-914ddd519f76","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"13de7d8b-da59-11e4-b4a2-a529cacf9fc6","variableMapping":{"size":"maxTurnCosts","i":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":0},{"failures":[],"tindex":"13de7d8c-da59-11e4-b4a2-0b706a19edfb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[1,2,3,4,5,6,7],"tindex":"13de7d8d-da59-11e4-b4a2-4bf11315d5ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:282","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,0,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,2,259,3,4,260,261,5,262,6,263,7,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,289,290,290,291,291,292,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"tindex":"13dea49e-da59-11e4-b4a2-31de6a3bafac","variableMapping":{"newName":"location","inner":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:45","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.rename(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"13dea49f-da59-11e4-b4a2-91a75d0456a6","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"13dea4a0-da59-11e4-b4a2-ab4c9844d881","variableMapping":{"shift":"shift","preferWayEncoder":"relationCodeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"13dea4a1-da59-11e4-b4a2-8d81305b56a1","variableMapping":{"factor":"decDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[331,332,333,12,16,17,18,0,30,31,32,33,34,35,36,38,39,40,41,43,44,45,46,47,48,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,63,68,89,95,100,103,106,108,113,134,140,145,148,162,163,164,191,192,193,356,357,206,358,359,360,208,213,234,240,245,248,2,259,3,4,260,5,6,263,7,264,273,274,277,281,282,284,285,286,287,288,289,291,292,327],"tindex":"13dea4a2-da59-11e4-b4a2-df6e096a06f8","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[],"tindex":"13dea4a3-da59-11e4-b4a2-61f17d7ad80a","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":0},{"failures":[12,16,17,18,0,30,31,32,33,34,35,36,38,39,40,41,43,44,45,47,48,361,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,63,68,89,95,100,103,106,108,113,134,140,145,148,162,163,164,177,178,179,180,182,191,192,193,208,213,234,240,245,248,2,3,4,260,5,6,263,7,273,274,277,281,282,284,285,286,288,289,292,327],"tindex":"13dea4a4-da59-11e4-b4a2-eb9f3846f7be","variableMapping":{"mSize":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"13dea4a5-da59-11e4-b4a2-43b1eb967a8a","variableMapping":{"red":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"13dea4a6-da59-11e4-b4a2-132d6639c315","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"13dea4a7-da59-11e4-b4a2-715889232fcf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[362],"tindex":"13dea4a8-da59-11e4-b4a2-8d89f9f2f754","variableMapping":{"eleDelta":"maxSpeed","decEleSum":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"13dea4a9-da59-11e4-b4a2-e3d59f2f6e99","variableMapping":{"length":"index","factor":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"13decaba-da59-11e4-b4a2-a5eb1686eced","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[29,43,363,364],"tindex":"13decabb-da59-11e4-b4a2-7717d82b0dd4","variableMapping":{"low":"index","guess":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[365],"tindex":"13decabc-da59-11e4-b4a2-7f7eb960e7a7","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"13decabd-da59-11e4-b4a2-7d6813b3a16a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[0,29,30,31,32,33,34,35,36,38,39,40,41,42,43,2,259,3,4,260,261,5,6,263,7,264,366,367,368,365,369,370,371,362,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386],"tindex":"13decabe-da59-11e4-b4a2-df3999776247","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[35,37,387,363,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413],"tindex":"13decabf-da59-11e4-b4a2-cb03bb77160a","variableMapping":{"value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"13decac0-da59-11e4-b4a2-3b71704c863b","variableMapping":{"maxLeafEntries":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"13decac1-da59-11e4-b4a2-291a7a6f2da6","variableMapping":{"angle":"midLat","com.graphhopper.util.AngleCalc.PI3_4":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[],"tindex":"13decac2-da59-11e4-b4a2-6fa0d0b3a0a7","variableMapping":{"size":"segmentSizePower","from":"length","end":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"13decac3-da59-11e4-b4a2-83150f189ebd","variableMapping":{"calcPoints":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:127","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"13decac4-da59-11e4-b4a2-4d50d589f7f6","variableMapping":{"i":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[414],"tindex":"13decac5-da59-11e4-b4a2-9fcb874ffbac","variableMapping":{"baseUrl":"s","fileDetails":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:254","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[415,416,417,418,419,420,421,422,423,160,166,168,169,424,189,195,197,198],"tindex":"13decac6-da59-11e4-b4a2-d1d497ea3492","variableMapping":{"orientation":"minLatTmp","resultOrientation":"lat","baseOrientation":"midLat","java.lang.Math.PI":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[362,425,426,427,428,429,430],"tindex":"13decac7-da59-11e4-b4a2-0939620966cc","variableMapping":{"y1":"speed","x1":"speed","y2":"speed","x2":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[],"tindex":"13def1d8-da59-11e4-b4a2-a51053084e55","variableMapping":{"initLeafSize":"i","maxLeafEntries":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"13def1d9-da59-11e4-b4a2-8f6c970558dc","variableMapping":{"da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"13def1da-da59-11e4-b4a2-8f943d489a24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[375,431,381,384],"tindex":"13def1db-da59-11e4-b4a2-4f9ab634a17f","variableMapping":{"name":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[432,433],"tindex":"13def1dc-da59-11e4-b4a2-734ceaefdfe4","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[274],"tindex":"13def1dd-da59-11e4-b4a2-f111744c8c27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[],"tindex":"13def1de-da59-11e4-b4a2-0393e9914a14","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[390,391,394,396,398,401,402,405,407,408,410],"tindex":"13def1df-da59-11e4-b4a2-373d088cf701","variableMapping":{"size":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[8,9,434,435,29,30,31,32,33,34,35,36,38,39,40,43,157,158,160,162,163,164,165,167,169,170,171,172,173,174,175,177,178,179,182,189,191,192,193,194,196,198,199,200,201,202,203,204,257,258,2,259,3,4,260,261,5,6,263,7,264,268,269,270,316,320,321,324],"tindex":"13def1e0-da59-11e4-b4a2-c78a4e2b0e0f","variableMapping":{"i":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"13def1e1-da59-11e4-b4a2-b745c6cd635b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"13def1e2-da59-11e4-b4a2-190eb5231237","variableMapping":{"byteCount":"bytePos","longSegmentSize":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[16,17,436,18,19,437,438,439,440,257,3,4,260,261,5,263,7,277,278],"tindex":"13def1e3-da59-11e4-b4a2-bde1e672a93f","variableMapping":{"lon":"lon2","nextLat":"lat2","com.graphhopper.util.Instruction.ac":"this","lat":"lon2","nextLon":"lon2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:225","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Instruction.com.graphhopper.util.AngleCalc.calcAzimuth(double, double, double, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-1},{"failures":[],"tindex":"13def1e4-da59-11e4-b4a2-65159814b692","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[],"tindex":"13def1e5-da59-11e4-b4a2-6386e0b73c18","variableMapping":{"item":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:263","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodingManager.acceptWay(com.graphhopper.reader.OSMWay)) > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"13df18f6-da59-11e4-b4a2-93cf60406f2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[70,80,81,83,87,88,95,96,115,125,126,128,132,133,140,141,441,442,443,444,445,446,358,447,215,225,226,228,232,233,240,241,267,270],"tindex":"13df18f7-da59-11e4-b4a2-c5c919088056","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[],"tindex":"13df18f8-da59-11e4-b4a2-25ce91da9d6b","variableMapping":{"nodeId":"nodeBitMask","nodeIdOffset":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"13df18f9-da59-11e4-b4a2-9138089b134e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[371,372],"tindex":"13df18fa-da59-11e4-b4a2-a3985d31ad49","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[3,4,5,293,295,302,308,311,312,315,327,330],"tindex":"13df18fb-da59-11e4-b4a2-fdfa78e2f09c","variableMapping":{"initializedCounter":"tmpEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,0,29,30,31,32,33,34,35,36,38,39,40,41,43,1,56,57,58,59,60,61,62,63,64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,448,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,449,203,204,205,206,207,208,209,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,257,258,2,2,259,3,3,4,4,260,260,261,261,5,262,262,6,263,7,7,264,264,265,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,289,290,290,291,291,292,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"tindex":"13df18fc-da59-11e4-b4a2-d74c76e96c46","variableMapping":{"encoderList":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"13df18fd-da59-11e4-b4a2-fd8bad395776","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"13df18fe-da59-11e4-b4a2-d74372ed97da","variableMapping":{"radiusInMeter":"absY","lon":"com.graphhopper.util.AngleCalc.PI3_4","lat":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[19,0,29,30,32,35,36,38,39,40,41,43,3,4,260,261,5,263,7,364],"tindex":"13df400f-da59-11e4-b4a2-83d77106efaf","variableMapping":{"bytePos":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[37,363,389,391,396,400,402],"tindex":"13df4010-da59-11e4-b4a2-d13877ca59bc","variableMapping":{"red":"code","green":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[366,376,378,382,385],"tindex":"13df4011-da59-11e4-b4a2-435d29a67711","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[450,451,452],"tindex":"13df4012-da59-11e4-b4a2-81f5b02b6056","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"13df4013-da59-11e4-b4a2-cbe69dd6c063","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"13df4014-da59-11e4-b4a2-7b4a5e43dbc6","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"13df4015-da59-11e4-b4a2-9bd5f924d9e6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[415,416,453,454,418,455,423],"tindex":"13df4016-da59-11e4-b4a2-35cf920856d3","variableMapping":{"size":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"13df4017-da59-11e4-b4a2-7923e880ef1c","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"defaultD","java.lang.Double.POSITIVE_INFINITY":"defaultD","weight":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":0},{"failures":[],"tindex":"13df4018-da59-11e4-b4a2-7119ef394080","variableMapping":{"incEleSum":"durationInHours","eleDelta":"longTripsSpeed","incDist2DSum":"shortTripsSpeed","decEleSum":"longTripsSpeed","fullDist2D":"durationInHours","decDist2DSum":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":0},{"failures":[],"tindex":"13df4019-da59-11e4-b4a2-e54d83e87d3e","variableMapping":{"encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":0},{"failures":[396],"tindex":"13df401a-da59-11e4-b4a2-1f28c3698a45","variableMapping":{"ghLocation":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[3,4,5,7,293,295,301,302,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,326,327,328,329,330],"tindex":"13df401b-da59-11e4-b4a2-03f0f0b50501","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[310,313,314,316,323,325,326,328,329],"tindex":"13df401c-da59-11e4-b4a2-a1cc01bed0f3","variableMapping":{"id":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-1},{"failures":[390,391,394,396,398,401,402,405,407,408,410],"tindex":"13df401d-da59-11e4-b4a2-3360abc3f4de","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"13df672e-da59-11e4-b4a2-35e4ec44a386","variableMapping":{"weightLong":"lastTime","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[37,363,456],"tindex":"13df672f-da59-11e4-b4a2-57bb90cd35ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[41,3,457,369,362,374,426,427,380,428,458,429],"tindex":"13df6730-da59-11e4-b4a2-cbe46016eac5","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"kmInteger","edgeTo":"kmInteger","edgeFrom":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[],"tindex":"13df6731-da59-11e4-b4a2-6f4d8996a57b","variableMapping":{"store":"synched"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[274],"tindex":"13df6732-da59-11e4-b4a2-19e9f5652622","variableMapping":{"maxMCSpeed":"fwdSlower","speed":"fwdSlower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"13df6733-da59-11e4-b4a2-9b50826afd70","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"13df6734-da59-11e4-b4a2-31affd70f0a6","variableMapping":{"cap":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"13df6735-da59-11e4-b4a2-b37e6accfce6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"13df6736-da59-11e4-b4a2-1bc7b95c5352","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[377,379,383,386],"tindex":"13df6737-da59-11e4-b4a2-056989dc4e8e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[12,16,17,18,19,30,33,34,44,45,46,47,48,53,459,460,60,63,68,89,95,100,102,106,108,113,134,140,145,147,162,164,191,193,208,213,234,240,245,247,254,255,256,2,3,5,6,263,264,277,278,282,288,289,292,327],"tindex":"13df6738-da59-11e4-b4a2-65d395b9d441","variableMapping":{"allBits":"delta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[61,70,78,80,81,83,87,88,95,96,115,123,125,126,128,132,133,140,141,441,461,442,443,444,445,446,358,447,215,223,225,226,228,232,233,240,241,267,270],"tindex":"13df6739-da59-11e4-b4a2-8d3baa17db01","variableMapping":{"i":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[267,272],"tindex":"13df673a-da59-11e4-b4a2-d74e6de5efb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[415,416,453,417,454,418,419,455,422,423],"tindex":"13df8e4b-da59-11e4-b4a2-7df77696ade9","variableMapping":{"r":"lon","angle":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"13df8e4c-da59-11e4-b4a2-158a94f31431","variableMapping":{"name":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"13df8e4d-da59-11e4-b4a2-b5d39727e8e7","variableMapping":{"keyIndex":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[374,380],"tindex":"13df8e4e-da59-11e4-b4a2-411bf1ffe85f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"13df8e4f-da59-11e4-b4a2-ffd99a0dfe3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[414],"tindex":"13df8e50-da59-11e4-b4a2-a36e92c47464","variableMapping":{"version":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[462,463,301,305,308,313,314,316,320,322,323,325,326,327,328,329,330],"tindex":"13df8e51-da59-11e4-b4a2-e5e18f127b87","variableMapping":{"i":"element","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"13e16312-da59-11e4-b4a2-0bcdfc227d79","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"13e16313-da59-11e4-b4a2-6f920533eda2","variableMapping":{"bytePos":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"13e16314-da59-11e4-b4a2-492acc2a9364","variableMapping":{"lat":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":0},{"failures":[],"tindex":"13e16315-da59-11e4-b4a2-0da9a688a356","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[432,299,301,305,316],"tindex":"13e16316-da59-11e4-b4a2-e511efa455df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"13e16317-da59-11e4-b4a2-41b4d41b2be9","variableMapping":{"lastIndex":"nodeB","fromIndex":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[363,456],"tindex":"13e18a28-da59-11e4-b4a2-8119bc4b2e76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[0,371,464],"tindex":"13e18a29-da59-11e4-b4a2-f1f1e4634642","variableMapping":{"length":"index","factor":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"13e18a2a-da59-11e4-b4a2-5b4cd1d7d1ba","variableMapping":{"java.lang.Double.MAX_VALUE":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","java.lang.Integer.MAX_VALUE":"mpInteger","storedInt":"mpInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:371","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":94,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":325,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":60,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":430,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":153,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":20,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":163,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":259,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":440,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":123,"com.graphhopper.coll.CompressedArrayTest.testCompress":423,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":248,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":357,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":159,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":335,"com.graphhopper.util.AngleCalcTest.testOrientation":437,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":303,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":324,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":293,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":433,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":317,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":176,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":398,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":9,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":66,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":160,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":271,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":309,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":192,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":391,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":106,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":420,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":68,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":432,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":306,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":193,"com.graphhopper.reader.OSMReaderTest.testSort":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":426,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":109,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":337,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":243,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":208,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":418,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":288,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":144,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":334,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":93,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":220,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":56,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":401,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":113,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":411,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":167,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":228,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":321,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":165,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":262,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":312,"com.graphhopper.coll.OSMIDMapTest.testGetLong":47,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":127,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":133,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":85,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":63,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":87,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":438,"com.graphhopper.coll.CompressedArrayTest.testCompress2":422,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":233,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":124,"com.graphhopper.GraphHopperAPITest.testLoad":257,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":67,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":352,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":366,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":225,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":215,"com.graphhopper.storage.LevelGraphStorageTest.testClone":72,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":464,"com.graphhopper.reader.OSMReaderTest.testBarriers":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":403,"com.graphhopper.util.GHUtilityTest.testCopy":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":175,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":379,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":349,"com.graphhopper.routing.PathTest.testFindInstruction":278,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":397,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":115,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":22,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":368,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":101,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":152,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":244,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":229,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":142,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":299,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":74,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":211,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":355,"com.graphhopper.util.InstructionListTest.testWayList2":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":200,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":249,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":119,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":390,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":389,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":273,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":76,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":459,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":392,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":338,"com.graphhopper.storage.RAMDirectoryTest.testSynched":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":125,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":177,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":313,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":33,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":327,"com.graphhopper.coll.OSMIDMapTest.testGet":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":122,"com.graphhopper.routing.PathBidirRefTest.testExtract":279,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":365,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":46,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":171,"com.graphhopper.storage.RAMDataAccessTest.testCopy":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":358,"com.graphhopper.storage.RAMDataAccessTest.testSegments":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":376,"com.graphhopper.util.GHUtilityTest.testSort2":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":322,"com.graphhopper.reader.OSMReaderTest.testMain":30,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":132,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":393,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":172,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":377,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":92,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":110,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":79,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":83,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":434,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":104,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":413,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":80,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":137,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":351,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":86,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":41,"com.graphhopper.storage.StorablePropertiesTest.testStore":53,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":460,"com.graphhopper.storage.GraphHopperStorageTest.testClone":217,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":250,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":372,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":50,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":227,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":362,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":1,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":386,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":58,"com.graphhopper.routing.PathTest.testTime":276,"com.graphhopper.util.BitUtilLittleTest.testToFloat":332,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":102,"com.graphhopper.util.InstructionListTest.testCreateGPX":436,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":202,"com.graphhopper.reader.OSMReaderTest.testRelation":37,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":446,"com.graphhopper.util.GHUtilityTest.testSortDirected":14,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":463,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":428,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":341,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":284,"com.graphhopper.GraphHopperTest.testFootOnly":7,"com.graphhopper.util.BitUtilLittleTest.testToInt":333,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":371,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":166,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":452,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":203,"com.graphhopper.search.NameIndexTest.testCreate":256,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":347,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":281,"com.graphhopper.routing.QueryGraphTest.testOneWay":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":449,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":191,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":415,"com.graphhopper.reader.OSMReaderTest.testWithBounds":40,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":350,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":268,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":443,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":363,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":69,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":65,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":384,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":399,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":136,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":129,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":213,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":308,"com.graphhopper.util.BitUtilLittleTest.testToBitString":331,"com.graphhopper.util.InstructionListTest.testWayList":17,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":375,"com.graphhopper.GraphHopperAPITest.testDisconnected179":258,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":454,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":189,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":252,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":445,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":260,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":219,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":179,"com.graphhopper.routing.util.EncodedValueTest.testSwap":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":304,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":451,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":302,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":450,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":394,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":111,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":329,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":395,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":207,"com.graphhopper.routing.PathTest.testWayList":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":360,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":409,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":442,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":458,"com.graphhopper.coll.OSMIDMapTest.testGet2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":330,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":97,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":135,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":120,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":218,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":84,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":168,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":169,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":345,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":382,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":462,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":407,"com.graphhopper.util.GHUtilityTest.testSort":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":196,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":455,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":378,"com.graphhopper.search.NameIndexTest.testPut":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":149,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":216,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":161,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":182,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":185,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":353,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":380,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":287,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":107,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":263,"com.graphhopper.storage.MMapDirectoryTest.testSynched":251,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":385,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":328,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":267,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":354,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":206,"com.graphhopper.routing.PathTest.testFound":275,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":264,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":364,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":99,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":414,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":57,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":126,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":255,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":205,"com.graphhopper.util.InstructionListTest.testEmptyList":15,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":457,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":427,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":323,"com.graphhopper.reader.PrinctonReaderTest.testRead":23,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":245,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":164,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":121,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":48,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":356,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":131,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":361,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":388,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":400,"com.graphhopper.reader.OSMReaderTest.testFoot":29,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":28,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":292,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":197,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":419,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":431,"com.graphhopper.reader.OSMReaderTest.testOneWay":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":198,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":226,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":241,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":143,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":340,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":381,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":298,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":424,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":305,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":425,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":296,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":339,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":266,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":162,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":283,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":42,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":210,"com.graphhopper.routing.PathBidirRefTest.testExtract2":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":307,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":410,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":253,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":239,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":35,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":367,"com.graphhopper.util.SimpleIntDequeTest.testPush":435,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":194,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":242,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":75,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":234,"com.graphhopper.GraphHopperTest.testFootAndCar":261,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":81,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":408,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":174,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":387,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":318,"com.graphhopper.storage.StorablePropertiesTest.testLoad":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":117,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":326,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":441,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":38,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":59,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":19,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":238,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":36,"com.graphhopper.util.AngleCalcTest.testCombined":439,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":373,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":98,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":96,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":108}}]
