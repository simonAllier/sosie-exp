[{"failures":[],"tindex":"ef5fd7e4-dae1-11e4-8c2d-83e90a869040","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"ef611065-dae1-11e4-8c2d-27038573ff02","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"ef611066-dae1-11e4-8c2d-933502c09f54","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"ef613777-dae1-11e4-8c2d-53ba3fa4767a","variableMapping":{"size":"segmentSizePower","i":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"ef613778-dae1-11e4-8c2d-474f7e44c464","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"ef613779-dae1-11e4-8c2d-173dd800f60b","variableMapping":{"key":"location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[],"tindex":"ef61377a-dae1-11e4-8c2d-ab6b2e7e9a7b","variableMapping":{"initLeafSize":"sLat","maxLeafEntries":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[47,48],"tindex":"ef61377b-dae1-11e4-8c2d-4b00ed7610d2","variableMapping":{"line":"highway","key":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"ef61377c-dae1-11e4-8c2d-17e056ca27e5","variableMapping":{"bytePos":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[],"tindex":"ef61377d-dae1-11e4-8c2d-6b4391997654","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"ef61377e-dae1-11e4-8c2d-79774b4e3d9b","variableMapping":{"intIndex":"valueIfKeyNotFound","len":"valueIfKeyNotFound"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0,1,2,3,5,6,8,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,45,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"tindex":"ef61377f-dae1-11e4-8c2d-1917a5195998","variableMapping":{"flags":"forwardBit","scDirMask":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[],"tindex":"ef613780-dae1-11e4-8c2d-2f43abfc669c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"ef615e91-dae1-11e4-8c2d-3da2b2d5d5d1","variableMapping":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.FOOT","osmFile":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:164","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"ef615e92-dae1-11e4-8c2d-17ce18ba7ca0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[],"tindex":"ef615e93-dae1-11e4-8c2d-af6c2869a39f","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[9,195],"tindex":"ef615e94-dae1-11e4-8c2d-e1ff1b3cb67e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[9,196],"tindex":"ef615e95-dae1-11e4-8c2d-a9fc21e8ad0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"ef615e96-dae1-11e4-8c2d-f15e9183cf30","variableMapping":{"width":"length","i":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:147","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"ef615e97-dae1-11e4-8c2d-cb15f0cd0f9a","variableMapping":{"name":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[197,133,134,198,135,199,200,201,136,202,203,204,205,142,206,195,143,207,208,209,210,211,212,144,213,214,148,47,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,149,234,150,48,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"ef615e98-dae1-11e4-8c2d-6fa7f89cfe91","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[2,3,4,254,5,7,8,49,50,9,255,10,12,15,16,17,18,19,21,51,52,53,55,56,57,256,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,106,107,108,109,110,111,112,113,45,114,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,134,137,138,139,140,141,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193],"tindex":"ef615e99-dae1-11e4-8c2d-ef43b690877c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-1},{"failures":[],"tindex":"ef615e9a-dae1-11e4-8c2d-af5577be2ec7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[],"tindex":"ef6185ab-dae1-11e4-8c2d-b1f9081ede8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"ef6185ac-dae1-11e4-8c2d-dd71a389fade","variableMapping":{"finishedTo":"edgeBased","finishedFrom":"edgeBased"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"ef6185ad-dae1-11e4-8c2d-e17b6b182408","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"ef6185ae-dae1-11e4-8c2d-a921d206411d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"ef6185af-dae1-11e4-8c2d-a7ffd5c33db1","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"ef6185b0-dae1-11e4-8c2d-f16088adfb95","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[257],"tindex":"ef6185b1-dae1-11e4-8c2d-d7d4bdc42d3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"ef6185b2-dae1-11e4-8c2d-c5636892ea03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"ef6185b3-dae1-11e4-8c2d-6539aa683380","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0,1,2,3,4,254,5,277,6,7,8,278,279,49,50,9,255,10,11,12,13,14,15,16,280,17,18,19,20,281,21,282,283,284,285,22,23,24,25,26,51,52,53,286,287,54,288,289,290,55,56,57,256,291,292,293,294,295,296,65,69,297,298,299,300,301,74,302,303,304,305,306,75,307,308,309,310,311,312,313,260,314,315,316,317,318,261,319,262,263,320,321,322,323,324,325,76,326,327,328,265,329,330,331,332,333,266,334,267,268,335,336,337,338,339,340,77,341,342,343,344,78,345,346,347,79,348,349,350,80,351,352,353,354,81,82,83,355,84,85,356,357,86,87,358,88,359,360,361,362,89,363,90,364,365,366,367,368,91,369,92,370,371,93,372,94,95,373,374,375,96,376,377,97,378,379,380,381,98,99,100,382,101,102,383,384,103,104,385,105,386,387,388,389,106,390,107,391,392,393,394,395,108,396,109,397,398,110,399,111,112,400,401,402,113,403,45,404,114,405,406,407,408,115,116,117,409,118,119,410,411,120,121,412,122,413,414,415,416,123,417,124,418,419,420,421,422,125,423,126,424,425,127,426,128,129,427,428,429,130,430,431,432,433,131,132,134,137,138,139,140,141,434,233,149,151,152,435,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,436,187,188,189,190,191,192,437,437,438,438,439,439,440,440,193,193,441,441,442,442,194,194,443,443,444,444,445,445,446,446],"tindex":"ef61acc4-dae1-11e4-8c2d-b370e92a3c9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[],"tindex":"ef61acc5-dae1-11e4-8c2d-eb735780512b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"ef61acc6-dae1-11e4-8c2d-5bb8b6c94c15","variableMapping":{"nodeB":"nodeA","edgeId":"nodeA","nodeA":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ef61acc7-dae1-11e4-8c2d-99d59dd40c44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"ef61acc8-dae1-11e4-8c2d-3f7839c6ac98","variableMapping":{"i":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"ef61acc9-dae1-11e4-8c2d-63e0711c443c","variableMapping":{"sacScale":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"ef61acca-dae1-11e4-8c2d-f538921f4807","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"ef61accb-dae1-11e4-8c2d-21bc80480ecf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"ef61accc-dae1-11e4-8c2d-0dd734e14cda","variableMapping":{"y":"defaultD","angle":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":0},{"failures":[179],"tindex":"ef61accd-dae1-11e4-8c2d-69a0f754265a","variableMapping":{"min":"delta","max":"delta","this":"this","value":"delta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:463","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.max(double, java.lang.Math.java.lang.Math.min(double, double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-1},{"failures":[0,5,6,7,278,61,69,28,447,308,309,310,311,313,448,449,37,450,451,452,348,80,84,97,101,109,45,114,118,126,453,454],"tindex":"ef61acce-dae1-11e4-8c2d-2f3ea2482c81","variableMapping":{"size":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"ef61accf-dae1-11e4-8c2d-bb9260727874","variableMapping":{"radiusInMeter":"resultOrientation","lon":"baseOrientation","lat":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"ef61acd0-dae1-11e4-8c2d-f33b6c4099a8","variableMapping":{"currentBucket":"index","currentIndex":"length","bucketSize":"delta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":0},{"failures":[],"tindex":"ef61acd1-dae1-11e4-8c2d-1129142c9dc8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"ef61acd2-dae1-11e4-8c2d-91712b42010b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[9,255,10,11,12,13,14,15,16,280,17,18,19,20,21,346,197,133,134,198,135,199,200,201,136,139,202,203,204,205,142,206,195,143,207,208,209,210,211,212,144,213,455,145,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,147,471,257,472,473,474,475,476,477,478,479,480,481,482,214,148,47,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,149,234,150,48,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,483,484,485,486,487,153,156,166],"tindex":"ef61d3e3-dae1-11e4-8c2d-ffba43de99c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:623","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[],"tindex":"ef61d3e4-dae1-11e4-8c2d-8d7a6ded47e2","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[49,50,52,53,54,55,56,57,59,60,61,62,64,66,67,68,69,70,71,73,80,82,83,84,85,87,89,90,91,92,93,94,96,97,99,100,101,102,104,106,107,108,109,110,111,113,45,114,116,117,118,119,121,123,124,125,126,127,128,130,131,132,137,138,139,140,141,151,152,156,158,159,160,161,162,163,164,165,166,170,171,172,173,175,176,177,178,179,182,183,184,185,186,187,189,191,192,193],"tindex":"ef61d3e5-dae1-11e4-8c2d-1fec0f3a33ef","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"ef61d3e6-dae1-11e4-8c2d-fde3cf2302f3","variableMapping":{"size":"start","hash":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[],"tindex":"ef61d3e7-dae1-11e4-8c2d-5d9141bafb5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:468","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[488,489],"tindex":"ef61d3e8-dae1-11e4-8c2d-09cf81873a84","variableMapping":{"fromNode":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"ef61d3e9-dae1-11e4-8c2d-c3b253a7ed43","variableMapping":{"size":"usedBits","hash":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"ef61d3ea-dae1-11e4-8c2d-eb2d3c536c07","variableMapping":{"err":"nodes","tmpErr":"nodes","y1":"nodes","dLon":"nodes","sLat":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"ef61d3eb-dae1-11e4-8c2d-9f30ddd26918","variableMapping":{"from":"start","hash":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"ef61d3ec-dae1-11e4-8c2d-3910dd33c53f","variableMapping":{"weight":"baseOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"ef61d3ed-dae1-11e4-8c2d-d7e9338c7e30","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"ef61d3ee-dae1-11e4-8c2d-47505857d81a","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"ef61d3ef-dae1-11e4-8c2d-430ecd02939a","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"ef61d3f0-dae1-11e4-8c2d-9fb3903ebe41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"ef61d3f1-dae1-11e4-8c2d-6d839cd45789","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[456,457,465,257,479,216,218,228,236,238,248],"tindex":"ef61fb02-dae1-11e4-8c2d-b1651d6b0053","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[468,472,231,251],"tindex":"ef61fb03-dae1-11e4-8c2d-496c0411c8d3","variableMapping":{"edgeId":"speed","nextEdge":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[146],"tindex":"ef61fb04-dae1-11e4-8c2d-b3fb5a000d16","variableMapping":{"turnCosts":"distance","weight":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-1},{"failures":[254,8,255],"tindex":"ef61fb05-dae1-11e4-8c2d-71672e9da32b","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"ef61fb06-dae1-11e4-8c2d-53a88fcc8ee8","variableMapping":{"is3D":"reverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:65","type":"CtIfImpl","sourcecode":"if (boolean)\n    return 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[5,490,491,492],"tindex":"ef61fb07-dae1-11e4-8c2d-8d92a4407696","variableMapping":{"empty":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"ef61fb08-dae1-11e4-8c2d-e3a244c2fda3","variableMapping":{"dLat":"length","dLon":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"ef61fb09-dae1-11e4-8c2d-ad5be5075adf","variableMapping":{"tmpNode":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,37,38,39,41,42,43,44,45,46],"tindex":"ef61fb0a-dae1-11e4-8c2d-755cb4905bd0","variableMapping":{"origEdgeId":"indexDivisor","mainEdges":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[149],"tindex":"ef61fb0b-dae1-11e4-8c2d-f9b5ecf0faa7","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[],"tindex":"ef61fb0c-dae1-11e4-8c2d-793c9cb8c1d8","variableMapping":{"i":"wayBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"ef61fb0d-dae1-11e4-8c2d-7baee18d6a8c","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"distance","java.lang.Double.POSITIVE_INFINITY":"maxSpeed","weight":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[],"tindex":"ef61fb0e-dae1-11e4-8c2d-ed04cb36a71f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[2,254,255,21,142,209],"tindex":"ef61fb0f-dae1-11e4-8c2d-a1a01c76ffc8","variableMapping":{"bytePointer":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[2,3,4,254,5,7,20,256,202,205,207,208,493],"tindex":"ef622220-dae1-11e4-8c2d-3de525a661dd","variableMapping":{"towerNodeDistance":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"ef622221-dae1-11e4-8c2d-771aba2c8af1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"ef622222-dae1-11e4-8c2d-b91ce0b85a72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:118","type":"CtLocalVariableImpl","sourcecode":"T T = ((T)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"ef622223-dae1-11e4-8c2d-05d737bd36d9","variableMapping":{"ghLocation":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[258,259,260,261,262,263,264,265,266,267,268,269,270,494,271,495,272,273,274,275,276],"tindex":"ef622224-dae1-11e4-8c2d-0d3c15152180","variableMapping":{"bit":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"ef622225-dae1-11e4-8c2d-2391dc5ec78a","variableMapping":{"line":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-2},{"failures":[258,259,260,262,263,265,267,268,270,271,272,273,275],"tindex":"ef622226-dae1-11e4-8c2d-335080f89365","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"ef622227-dae1-11e4-8c2d-b5be2b5bd2c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[2,156,157,158,159,160,162,163,165,166,168,169,170,171,172,173,175,177,178,179,180,182,188,192],"tindex":"ef622228-dae1-11e4-8c2d-690bd30d0d51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[9,195],"tindex":"ef622229-dae1-11e4-8c2d-b1bb3d3e5b81","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-1},{"failures":[],"tindex":"ef62222a-dae1-11e4-8c2d-3d85a5fd048f","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[496,497,498],"tindex":"ef62222b-dae1-11e4-8c2d-1f9a3f90eb99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"ef62222c-dae1-11e4-8c2d-415a8934204b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[],"tindex":"ef62222d-dae1-11e4-8c2d-0b85e6adb8c2","variableMapping":{"pointList":"pl"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:713","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":0},{"failures":[496,497,498],"tindex":"ef62222e-dae1-11e4-8c2d-5b3a133009e6","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"ef62222f-dae1-11e4-8c2d-e749df2cac2b","variableMapping":{"high":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[65,88,105,122],"tindex":"ef622230-dae1-11e4-8c2d-c700b592e6f6","variableMapping":{"length":"bitsForEdgeFlags","factor":"bitsForEdgeFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"status":-1},{"failures":[],"tindex":"ef622231-dae1-11e4-8c2d-11970d9d1840","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"ef622232-dae1-11e4-8c2d-b9c7d5fb34c6","variableMapping":{"need":"valueIfKeyNotFound"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"ef622233-dae1-11e4-8c2d-5d49785360bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"ef624944-dae1-11e4-8c2d-9f90cafe7936","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ef624945-dae1-11e4-8c2d-43ce97f65136","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[],"tindex":"ef624946-dae1-11e4-8c2d-89ebed98706f","variableMapping":{"line":"entryVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"ef624947-dae1-11e4-8c2d-89584552d3e0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":174,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":438,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":348,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":493,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":59,"com.graphhopper.reader.OSMReaderTest.testFerry":9,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":52,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":217,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":472,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":331,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":412,"com.graphhopper.coll.CompressedArrayTest.testCompress":259,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":478,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":402,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":184,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":349,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":328,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":27,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":189,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":173,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":180,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":498,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":215,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":166,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":479,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":292,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":353,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":265,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":164,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":385,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":316,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":429,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":218,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":45,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":274,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":81,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":497,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":192,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":317,"com.graphhopper.reader.OSMReaderTest.testSort":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":229,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":139,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":405,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":399,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":97,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":272,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":194,"com.graphhopper.storage.RAMDataAccessTest.testHeader":450,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":282,"com.graphhopper.storage.MMapDataAccessTest.testHeader":454,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":128,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":369,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":452,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":384,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":345,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":115,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":469,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":466,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":334,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":389,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":170,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":327,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":333,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":161,"com.graphhopper.coll.OSMIDMapTest.testGetLong":25,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":415,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":419,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":363,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":80,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":364,"com.graphhopper.coll.CompressedArrayTest.testCompress2":258,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":392,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":145,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":122,"com.graphhopper.GraphHopperAPITest.testLoad":131,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":354,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":197,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":386,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":100,"com.graphhopper.storage.LevelGraphStorageTest.testClone":84,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":196,"com.graphhopper.reader.OSMReaderTest.testBarriers":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":116,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":239,"com.graphhopper.util.GHUtilityTest.testCopy":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":163,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":481,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":43,"com.graphhopper.routing.PathTest.testFindInstruction":155,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":475,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":117,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":496,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":51,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":200,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":235,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":303,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":111,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":127,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":186,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":416,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":246,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":485,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":356,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":380,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":490,"com.graphhopper.util.InstructionListTest.testWayList2":57,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":321,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":113,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":410,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":216,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":433,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":47,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":233,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":378,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":219,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":30,"com.graphhopper.storage.RAMDirectoryTest.testSynched":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":413,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":308,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":162,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":13,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":176,"com.graphhopper.coll.OSMIDMapTest.testGet":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":121,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":451,"com.graphhopper.routing.PathBidirRefTest.testExtract":151,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":201,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":222,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":336,"com.graphhopper.storage.RAMDataAccessTest.testCopy":37,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":430,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":147,"com.graphhopper.storage.RAMDataAccessTest.testSegments":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":221,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":76,"com.graphhopper.util.GHUtilityTest.testSort2":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":171,"com.graphhopper.reader.OSMReaderTest.testMain":10,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":351,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":418,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":275,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":337,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":91,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":406,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":88,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":362,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":96,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":193,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":150,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":448,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":90,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":20,"com.graphhopper.storage.StorablePropertiesTest.testStore":431,"com.graphhopper.storage.GraphHopperStorageTest.testClone":101,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":403,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":209,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":207,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":388,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":467,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":347,"com.graphhopper.routing.PathTest.testTime":153,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":462,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":374,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":213,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":323,"com.graphhopper.reader.OSMReaderTest.testRelation":280,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":368,"com.graphhopper.util.GHUtilityTest.testSortDirected":289,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":249,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":34,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":440,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":471,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":195,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":309,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":266,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":486,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":66,"com.graphhopper.search.NameIndexTest.testCreate":296,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":41,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":437,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":449,"com.graphhopper.routing.QueryGraphTest.testOneWay":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":324,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":271,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":474,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":315,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":269,"com.graphhopper.reader.OSMReaderTest.testWithBounds":19,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":44,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":250,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":427,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":441,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":136,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":483,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":82,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":455,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":247,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":482,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":422,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":123,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":98,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":157,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":491,"com.graphhopper.util.InstructionListTest.testWayList":56,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":220,"com.graphhopper.GraphHopperAPITest.testDisconnected179":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":63,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":495,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":244,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":50,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":227,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":383,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":424,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":190,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":214,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":188,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":95,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":210,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":459,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":228,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":178,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":339,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":232,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":377,"com.graphhopper.routing.PathTest.testWayList":154,"com.graphhopper.storage.MMapDataAccessTest.testCopy":453,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":460,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":206,"com.graphhopper.coll.OSMIDMapTest.testGet2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":179,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":447,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":93,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":421,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":226,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":390,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":133,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":411,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":268,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":38,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":35,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":241,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":488,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":456,"com.graphhopper.util.GHUtilityTest.testSort":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":319,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":225,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":473,"com.graphhopper.search.NameIndexTest.testPut":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":130,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":408,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":305,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":313,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":237,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":442,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":149,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":297,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":404,"com.graphhopper.storage.MMapDirectoryTest.testSynched":341,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":458,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":284,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":417,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":137,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":69,"com.graphhopper.routing.PathTest.testFound":435,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":278,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":487,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":94,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":224,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":414,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":295,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":65,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":104,"com.graphhopper.util.InstructionListTest.testEmptyList":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":169,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":204,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":203,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":480,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":172,"com.graphhopper.reader.PrinctonReaderTest.testRead":49,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":112,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":492,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":332,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":120,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":26,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":58,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":242,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":477,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":484,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":48,"com.graphhopper.reader.OSMReaderTest.testFoot":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":68,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":285,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":446,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":262,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":273,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":375,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":470,"com.graphhopper.reader.OSMReaderTest.testOneWay":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":263,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":387,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":398,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":426,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":476,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":33,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":394,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":67,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":185,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":191,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":208,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":183,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":300,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":134,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":330,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":439,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":281,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":379,"com.graphhopper.routing.PathBidirRefTest.testExtract2":152,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":156,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":465,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":293,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":109,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":468,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":15,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":198,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":187,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":318,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":110,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":357,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":211,"com.graphhopper.GraphHopperTest.testFootAndCar":254,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":393,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":360,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":457,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":340,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":61,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":118,"com.graphhopper.storage.StorablePropertiesTest.testLoad":432,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":175,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":60,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":17,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":79,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":256,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":396,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":135,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":16,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":202,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":372,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":371,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":114}}]
