[{"failures":[0,1],"tindex":"4cf1d7f8-db03-11e4-847c-33f95b323fc6","variableMapping":{"maxMCSpeed":"midLat","speed":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"4cf5f6a9-db03-11e4-847c-73193db43e3b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[2],"tindex":"4cf5f6aa-db03-11e4-847c-b1d3f40dbde4","variableMapping":{"orientation":"key","resultOrientation":"key","baseOrientation":"key","java.lang.Math.PI":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-1},{"failures":[3,4,5],"tindex":"4cf5f6ab-db03-11e4-847c-a5dfb60555a5","variableMapping":{"currentEntry":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,0,17,18,19,20,21,22,23],"tindex":"4cf61dbc-db03-11e4-847c-fbe5e06752b8","variableMapping":{"dx":"minLonTmp","dy":"maxLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[24],"tindex":"4cf61dbd-db03-11e4-847c-118e6f4bec1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"4cf61dbe-db03-11e4-847c-4d1e393da927","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,8,127,128,129,130,131,9,132,10,11,133,134,135,136,137,138,139,140,141,142,13,143,144,145,146,147,14,148,15,16,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,3,297,298,299,4,5,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,346,347,347,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357],"tindex":"4cf61dbf-db03-11e4-847c-1d34de139bc1","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"4cf61dc0-db03-11e4-847c-55dc5c39b7c3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"4cf61dc1-db03-11e4-847c-79cb4fb3c045","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[314,318,327,329,331,334,340,344],"tindex":"4cf61dc2-db03-11e4-847c-31cc6bd8a8cb","variableMapping":{"map":"map"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:84","type":"CtIfImpl","sourcecode":"if (java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot poll collection is empty!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:42","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-1},{"failures":[],"tindex":"4cf61dc3-db03-11e4-847c-25408c60ba97","variableMapping":{"flags":"shift","nodeFlags":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[358,63,64,65,359,360,361,362,306,307],"tindex":"4cf61dc4-db03-11e4-847c-0910e8453892","variableMapping":{"dX":"angle","dY":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"4cf644d5-db03-11e4-847c-517f5af1bb15","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[27,28,29,33,53,58,62,63,64,69,70,73,79,86,92,94,97,99,100,104,156,164,169,170,173,179,186,192,194,197,199,200,204,207,212,213,216,222,229,235,237,240,242,243,247,249,252,257,258,261,267,274,280,282,285,287,288,292,294,3,297,299,4,363,364,305,306,308,309,310,311,314,318,320,321,323,325,327,328,329,331,332,333,334,335,336,337,338,340,341,344,345,350,353],"tindex":"4cf644d6-db03-11e4-847c-87d14126aa71","variableMapping":{"shift":"backwardBit","tmpValue":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"4cf644d7-db03-11e4-847c-b9509d26b894","variableMapping":{"angle":"orientation","com.graphhopper.util.AngleCalc.PI3_4":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[365,366,367,368,369,370,371,372,373,374,375],"tindex":"4cf644d8-db03-11e4-847c-753a57825231","variableMapping":{"res":"wayTypeName","algo":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:170","type":"CtReturnImpl","sourcecode":"return ((java.lang.String + \"(\") + (java.lang.String)) + \")\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[376,334,336,338,340,342,344],"tindex":"4cf644d9-db03-11e4-847c-91c83c228d82","variableMapping":{"offset":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:40","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[30,6,7,9,10,12,14,15,317,0,17,377,18,19,20,21,22,23],"tindex":"4cf644da-db03-11e4-847c-5ffc858068e8","variableMapping":{"size":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,79,94,106,107,108,109,111,112,113,114,115,116,118,119,121,122,123,124,126,8,127,128,129,130,131,9,132,10,11,133,134,135,136,138,139,140,141,142,13,143,144,145,146,147,14,148,15,16,149,150,151,152,154,155,378,379,380,381,382,383,384,385,386,156,157,158,159,160,162,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,3,297,298,299,4,5,300,301,302,303,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"tindex":"4cf644db-db03-11e4-847c-a3baa27ba77e","variableMapping":{"i":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[301],"tindex":"4cf66bec-db03-11e4-847c-051b798de94a","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","allSegments":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","capacity":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:97","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"4cf66bed-db03-11e4-847c-bf3997e30521","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"4cf66bee-db03-11e4-847c-7b49c3334d27","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[],"tindex":"4cf66bef-db03-11e4-847c-210171a90723","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"4cf66bf0-db03-11e4-847c-3d49098a39a6","variableMapping":{"strLen":"com.graphhopper.routing.util.PriorityWeighting.KEY","res":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:192","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:287","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-2},{"failures":[38],"tindex":"4cf66bf1-db03-11e4-847c-8745fec8ec14","variableMapping":{"orientation":"durationInHours","resultOrientation":"longTripsSpeed","baseOrientation":"durationInHours","java.lang.Math.PI":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,387,51,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410],"tindex":"4cf66bf2-db03-11e4-847c-b1f54a92f4cf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:145","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"4cf66bf3-db03-11e4-847c-012f16e80816","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":0},{"failures":[3],"tindex":"4cf66bf4-db03-11e4-847c-f77ff805ec71","variableMapping":{"i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[366,411,368,403,371,407,374,412],"tindex":"4cf66bf5-db03-11e4-847c-7b1084057a5a","variableMapping":{"tmp":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[413,368,414,371,415,374,416],"tindex":"4cf66bf6-db03-11e4-847c-f184d3913293","variableMapping":{"index":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[70,78,80,81,83,87,88,95,96,162,170,178,180,181,183,187,188,195,196,213,221,223,224,226,230,231,238,239,258,266,268,269,271,275,276,283,284,3,299],"tindex":"4cf66bf7-db03-11e4-847c-f98969f02ab2","variableMapping":{"foundIndex":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[417,418,2,419,420,340,344],"tindex":"4cf66bf8-db03-11e4-847c-a5a295edce48","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"4cf69309-db03-11e4-847c-712807c1a206","variableMapping":{"daType":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:121","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[27,28,29,30,31,33,294,309,310,311,312,313,316,318,320,322,323,324,325,327,328,329,331,334,345],"tindex":"4cf6930a-db03-11e4-847c-631ff3c1ec16","variableMapping":{"enableIfAssert":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[294],"tindex":"4cf6930b-db03-11e4-847c-db779f77d88c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-1},{"failures":[],"tindex":"4cf6930c-db03-11e4-847c-d164ac42a036","variableMapping":{"err":"usedBits","dLat":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"4cf6930d-db03-11e4-847c-cb26b5d5dacb","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:85","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"4cf6930e-db03-11e4-847c-03300c3595bf","variableMapping":{"orientation":"maxLat","java.lang.Math.PI":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"4cf6930f-db03-11e4-847c-c93f4696c693","variableMapping":{"silent":"integ"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"4cf69310-db03-11e4-847c-5d877052c46a","variableMapping":{"resultOrientation":"x","orientation":"r","java.lang.Math.PI":"absY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":0},{"failures":[],"tindex":"4cf69311-db03-11e4-847c-c764b4dbf7e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"4cf69312-db03-11e4-847c-97cf30db5009","variableMapping":{"node":"node","onStack":"onStack"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":0},{"failures":[],"tindex":"4cf69313-db03-11e4-847c-b1897e44d545","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"4cf69314-db03-11e4-847c-0d34637f578b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[421],"tindex":"4cf69315-db03-11e4-847c-7da4bfc960cb","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"4cf69316-db03-11e4-847c-dd0d653d3693","variableMapping":{"com.graphhopper.util.Constants.VERSION":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:85","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[25,31,32,33,35,72,94,422,423,379,424,425,426,427,428,161,164,172,207,215,237,249,252,260,282,429,430],"tindex":"4cf69317-db03-11e4-847c-2943e9cceeda","variableMapping":{"edgeId":"value","nextEdge":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[27,28,31,34,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,327,328,329,330,331,332,334,340,341,345],"tindex":"4cf6b928-db03-11e4-847c-0bde01c51f88","variableMapping":{"includeWay":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:347","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"4cf6b929-db03-11e4-847c-358424e0854e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[4],"tindex":"4cf6b92a-db03-11e4-847c-ab50db1f0eff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[388,431,399,401,405,409],"tindex":"4cf6b92b-db03-11e4-847c-cf4bf884d315","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,413,47,48,49,50,387,51,432,433,434,65,388,389,390,391,392,431,435,393,436,394,395,396,437,397,398,24,365,366,399,438,439,440,367,441,400,442,443,421,411,444,368,445,401,446,447,369,448,402,449,450,414,451,370,403,371,404,405,452,453,454,372,455,406,456,457,300,458,415,459,373,407,374,408,409,460,461,462,375,463,410,464,465,416,466],"tindex":"4cf6b92c-db03-11e4-847c-3d1940a55f45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"4cf6b92d-db03-11e4-847c-6d8ec8108797","variableMapping":{"edgePointer":"flags2","maxEdges":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[],"tindex":"4cf6b92e-db03-11e4-847c-052eacdc47f6","variableMapping":{"counts":"maxTurnCosts","counter":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-2},{"failures":[365,366,367,368,369,370,371,372,373,374,375],"tindex":"4cf6b92f-db03-11e4-847c-7f19209d7b91","variableMapping":{"segmentsToMap":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[],"tindex":"4cf6b930-db03-11e4-847c-b951ed6b5781","variableMapping":{"unpavedBit":"encoded","shift":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[414,415],"tindex":"4cf6b931-db03-11e4-847c-478b382fcdaf","variableMapping":{"entry":"highway","entryVal":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"4cf6b932-db03-11e4-847c-b75761b6bc15","variableMapping":{"i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"4cf6b933-db03-11e4-847c-078b499b7788","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"4cf6b934-db03-11e4-847c-9d8558d530c9","variableMapping":{"red":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"4cf6b935-db03-11e4-847c-fddff4c385bf","variableMapping":{"currentBucket":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[391],"tindex":"4cf6b936-db03-11e4-847c-65eeb2ab8b12","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"4cf6e047-db03-11e4-847c-97cd2ca676ff","variableMapping":{"res":"obj"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.storage.index.QueryResult.getSnappedPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[27,28,29,30,31,33,34,36,37,53,54,55,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,119,139,141,155,156,157,158,159,160,161,162,163,164,165,166,167,467,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,468,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,469,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,388,470,296,389,471,472,390,391,473,392,431,435,393,436,394,395,474,396,437,397,475,476,477,478,479,398,24,365,366,399,438,480,439,440,481,482,367,441,400,442,443,363,364,483,411,444,368,445,401,446,484,447,485,486,369,448,402,449,487,450,414,451,370,403,371,488,404,405,452,489,453,454,490,491,372,455,406,456,457,300,301,492,458,415,459,373,407,374,493,408,409,460,494,461,462,495,496,375,463,410,464,465,497,498,412,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,499,334,335,336,337,338,339,340,341,342,343,344,345,350],"tindex":"4cf6e048-db03-11e4-847c-9f753356575c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"4cf6e049-db03-11e4-847c-fb400d0aa06a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"4cf6e04a-db03-11e4-847c-2f77959a129c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[400,402,406,410],"tindex":"4cf6e04b-db03-11e4-847c-7b18dd708069","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"4cf6e04c-db03-11e4-847c-e3e0d9e7afb3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"4cf6e04d-db03-11e4-847c-5dfeedcea993","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[],"tindex":"4cf6e04e-db03-11e4-847c-1d59f08aa7ee","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"weight","java.lang.Double.POSITIVE_INFINITY":"weight","weight":"weight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"4cf6e04f-db03-11e4-847c-358f17fdf3d7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"4cf70760-db03-11e4-847c-81157c93020b","variableMapping":{"other":"osmValue","this":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:321","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.(getSize()) != (com.graphhopper.util.PointList.getSize())) || (com.graphhopper.util.PointList.(is3D()) != (com.graphhopper.util.PointList.is3D())))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[24,366,442,445,450,403,371,456,458,407,374,464,412],"tindex":"4cf70761-db03-11e4-847c-75edc79cb897","variableMapping":{"i":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"4cf70762-db03-11e4-847c-7ff5f83f5cf1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"4cf70763-db03-11e4-847c-47dd2c908bfa","variableMapping":{"size":"maxTurnCosts","i":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":0},{"failures":[368,416],"tindex":"4cf70764-db03-11e4-847c-373944e480df","variableMapping":{"java.lang.Integer.MAX_VALUE":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-1},{"failures":[],"tindex":"4cf70765-db03-11e4-847c-470fc654480d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"4cf70766-db03-11e4-847c-8927f7944b3e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"4cf83fe7-db03-11e4-847c-1ba3f156b542","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-2},{"failures":[],"tindex":"4cf83fe8-db03-11e4-847c-01d1481d2b33","variableMapping":{"intVal":"start","degree":"prevConnectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"4cf83fe9-db03-11e4-847c-096167f616ff","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[413,416,466],"tindex":"4cf83fea-db03-11e4-847c-2940ec241042","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"4cf83feb-db03-11e4-847c-a1296ce63625","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"4cf83fec-db03-11e4-847c-f532cda97a82","variableMapping":{"line":"tt","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:105","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-2},{"failures":[398,24,365,366,399,438,480,439,440,481,482,367,441,400,442,443],"tindex":"4cf83fed-db03-11e4-847c-1b28a5dace49","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[391],"tindex":"4cf83fee-db03-11e4-847c-7991877a247e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"4cf83fef-db03-11e4-847c-ef5989880e30","variableMapping":{"type":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:198","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"4cf83ff0-db03-11e4-847c-a3d111801a9f","variableMapping":{"nodeId":"hash","mainNodes":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[378,500,383,384],"tindex":"4cf86701-db03-11e4-847c-7f00407170aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[400,402,406,410],"tindex":"4cf86702-db03-11e4-847c-378c2518a3d1","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"4cf86703-db03-11e4-847c-05f6057c4a5e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"4cf86704-db03-11e4-847c-ef2638f39bdd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[25,26,27,28,31,32,34,501,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,329,330,331,334,336,340,342,343,344,345],"tindex":"4cf86705-db03-11e4-847c-37c243c3e027","variableMapping":{"edgeTo":"int0","edgeFrom":"int1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-1},{"failures":[],"tindex":"4cf86706-db03-11e4-847c-f337aa2eb220","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[54,55,57,59,66,67,298,299],"tindex":"4cf86707-db03-11e4-847c-b5324cbf7a22","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"4cf86708-db03-11e4-847c-27c8ebc90a87","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[3,4,5],"tindex":"4cf86709-db03-11e4-847c-371769164fea","variableMapping":{"initLeafSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"4cf8670a-db03-11e4-847c-cd8b1f63e4ec","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[501],"tindex":"4cf8670b-db03-11e4-847c-ed93fdaaa84e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":326,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":347,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":161,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":421,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":69,"com.graphhopper.reader.OSMReaderTest.testFerry":38,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":54,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":403,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":145,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":26,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":358,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":205,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":375,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":266,"com.graphhopper.coll.CompressedArrayTest.testCompress":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":486,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":246,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":89,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":142,"com.graphhopper.util.AngleCalcTest.testOrientation":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":342,"com.graphhopper.GraphHopperTest.testPrepare":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":325,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":332,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":451,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":318,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":120,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":369,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":67,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":450,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":310,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":129,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":291,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":249,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":21,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":168,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":345,"com.graphhopper.GraphHopperTest.testLoadOSM":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":133,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":382,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":130,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":498,"com.graphhopper.reader.OSMReaderTest.testSort":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":455,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":253,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":241,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":207,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":102,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":353,"com.graphhopper.storage.RAMDataAccessTest.testHeader":426,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":52,"com.graphhopper.storage.MMapDataAccessTest.testHeader":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":287,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":193,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":428,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":381,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":218,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":250,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":373,"com.graphhopper.reader.OSMNodeTest.testSetTags":434,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":256,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":443,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":148,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":226,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":313,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":270,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":276,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":185,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":501,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":164,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":187,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":361,"com.graphhopper.coll.CompressedArrayTest.testCompress2":6,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":24,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":267,"com.graphhopper.GraphHopperAPITest.testLoad":294,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":467,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":380,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":388,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":223,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":213,"com.graphhopper.storage.LevelGraphStorageTest.testClone":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":5,"com.graphhopper.reader.OSMReaderTest.testBarriers":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":257,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":493,"com.graphhopper.util.GHUtilityTest.testCopy":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":315,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":155,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":481,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":402,"com.graphhopper.routing.PathTest.testFindInstruction":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":484,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":258,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":417,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":53,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":390,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":201,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":459,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":242,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":227,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":285,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":338,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":495,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":74,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":210,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":386,"com.graphhopper.util.InstructionListTest.testWayList2":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":134,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":247,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":290,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":414,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":300,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":488,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":268,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":121,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":314,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":43,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":422,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":265,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":427,"com.graphhopper.routing.PathBidirRefTest.testExtract":302,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":391,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":452,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":150,"com.graphhopper.storage.RAMDataAccessTest.testCopy":425,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":95,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":405,"com.graphhopper.util.GHUtilityTest.testSort2":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":323,"com.graphhopper.reader.OSMReaderTest.testMain":40,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":275,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":489,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":22,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":406,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":192,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":254,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":179,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":183,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":204,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":180,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":494,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":280,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":458,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":186,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":50,"com.graphhopper.storage.GraphHopperStorageTest.testClone":215,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":397,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":396,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":156,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":75,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":159,"com.graphhopper.routing.PathTest.testTime":305,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":440,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":202,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":173,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":479,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":88,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":191,"com.graphhopper.reader.OSMReaderTest.testRelation":413,"com.graphhopper.util.GHUtilityTest.testSortDirected":60,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":463,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":349,"com.graphhopper.GraphHopperTest.testFootOnly":34,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":444,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":14,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":311,"com.graphhopper.reader.OSMElementTest.testSetTags":433,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":492,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":84,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":346,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":424,"com.graphhopper.routing.QueryGraphTest.testOneWay":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":137,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":446,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":128,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":0,"com.graphhopper.reader.OSMReaderTest.testWithBounds":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":289,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":297,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":90,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":473,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":416,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":496,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":449,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":279,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":112,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":272,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":211,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":309,"com.graphhopper.util.InstructionListTest.testWayList":63,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":404,"com.graphhopper.GraphHopperAPITest.testDisconnected179":295,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":76,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":461,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":491,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":29,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":217,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":343,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":487,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":341,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":200,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":475,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":438,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":372,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":330,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":153,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":500,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":457,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":206,"com.graphhopper.routing.PathTest.testWayList":306,"com.graphhopper.storage.MMapDataAccessTest.testCopy":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":480,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":394,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":331,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":423,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":490,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":228,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":470,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":15,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":184,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":409,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":418,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":365,"com.graphhopper.util.GHUtilityTest.testSort":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":132,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":23,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":454,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":469,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":116,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":143,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":126,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":108,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":407,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":352,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":301,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":251,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":399,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":364,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":329,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":3,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":385,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":94,"com.graphhopper.routing.PathTest.testFound":304,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":35,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":412,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":199,"com.graphhopper.util.AngleCalcTest.testAtan2":360,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":158,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":453,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":269,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":376,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":79,"com.graphhopper.util.InstructionListTest.testEmptyList":61,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":317,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":482,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":321,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":478,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":431,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":448,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":324,"com.graphhopper.reader.PrinctonReaderTest.testRead":36,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":146,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":264,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":68,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":460,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":485,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":415,"com.graphhopper.reader.OSMReaderTest.testFoot":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":92,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":10,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":20,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":203,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":483,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":11,"com.graphhopper.reader.OSMReaderTest.testOneWay":51,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":224,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":239,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":286,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":447,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":86,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":337,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":344,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":437,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":335,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":296,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":82,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":348,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":209,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":387,"com.graphhopper.routing.PathBidirRefTest.testExtract2":303,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":383,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":308,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":135,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":367,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":237,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":442,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":105,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":389,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":462,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":131,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":240,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":476,"com.graphhopper.GraphHopperTest.testFootAndCar":30,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":232,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":72,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":497,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":477,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":260,"com.graphhopper.GraphHopperTest.testPrepareOnly":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":327,"com.graphhopper.GraphHopperTest.testVia":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":70,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":47,"com.graphhopper.reader.OSMElementTest.testHasTag":432,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":160,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":65,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":236,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":471,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":85,"com.graphhopper.util.AngleCalcTest.testCombined":362,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":392,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":198,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":196,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":252}}]
