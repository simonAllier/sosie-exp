[{"failures":[0],"tindex":"b2aa2221-daa9-11e4-8c26-3fbe2aa7fecf","variableMapping":{"size":"maxTurnCosts","i":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[],"tindex":"b2aa4932-daa9-11e4-8c26-e9a998f23047","variableMapping":{"bm":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,339,340,340,341,341,342,342,343,343,344,344,345,345,346,346,347,347,348,348,349,349,350,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,0,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427],"tindex":"b2aa7043-daa9-11e4-8c26-1386b9defa7d","variableMapping":{"E_ADDITIONAL":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1455","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"b2aa7044-daa9-11e4-8c26-95345277c2ea","variableMapping":{"weightApproximation":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"b2aa7045-daa9-11e4-8c26-611126071461","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"b2ab0c86-daa9-11e4-8c26-a1aba9414e62","variableMapping":{"lazyUpdates":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":0},{"failures":[428,429,430,431,432,433,434],"tindex":"b2ab0c87-daa9-11e4-8c26-db8f5748d463","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"b2ab0c88-daa9-11e4-8c26-c31a9f552013","variableMapping":{"bitset":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:228","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSetImpl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[],"tindex":"b2ab0c89-daa9-11e4-8c26-73073be21727","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"b2ab0c8a-daa9-11e4-8c26-83ede3030977","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[86,374,382,396,403],"tindex":"b2ab0c8b-daa9-11e4-8c26-8381bba1cb8a","variableMapping":{"nodeId":"nodeA","mainNodes":"nodeB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"b2ab0c8c-daa9-11e4-8c26-6134909d7290","variableMapping":{"high":"removed","len":"removed","start":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"b2ab339d-daa9-11e4-8c26-f5c5c1f40ad3","variableMapping":{"shift":"encoded","tmpValue":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"b2ab339e-daa9-11e4-8c26-dd2ddbbe73d1","variableMapping":{"r":"resultOrientation","x":"orientation","absY":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"b2ab339f-daa9-11e4-8c26-75c182b05b61","variableMapping":{"nodeThis":"to","nextEdgeOther":"skippedEdge2","nodeOther":"from","nextEdge":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":0},{"failures":[435,436,437,438],"tindex":"b2ab33a0-daa9-11e4-8c26-f5e421510014","variableMapping":{"i":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[],"tindex":"b2ab33a1-daa9-11e4-8c26-e5383777ba51","variableMapping":{"empty":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[439],"tindex":"b2ab33a2-daa9-11e4-8c26-0f036c01ad5e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-1},{"failures":[],"tindex":"b2ab81c3-daa9-11e4-8c26-69e510b1f47a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"b2ab81c4-daa9-11e4-8c26-ed25b276f8a9","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[438,440,441],"tindex":"b2ab81c5-daa9-11e4-8c26-c361e2bc62fd","variableMapping":{"encoderList":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[363,442,443,444,445],"tindex":"b2ab81c6-daa9-11e4-8c26-63f5cf21b779","variableMapping":{"low":"child","guess":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"b2ab81c7-daa9-11e4-8c26-0d72227d232c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"b2ab81c8-daa9-11e4-8c26-8d2d1bc67000","variableMapping":{"mask":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-2},{"failures":[],"tindex":"b2ab81c9-daa9-11e4-8c26-f78266088a33","variableMapping":{"mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"b2ab81ca-daa9-11e4-8c26-7faf3ddefaad","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[],"tindex":"b2ab81cb-daa9-11e4-8c26-334c50679e20","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"b2ab81cc-daa9-11e4-8c26-c950a3207a58","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[321,446,447,448,428,449,450,451,452,453,429,454,455,430,456,333,435,457,458,459,460,461,462,463,464,465,466,467,468,431,469,470,471,472,437,473,474,475,476,477,478,479,480,481,482,483,484,432,485,486,487,438,440,441,488,489,490,491,492,493,433,494,495,496,497,498,499,500,501,502,503,504,505,434,506,394,395,396,397,398,399,400,401,402,403,404,507,405,406,407,408,409,410,411,0,412,413,414,415,416,417,418,419,508,509],"tindex":"b2aba8dd-daa9-11e4-8c26-39f47a2c7209","variableMapping":{"value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:87","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[1,2,3,4,6,7,10,31,37,42,44,45,50,51,52,73,74,75,76,78,91,92,93,106,107,122,125,126,129,150,156,161,163,164,193,232,235,236,239,260,266,271,273,274,277,278,279,281,282,284,285,286,287,288,289,290,291,292,293,295,296,298,299,300,301,302,303,304,314,318,319,320,321,333,334,337,338,339,340,342,343,344,345,346,347,349,350,385,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,0,412,414,415,416,417,419,421,422,423],"tindex":"b2aba8de-daa9-11e4-8c26-0d84fccb597e","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"b2aba8df-daa9-11e4-8c26-83db922af554","variableMapping":{"importance":"biggestStart","hash":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,230,231,235,238,239,240,241,242,243,244,245,246,247,248,251,252,253,254,255,257,258,259,260,261,263,265,266,267,268,269,270,271,273,274,275,276,309,312,314,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,394,395,396,397,400,401,403],"tindex":"b2aba8e0-daa9-11e4-8c26-65f142d30bb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[454,455,468,484,493,496,505],"tindex":"b2aba8e1-daa9-11e4-8c26-45aaec508a9d","variableMapping":{"x1":"speed","x2":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"b2aba8e2-daa9-11e4-8c26-8f76a5209654","variableMapping":{"values":"a","index":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:325","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return int[][int];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"b2abcff3-daa9-11e4-8c26-734ad5407e3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[333,334,510,435,457,458,459,460,461,511,462,463,464,512,465,466,513,514,467,468,431,469,470,515,516,437,473,474,475,476,477,517,478,479,480,518,481,482,519,520,483,484,432,485,486,413],"tindex":"b2abcff4-daa9-11e4-8c26-d361250622b6","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"b2abcff5-daa9-11e4-8c26-ffc10d4c2465","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:145","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[521],"tindex":"b2abcff6-daa9-11e4-8c26-9f25ba17dcb8","variableMapping":{"key":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:76","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-1},{"failures":[],"tindex":"b2abcff7-daa9-11e4-8c26-cb5144911171","variableMapping":{"name":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"b2abcff8-daa9-11e4-8c26-2bed6b1f25a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[457,461,471,473,477,499,413],"tindex":"b2abcff9-daa9-11e4-8c26-219e73bd932b","variableMapping":{"neighborUpdates":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[522,523],"tindex":"b2abcffa-daa9-11e4-8c26-8db000011e04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[524,457,459,461,511,512,467,470,471,525,472,473,475,477,517,518,483,486,440,441,526,492,495,499,527,504,506,528,0,413],"tindex":"b2abcffb-daa9-11e4-8c26-bd1732cf6d4f","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR":"factor","weight":"factor","weightLong":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[428],"tindex":"b2abcffc-daa9-11e4-8c26-8baeb003e012","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"b2abcffd-daa9-11e4-8c26-dff3be9026ab","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"size","nodeType":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"b2abcffe-daa9-11e4-8c26-9f2644e4e85a","variableMapping":{"java.lang.Integer.MAX_VALUE":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[],"tindex":"b2abf70f-daa9-11e4-8c26-8d8eb3a70cbd","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"b2abf710-daa9-11e4-8c26-8b8bd929c70d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[],"tindex":"b2abf711-daa9-11e4-8c26-0fb6f1a4c1e5","variableMapping":{"neighborUpdates":"unvisitedDeadEnds"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"b2abf712-daa9-11e4-8c26-6bd578f8056a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[429,405],"tindex":"b2abf713-daa9-11e4-8c26-39cebfabda95","variableMapping":{"speed":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[12,20,22,23,25,29,30,37,38,131,139,141,142,144,148,149,156,157,169,177,179,180,182,186,187,194,195,241,249,251,252,254,258,259,266,267,326,329],"tindex":"b2abf714-daa9-11e4-8c26-675b7acb50aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[513,519,529,530],"tindex":"b2abf715-daa9-11e4-8c26-ad08bf7b03da","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[457,459,461,512,467,470,471,472,473,475,477,518,483,486,440,441,526,492,495,499,527,504,506,531,528,403],"tindex":"b2abf716-daa9-11e4-8c26-3b9d399db7c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[],"tindex":"b2abf717-daa9-11e4-8c26-3779def28bdf","variableMapping":{"obtained":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[522,523],"tindex":"b2abf718-daa9-11e4-8c26-39f62137d076","variableMapping":{"angle":"midLon","com.graphhopper.util.AngleCalc.PI3_4":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"b2abf719-daa9-11e4-8c26-dfbc86ef9ea1","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[471,472,413],"tindex":"b2abf71a-daa9-11e4-8c26-89d0bb7dee8b","variableMapping":{"oldValueIndex":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[524,511,517],"tindex":"b2abf71b-daa9-11e4-8c26-a5b1f0913441","variableMapping":{"orientation":"costs","resultOrientation":"costs","baseOrientation":"costs","java.lang.Math.PI":"costs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[6,10,11,12,19,21,26,34,39,42,46,122,125,129,130,131,138,140,145,153,158,161,165,167,168,169,176,178,183,191,196,199,203,235,239,240,241,248,250,255,263,268,271,275,307,309,314,318,319,320,326,327,328,329,330,337,353,354,355,356,357,359,361,363,365,366,367,368,372,375,377,378,379,381,384,386,387,388,395,396,397,398,400,401,402,406,419],"tindex":"b2abf71c-daa9-11e4-8c26-039020514a29","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"b2abf71d-daa9-11e4-8c26-2dd934021579","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[465,467,468,469,481,483,484,485,438,441,490,492,493,494,504,505],"tindex":"b2abf71e-daa9-11e4-8c26-917d274b1fa3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"b2ac1e2f-daa9-11e4-8c26-db89d4cbe29e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[452],"tindex":"b2ac1e30-daa9-11e4-8c26-cfcaeaa234e3","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"b2ac1e31-daa9-11e4-8c26-fd4440d63755","variableMapping":{"weightLong":"weightLong","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-2},{"failures":[],"tindex":"b2ac1e32-daa9-11e4-8c26-f1d9f6a5c62e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:79","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"b2ac1e33-daa9-11e4-8c26-eddea894f236","variableMapping":{"encoded":"shift","backwardBit":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"b2ac1e34-daa9-11e4-8c26-db2d385195fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[351,353,359,360,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,384,385,386,387,388,396,397,400,403],"tindex":"b2ac1e35-daa9-11e4-8c26-5fcc2ad2450f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[12,20,22,23,25,29,30,37,38,131,139,141,142,144,148,149,156,157,169,177,179,180,182,186,187,194,195,233,241,249,251,252,254,258,259,266,267,326,329],"tindex":"b2ac1e36-daa9-11e4-8c26-5d9617971320","variableMapping":{"intIndex":"i","len":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[452],"tindex":"b2ac1e37-daa9-11e4-8c26-a790f9401f1e","variableMapping":{"newUniqueOsmId":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"b2ac1e38-daa9-11e4-8c26-cf5cf9548e81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:747","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[6,10,31,37,42,45,50,52,91,93,107,122,125,129,150,156,161,164,167,188,193,194,199,202,218,224,225,226,235,239,260,266,271,274,281,282,284,287,288,289,290,295,296,298,301,302,303,304,532,533,534,314,319,320,337,340,344,347,350,385,389,390,391,392,393,394,396,397,398,400,402,403,405,407,408,409,410,411,0,412,414,415,416,417,419],"tindex":"b2ac1e39-daa9-11e4-8c26-eb47f467e578","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[],"tindex":"b2ac1e3a-daa9-11e4-8c26-db498e35640f","variableMapping":{"shift":"mask","flags":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"b2ac1e3b-daa9-11e4-8c26-61bd82ce1144","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:747","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[326,330],"tindex":"b2ac1e3c-daa9-11e4-8c26-1d86f6a27410","variableMapping":{"red":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,227,229,230,231,234,235,238,239,240,241,243,244,245,246,247,248,252,253,254,255,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,309,312,314,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,394,395,396,397,400,401,403],"tindex":"b2ac454d-daa9-11e4-8c26-cf517e1e4158","variableMapping":{"size":"b","capacity":"a"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[326,331],"tindex":"b2ac454e-daa9-11e4-8c26-fda97160a4b5","variableMapping":{"ref":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[451,453,429,454,430,456,395,396,397,398,399,400,401,402,404,406,407,408,409,411,0,412,414,415,416,417,418,419],"tindex":"b2ac454f-daa9-11e4-8c26-3bc57c935c03","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"b2ac4550-daa9-11e4-8c26-a5cc811a19ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[359,363,374,444],"tindex":"b2ac4551-daa9-11e4-8c26-39498c196144","variableMapping":{"size":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"b2ac4552-daa9-11e4-8c26-7d755e884d31","variableMapping":{"gradient":"decDist2DSum","yend":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[],"tindex":"b2ac4553-daa9-11e4-8c26-d3af50c7c138","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[334,457,470,471,535,472,436,473,486,336,406,0,419],"tindex":"b2ac4554-daa9-11e4-8c26-0fd0dc4db53f","variableMapping":{"currentEntry":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"b2ac4555-daa9-11e4-8c26-c5f106e026c2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[227,359,363],"tindex":"b2ac4556-daa9-11e4-8c26-d7fd006efb0c","variableMapping":{"endX":"tmpPrevEdge","reachedX":"found","x":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:85","type":"CtIfImpl","sourcecode":"if (int >= int)\n    boolean = true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[],"tindex":"b2ac4557-daa9-11e4-8c26-6dbf1d5706f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"b2ac4558-daa9-11e4-8c26-13af2fa29adc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"b2ac4559-daa9-11e4-8c26-c790804ce980","variableMapping":{"resultOrientation":"minLat","orientation":"minLat","java.lang.Math.PI":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[6,11,12,14,15,19,26,28,34,36,39,41,46,64,71,85,105,122,125,130,131,133,134,138,145,147,153,155,158,160,165,168,169,171,172,176,183,185,191,193,196,198,203,235,240,241,243,244,248,255,257,263,265,268,270,275,307,308,310,311,314,318,319,320,324,325,326,327,328,329,330,343,353,354,355,356,357,359,361,363,364,365,367,368,369,370,371,372,373,374,375,379,380,381,382,384,385,386,387,388,426,427],"tindex":"b2ac455a-daa9-11e4-8c26-3103b1ea239b","variableMapping":{"synched":"forward"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:74","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[467,483,492,504],"tindex":"b2ac455b-daa9-11e4-8c26-6daf4cc498df","variableMapping":{"systemProperty":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:60","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"b2ac455c-daa9-11e4-8c26-b1ea1fdecf12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":0},{"failures":[],"tindex":"b2ac6c6d-daa9-11e4-8c26-bfa5d14c4777","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:95","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[6]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[353,359,363,366,368,377,381,384,385,386,388,396],"tindex":"b2ac6c6e-daa9-11e4-8c26-198fa6fa6075","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"b2ac6c6f-daa9-11e4-8c26-db019e7e2dc8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:202","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":0},{"failures":[],"tindex":"b2ac6c70-daa9-11e4-8c26-a7d1c9eca280","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"b2ac6c71-daa9-11e4-8c26-b34fcd565039","variableMapping":{"elevation":"reverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:152","type":"CtIfImpl","sourcecode":"if (boolean)\n    return 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[],"tindex":"b2ac6c72-daa9-11e4-8c26-3b23e07153bf","variableMapping":{"dist":"backSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"b2ac6c73-daa9-11e4-8c26-811536989f90","variableMapping":{"filter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:112","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[365,366,375,377,388],"tindex":"b2ac6c74-daa9-11e4-8c26-314c072462be","variableMapping":{"oldValueIndex":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":265,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":383,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":232,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":496,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":168,"com.graphhopper.reader.OSMReaderTest.testFerry":405,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":310,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":476,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":500,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":92,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":395,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":467,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":470,"com.graphhopper.storage.MMapDataAccessTest.testSegments":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":139,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":291,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":425,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":45,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":188,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":21,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":88,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":292,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":361,"com.graphhopper.GraphHopperTest.testPrepare":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":382,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":351,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":445,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":474,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":375,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":504,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":323,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":238,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":89,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":499,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":437,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":367,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":20,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":51,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":122,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":115,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":239,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":444,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":364,"com.graphhopper.GraphHopperTest.testLoadOSM":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":58,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":52,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":439,"com.graphhopper.reader.OSMReaderTest.testSort":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":484,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":328,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":126,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":296,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":40,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":201,"com.graphhopper.storage.RAMDataAccessTest.testHeader":286,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":346,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":420,"com.graphhopper.storage.MMapDataAccessTest.testHeader":117,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":160,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":116,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":264,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":209,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":219,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":17,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":123,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":459,"com.graphhopper.reader.OSMNodeTest.testSetTags":507,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":129,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":495,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":493,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":96,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":25,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":461,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":370,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":369,"com.graphhopper.coll.OSMIDMapTest.testGetLong":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":143,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":149,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":256,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":521,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":235,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":258,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":30,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":438,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":140,"com.graphhopper.GraphHopperAPITest.testLoad":307,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":218,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":446,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":22,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":12,"com.graphhopper.storage.LevelGraphStorageTest.testClone":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":331,"com.graphhopper.reader.OSMReaderTest.testBarriers":409,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":211,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":511,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":172,"com.graphhopper.util.GHUtilityTest.testCopy":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":372,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":297,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":105,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":529,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":69,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":434,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":289,"com.graphhopper.routing.PathTest.testFindInstruction":338,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":527,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":131,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":442,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":309,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":448,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":272,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":458,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":41,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":26,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":158,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":144,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":513,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":535,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":245,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":173,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":118,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":226,"com.graphhopper.util.InstructionListTest.testWayList2":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":59,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":473,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":333,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":247,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":283,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":517,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":141,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":73,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":371,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":410,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":385,"com.graphhopper.coll.OSMIDMapTest.testGet":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":138,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":207,"com.graphhopper.routing.PathBidirRefTest.testExtract":324,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":428,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":260,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":480,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":100,"com.graphhopper.storage.RAMDataAccessTest.testCopy":281,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":194,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":497,"com.graphhopper.storage.RAMDataAccessTest.testSegments":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":479,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":64,"com.graphhopper.util.GHUtilityTest.testSort2":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":380,"com.graphhopper.reader.OSMReaderTest.testMain":407,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":518,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":432,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":263,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":198,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":250,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":254,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":275,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":528,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":251,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":512,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":153,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":435,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":257,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":417,"com.graphhopper.storage.StorablePropertiesTest.testStore":106,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":279,"com.graphhopper.storage.GraphHopperStorageTest.testClone":14,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":430,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":24,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":454,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":227,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":433,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":174,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":230,"com.graphhopper.routing.PathTest.testTime":336,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":491,"com.graphhopper.util.BitUtilLittleTest.testToFloat":533,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":273,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":187,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":262,"com.graphhopper.reader.OSMReaderTest.testRelation":413,"com.graphhopper.util.GHUtilityTest.testSortDirected":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":468,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":303,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":342,"com.graphhopper.GraphHopperTest.testFootOnly":403,"com.graphhopper.util.BitUtilLittleTest.testToInt":534,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":498,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":429,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":305,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":95,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":112,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":472,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":368,"com.graphhopper.reader.OSMElementTest.testSetTags":509,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":352,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":510,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":183,"com.graphhopper.search.NameIndexTest.testCreate":4,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":287,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":339,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":222,"com.graphhopper.routing.QueryGraphTest.testOneWay":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":502,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":424,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":50,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":522,"com.graphhopper.reader.OSMReaderTest.testWithBounds":416,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":290,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":206,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":327,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":189,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":471,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":240,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":487,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":514,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":506,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":145,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":10,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":366,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":213,"com.graphhopper.util.BitUtilLittleTest.testToBitString":532,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":43,"com.graphhopper.util.InstructionListTest.testWayList":319,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":478,"com.graphhopper.GraphHopperAPITest.testDisconnected179":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":175,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":523,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":48,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":465,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":427,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":186,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":520,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":398,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":75,"com.graphhopper.routing.util.EncodedValueTest.testSwap":531,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":362,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":516,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":360,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":271,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":489,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":128,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":103,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":216,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":221,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":486,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":5,"com.graphhopper.storage.MMapDataAccessTest.testCopy":113,"com.graphhopper.routing.PathTest.testWayList":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":526,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":179,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":453,"com.graphhopper.coll.OSMIDMapTest.testGet2":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":388,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":300,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":268,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":519,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":27,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":136,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":97,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":255,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":98,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":282,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":463,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":443,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":440,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":111,"com.graphhopper.util.GHUtilityTest.testSort":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":192,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":482,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":501,"com.graphhopper.search.NameIndexTest.testPut":2,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":165,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":68,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":78,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":81,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":460,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":345,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":124,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":402,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":488,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":386,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":326,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":225,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":193,"com.graphhopper.routing.PathTest.testFound":335,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":404,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":436,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":270,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":294,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":481,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":142,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":3,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":205,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":178,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":19,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":277,"com.graphhopper.util.InstructionListTest.testEmptyList":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":374,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":378,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":450,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":449,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":505,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":381,"com.graphhopper.reader.PrinctonReaderTest.testRead":426,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":42,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":93,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":177,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":167,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":464,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":530,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":108,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":525,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":490,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":457,"com.graphhopper.reader.OSMReaderTest.testFoot":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":191,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":350,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":56,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":57,"com.graphhopper.reader.OSMReaderTest.testOneWay":419,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":23,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":38,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":159,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":503,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":302,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":462,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":356,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":353,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":363,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":455,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":82,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":354,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":332,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":210,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":181,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":341,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":8,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":418,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":306,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":223,"com.graphhopper.routing.PathBidirRefTest.testExtract2":325,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":60,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":71,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":492,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":1,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":36,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":83,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":494,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":204,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":447,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":466,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":53,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":39,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":246,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":31,"com.graphhopper.GraphHopperTest.testFootAndCar":399,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":252,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":104,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":171,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":515,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":110,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":524,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":358,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":384,"com.graphhopper.GraphHopperTest.testPrepareOnly":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":70,"com.graphhopper.GraphHopperTest.testVia":396,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":485,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":169,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":414,"com.graphhopper.reader.OSMElementTest.testHasTag":508,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":231,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":35,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":321,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":184,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":456,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":269,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":267,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":125}}]
