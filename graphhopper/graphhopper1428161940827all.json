[{"failures":[],"tindex":"b738a696-dae0-11e4-a921-eb41731f3c54","variableMapping":{"len":"turnRestrictionBit","start":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[],"tindex":"b738cda7-dae0-11e4-a921-9f945d7e28aa","variableMapping":{"minDistance":"weight","rMin":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[0,1,2,3],"tindex":"b738cda8-dae0-11e4-a921-7d8a4d4599ea","variableMapping":{"this":"this","finishedFrom":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[4,5],"tindex":"b738cda9-dae0-11e4-a921-4396f59c500b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[6,7,8],"tindex":"b738cdaa-dae0-11e4-a921-e9cff676e635","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-1},{"failures":[],"tindex":"b738cdab-dae0-11e4-a921-b9237a9ba37c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[],"tindex":"b738cdac-dae0-11e4-a921-e577f9da7b5b","variableMapping":{"store":"storing"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[9,10],"tindex":"b738cdad-dae0-11e4-a921-294960cf38ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-1},{"failures":[],"tindex":"b738cdae-dae0-11e4-a921-435a057603dc","variableMapping":{"heights":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:72","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getHeader(0)) == 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[11],"tindex":"b738cdaf-dae0-11e4-a921-0331c225a048","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,9,239,240,241,242,243,4,244,245,246,5,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,6,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,11,290,291,292,293,294,295,296,10,7,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,8,331,332,333,334,335,336,337,338,339,340,341,342,343,344,0,345,346,347,348,349,350,351,352,353,354,355,1,356,357,358,359,360,361,362,2,363,364,365,366,367,368,369,370,371,372,373,3,374,375,376,377,378,379,380,381,382,383,384,385,386,387],"tindex":"b738f4c0-dae0-11e4-a921-db5294194c77","variableMapping":{"encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[],"tindex":"b738f4c1-dae0-11e4-a921-e90b2c973608","variableMapping":{"x1":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:158","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"b738f4c2-dae0-11e4-a921-b1b9110b6e1f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b738f4c3-dae0-11e4-a921-bd2d5d99039e","variableMapping":{"guess":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"b738f4c4-dae0-11e4-a921-b96edc4df599","variableMapping":{"max":"nextWayBit","tmpSize":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"b738f4c5-dae0-11e4-a921-27facdc144bd","variableMapping":{"logMessagesPercentage":"angle","logMessages":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":0},{"failures":[],"tindex":"b738f4c6-dae0-11e4-a921-a14b66c04d81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"b738f4c7-dae0-11e4-a921-d1e180e7f4ba","variableMapping":{"pointer":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":0},{"failures":[],"tindex":"b738f4c8-dae0-11e4-a921-87152cd1cb12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[12,13,388,389,390,391,392,393,394,395,396,113,397,398,399,400,401,402,403,404,405,114,406,407,408,409,200,201,203,204,208,213,216,218,219,222,244,245,246,352,1,356,359,410,411,412],"tindex":"b7391bd9-dae0-11e4-a921-4d4bd74e2adc","variableMapping":{"factor":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"b7391bda-dae0-11e4-a921-f3c90b363a54","variableMapping":{"encodingManager":"em"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[],"tindex":"b7391bdb-dae0-11e4-a921-078f68808642","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[198,199,200,201,202,203,204,205,206,207,208,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,237,241,249,251,252,256,259,260,261,262,263,267,268,269,270,271,272,273,277,278,281,282,283,284,285,286,288,289,11,290,291,293,294,295,302,305,306,308,309,310,311,315,316,319,320,321,322,323,325,326,327,328,329,330,331,335,336,339,340,341,342,343,384],"tindex":"b7391bdc-dae0-11e4-a921-edb4b4a89e9a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-1},{"failures":[12,14,18,22,27,28,29,31,32,35,36,38,43,45,51,53,56,58,59,63,65,68,73,74,75,77,78,81,82,84,89,91,97,99,102,104,105,109,117,122,123,124,126,127,130,131,133,138,140,146,148,151,153,154,158,160,161,162,164,165,168,169,171,176,178,184,186,189,191,192,196,198,199,200,201,202,203,204,205,206,207,210,211,213,214,216,219,220,222,223,224,227,228,229,230,231,233,234,235,9,4,244,246,5,265,11,292,295,10,297,301,303,344,0,345,346,347,348,349,350,351,352,353,354,355,1,356,357,358,359,360,361,362,2,363,364,365,366,368,369,370,371,372,3,374,375,376,377,378,379,381,382,383,384,385,386,387],"tindex":"b7391bdd-dae0-11e4-a921-2b52a4925166","variableMapping":{"size":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[261,283,321,341],"tindex":"b7391bde-dae0-11e4-a921-375fff1c1fe3","variableMapping":{"cap":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[344,0,362,364,378],"tindex":"b7391bdf-dae0-11e4-a921-85749be83f6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"b7391be0-dae0-11e4-a921-f9bdb2f4f275","variableMapping":{"graphHopperFolder":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[287],"tindex":"b7391be1-dae0-11e4-a921-033bd3816b59","variableMapping":{"flags":"directionBitMask","scDirMask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[344,0,353,355,364],"tindex":"b7391be2-dae0-11e4-a921-e90c46cf9794","variableMapping":{"weightLong":"millis","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[12,13,413,388,414,389,415,390,416,417,391,392,393,394,395,112,418,419,420,421,422,423,424,425,426,396,113,427,397,428,398,399,400,429,430,401,402,403,404,405,114,198,200,201,202,203,204,205,206,207,208,212,213,214,215,216,217,218,219,220,222,223,224,225,227,352,1,356,359],"tindex":"b7391be3-dae0-11e4-a921-23a7c5e0bd04","variableMapping":{"segmentSizeInBytes":"x1","index":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"b73942f4-dae0-11e4-a921-9987e27f52c6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"b73942f5-dae0-11e4-a921-096187415b1a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[241,251,259,267,270,272,281,309,310,319,325,328,330,339],"tindex":"b73942f6-dae0-11e4-a921-a3acb8a66241","variableMapping":{"location":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[],"tindex":"b73942f7-dae0-11e4-a921-4ddd1777ff71","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"b73942f8-dae0-11e4-a921-c37aeb56a04b","variableMapping":{"high":"relBitMask","guess":"relBitMask","low":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"b73942f9-dae0-11e4-a921-b54deaf2b95a","variableMapping":{"maxLeafEntries":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[212,431],"tindex":"b73942fa-dae0-11e4-a921-254a0cbdc0a1","variableMapping":{"high":"index","guess":"index","low":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[],"tindex":"b73942fb-dae0-11e4-a921-15a4905fe043","variableMapping":{"workerThreads":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[15,17,396,113,398,399,400,401,402,403,404,405,114,198,200,201,204,205,207,0,345,346,347,348,349,350,351,352,353,354,355,1,356,357,358,359,360,361,362,2,363,364,368,369,370,371,372,3,375,376,377,387],"tindex":"b73942fc-dae0-11e4-a921-65d0af07416b","variableMapping":{"segmentSizePower":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,65,447,448,449,450,451,200,201,202,204,206,212,214,215,216,217,218,219,220,222,223,224,225,227],"tindex":"b73942fd-dae0-11e4-a921-45894d7faa4b","variableMapping":{"index":"indexDivisor","entrySize":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:294","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"b73942fe-dae0-11e4-a921-63046ef1e8e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"b73942ff-dae0-11e4-a921-e31d09c370f3","variableMapping":{"low":"err","guess":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":0},{"failures":[],"tindex":"b7394300-dae0-11e4-a921-7f31c8f40103","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"b7394301-dae0-11e4-a921-d77411f9d8b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[306],"tindex":"b7394302-dae0-11e4-a921-e5907ac6e185","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"b7394303-dae0-11e4-a921-cb8c68e1423b","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"b7396a14-dae0-11e4-a921-ed531ea80a0e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"b7396a15-dae0-11e4-a921-c9426414b851","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"shift","id":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"b7396a16-dae0-11e4-a921-9122099cf8e9","variableMapping":{"byteCount":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[],"tindex":"b7396a17-dae0-11e4-a921-45c60811b4dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"b7396a18-dae0-11e4-a921-b3371852c3fc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"b7396a19-dae0-11e4-a921-3b62e768164e","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":0},{"failures":[219],"tindex":"b7396a1a-dae0-11e4-a921-471266636226","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"b7396a1b-dae0-11e4-a921-ebe83a526f3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[251,259,270,272,281,310,311,319,328,330,339],"tindex":"b7396a1c-dae0-11e4-a921-e71c949377fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:488","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-1},{"failures":[309,310],"tindex":"b7396a1d-dae0-11e4-a921-4f0c49782c74","variableMapping":{"val":"trackType","existing":"trackType","key":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[261,283,321,341],"tindex":"b7396a1e-dae0-11e4-a921-4ff0b0717050","variableMapping":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"b7396a1f-dae0-11e4-a921-7d8fd159fc91","variableMapping":{"red":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"b7396a20-dae0-11e4-a921-59fb2cde1761","variableMapping":{"minLon":"lat","maxLon":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:94","type":"CtIfImpl","sourcecode":"if ((double) >= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[],"tindex":"b7396a21-dae0-11e4-a921-c9b19df24ee4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[221,237,239],"tindex":"b7396a22-dae0-11e4-a921-9fa1c38cd0c3","variableMapping":{"longSegmentSize":"oldRelationFlags","bufferStart":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[12,13,200,202,203,206,207,344,0,345,346,347,349,350,352,353,355,1,356,357,358,359,361,362,2,363,364,368,372,3,378,381,382,383,384],"tindex":"b7396a23-dae0-11e4-a921-d36d86132bb9","variableMapping":{"need":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"b7399134-dae0-11e4-a921-f93656fd5953","variableMapping":{"resultOrientation":"com.graphhopper.util.AngleCalc.PI3_4","orientation":"com.graphhopper.util.AngleCalc.PI3_4","java.lang.Math.PI":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[452,453,454,455,456,19,22,27,48,54,59,61,62,65,68,73,94,100,105,107,108,388,414,389,397,428,398,457,117,122,143,149,154,156,157,186,447,448,449,450,451,198,200,201,202,203,204,205,206,207,208,214,215,216,217,218,458,459,460,228,461,229,462,463,234,235,264,265,362,381,382,383,384,387],"tindex":"b7399135-dae0-11e4-a921-b39963385f25","variableMapping":{"i":"index","mainNodes":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:439","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"b7399136-dae0-11e4-a921-056525e94ce5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"b7399137-dae0-11e4-a921-65535eba6194","variableMapping":{"high":"flags","low":"flags","guess":"flags","guessedKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[309],"tindex":"b7399138-dae0-11e4-a921-8bb10e76e662","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"b7399139-dae0-11e4-a921-63d7f713e122","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[12,13,413,464,388,414,389,415,465,390,416,417,391,392,393,394,395,112,424,396,113,427,466,397,428,398,399,467,400,429,430,401,402,403,404,405,114,468,469,470,471,472,473,474,475,476,477,478,200,201,202,203,204,206,207,214,215,216,352,1,356,359],"tindex":"b739913a-dae0-11e4-a921-f159bacd0201","variableMapping":{"edgeId":"i","nextEdge":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"b739913b-dae0-11e4-a921-9989c6b29ad0","variableMapping":{"key":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[],"tindex":"b739913c-dae0-11e4-a921-e104cac15fc3","variableMapping":{"str":"value","this":"value","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:97","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-2},{"failures":[479,452,453,454,432,433,480,436,439,440,481,443,446,19,22,23,27,48,54,59,62,65,68,69,73,94,100,105,108,388,414,389,397,428,398,457,117,118,122,143,149,154,157,186,447,448,449,450,451,198,199,200,201,202,203,204,205,206,207,208,482,483,484,212,213,214,215,216,217,218,219,220,222,223,224,225,227,458,459,460,228,461,485,229,462,486,463,234,235,264,265,362,381,382,383,384,387],"tindex":"b739913d-dae0-11e4-a921-5559aa95c227","variableMapping":{"size":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"b739913e-dae0-11e4-a921-8162f66c9a67","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[199,200,201,202,203,204,205,206,208,212,213,214,215,216,217,218,219,220,222,223,224,225,226,227,263,286,289,11,293,294,295,384],"tindex":"b739913f-dae0-11e4-a921-c1fdb13ef6c3","variableMapping":{"versionHint":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[221,237,239],"tindex":"b7399140-dae0-11e4-a921-33caf35f5a43","variableMapping":{"high":"oldRelationFlags","guess":"flags","low":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[286],"tindex":"b7399141-dae0-11e4-a921-a7638a721042","variableMapping":{"flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"b7399142-dae0-11e4-a921-614fb8e06fc2","variableMapping":{"item":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"b739b853-dae0-11e4-a921-37619569d45f","variableMapping":{"cap":"flags","bytes":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[309],"tindex":"b739b854-dae0-11e4-a921-07380178a571","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"b739b855-dae0-11e4-a921-8d64923ad553","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"b739b856-dae0-11e4-a921-eb0300116f52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder> java.util.List<com.graphhopper.routing.util.FlagEncoder> = new java.util.ArrayList<com.graphhopper.routing.util.FlagEncoder>()"},"status":-2},{"failures":[],"tindex":"b739b857-dae0-11e4-a921-cfaf6b943e20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[],"tindex":"b739b858-dae0-11e4-a921-23dd8ae7db33","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"b739b859-dae0-11e4-a921-475e70ea52c1","variableMapping":{"store":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"b739b85a-dae0-11e4-a921-a9a9978d16dc","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[219],"tindex":"b739b85b-dae0-11e4-a921-25c476e033a8","variableMapping":{"high":"encoded","guess":"directionBitMask","low":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[245,246],"tindex":"b739b85c-dae0-11e4-a921-c9583aab1d1f","variableMapping":{"min":"biggestStart","tmpSize":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"b739b85d-dae0-11e4-a921-070fe9aead82","variableMapping":{"pushingSections":"pushingSections","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"b739b85e-dae0-11e4-a921-858eef47f9f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[406,407,408,409,245,246,410,411,385,386,487,488],"tindex":"b739b85f-dae0-11e4-a921-6d14581591cc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,22,27,48,54,59,65,68,73,94,100,105,489,490,491,492,388,389,397,398,117,122,143,149,154,160,181,186,187,192,447,448,449,450,451,198,201,202,204,206,207,214,216,217,218,219,220,224,459,228,461,229,462,463,234,362,382,383,493,494,495],"tindex":"b739b860-dae0-11e4-a921-cdbb6d4c3423","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[234,235,496,497,498,499,382,383,384,500],"tindex":"b739b861-dae0-11e4-a921-2b0e7f7e39f6","variableMapping":{"factor":"r"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-1},{"failures":[501],"tindex":"b739b862-dae0-11e4-a921-136879f84e5b","variableMapping":{"ghLocation":"str","osmFile":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[289],"tindex":"b739b863-dae0-11e4-a921-6b4a5def22a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[],"tindex":"b739b864-dae0-11e4-a921-33907d71de77","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"b739b865-dae0-11e4-a921-6906edd9a929","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"b739de76-dae0-11e4-a921-bd03f1093ae1","variableMapping":{"high":"bytePos","guess":"bytePos","low":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":0},{"failures":[],"tindex":"b739de77-dae0-11e4-a921-8becc3ee0bbb","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:520","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[4,247],"tindex":"b739de78-dae0-11e4-a921-0bf834c9001b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[],"tindex":"b739de79-dae0-11e4-a921-8761c90c253a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":360,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":459,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":19,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":161,"com.graphhopper.reader.OSMReaderTest.testFerry":212,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":385,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":329,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":252,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":428,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":199,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":500,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":83,"com.graphhopper.coll.CompressedArrayTest.testCompress":478,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":258,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":157,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":181,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":133,"com.graphhopper.util.AngleCalcTest.testOrientation":496,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":480,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":375,"com.graphhopper.GraphHopperTest.testPrepare":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":359,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":353,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":381,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":259,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":411,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":25,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":427,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":345,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":414,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":474,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":378,"com.graphhopper.GraphHopperTest.testLoadOSM":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":389,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":240,"com.graphhopper.reader.OSMReaderTest.testSort":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":340,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":69,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":440,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":152,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":117,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":194,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":229,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":104,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":446,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":52,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":419,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":129,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":66,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":270,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":323,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":400,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":137,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":356,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":348,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":347,"com.graphhopper.coll.OSMIDMapTest.testGetLong":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":87,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":486,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":93,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":44,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":22,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":46,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":498,"com.graphhopper.coll.CompressedArrayTest.testCompress2":477,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":84,"com.graphhopper.GraphHopperAPITest.testLoad":12,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":26,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":489,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":299,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":134,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":124,"com.graphhopper.storage.LevelGraphStorageTest.testClone":31,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":74,"com.graphhopper.reader.OSMReaderTest.testBarriers":216,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":247,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":350,"com.graphhopper.util.GHUtilityTest.testCopy":387,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":114,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":317,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":261,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":420,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":437,"com.graphhopper.routing.PathTest.testFindInstruction":235,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":255,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":75,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":305,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":379,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":60,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":269,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":153,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":102,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":279,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":9,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":33,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":166,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":492,"com.graphhopper.util.InstructionListTest.testWayList2":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":392,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":158,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":470,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":107,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":242,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":326,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":264,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":425,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":35,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":456,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":8,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":85,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":406,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":349,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":217,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":362,"com.graphhopper.coll.OSMIDMapTest.testGet":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":82,"com.graphhopper.routing.PathBidirRefTest.testExtract":230,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":306,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":333,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":449,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":402,"com.graphhopper.storage.RAMDataAccessTest.testCopy":432,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":481,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":187,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":332,"com.graphhopper.storage.RAMDataAccessTest.testSegments":436,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":112,"com.graphhopper.util.GHUtilityTest.testSort2":487,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":357,"com.graphhopper.reader.OSMReaderTest.testMain":214,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":334,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":475,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":403,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":191,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":38,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":42,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":63,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":39,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":267,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":45,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":225,"com.graphhopper.storage.StorablePropertiesTest.testStore":457,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":455,"com.graphhopper.storage.GraphHopperStorageTest.testClone":126,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":295,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":293,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":321,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":167,"com.graphhopper.routing.PathTest.testTime":233,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":316,"com.graphhopper.util.BitUtilLittleTest.testToFloat":494,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":61,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":394,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":180,"com.graphhopper.reader.OSMReaderTest.testRelation":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":282,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":444,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":460,"com.graphhopper.GraphHopperTest.testFootOnly":207,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":426,"com.graphhopper.util.BitUtilLittleTest.testToInt":495,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":250,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":407,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":467,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":346,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":421,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":176,"com.graphhopper.search.NameIndexTest.testCreate":454,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":435,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":458,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":471,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":388,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":468,"com.graphhopper.reader.OSMReaderTest.testWithBounds":224,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":173,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":244,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":461,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":182,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":307,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":237,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":28,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":280,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":115,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":89,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":122,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":462,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":0,"com.graphhopper.util.BitUtilLittleTest.testToBitString":493,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":155,"com.graphhopper.util.InstructionListTest.testWayList":382,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":331,"com.graphhopper.GraphHopperAPITest.testDisconnected179":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":168,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":277,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":211,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":196,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":338,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":202,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":376,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":324,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":374,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":339,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":71,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":343,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":116,"com.graphhopper.routing.PathTest.testWayList":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":195,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":290,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":501,"com.graphhopper.coll.OSMIDMapTest.testGet2":448,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":364,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":56,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":482,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":337,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":139,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":80,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":127,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":43,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":430,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":433,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":274,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":310,"com.graphhopper.util.GHUtilityTest.testSort":488,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":390,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":476,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":336,"com.graphhopper.search.NameIndexTest.testPut":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":109,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":125,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":466,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":409,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":490,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":271,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":485,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":67,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":312,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":243,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":483,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":90,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":4,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":491,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":186,"com.graphhopper.routing.PathTest.testFound":232,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":208,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":241,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":58,"com.graphhopper.util.AngleCalcTest.testAtan2":497,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":335,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":86,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":453,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":171,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":131,"com.graphhopper.util.InstructionListTest.testEmptyList":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":318,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":1,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":297,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":288,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":260,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":287,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":358,"com.graphhopper.reader.PrinctonReaderTest.testRead":210,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":398,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":170,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":451,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":160,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":91,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":275,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":238,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":268,"com.graphhopper.reader.OSMReaderTest.testFoot":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":184,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":463,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":484,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":416,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":473,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":248,"com.graphhopper.reader.OSMReaderTest.testOneWay":227,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":417,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":135,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":150,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":103,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":256,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":443,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":273,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":371,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":424,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":368,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":369,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":422,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":442,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":174,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":119,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":226,"com.graphhopper.routing.PathBidirRefTest.testExtract2":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":344,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":393,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":479,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":148,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":322,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":219,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":197,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":302,"com.graphhopper.util.SimpleIntDequeTest.testPush":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":415,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":151,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":10,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":143,"com.graphhopper.GraphHopperTest.testFootAndCar":203,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":405,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":164,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":77,"com.graphhopper.GraphHopperTest.testPrepareOnly":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":361,"com.graphhopper.GraphHopperTest.testVia":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":162,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":222,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":18,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":147,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":303,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":177,"com.graphhopper.util.AngleCalcTest.testCombined":499,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":263,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":57,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":55,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":68}}]
