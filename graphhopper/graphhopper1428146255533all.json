[{"failures":[],"tindex":"326f4fe1-dabc-11e4-a296-aba033e69f1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"326f4fe2-dabc-11e4-a296-b549f2f294ba","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"326f4fe3-dabc-11e4-a296-edd3880fbd5a","variableMapping":{"index":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"326f4fe4-dabc-11e4-a296-29cab5f7549d","variableMapping":{"id":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[1,14,5,8,15,16,10,11,12,13,17,18],"tindex":"326f4fe5-dabc-11e4-a296-c34aeadf0adc","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"size","edgeTo":"element","edgeFrom":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"326f76f6-dabc-11e4-a296-bd4ac47d5357","variableMapping":{"incEleSum":"minLat","incDist2DSum":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[19,20,21,22,23,24,25,0,26,27,28,29,30,31,32,1,2,33,34,14,3,4,5,6,35,36,7,8,37,38,39,40,41,42,15,43,16,44,9,45,10,11,12,46,13,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"326f76f7-dabc-11e4-a296-a98580096010","variableMapping":{"maxLeafEntries":"edgeCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"326f76f8-dabc-11e4-a296-592ec39f53c1","variableMapping":{"line":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[104,105,106,107,108,109,110,111,112],"tindex":"326f76f9-dabc-11e4-a296-2759471d2fe2","variableMapping":{"precision":"r","lat":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"326f76fa-dabc-11e4-a296-571608b7f11a","variableMapping":{"equalNormedDelta":"ele","tmpNormedDist":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:924","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[],"tindex":"326f76fb-dabc-11e4-a296-f95f596921a3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"326f76fc-dabc-11e4-a296-e7bcae3d3b16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[21,22,23,25,0,27,1,2,3,4,5,6,35,36,7,8,37,38,39,40,42,15,43,16,44,9,10,11,12,46,13],"tindex":"326f9e0d-dabc-11e4-a296-25c7a7a7f616","variableMapping":{"workerThreads":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[113,114,115],"tindex":"326f9e0e-dabc-11e4-a296-55dc104c6593","variableMapping":{"nodeThis":"index","nextEdgeOther":"index","nodeOther":"index","nextEdge":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-1},{"failures":[],"tindex":"326f9e0f-dabc-11e4-a296-6d1dd25948a3","variableMapping":{"relationCodeEncoder":"this","shift":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[113,114,115],"tindex":"326fc520-dabc-11e4-a296-e531e4a07bea","variableMapping":{"segmentSizeInBytes":"start","index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"326fc521-dabc-11e4-a296-c13094d288c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:153","type":"CtIfImpl","sourcecode":"if ((java.util.Map<java.lang.Integer, java.lang.Integer>.size()) < 2)\n    return ;\n"},"status":0},{"failures":[],"tindex":"326fc522-dabc-11e4-a296-7d70513b8f8c","variableMapping":{"red":"start","green":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-2},{"failures":[],"tindex":"326fc523-dabc-11e4-a296-0501716f616e","variableMapping":{"newUniqueOsmId":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"326fc524-dabc-11e4-a296-87596adbd281","variableMapping":{"size":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[116,117,118,119,120,121,122,123,124],"tindex":"326fc525-dabc-11e4-a296-ad2c24b2e014","variableMapping":{"factor":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"326fec36-dabc-11e4-a296-836980e1d67f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"326fec37-dabc-11e4-a296-959f4b96f6fa","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,4,5,6,35,36,7,8,37,38,39,40,41,42,15,43,16,44,9,45,10,11,12,46,13,163,164,165,67,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,68,69,207,208,209,70,210,211,71,212,72,73,74,75,76,77,78,79,80,81,213,214,82,83,84,85,86,215,87,88,89,90,91,216,92,217,93,94,95,96,97,98,99,218,100,101,102,103,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"tindex":"32701348-dabc-11e4-a296-a73fd62a7118","variableMapping":{"encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"32701349-dabc-11e4-a296-afb407615be4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"3270134a-dabc-11e4-a296-97a188253acb","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"3270134b-dabc-11e4-a296-6f2ef514194c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[19,20,21,22,309,125,23,24,310,25,311,312,313,314,315,316,317,318,319,320,321,322,323,324,104,105,325,326,327,135,137,145,148,151,153,155,113,328,329,114,330,0,26,27,28,29,30,31,1,2,33,34,14,3,4,5,6,35,36,7,8,37,38,39,40,41,42,15,43,16,44,9,45,10,11,12,46,13,331,332,106,107,48,333,334,49,335,166,167,168,170,171,174,175,177,182,184,190,192,195,197,198,202,204,69,70,72,73,74,76,77,80,81,214,86,87,92,93,96,98,99,102,219,222,227,228,229,231,232,235,236,238,243,245,251,253,256,258,259,263,266,271,272,273,275,276,279,280,282,287,289,295,297,300,302,303,307],"tindex":"3270134c-dabc-11e4-a296-07edf7acfe8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-1},{"failures":[113,115],"tindex":"3270134d-dabc-11e4-a296-0dbef29195d4","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1042","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) != null)\n    com.graphhopper.storage.GraphStorage.close();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"3270134e-dabc-11e4-a296-6d6c92c5d706","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"3270134f-dabc-11e4-a296-89ace7b48b34","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":0},{"failures":[19,20,21,22,309,125,23,24,310,25,336,311,312,337,313,314,338,315,339,340,316,317,318,319,320,341,321,342,343,344,345,346,322,347,348,323,349,350,351,352,104,105,325,326,135,113,328,353,329,114,115,354,330,0,26,27,28,29,30,31,32,1,2,33,34,14,3,4,5,6,35,36,7,8,37,38,39,40,41,42,15,43,16,44,9,45,10,11,12,46,13,355,356,357,331,332,106,107,47,358,48,359,360,333,334,49,335,361,362,363,364,365,366,163,367,368,369,370,371,164,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,165,387,388,389,390,391,50,51,392,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,177,192,204,205,206,68,69,208,209,70,211,71,72,73,74,75,76,77,78,79,80,81,213,214,82,83,84,85,86,215,87,88,89,90,91,216,92,93,94,95,96,97,98,99,218,100,101,102,103,219,221,222,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,393,394,395,396,397,398,399],"tindex":"32703a60-dabc-11e4-a296-4918b1f51309","variableMapping":{"java.lang.Integer.MAX_VALUE":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"32703a61-dabc-11e4-a296-e1391f191ef3","variableMapping":{"edgeTo":"code","edgeFrom":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[19,23,24,310,336,207,70,219,222,266,400],"tindex":"327199f2-dabc-11e4-a296-c1113aa5230e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"327199f3-dabc-11e4-a296-b1dec95c7d2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"327199f4-dabc-11e4-a296-e3e562a43ce2","variableMapping":{"index":"err","entrySize":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:294","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[401,402,403,404],"tindex":"3272ab65-dabc-11e4-a296-27ca0815d93d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[337,147],"tindex":"3272ab66-dabc-11e4-a296-e9943ab41b3d","variableMapping":{"factor":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[116,117,405,118,119,120,121,406,407,122,123,124,372,378,380,381,408,52,58,60,61],"tindex":"3272ab67-dabc-11e4-a296-a15382ce0f83","variableMapping":{"value":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[27,14,5,10,11,12,13,206,69],"tindex":"3272d278-dabc-11e4-a296-bffcd7ef4502","variableMapping":{"defaultUTurnCost":"weight","weight":"weight"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[145],"tindex":"3272d279-dabc-11e4-a296-6f4356291272","variableMapping":{"bytePos":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"3272d27a-dabc-11e4-a296-47a989fc333b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"3272d27b-dabc-11e4-a296-4564a7bd060f","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"minutes","entityType":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":0},{"failures":[],"tindex":"3272d27c-dabc-11e4-a296-d72a04f815a6","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"3272d27d-dabc-11e4-a296-4139056a1c44","variableMapping":{"strLen":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","res":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:192","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"3272d27e-dabc-11e4-a296-61b5a9514b6f","variableMapping":{"checksum":"skippedEdge2","graph":"graph"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:99","type":"CtIfImpl","sourcecode":"if (int != (com.graphhopper.storage.Graph.getNodes()))\n    throw new java.lang.IllegalStateException((((\"index was created from a different graph with \" + int) + \". Current nodes:\") + (com.graphhopper.storage.Graph.getNodes())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[113,114,115],"tindex":"3272d27f-dabc-11e4-a296-a9f5b33ac033","variableMapping":{"tmpEntries":"component"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[],"tindex":"3272d280-dabc-11e4-a296-7db237fe3260","variableMapping":{"edgeId":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"3272d281-dabc-11e4-a296-37a1ca3eadcc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"3272d282-dabc-11e4-a296-73f075a246c4","variableMapping":{"len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[409,396],"tindex":"3272d283-dabc-11e4-a296-d5b946b6c9a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[21,341,410,143,144,149,411,412,413,414,415,416,107],"tindex":"3272d284-dabc-11e4-a296-6148c564adaf","variableMapping":{"size":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"3272d285-dabc-11e4-a296-07d392e23bfa","variableMapping":{"originalEdgesCount":"length","edgeDifference":"length","contractedNeighbors":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[19,20,21,22,309,125,23,417,24,310,25,336,418,311,312,337,313,314,338,315,339,340,316,317,419,318,319,320,341,420,321,421,422,423,342,424,425,426,427,343,343,344,344,345,345,346,346,322,322,347,347,348,348,323,323,349,349,350,350,351,351,352,352,428,324,104,105,325,326,135,113,328,353,329,114,115,354,330,0,26,27,28,29,30,31,32,1,2,33,34,14,3,4,5,6,35,36,7,8,37,38,39,40,41,42,15,43,16,44,9,45,10,11,12,46,13,355,356,357,331,332,106,107,47,358,48,359,360,333,334,49,335,361,429,430,431,432,433,362,363,364,365,366,163,367,368,369,370,371,164,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,165,434,387,388,389,390,435,391,50,51,392,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,436,177,192,437,438,439,204,205,206,68,69,207,208,209,70,210,211,71,212,72,73,74,75,76,77,78,79,80,81,213,214,82,83,84,85,86,215,87,88,89,90,91,216,92,217,93,94,95,96,97,98,99,218,100,101,102,103,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,440,441,400],"tindex":"3272f996-dabc-11e4-a296-b53a08aac69e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"3272f997-dabc-11e4-a296-a709a0ce2618","variableMapping":{"maxMCSpeed":"r","speed":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[],"tindex":"3272f998-dabc-11e4-a296-6325d52b7ab4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"3272f999-dabc-11e4-a296-0f8551763fc6","variableMapping":{"compressionLevel":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"3272f99a-dabc-11e4-a296-cb9c6e9d4348","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"3272f99b-dabc-11e4-a296-c3a52560b571","variableMapping":{"incomingEdges":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:585","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIterator.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[330],"tindex":"3272f99c-dabc-11e4-a296-830a4b7304a8","variableMapping":{"fwdFaster":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"3272f99d-dabc-11e4-a296-5b0ebabd82e2","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"start","tmpNode":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":0},{"failures":[],"tindex":"327320ae-dabc-11e4-a296-c73e5c65b891","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"327320af-dabc-11e4-a296-4fe4f5eee7c1","variableMapping":{"directionBitMask":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","flags":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","dir":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"327320b0-dabc-11e4-a296-f36dc6cb14ba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[442,140,147,151,443,444,445],"tindex":"327320b1-dabc-11e4-a296-3d626380bef3","variableMapping":{"newName":"key","name":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[161],"tindex":"327320b2-dabc-11e4-a296-75b10314d6dd","variableMapping":{"systemProperty":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"327320b3-dabc-11e4-a296-63fc0a0665f9","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[19,21,22,309,125,23,24,310,25,336,312,337,313,314,338,315,339,340,316,317,318,319,320,341,321,353,354,330,0,26,27,28,29,1,2,33,34,14,3,4,5,6,35,36,7,8,37,38,39,40,41,42,15,43,16,44,9,45,10,11,12,46,13,335,361,374,375,376,377,379,380,381,382,383,384,385,446,386,165,50,51,54,55,56,57,59,60,61,62,63,64,65,447,66,67,192,204,205,68,208,210,72,73,74,213,83,85,86,87,88,92,93,94,95,96,97,99,102,103,219,222,223,228,229,237,240,242,243,245,246,251,253,254,255,257,259,263,264,266,267,272,273,281,284,286,287,289,290,295,297,298,299,301,303,307,308,409,448,393,394,395,396,397,399],"tindex":"327320b4-dabc-11e4-a296-65ab96e32a39","variableMapping":{"tmpNo":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"327320b5-dabc-11e4-a296-e3b2587320fa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[],"tindex":"327320b6-dabc-11e4-a296-29f75afbdbbb","variableMapping":{"this":"g","index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1126","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getRemovedNodes().add(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[4,40],"tindex":"327320b7-dabc-11e4-a296-c9d7c33a4625","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"327320b8-dabc-11e4-a296-8f7b980963f7","variableMapping":{"err":"minNetworkSize","dLat":"minNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[131,132,401,161,402,449,450,403,451,452,404],"tindex":"327320b9-dabc-11e4-a296-738dc7463b89","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"paveType","speed":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"327320ba-dabc-11e4-a296-7b5f754ad38a","variableMapping":{"edgeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[17,18],"tindex":"327320bb-dabc-11e4-a296-e9917b8626dd","variableMapping":{"latSimilar":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[313,321],"tindex":"327320bc-dabc-11e4-a296-b38c3350bb0e","variableMapping":{"high":"forwardBit","guess":"forwardBit","low":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"327347cd-dabc-11e4-a296-53bdb9088de5","variableMapping":{"high":"importance","guess":"importance","low":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"327347ce-dabc-11e4-a296-dfbc4939a064","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[419,453],"tindex":"327347cf-dabc-11e4-a296-6ba4575e0dc8","variableMapping":{"mask":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"327347d0-dabc-11e4-a296-9be366b48891","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"327347d1-dabc-11e4-a296-95202ec71896","variableMapping":{"java.lang.Double.NaN":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:104","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"327347d2-dabc-11e4-a296-83fd3b583e11","variableMapping":{"splitIndex":"from","entrySize":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[27,29,31,1,33,14,454],"tindex":"327347d3-dabc-11e4-a296-1badf3596b37","variableMapping":{"red":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[1,14,455,17,456,18,457],"tindex":"327347d4-dabc-11e4-a296-81f0327262f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"327347d5-dabc-11e4-a296-55cbbafe790d","variableMapping":{"algo":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[],"tindex":"327347d6-dabc-11e4-a296-4fa0e93d4054","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[353,329,355,356,358,359,333,334,387,388,389,391],"tindex":"327347d7-dabc-11e4-a296-6961b80b11cf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[21,22,309,125,23,310,25,337,313,314,338,315,339,340,316,317,318,319,320,341,321,324,104,126,453,458,459,128,129,130,131,132,460,461,462,463,464,465,466,401,410,442,467,468,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,469,353,158,159,160,161,162,470,471,472,473,474,475,402,412,443,476,477,478,479,480,449,413,450,481,482,483,484,485,486,487,488,489,403,414,444,490,491,354,330,492,493,494,495,451,415,452,496,497,498,499,500,501,502,503,504,404,416,445,505,506,507,4,5,36,7,38,40,41,42,15,43,13,107,49,335,163,164,165,67,167,168,172,174,175,177,182,190,195,198,202,70,73,74,78,80,81,214,86,92,96,99,102,219,222,228,229,233,235,236,238,243,251,256,259,263,266,272,273,277,279,280,282,287,295,300,303,307],"tindex":"32736ee8-dabc-11e4-a296-5b8a9664161c","variableMapping":{"i":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:168","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"32736ee9-dabc-11e4-a296-b14c51bb9758","variableMapping":{"encoded":"flags","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":0},{"failures":[],"tindex":"32736eea-dabc-11e4-a296-4bee507a5e58","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[149],"tindex":"32736eeb-dabc-11e4-a296-c93d438060fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[130],"tindex":"32736eec-dabc-11e4-a296-11e50deba022","variableMapping":{"ghLocation":"trackType","osmFile":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"32736eed-dabc-11e4-a296-3361118ba2d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[26,27,1,14,10,204],"tindex":"32736eee-dabc-11e4-a296-8b3855721dbd","variableMapping":{"size":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:80","type":"CtLocalVariableImpl","sourcecode":"long long = (long) * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[128],"tindex":"32736eef-dabc-11e4-a296-6f75c0726af3","variableMapping":{"bytePos":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"32736ef0-dabc-11e4-a296-5da8bd463b8e","variableMapping":{"type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:178","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[19,21,22,23,24,25,0,26,27,28,29,30,31,32,1,2,33,34,14,3,4,5,6,35,36,7,8,37,38,39,40,41,42,15,43,16,44,9,45,10,11,12,46,13,47,48,49,50,51,392,52,53,54,55,56,57,58,59,60,61,62,63,64,65,447,66,67,204,205,206,68,69,207,208,209,70,210,71,72,73,74,75,76,77,78,79,80,81,213,82,83,84,85,86,215,87,88,89,90,91,216,92,217,93,94,95,96,97,98,99,218,100,101,102,103],"tindex":"32736ef1-dabc-11e4-a296-c7884d30960a","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1428","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"32739602-dabc-11e4-a296-6d526e29e0fe","variableMapping":{"fileDetails":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[19,20,21,22,309,125,23,24,310,25,336,311,312,337,313,314,338,315,339,340,316,317,318,319,320,341,321,342,343,343,344,344,345,345,346,346,322,322,347,347,348,348,323,323,349,349,350,350,351,351,352,352,428,324,104,105,325,326,135,113,328,353,329,114,115,354,330,0,26,27,28,29,30,31,32,1,2,33,34,14,3,4,5,6,35,36,7,8,37,38,39,40,41,42,15,43,16,44,9,45,10,11,12,46,13,355,356,357,331,332,106,107,47,358,48,359,360,333,334,49,335,361,362,363,364,365,366,163,367,368,369,370,371,164,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,165,434,387,388,389,390,391,50,51,392,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,177,192,204,205,206,68,69,207,208,209,70,210,211,71,72,73,74,75,76,77,78,79,80,81,213,214,82,83,84,85,86,215,87,88,89,90,91,216,92,217,93,94,95,96,97,98,99,218,100,101,102,103,219,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,508,409,393,394,395,509,510,396,397,398,399],"tindex":"32739603-dabc-11e4-a296-059a8e3061e0","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":45,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":344,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":207,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":507,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":167,"com.graphhopper.reader.OSMReaderTest.testFerry":337,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":333,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":334,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":55,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":20,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":112,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":404,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":506,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":237,"com.graphhopper.coll.CompressedArrayTest.testCompress":124,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":475,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":29,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":187,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":282,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":392,"com.graphhopper.util.AngleCalcTest.testOrientation":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":33,"com.graphhopper.GraphHopperTest.testPrepare":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":289,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":457,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":480,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":40,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":331,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":434,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":402,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":356,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":71,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":52,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":114,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":478,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":38,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":375,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":450,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":219,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":406,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":72,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":3,"com.graphhopper.GraphHopperTest.testLoadOSM":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":382,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":376,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":127,"com.graphhopper.reader.OSMReaderTest.testSort":338,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":414,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":319,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":223,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":301,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":266,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":200,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":323,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":258,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":217,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":278,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":220,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":451,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":227,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":468,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":59,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":43,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":51,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":57,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":36,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":74,"com.graphhopper.coll.OSMIDMapTest.testGetLong":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":241,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":247,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":215,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":70,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":88,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":110,"com.graphhopper.coll.CompressedArrayTest.testCompress2":123,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":130,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":238,"com.graphhopper.GraphHopperAPITest.testLoad":335,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":212,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":394,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":133,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":283,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":273,"com.graphhopper.storage.LevelGraphStorageTest.testClone":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":228,"com.graphhopper.reader.OSMReaderTest.testBarriers":315,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":496,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":37,"com.graphhopper.util.GHUtilityTest.testCopy":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":171,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":465,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":443,"com.graphhopper.routing.PathTest.testFindInstruction":105,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":472,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":229,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":455,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":49,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":139,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":218,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":495,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":302,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":287,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":31,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":503,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":327,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":172,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":269,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":399,"com.graphhopper.util.InstructionListTest.testWayList2":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":505,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":383,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":307,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":449,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":261,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":469,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":479,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":354,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":181,"com.graphhopper.storage.RAMDirectoryTest.testSynched":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":239,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":8,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":272,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":11,"com.graphhopper.coll.OSMIDMapTest.testGet":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":236,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":140,"com.graphhopper.routing.PathBidirRefTest.testExtract":325,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":90,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":431,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":484,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":264,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":483,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":165,"com.graphhopper.util.GHUtilityTest.testSort2":358,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":16,"com.graphhopper.reader.OSMReaderTest.testMain":314,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":485,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":407,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":444,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":92,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":224,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":214,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":85,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":102,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":82,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":251,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":493,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":87,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":341,"com.graphhopper.storage.StorablePropertiesTest.testStore":440,"com.graphhopper.storage.GraphHopperStorageTest.testClone":275,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":196,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":151,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":438,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":149,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":285,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":204,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":442,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":173,"com.graphhopper.routing.PathTest.testTime":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":464,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":100,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":156,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":435,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":186,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":216,"com.graphhopper.reader.OSMReaderTest.testRelation":419,"com.graphhopper.util.GHUtilityTest.testSortDirected":360,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":416,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":346,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":160,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":147,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":388,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":439,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":58,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":459,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":492,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":182,"com.graphhopper.search.NameIndexTest.testCreate":427,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":343,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":510,"com.graphhopper.routing.QueryGraphTest.testOneWay":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":446,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":118,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":374,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":116,"com.graphhopper.reader.OSMReaderTest.testWithBounds":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":260,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":328,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":347,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":188,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":453,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":73,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":211,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":504,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":476,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":250,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":243,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":271,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":5,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":304,"com.graphhopper.util.InstructionListTest.testWayList":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":482,"com.graphhopper.GraphHopperAPITest.testDisconnected179":361,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":174,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":501,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":312,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":185,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":508,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":202,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":489,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":309,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":277,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":34,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":477,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":2,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":461,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":403,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":46,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":270,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":447,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":448,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":509,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":491,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":265,"com.graphhopper.routing.PathTest.testWayList":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":462,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":178,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":411,"com.graphhopper.coll.OSMIDMapTest.testGet2":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":13,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":96,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":488,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":288,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":234,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":60,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":498,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":131,"com.graphhopper.util.GHUtilityTest.testSort":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":379,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":122,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":487,"com.graphhopper.search.NameIndexTest.testPut":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":263,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":53,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":365,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":391,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":369,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":415,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":330,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":221,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":310,"com.graphhopper.storage.MMapDirectoryTest.testSynched":436,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":460,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":422,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":113,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":398,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":192,"com.graphhopper.routing.PathTest.testFound":428,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":128,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":336,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":98,"com.graphhopper.util.AngleCalcTest.testAtan2":109,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":486,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":240,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":454,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":426,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":177,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":280,"com.graphhopper.util.InstructionListTest.testEmptyList":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":466,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":15,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":155,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":142,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":412,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":44,"com.graphhopper.reader.PrinctonReaderTest.testRead":311,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":303,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":56,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":235,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":176,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":166,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":245,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":499,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":458,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":463,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":494,"com.graphhopper.reader.OSMReaderTest.testFoot":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":190,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":352,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":423,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":101,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":380,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":158,"com.graphhopper.reader.OSMReaderTest.testOneWay":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":381,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":284,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":299,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":473,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":293,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":497,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":184,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":30,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":408,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":27,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":28,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":135,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":180,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":345,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":268,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":420,"com.graphhopper.routing.PathBidirRefTest.testExtract2":326,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":396,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":384,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":401,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":424,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":467,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":316,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":203,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":371,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":502,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":377,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":300,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":153,"com.graphhopper.GraphHopperTest.testFootAndCar":125,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":292,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":83,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":132,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":66,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":231,"com.graphhopper.storage.StorablePropertiesTest.testLoad":441,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":10,"com.graphhopper.GraphHopperTest.testPrepareOnly":19,"com.graphhopper.GraphHopperTest.testVia":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":490,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":168,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":318,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":69,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":107,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":296,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":137,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":317,"com.graphhopper.util.AngleCalcTest.testCombined":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":183,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":157,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":97,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":95,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":222}}]
