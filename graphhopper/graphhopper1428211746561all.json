[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"adcb87cb-db54-11e4-98bb-e32ed2369188","variableMapping":{"name":"wayTypeName","location":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:66","type":"CtReturnImpl","sourcecode":"return (java.lang.String) + (java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"adcbaedc-db54-11e4-98bb-b9adfe73c5e4","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"adcbaedd-db54-11e4-98bb-f9ff52a0c3f2","variableMapping":{"allBits":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[74,75,76],"tindex":"adcbaede-db54-11e4-98bb-4bca23949fc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"adcbaedf-db54-11e4-98bb-ff9cd73f2d8f","variableMapping":{"type":"defaultType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":0},{"failures":[],"tindex":"adcbaee0-db54-11e4-98bb-45028fc99c9b","variableMapping":{"red":"speed","green":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"adcbaee1-db54-11e4-98bb-b1ffb44644be","variableMapping":{"finishedTo":"defaultB","finishedFrom":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"adcbaee2-db54-11e4-98bb-83785377d901","variableMapping":{"that":"g","index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:125","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":-2},{"failures":[74,77,43,44,78,79,45,80,81,46,75,82,83,84,85,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,9,115,116,10,117,118,119,120,47,121,48,122,123,124,125,126,49,50,127,128,129,51,52,53,54,55,56,57,58,59,60,61,62,130,63,64,65,66,67,68,131,69,70,71,72,73,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,19,217,218,219,220,221,222,223,224,225,20,21,226,22,227,228,229,23,24,230,231,232,233,234,235,25,26,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,27,253,254,255,256,257,258,259,260,261,28,29,262,30,263,264,265,31,32,266,267,268,269,270,271,33,34,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,35,288,289,290,291,292,293,294,295,296,36,37,297,38,298,299,300,39,40,301,302,303,304,305,306,41,42,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"tindex":"adcbfc03-db54-11e4-98bb-b1e9bad11ba2","variableMapping":{"segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[0,327,3,6],"tindex":"adcbfc04-db54-11e4-98bb-f18e914a59d6","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"adcbfc05-db54-11e4-98bb-9f8af21d0f33","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[327,328,329],"tindex":"adcbfc06-db54-11e4-98bb-1f5a60abc7e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"adcbfc07-db54-11e4-98bb-1f30b294e42e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"adcbfc08-db54-11e4-98bb-5f03a459dbea","variableMapping":{"high":"flags","len":"flags","start":"dir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":0},{"failures":[],"tindex":"adcc2319-db54-11e4-98bb-6599b4bc7b9c","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":0},{"failures":[],"tindex":"adcc231a-db54-11e4-98bb-cf2337ad8368","variableMapping":{"high":"I_LEVEL","len":"index","start":"nodeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[330,331,332,333],"tindex":"adcc231b-db54-11e4-98bb-35d90b66568b","variableMapping":{"lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[74,77,43,44,78,79,45,80,81,46,75,84,85,76,86,87,88,89,90,91,92,93,94,95,96,177,178,179,180,181,334,335,336,202,208,211,212,218,337,338,245,247,248,254,271,282,283,289,306,339,340,341,342,318,322],"tindex":"adcc231c-db54-11e4-98bb-291e9122cdc1","variableMapping":{"size":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[9,117,118],"tindex":"adcc4a2d-db54-11e4-98bb-2fb8746309ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[],"tindex":"adcc4a2e-db54-11e4-98bb-599fbe422ba4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[343,344],"tindex":"adcc4a2f-db54-11e4-98bb-67bf6cbe4d4c","variableMapping":{"size":"i","keys":"elem","child":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:114","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"adcc4a30-db54-11e4-98bb-8f7f0b55e6e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[],"tindex":"adcc4a31-db54-11e4-98bb-419f29d9bc47","variableMapping":{"byteCount":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"adcc4a32-db54-11e4-98bb-93e682c3f8cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[43,345,346],"tindex":"adcc4a33-db54-11e4-98bb-ab7122478486","variableMapping":{"lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"adcc4a34-db54-11e4-98bb-191ba578acef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:940","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[347,348,349,350,351],"tindex":"adcc4a35-db54-11e4-98bb-033228d59980","variableMapping":{"empty":"blockByDefault"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"adcc4a36-db54-11e4-98bb-2d4e244dfdfc","variableMapping":{"r":"maxLonTmp","angle":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"adcc9857-db54-11e4-98bb-6312efe96b27","variableMapping":{"shiftSum":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":0},{"failures":[],"tindex":"adcc9858-db54-11e4-98bb-89d41dedaae8","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[74,77,43,44,78,45,80,81,46,75,84,76,86,87,88,89,90,91,92,93,94,95,96,98,99,101,102,103,104,105,106,108,109,110,119,120,70,135,136,137,141,352,353,354,355,356,357,358,359,163,164,165,187,188,189,360,361,202,17,362,363,211,215,230,25,239,242,364,245,247,251,266,33,275,278,282,286,301,41,310,313,365,339,366,367,368,369,370,371,372,341,373,374,375,376,377,378,318,319,324,325,326],"tindex":"adcc9859-db54-11e4-98bb-47f7d58c89b9","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"adcc985a-db54-11e4-98bb-edb38422c962","variableMapping":{"radiusInMeter":"minLat","com.graphhopper.util.DistanceCalcEarth.C":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"adcc985b-db54-11e4-98bb-e9f1ed5c133c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"adcc985c-db54-11e4-98bb-cd2546cd6d7a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"adcc985d-db54-11e4-98bb-f37736778469","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"turnRestrictionBit","roundaboutBit":"turnRestrictionBit","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","value":"restricted","forwardBit":"turnRestrictionBit","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[79,82,83,102,379,380,110,111,112,113,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,345,346,47,121,400,48,122,123,124,125,126,49,50,127,128,129,51,52,53,54,55,56,57,58,59,60,61,62,130,63,64,65,66,67,68,131,69,70,71,72,73,144,145,146,154,160,176,183,200,360,401,11,402,336,403,404,405,406,407,408,201,12,13,409,14,410,411,412,15,16,361,413,414,415,416,202,17,18,417,418,419,362,420,421,363,422,423,203,204,205,206,207,208,209,210,211,212,213,214,424,215,216,19,217,218,219,220,221,222,223,224,225,20,21,226,22,227,228,229,23,24,230,231,232,233,234,235,25,26,236,237,238,239,240,241,242,243,244,245,425,246,247,248,249,250,426,251,252,27,253,254,255,256,257,258,259,260,261,28,29,262,30,263,264,265,31,32,266,267,268,269,270,271,33,34,272,273,274,275,276,277,278,279,280,281,282,283,284,285,427,286,287,35,288,289,290,291,292,293,294,295,296,36,37,297,38,298,299,300,39,40,301,302,303,304,305,306,41,42,307,308,309,310,311,312,313,314,315],"tindex":"adccbf6e-db54-11e4-98bb-c39a48409f11","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-1},{"failures":[0,327,3,6],"tindex":"adccbf6f-db54-11e4-98bb-69c600090a7c","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"adccbf70-db54-11e4-98bb-1da2a845eb5b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"adccbf71-db54-11e4-98bb-b31420cf5fd1","variableMapping":{"initializedCounter":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":0},{"failures":[],"tindex":"adccbf72-db54-11e4-98bb-7f1f951b07f6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"adccbf73-db54-11e4-98bb-77692fc8482b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.Arrays.java.util.Arrays.asList(com.graphhopper.routing.util.FlagEncoder[]))"},"status":-2},{"failures":[],"tindex":"adccbf74-db54-11e4-98bb-d9151a848af8","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[120],"tindex":"adccbf75-db54-11e4-98bb-a774fd410a12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"adcce686-db54-11e4-98bb-a51a7639b629","variableMapping":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"adcce687-db54-11e4-98bb-2b7cb3ee18d7","variableMapping":{"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"com.graphhopper.storage.index.LocationIndexTreeSC.NO_SHORTCUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:947","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:187","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTreeSC.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[428],"tindex":"adcce688-db54-11e4-98bb-09347f4f5dbf","variableMapping":{"str":"minStr","mpInteger":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"adcce689-db54-11e4-98bb-efd3c4caef1f","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.PREFER","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.PREFER","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[90,97,429,396,430,431],"tindex":"adcce68a-db54-11e4-98bb-ff89c5cbacdf","variableMapping":{"orientation":"costs","java.lang.Math.PI":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"adcce68b-db54-11e4-98bb-35751288f1d0","variableMapping":{"lastIndex":"key","fromIndex":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-2},{"failures":[43,44,78,79,45,81,46,76,86,87,61,64,65,68,147,148,161,163,164,165,166,168,169,170,171,172,173,174,175,176,432,433,182,183,185,187,188,189,190,192,193,194,195,196,197,198,199,200],"tindex":"adcce68c-db54-11e4-98bb-435bf5c13be5","variableMapping":{"strLen":"dLon","bLen":"sLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"adcce68d-db54-11e4-98bb-a16d5fb0c211","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:61","type":"CtReturnImpl","sourcecode":"return \"PREPARE+\" + (com.graphhopper.routing.util.Weighting.toString())"},"status":-2},{"failures":[43,79,46,84,95,380,110,434,435,436,437,438,439,383,440,441,386,389,391,392,398,399,345,442,327,443,328,444,4,445,120,329,446,7,447,448,449,52,53,62,63,64,73,138,201,225,261,296],"tindex":"adcce68e-db54-11e4-98bb-4fb2fd978fbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"adcce68f-db54-11e4-98bb-fdeb6c024beb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"adcce690-db54-11e4-98bb-e7ff7d471c90","variableMapping":{"nodeThis":"priorityFromRelation","nextEdgeOther":"priorityFromRelation","nodeOther":"priorityFromRelation","nextEdge":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":0},{"failures":[],"tindex":"adcce691-db54-11e4-98bb-b5cac0cd8806","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:479","type":"CtLocalVariableImpl","sourcecode":"java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null)"},"status":-2},{"failures":[],"tindex":"adcce692-db54-11e4-98bb-9bf4e441e29a","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":0},{"failures":[90,96,450,451,452,434,453,3,4,5,454,120,455,6,7,8,456,52],"tindex":"adcce693-db54-11e4-98bb-d161f14bcef5","variableMapping":{"bytePos":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"adcce694-db54-11e4-98bb-ef015e52d63e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":0},{"failures":[],"tindex":"adcce695-db54-11e4-98bb-5d0f0c9faaf6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"adcce696-db54-11e4-98bb-2737fd7d401c","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"adcd0da7-db54-11e4-98bb-7f79e76625ef","variableMapping":{"lastInBoundsPillarNode":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"adcd0da8-db54-11e4-98bb-7f88b9a8e673","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[43,44,78,79,45,81,46,84,85,76,87,90,91,92,93,94,95,96,450,452,434,138],"tindex":"adcd0da9-db54-11e4-98bb-45368984fa22","variableMapping":{"high":"includeWay","guess":"includeWay","low":"includeWay"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[47,121,48,123,49,50,127,129,51,52,53,54,57,58,62,130,63,64,65,66,68,69,70,71,73,183,207],"tindex":"adcd0daa-db54-11e4-98bb-4508f9be446d","variableMapping":{"red":"lastEdgeIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[51,52,53,58,70,71,73],"tindex":"adcd0dab-db54-11e4-98bb-bfb5a79581ed","variableMapping":{"includeWay":"millis"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:347","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[457,458,459,460],"tindex":"adcd0dac-db54-11e4-98bb-d58666fcf44f","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"adcd0dad-db54-11e4-98bb-499ba5fc8489","variableMapping":{"workerThreads":"del"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"adcd0dae-db54-11e4-98bb-afb03dc05d3b","variableMapping":{"turnCostIndex":"index","NO_TURN_ENTRY":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"adcd0daf-db54-11e4-98bb-f1c11dc3aebc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[10],"tindex":"adcd0db0-db54-11e4-98bb-712d158c6969","variableMapping":{"indexWithMaxDist":"maxCount","lastIndex":"biggestStart","fromIndex":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"adcd0db1-db54-11e4-98bb-e56c3dc1793b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[461,450,452,436,327,453,4,455,7],"tindex":"adcd0db2-db54-11e4-98bb-13d085c93ba3","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[9,117,118],"tindex":"adcd0db3-db54-11e4-98bb-6db2362add28","variableMapping":{"edgeId":"nodes","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"nodes","nodeA":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[120],"tindex":"adcd0db4-db54-11e4-98bb-ff315b9bd9fb","variableMapping":{"orientation":"decEleSum","resultOrientation":"incDist2DSum","baseOrientation":"incDist2DSum","java.lang.Math.PI":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[462,463,464,465,466,467,468],"tindex":"adcd0db5-db54-11e4-98bb-5999a9f0dce6","variableMapping":{"factor":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[110,111,136,137,469,470,471,472],"tindex":"adcd0db6-db54-11e4-98bb-777b69530797","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"angle","speed":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"adcd0db7-db54-11e4-98bb-f18bad0fa3b9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[96,9,116,10,11,408,12,13,14,15,16,17,18,209,19,224,20,21,22,23,24,25,26,27,260,28,29,30,31,32,33,34,35,295,36,37,38,39,40,41,42],"tindex":"adcd34c8-db54-11e4-98bb-3fa390aa6684","variableMapping":{"oldPriorities":"mValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"adcd34c9-db54-11e4-98bb-390a53025c98","variableMapping":{"index":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-2},{"failures":[90,461,450,429,452,0,436,473,1,474,396,475,327,476,2,477,453,3,4,430,478,5,454,455,6,7,431,479,8,456],"tindex":"adcd34ca-db54-11e4-98bb-a90efb758712","variableMapping":{"size":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[],"tindex":"adcd34cb-db54-11e4-98bb-f37f81d705cc","variableMapping":{"bytePos":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"adcd34cc-db54-11e4-98bb-2d753bfbd6cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":0},{"failures":[380,434,119,120,52,62,205],"tindex":"adcd34cd-db54-11e4-98bb-8bb4229a8e7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:55","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Reverse Speed\" , int , int , double , com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\") , 30)"},"status":-1},{"failures":[],"tindex":"adcd34ce-db54-11e4-98bb-29efe4469496","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:284","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"adcd34cf-db54-11e4-98bb-515b05d97cc2","variableMapping":{"empty":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"adcd34d0-db54-11e4-98bb-51e1863aa969","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"adcd34d1-db54-11e4-98bb-5d1d25d9eb5b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"adcd34d2-db54-11e4-98bb-f72142e0c6d4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[347,348,349,350,351],"tindex":"adcd34d3-db54-11e4-98bb-df723e7bb3d8","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[84,389],"tindex":"adcd34d4-db54-11e4-98bb-e78005405257","variableMapping":{"radiusInMeter":"longTripsSpeed","lon":"longTripsSpeed","lat":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[],"tindex":"adcd5be5-db54-11e4-98bb-6555f80e72f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"adcd5be6-db54-11e4-98bb-434ab873b9f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[],"tindex":"adcd5be7-db54-11e4-98bb-354627ab6f0f","variableMapping":{"dist":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[74,77,43,44,78,79,45,80,81,46,75,84,85,76,86,87,88,89,90,91,461,92,93,94,95,480,96,450,434,481,435,0,436,482,483,1,437,484,330,474,439,440,485,385,386,387,388,389,391,392,393,399,442,327,331,486,2,443,487,477,328,453,488,3,444,4,489,490,491,5,445,492,332,454,329,455,493,6,446,7,494,495,496,8,447,497,333,456,448,138],"tindex":"adcd5be8-db54-11e4-98bb-3381611c459a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-1},{"failures":[],"tindex":"adcd5be9-db54-11e4-98bb-2dff2b9fb80a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"adcd5bea-db54-11e4-98bb-f9d453188dee","variableMapping":{"currentBucket":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:105","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-3},{"failures":[],"tindex":"adcd5beb-db54-11e4-98bb-bd43a3ad05d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[435,328,329],"tindex":"adcd5bec-db54-11e4-98bb-ef892229f55d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:638","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[],"tindex":"adcd5bed-db54-11e4-98bb-857000ec1cf9","variableMapping":{"str":"key","name":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":235,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":131,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":208,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":448,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":401,"com.graphhopper.reader.OSMReaderTest.testFerry":84,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":144,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":444,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":331,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":188,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":77,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":472,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":260,"com.graphhopper.coll.CompressedArrayTest.testCompress":468,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":123,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":361,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":296,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":184,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":365,"com.graphhopper.util.AngleCalcTest.testOrientation":469,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":127,"com.graphhopper.GraphHopperTest.testPrepare":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":420,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":47,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":62,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":133,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":214,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":185,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":328,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":60,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":164,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":278,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":245,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":51,"com.graphhopper.GraphHopperTest.testLoadOSM":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":171,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":165,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":382,"com.graphhopper.reader.OSMReaderTest.testSort":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":445,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":248,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":366,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":308,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":282,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":421,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":105,"com.graphhopper.storage.RAMDataAccessTest.testHeader":342,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":97,"com.graphhopper.storage.MMapDataAccessTest.testHeader":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":274,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":364,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":234,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":335,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":292,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":425,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":6,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":251,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":474,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":437,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":192,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":407,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":57,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":56,"com.graphhopper.coll.OSMIDMapTest.testGetLong":358,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":253,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":228,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":211,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":23,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":471,"com.graphhopper.coll.CompressedArrayTest.testCompress2":467,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":435,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":261,"com.graphhopper.GraphHopperAPITest.testLoad":147,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":424,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":319,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":348,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":36,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":35,"com.graphhopper.storage.LevelGraphStorageTest.testClone":218,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":428,"com.graphhopper.reader.OSMReaderTest.testBarriers":87,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":431,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":59,"com.graphhopper.util.GHUtilityTest.testCopy":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":403,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":200,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":457,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":487,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":377,"com.graphhopper.routing.PathTest.testFindInstruction":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":476,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":27,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":146,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":440,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":240,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":493,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":309,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":298,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":125,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":460,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":451,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":220,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":404,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":326,"com.graphhopper.util.InstructionListTest.testWayList2":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":172,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":277,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":345,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":453,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":119,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":283,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":430,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":28,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":58,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":287,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":88,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":70,"com.graphhopper.coll.OSMIDMapTest.testGet":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":259,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":334,"com.graphhopper.routing.PathBidirRefTest.testExtract":112,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":485,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":230,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":357,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":196,"com.graphhopper.storage.RAMDataAccessTest.testCopy":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":442,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":350,"com.graphhopper.storage.RAMDataAccessTest.testSegments":376,"com.graphhopper.util.GHUtilityTest.testSort2":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":66,"com.graphhopper.reader.OSMReaderTest.testMain":76,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":212,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":31,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":478,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":492,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":419,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":225,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":22,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":243,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":475,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":20,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":479,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":269,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":329,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":229,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":95,"com.graphhopper.storage.GraphHopperStorageTest.testClone":289,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":418,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":393,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":297,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":391,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":484,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":405,"com.graphhopper.routing.PathTest.testTime":380,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":483,"com.graphhopper.util.BitUtilLittleTest.testToFloat":353,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":241,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":219,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":398,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":16,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":232,"com.graphhopper.reader.OSMReaderTest.testRelation":461,"com.graphhopper.util.GHUtilityTest.testSortDirected":143,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":344,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":447,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":370,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":101,"com.graphhopper.GraphHopperTest.testFootOnly":46,"com.graphhopper.util.BitUtilLittleTest.testToInt":354,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":389,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":191,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":55,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":432,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":410,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":375,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":98,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":322,"com.graphhopper.routing.QueryGraphTest.testOneWay":107,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":163,"com.graphhopper.reader.OSMReaderTest.testWithBounds":94,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":378,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":497,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":13,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":441,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":450,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":216,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":213,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":481,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":477,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":268,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":160,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":263,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":286,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":53,"com.graphhopper.util.BitUtilLittleTest.testToBitString":352,"com.graphhopper.util.InstructionListTest.testWayList":136,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":489,"com.graphhopper.GraphHopperAPITest.testDisconnected179":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":406,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":464,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":495,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":15,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":422,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":78,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":128,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":304,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":50,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":239,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":394,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":72,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":427,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":321,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":454,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":281,"com.graphhopper.routing.PathTest.testWayList":110,"com.graphhopper.storage.MMapDataAccessTest.testCopy":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":388,"com.graphhopper.coll.OSMIDMapTest.testGet2":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":73,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":340,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":459,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":299,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":257,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":193,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":194,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":373,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":371,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":195,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":351,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":343,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.util.GHUtilityTest.testSort":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":416,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":449,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":279,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":426,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":152,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":186,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":181,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":157,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":446,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":120,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":155,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":246,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":347,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":264,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":9,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":325,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":202,"com.graphhopper.routing.PathTest.testFound":379,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":75,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":434,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":238,"com.graphhopper.util.AngleCalcTest.testAtan2":470,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":490,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":29,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":201,"com.graphhopper.util.InstructionListTest.testEmptyList":134,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":385,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":384,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":443,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":67,"com.graphhopper.reader.PrinctonReaderTest.testRead":82,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":310,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":189,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":258,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":408,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":462,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":360,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":265,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":458,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":429,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":482,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":455,"com.graphhopper.reader.OSMReaderTest.testFoot":85,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":415,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":169,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":242,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":466,"com.graphhopper.reader.OSMReaderTest.testOneWay":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":170,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":37,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":42,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":273,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":486,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":369,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":494,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":124,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":433,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":129,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":392,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":122,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":158,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":368,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":114,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":409,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":100,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":284,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":480,"com.graphhopper.routing.PathBidirRefTest.testExtract2":113,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":323,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":173,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":306,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":330,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":423,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":439,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":496,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":166,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":307,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":395,"com.graphhopper.GraphHopperTest.testFootAndCar":79,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":301,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":436,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":199,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":336,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":381,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":396,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":69,"com.graphhopper.GraphHopperTest.testPrepareOnly":74,"com.graphhopper.GraphHopperTest.testVia":43,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":153,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":11,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":92,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":207,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":138,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":305,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":383,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":411,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":399,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":237,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":26,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":247}}]
