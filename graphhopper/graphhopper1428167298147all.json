[{"failures":[],"tindex":"316c1a99-daed-11e4-a6ff-b1208a76b64e","variableMapping":{"value":"maxCount","numberOfBits":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-2},{"failures":[],"tindex":"316d04fa-daed-11e4-a6ff-6f654b4665a3","variableMapping":{"value":"start","numberOfBits":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"316d04fb-daed-11e4-a6ff-678c91c853f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"316d04fc-daed-11e4-a6ff-dba51127c7d8","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"val","sign":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":0},{"failures":[],"tindex":"316d2c0d-daed-11e4-a6ff-675200ab2a93","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,3,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"316d2c0e-daed-11e4-a6ff-f9d6ae752629","variableMapping":{"bytePos":"spatialKey"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[35,36,37,38,39,40,41,0,42,5,43,1,44,45,46,47,48,49,50,51,52],"tindex":"316d2c0f-daed-11e4-a6ff-b583b78f6e12","variableMapping":{"id":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-1},{"failures":[53],"tindex":"316d2c10-daed-11e4-a6ff-11fb33fb6c66","variableMapping":{"endIndexPlusOne":"shift","frontIndex":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"316d2c11-daed-11e4-a6ff-39f106d57696","variableMapping":{"acceptBit":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask","internalFlags":"flags1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[54,55,56],"tindex":"316d2c12-daed-11e4-a6ff-d916a8eb87ed","variableMapping":{"width":"speed","lonSimilar":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"316d2c13-daed-11e4-a6ff-81852211d6ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[15,16,57,58,59,60,19,61,62,63,25,29,30,64,33,65,66,67,34],"tindex":"316d2c14-daed-11e4-a6ff-619cd0c0abc6","variableMapping":{"segmentSizeInBytes":"i","capacity":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:413","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"316d2c15-daed-11e4-a6ff-cb2e0ab20897","variableMapping":{"edgeId":"key","nextEdge":"oldValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[68,69,70,71],"tindex":"316d5326-daed-11e4-a6ff-3fb7bf127c68","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"316d5327-daed-11e4-a6ff-675c24bfe409","variableMapping":{"prepared":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[72,73,54,74,75,76,55,77,78,56,79,80,81],"tindex":"316d5328-daed-11e4-a6ff-0721fecde4cd","variableMapping":{"i":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[82],"tindex":"316d5329-daed-11e4-a6ff-8bd99124636b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[83],"tindex":"316d532a-daed-11e4-a6ff-afff114c5a19","variableMapping":{"size":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"316d7a3b-daed-11e4-a6ff-7d5ccae85f2b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[84,85],"tindex":"316d7a3c-daed-11e4-a6ff-01baf32f3721","variableMapping":{"size":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"316d7a3d-daed-11e4-a6ff-410cbc8c8e6d","variableMapping":{"silent":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"316d7a3e-daed-11e4-a6ff-a52bf80a771c","variableMapping":{"midLat":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","maxLatTmp":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","minLatTmp":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","lat":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","hash":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,7,8,99,100,101,82,102,103,104,105,106,107,108,2,9,10,11,12,3,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"tindex":"316d7a3f-daed-11e4-a6ff-637374a11424","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[],"tindex":"316d7a40-daed-11e4-a6ff-b3c3284216d8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-2},{"failures":[],"tindex":"316d7a41-daed-11e4-a6ff-6d806bd1585c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[15,16,57,58,60,19,61,63,25,29,30,64,33,65,66,67,34],"tindex":"316da152-daed-11e4-a6ff-912e3dc528e3","variableMapping":{"min":"maxLatTmp","dist":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"316da153-daed-11e4-a6ff-3d567ef4cc75","variableMapping":{"nodeB":"capacity","edgeId":"capacity","nodeA":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"316dc864-daed-11e4-a6ff-bbf84a406d98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"316dc865-daed-11e4-a6ff-755d84d45ae6","variableMapping":{"nodeB":"noOfStates","edgeId":"noOfStates","reverse":"edgeBased","nodeA":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:510","type":"CtIfImpl","sourcecode":"if (boolean)\n    return int > int ? int : int + 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[162],"tindex":"316dc866-daed-11e4-a6ff-95b8f38ed1fa","variableMapping":{"eIter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:282","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-1},{"failures":[],"tindex":"316dc867-daed-11e4-a6ff-c3fc42ae8aa3","variableMapping":{"value":"allBits","numberOfBits":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-2},{"failures":[163,164,86,165,166,167,168,169,170,90,91,171,172,173,174,84,175,176,177,162,85,178,179,180,181,182,183,184,185,186,187,188,189,190,35,191,192,193,36,194,195,37,38,39,196,197,40,41,198,0,42,199,200,5,6,201,43,1,44,45,92,46,47,48,202,93,203,204,205,94,206,207,95,208,209,96,97,210,98,211,7,8,99,100,101,82,102,103,104,105,106,107,212,213,214,108,215,2,9,10,216,11,217,12,3,218,13,14,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,58,17,114,236,115,237,59,18,60,19,20,238,21,22,239,240,4,241,242,61,23,116,243,117,244,62,24,63,25,26,245,27,28,246,247,119,248,120,249,250,251,121,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,122,272,273,274,275,276,123,277,278,279,280,124,281,282,125,283,284,285,126,286,287,288,127,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,128,309,310,311,312,313,129,314,315,316,317,130,318,319,131,320,321,322,323,324,132,325,326,327,328,133,134,135,329,138,330,331,332,333,334,335,336,337,149,338,339,340,150,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,151,361,362,363,364,365,152,366,367,368,369,153,370,371,154,372,373],"tindex":"316f4f08-daed-11e4-a6ff-4dba09b0b0d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"316f4f09-daed-11e4-a6ff-0b4c2fd68570","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[184,35,36,45,46,330],"tindex":"316f761a-daed-11e4-a6ff-e7e35b06df95","variableMapping":{"guess":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"316f761b-daed-11e4-a6ff-1b4d82765576","variableMapping":{"i":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"316f761c-daed-11e4-a6ff-43b7e4b45686","variableMapping":{"precision":"lon","lat":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-2},{"failures":[374,72,375,376,377,378,74,75,379,380,381,77,382,383,384,385,83,386,387,79,80,388,389,82],"tindex":"316f761d-daed-11e4-a6ff-67ac12a69e86","variableMapping":{"nanoTime":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"316f761e-daed-11e4-a6ff-e5a27595f45b","variableMapping":{"cp":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"316f761f-daed-11e4-a6ff-2be283ecb982","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"316f7620-daed-11e4-a6ff-f5b3740a8d84","variableMapping":{"start":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[176,177,107,253,266,123,277,290,303,129,314,390,391,139,392,342,355,152,366],"tindex":"316f9d31-daed-11e4-a6ff-e5d58ef17b92","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-1},{"failures":[393],"tindex":"316fc442-daed-11e4-a6ff-c1c55834ab64","variableMapping":{"bytePos":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[35,51,52],"tindex":"316fc443-daed-11e4-a6ff-0bbf77bd19f6","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[394,395,396,397,398,399,98,211,7,99,100,101,102,103,104,105,107,2,9,10,216,3,218],"tindex":"316fc444-daed-11e4-a6ff-035772edcc02","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"316fc445-daed-11e4-a6ff-3bc1c53fab16","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[],"tindex":"316fc446-daed-11e4-a6ff-0fa53af0a79e","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"316fc447-daed-11e4-a6ff-a5c926009932","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[98,211,101,106,107,108,216,3,218],"tindex":"316fc448-daed-11e4-a6ff-258302e9cf65","variableMapping":{"pointIndex":"priorityFromRelation","index":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"316fc449-daed-11e4-a6ff-b16eb6349fcb","variableMapping":{"resultOrientation":"maxLon","orientation":"java.lang.Double.MAX_VALUE","java.lang.Math.PI":"java.lang.Double.MAX_VALUE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"316fc44a-daed-11e4-a6ff-f5e3d35db5a3","variableMapping":{"com.graphhopper.util.NumHelper.DEFAULT_PRECISION":"lat","this":"this","d1":"lat","d2":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[15,16,57,58,59,60,19,61,62,63,25,29,30,64,33,65,66,67],"tindex":"316fc44b-daed-11e4-a6ff-4b3daf3eebed","variableMapping":{"flags":"hash","mask":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"316fc44c-daed-11e4-a6ff-c145faf49b13","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[400],"tindex":"316feb5d-daed-11e4-a6ff-1bbcbac26b74","variableMapping":{"orientation":"shortTripsSpeed","java.lang.Math.PI":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[401],"tindex":"316feb5e-daed-11e4-a6ff-61a717e8df40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[84,162,85],"tindex":"316feb5f-daed-11e4-a6ff-8f141836ca13","variableMapping":{"keyIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[261,266,271,298,303,308,402,391,403,336,350,355,360],"tindex":"316feb60-daed-11e4-a6ff-bd9ef14dc13f","variableMapping":{"elem":"mValues","size":"mSize","i":"mSize","element":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"316feb61-daed-11e4-a6ff-756cb74c37ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[35,36,49,50,51,404,52],"tindex":"316feb62-daed-11e4-a6ff-ef9b69be4cb9","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"316feb63-daed-11e4-a6ff-7338e1018f69","variableMapping":{"currEdge":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[],"tindex":"316feb64-daed-11e4-a6ff-41eaf771dc7f","variableMapping":{"java.lang.Double.MAX_VALUE":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:372","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[84,162,85],"tindex":"316feb65-daed-11e4-a6ff-99da9ad3c6bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:97","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[179],"tindex":"316feb66-daed-11e4-a6ff-eb2478e245fd","variableMapping":{"factor":"fwdFaster"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[72,375,54,378,75,379,55,381,382,83,56,387,80,388],"tindex":"316feb67-daed-11e4-a6ff-7f130b1690b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[],"tindex":"316feb68-daed-11e4-a6ff-39613799a76b","variableMapping":{"elem":"mValues","size":"index","value":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:300","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        return int;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"316feb69-daed-11e4-a6ff-a5811a7ea324","variableMapping":{"lat":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"316feb6a-daed-11e4-a6ff-6f224e18742c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"316feb6b-daed-11e4-a6ff-8f323eefd391","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"316feb6c-daed-11e4-a6ff-e52e9af0d8bd","variableMapping":{"cp":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"316feb6d-daed-11e4-a6ff-8f3f5c9dfaf3","variableMapping":{"id":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"316feb6e-daed-11e4-a6ff-b3730feadb21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"3170127f-daed-11e4-a6ff-9f69bb31e31a","variableMapping":{"err":"importance","dLat":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"31701280-daed-11e4-a6ff-81c7b5dc6365","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"31701281-daed-11e4-a6ff-6b6c1bfdb377","variableMapping":{"algo":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":0},{"failures":[171,393,405,406,374,72,407,408,54,74,75,409,55,77,410,83,179,56,79,80,411,412,413,414,415,416,417,418,400,419,420,421,195,37,42,199,200,5,6,48,422,97,98,106,2,9,10,216,11,12,3,13,119,120,252,253,259,260,262,267,274,278,283,126,289,290,296,297,299,304,311,315,320,423,390,424,425,329,426,427,428,429,149,341,342,348,349,351,356,363,367,372],"tindex":"31701282-daed-11e4-a6ff-f70150cb0b10","variableMapping":{"bits":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[416],"tindex":"31701283-daed-11e4-a6ff-47361431f6e9","variableMapping":{"shift":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","backwardBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[185,35,192,36,38,40,42,200,201,45,92,46,48,332,334],"tindex":"31701284-daed-11e4-a6ff-4fe2d8e97434","variableMapping":{"fromX":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","toX":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-1},{"failures":[],"tindex":"31701285-daed-11e4-a6ff-f9ed2e0f77c5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[50,404],"tindex":"31701286-daed-11e4-a6ff-9d5deb4d49f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:152","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"31701287-daed-11e4-a6ff-b94772c7ed88","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"31701288-daed-11e4-a6ff-4d9a998791c6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[430],"tindex":"31701289-daed-11e4-a6ff-633843f29852","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"3170128a-daed-11e4-a6ff-3734b30c504e","variableMapping":{"index":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-2},{"failures":[],"tindex":"3170128b-daed-11e4-a6ff-1ba7fd1a7d32","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"3170128c-daed-11e4-a6ff-5b9ab886359f","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":0},{"failures":[],"tindex":"3170128d-daed-11e4-a6ff-1327fb4d81e4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"3170128e-daed-11e4-a6ff-313f671761bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"3170128f-daed-11e4-a6ff-39697e358589","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"31701290-daed-11e4-a6ff-37e4cd7b300d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[184,185,35,36,45,330],"tindex":"317039a1-daed-11e4-a6ff-eff05e9b7279","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"317039a2-daed-11e4-a6ff-e1f38f3212db","variableMapping":{"unpavedBit":"capacity","shift":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":0},{"failures":[],"tindex":"317039a3-daed-11e4-a6ff-cd22f0f4a967","variableMapping":{"dist":"minLon","com.graphhopper.util.DistanceCalcEarth.R":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"317039a4-daed-11e4-a6ff-ab04b0c8e802","variableMapping":{"nodesContracted":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":0},{"failures":[],"tindex":"317039a5-daed-11e4-a6ff-21f04330d8ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[179],"tindex":"317039a6-daed-11e4-a6ff-038f4eecb688","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[],"tindex":"317039a7-daed-11e4-a6ff-7375d0cba62f","variableMapping":{"iter":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"317039a8-daed-11e4-a6ff-291a06b838c4","variableMapping":{"value":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"317039a9-daed-11e4-a6ff-45989250535c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":0},{"failures":[],"tindex":"317039aa-daed-11e4-a6ff-57215055ad59","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[184,185,35,36,194,38,40,199,200,6,1,45,92,46,48,9,11,4,336],"tindex":"317060bb-daed-11e4-a6ff-11dd6a4d1f10","variableMapping":{"pointIndex":"nodeEntryBytes","index":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[],"tindex":"317060bc-daed-11e4-a6ff-6fb20e9ff5c3","variableMapping":{"maxMCSpeed":"com.graphhopper.util.AngleCalc.PI3_4","speed":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":44,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":93,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":335,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":393,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":423,"com.graphhopper.reader.OSMReaderTest.testFerry":98,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":173,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":73,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":243,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":215,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":261,"com.graphhopper.coll.CompressedArrayTest.testCompress":16,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":187,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":137,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":192,"com.graphhopper.GraphHopperTest.testPrepare":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":183,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":306,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":42,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":170,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":375,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":168,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":340,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":162,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":54,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":198,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":236,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":125,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":119,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":66,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":150,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":194,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":20,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":115,"com.graphhopper.reader.OSMReaderTest.testSort":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":409,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":176,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":249,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":316,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":126,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":33,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":207,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":214,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":280,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":364,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":295,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":331,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":256,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":121,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":350,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":383,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":24,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":6,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":241,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":197,"com.graphhopper.coll.OSMIDMapTest.testGetLong":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":196,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":342,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":271,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":357,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":149,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":359,"com.graphhopper.coll.CompressedArrayTest.testCompress2":15,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":308,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":55,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":262,"com.graphhopper.GraphHopperAPITest.testLoad":13,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":132,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":398,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":300,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":290,"com.graphhopper.storage.LevelGraphStorageTest.testClone":344,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":85,"com.graphhopper.reader.OSMReaderTest.testBarriers":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":41,"com.graphhopper.util.GHUtilityTest.testCopy":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":247,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":68,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":160,"com.graphhopper.routing.PathTest.testFindInstruction":210,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":361,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":253,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":172,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":416,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":370,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":231,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":317,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":304,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":266,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":337,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":53,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":346,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":288,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":135,"com.graphhopper.util.InstructionListTest.testWayList2":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":238,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":320,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":377,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":178,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":286,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":348,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":40,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":289,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":100,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":92,"com.graphhopper.coll.OSMIDMapTest.testGet":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":260,"com.graphhopper.routing.PathBidirRefTest.testExtract":181,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":401,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":111,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":245,"com.graphhopper.storage.RAMDataAccessTest.testCopy":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":139,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":374,"com.graphhopper.storage.RAMDataAccessTest.testSegments":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":395,"com.graphhopper.util.GHUtilityTest.testSort2":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":201,"com.graphhopper.reader.OSMReaderTest.testMain":7,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":270,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":67,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":69,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":363,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":250,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":351,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":355,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":372,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":205,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":56,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":324,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":358,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":106,"com.graphhopper.storage.GraphHopperStorageTest.testClone":292,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":321,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":419,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":330,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":70,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":333,"com.graphhopper.routing.PathTest.testTime":422,"com.graphhopper.util.BitUtilLittleTest.testToFloat":88,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":371,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":345,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":22,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":403,"com.graphhopper.util.GHUtilityTest.testSortDirected":166,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":404,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":411,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":147,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":204,"com.graphhopper.GraphHopperTest.testFootOnly":3,"com.graphhopper.util.BitUtilLittleTest.testToInt":89,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":400,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":62,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":426,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":158,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":202,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":327,"com.graphhopper.routing.QueryGraphTest.testOneWay":208,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":114,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":29,"com.graphhopper.reader.OSMReaderTest.testWithBounds":105,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":71,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":94,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":281,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":417,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":384,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":341,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":376,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":273,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":267,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":127,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":37,"com.graphhopper.util.BitUtilLittleTest.testToBitString":87,"com.graphhopper.util.InstructionListTest.testWayList":90,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":318,"com.graphhopper.GraphHopperAPITest.testDisconnected179":14,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":424,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":58,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":213,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":177,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":429,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":10,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":294,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":193,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":311,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":191,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":153,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":251,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":47,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":380,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":285,"com.graphhopper.routing.PathTest.testWayList":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":141,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":399,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":430,"com.graphhopper.coll.OSMIDMapTest.testGet2":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":48,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":272,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":305,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":258,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":293,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":63,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":356,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":25,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":156,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":397,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":381,"com.graphhopper.util.GHUtilityTest.testSort":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":18,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":405,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":34,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":283,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":229,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":221,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":79,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":206,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":179,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":219,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":248,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":268,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":84,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":134,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":138,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":83,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":218,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":369,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":332,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":264,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":329,"com.graphhopper.util.InstructionListTest.testEmptyList":169,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":0,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":407,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":43,"com.graphhopper.reader.PrinctonReaderTest.testRead":212,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":130,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":117,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":259,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":30,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":136,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":386,"com.graphhopper.reader.OSMReaderTest.testFoot":211,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":60,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":65,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":19,"com.graphhopper.reader.OSMReaderTest.testOneWay":107,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":301,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":314,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":279,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":146,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":309,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":188,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":185,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":420,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":186,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":222,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":180,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":116,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":203,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":287,"com.graphhopper.routing.PathBidirRefTest.testExtract2":182,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":235,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":382,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":78,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":82,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":414,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":237,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":315,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":347,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":128,"com.graphhopper.GraphHopperTest.testFootAndCar":216,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":353,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":77,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":246,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":45,"com.graphhopper.GraphHopperTest.testPrepareOnly":108,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":390,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":103,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":334,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":171,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":312,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":415,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":102,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":408,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":368,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":366,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":120}}]
