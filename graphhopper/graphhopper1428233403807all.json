[{"failures":[],"tindex":"1ac121c7-db87-11e4-8a30-bf4db409ee2a","variableMapping":{"pointer":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":0},{"failures":[0,1],"tindex":"1ac20c28-db87-11e4-8a30-af2be0dc8d45","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"1ac20c29-db87-11e4-8a30-47e71b8fb819","variableMapping":{"mask":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"1ac20c2a-db87-11e4-8a30-2fa6f694d427","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 5))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 5), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"1ac20c2b-db87-11e4-8a30-e72c58626dcb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[2,3,4,5,6,7,8],"tindex":"1ac20c2c-db87-11e4-8a30-9fbc940fa2d7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-1},{"failures":[],"tindex":"1ac20c2d-db87-11e4-8a30-df404d1defb9","variableMapping":{"fromDist":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[9,10],"tindex":"1ac20c2e-db87-11e4-8a30-31462e438e29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-1},{"failures":[],"tindex":"1ac20c2f-db87-11e4-8a30-35c9449f0731","variableMapping":{"java.lang.Integer.MAX_VALUE":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[11,12,13,14],"tindex":"1ac20c30-db87-11e4-8a30-11f637be00d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"1ac23341-db87-11e4-8a30-3534a0c42701","variableMapping":{"from":"guess","hash":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[37],"tindex":"1ac23342-db87-11e4-8a30-3bcdef7a697c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[],"tindex":"1ac23343-db87-11e4-8a30-09ef544ff897","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[15,38,39],"tindex":"1ac23344-db87-11e4-8a30-b585a7276fa8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[40],"tindex":"1ac23345-db87-11e4-8a30-43bc3a37b52f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"1ac23346-db87-11e4-8a30-79df716b506a","variableMapping":{"size":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":0},{"failures":[],"tindex":"1ac23347-db87-11e4-8a30-99cb38a86fd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"1ac23348-db87-11e4-8a30-6fa7ebf9e66c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:502","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"1ac23349-db87-11e4-8a30-d181d45049c5","variableMapping":{"factor":"bwSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"1ac2334a-db87-11e4-8a30-7719be073ee8","variableMapping":{"compressionLevel":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":0},{"failures":[],"tindex":"1ac2334b-db87-11e4-8a30-87d5081d926f","variableMapping":{"currentBucket":"err","retBucket":"err","currentIndex":"err","bucketSize":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"1ac2334c-db87-11e4-8a30-4bda506d9534","variableMapping":{"type":"com.graphhopper.storage.DAType.RAM_INT","defaultType":"com.graphhopper.storage.DAType.RAM_INT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[],"tindex":"1ac2334d-db87-11e4-8a30-e5f4e132eb1a","variableMapping":{"lastKey":"relBitMask","key":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"1ac2334e-db87-11e4-8a30-412d84f5c933","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[],"tindex":"1ac2334f-db87-11e4-8a30-37361e577498","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"1ac23350-db87-11e4-8a30-25664eee8165","variableMapping":{"high":"nodeB","len":"nodeB","start":"nodeB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[41,42],"tindex":"1ac25a61-db87-11e4-8a30-9d0a39680caa","variableMapping":{"orientation":"shortTripsSpeed","java.lang.Math.PI":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[2,41,43,44,45,46,47,10,48,49,50,51,52,53,54,55,56,4,57,58,59,17,60,61,5,62,63,64,65,66,67,68,69,70,71,22,72,73,6,74,75,76,77,78,79,80,81,27,82,83,7,84,85,86,87,88,89,90,32,91,92,8,93,94,95,96],"tindex":"1ac25a62-db87-11e4-8a30-1d607f990d72","variableMapping":{"bit":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[97,98,2,99,100,101,41,43,102,103,104,105,44,106,107,108,45,109,110,111,112,113,0,114,115,11,116,117,47,49,118,119,120,121,122,123,124,12,125,126,127,128,13,129,130,40,131,1,132,133,14,134,135,136,137,138,139,140,52,141,142,53,143,144,54,3,56,145,146,147,148,149,150,151,152,4,153,57,154,58,59,17,155,156,157,158,61,5,159,18,160,161,162,163,164,19,165,166,62,167,20,21,63,168,169,170,65,171,66,67,68,69,70,71,22,172,173,174,175,73,6,176,23,177,178,179,180,181,24,182,183,74,184,25,26,75,185,186,187,77,188,78,189,190,79,191,80,81,27,192,193,194,195,83,7,196,28,197,198,199,200,201,29,202,203,84,204,30,31,85,205,206,207,87,208,209,210,211,212,88,213,89,90,32,214,215,216,217,92,8,218,33,219,220,221,222,223,34,224,225,93,226,35,36,94,227,228,229,96,230],"tindex":"1ac25a63-db87-11e4-8a30-9d19af3841d4","variableMapping":{"bytePos":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-1},{"failures":[231,11,116,232,122,124,233,12,125,234,13,129,235,14,134,236],"tindex":"1ac25a64-db87-11e4-8a30-55ec97f72952","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"1ac25a65-db87-11e4-8a30-2374ef7f7be5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"1ac25a66-db87-11e4-8a30-71a37317cee3","variableMapping":{"flags":"encoded","tmpValue":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"1ac25a67-db87-11e4-8a30-8ddf2c6b4444","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[38],"tindex":"1ac28178-db87-11e4-8a30-0f0d3764a21c","variableMapping":{"i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"1ac28179-db87-11e4-8a30-d7486cb5f4e1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"1ac2817a-db87-11e4-8a30-15abd92940fe","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"1ac2817b-db87-11e4-8a30-339a5c05e763","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[97,2,99,43,119,120,237],"tindex":"1ac2817c-db87-11e4-8a30-2375eaeb4fa3","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"1ac2817d-db87-11e4-8a30-23704a450770","variableMapping":{"nodeThis":"maxCount","nextEdgeOther":"biggestStart","nodeOther":"biggestStart","nextEdge":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":0},{"failures":[],"tindex":"1ac2817e-db87-11e4-8a30-2bf76055b37c","variableMapping":{"str":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"1ac2817f-db87-11e4-8a30-e5f5dd722686","variableMapping":{"high":"allowed","len":"allowed","start":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"1ac28180-db87-11e4-8a30-61f2b745ba75","variableMapping":{"precision":"absY","lat":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[],"tindex":"1ac28181-db87-11e4-8a30-f5396ad378ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[97,238,239,240,241,242,243,244,245,246,247,41,102,103,248,104,105,44,106,249,250,107,108,45,251,252,253,254,255,150,57,58,256,20,64,257,258,259,260,70,261,184,25,76,262,78,79,80,263,30,86,88,89,264,35,95,265],"tindex":"1ac28182-db87-11e4-8a30-438944112d70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"1ac28183-db87-11e4-8a30-8937ef27cfb5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"1ac28184-db87-11e4-8a30-b5e89b175580","variableMapping":{"edgeId":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"1ac28185-db87-11e4-8a30-df186413037d","variableMapping":{"byteCount":"oldRelationFlags","longSegmentSize":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[16,18,21,23,26,28,31,33,36],"tindex":"1ac2a896-db87-11e4-8a30-9bf7c3ed2701","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[138,52,141,147,149,151,266,267,268],"tindex":"1ac2a897-db87-11e4-8a30-07095511a5e1","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[],"tindex":"1ac2a898-db87-11e4-8a30-31ddb3b92c8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"1ac2a899-db87-11e4-8a30-b1b1e28e9dd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"1ac2a89a-db87-11e4-8a30-b94488002ba7","variableMapping":{"resultOrientation":"orientation","orientation":"resultOrientation","java.lang.Math.PI":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"1ac2a89b-db87-11e4-8a30-17334056f14b","variableMapping":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"1ac2a89c-db87-11e4-8a30-2fbf6de4f14c","variableMapping":{"res":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"1ac2a89d-db87-11e4-8a30-abe6d39616e9","variableMapping":{"newAdjIndex":"start","newBaseIndex":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[15,16,17,269,159,18,161,19,165,20,21,22,270,176,23,178,24,182,25,26,27,271,196,28,198,29,202,30,31,32,272,218,33,220,34,224,35,36],"tindex":"1ac2a89e-db87-11e4-8a30-2b4262072705","variableMapping":{"ret":"key","retBucket":"i","i":"i","bucketSize":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[97,273,98,238,239,2,240,274,241,99,100,275,242,243,101,247,276,277,278,279,280,281,282,41,43,102,103,248,104,105,44,106,249,250,107,108,45,251,283,284,285,286,111,112,252,287,288,253,289,290,291,292,293,254,294,255,150,57,295,58,256,20,64,170,257,296,258,297,298,299,300,301,259,302,260,184,303,304,305,306,307,308,309,78,79,310,80,263,30,86,207,311,312,88,313,89,264,35,95,229,314,315,316,317,318,319,320,321],"tindex":"1ac2a89f-db87-11e4-8a30-8719a91dfd4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[120],"tindex":"1ac2a8a0-db87-11e4-8a30-0b7ef608f15f","variableMapping":{"tt":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[43,44,45,322,0,114,115,11,117,47,48,123,124,12,126,127,128,13,130,323,1,132,133,14,135],"tindex":"1ac2a8a1-db87-11e4-8a30-970d1e083d69","variableMapping":{"lastTime":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"1ac2a8a2-db87-11e4-8a30-a98861e39075","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":0},{"failures":[],"tindex":"1ac2a8a3-db87-11e4-8a30-bbbbb4ee0fb7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[120],"tindex":"1ac2a8a4-db87-11e4-8a30-0d739fe9187f","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"1ac2a8a5-db87-11e4-8a30-899dd8446c8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:111","type":"CtLocalVariableImpl","sourcecode":"byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int))"},"status":-2},{"failures":[],"tindex":"1ac2cfb6-db87-11e4-8a30-bd555b8edc7d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[324,325,326,327,328,267,329],"tindex":"1ac2cfb7-db87-11e4-8a30-41ad3abba3f1","variableMapping":{"i":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[97,98,238,239,2,240,274,241,99,100,43,102,103,248,104,105,44,106,249,250,107,45,40],"tindex":"1ac2cfb8-db87-11e4-8a30-7bbe2b37bd2b","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"1ac2cfb9-db87-11e4-8a30-b132396bb97a","variableMapping":{"strLen":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","bLen":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-2},{"failures":[],"tindex":"1ac2cfba-db87-11e4-8a30-e9f73fe8ceef","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[5,6,7,8],"tindex":"1ac2cfbb-db87-11e4-8a30-2d2f619ffb3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[],"tindex":"1ac2cfbc-db87-11e4-8a30-e354c16e976c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[330,331,328,332,267,333,329],"tindex":"1ac2cfbd-db87-11e4-8a30-217dd2bf9da8","variableMapping":{"arr":"elem","length":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:57","type":"CtReturnImpl","sourcecode":"return int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-1},{"failures":[273,98,238,239,2,240,274,241,100,334,335,275,242,243,101,336,247,337,338,339,340,41,43,102,103,248,105,44,106,249,250,107,108,341,45,342,109,37,343,42,344,345,346,110,9,347,348,50,15,349,40,16,38,350,252,287,290,293,351,352,51,138,139,140,52,141,142,53,143,54,3,55,56,145,146,147,148,149,150,151,152,4,266,353,330,354,331,355,328,267,268,333,356,329,357,57,58,59,17,156,157,60,61,5,162,164,62,167,63,168,64,65,70,71,22,173,174,72,73,6,179,181,74,184,75,185,76,77,78,79,80,81,27,193,194,82,83,7,199,201,84,204,85,205,86,87,209,358,88,89,90,32,215,216,91,92,8,221,223,93,226,94,227,95,96],"tindex":"1ac2cfbe-db87-11e4-8a30-a5dadc89eff5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:137","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"1ac2cfbf-db87-11e4-8a30-0b972eeca7ef","variableMapping":{"distance":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[342],"tindex":"1ac2cfc0-db87-11e4-8a30-ab6687253352","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"1ac2cfc1-db87-11e4-8a30-7f0a79b5c1d4","variableMapping":{"bytePos":"bytePos","segmentSizePower":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:310","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"1ac2cfc2-db87-11e4-8a30-e3c91f60a719","variableMapping":{"entry":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[],"tindex":"1ac2cfc3-db87-11e4-8a30-85235161b7b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:58","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":0},{"failures":[41,108,45,110],"tindex":"1ac2cfc4-db87-11e4-8a30-87e6cf3210aa","variableMapping":{"bytePos":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"1ac2cfc5-db87-11e4-8a30-d7ffa67e5719","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[98,238,240,274,359,51,138,139,140,52,141,142,53,143,144,54,3,55,56,145,146,147,148,149,150,151,152,4,353,330,354,331,355,328,332,267,333,356,329,357],"tindex":"1ac2f6d6-db87-11e4-8a30-35c4d5db2275","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[42,110,360,237,361,362,363],"tindex":"1ac2f6d7-db87-11e4-8a30-bf16adc8f7f9","variableMapping":{"sacScale":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[98,2,43,45,37,110],"tindex":"1ac2f6d8-db87-11e4-8a30-1f6d78328a75","variableMapping":{"high":"forwardBit","low":"backwardBit","guess":"backwardBit","guessedKey":"backwardBit","key":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"1ac2f6d9-db87-11e4-8a30-27838db1379c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"1ac2f6da-db87-11e4-8a30-770023747369","variableMapping":{"flags2":"flags","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"turnRestrictionBit","flags1":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[364],"tindex":"1ac2f6db-db87-11e4-8a30-8f79e3356572","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[0,115,11,123,124,12,128,13,1,133,14],"tindex":"1ac2f6dc-db87-11e4-8a30-9dedc7e4f155","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[97,273,98,238,239,2,240,274,241,99,100,334,335,365,366,367,275,242,243,101,336,368,369,247,370,371,337,338,372,339,340,41,43,102,103,248,104,105,44,106,249,250,107,108,45,111,112,118,15,349,40,16,38,39,252,287,288,253,373,289,290,291,292,293,254,374,294,255,351,352,137,51,138,139,140,52,141,142,53,143,144,54,3,55,56,145,146,147,148,149,150,151,152,4,266,353,330,354,331,355,328,332,267,268,333,356,329,357,153,57,295,375,154,58,59,17,155,156,157,376,158,60,61,269,5,159,18,160,161,162,163,164,19,165,256,377,166,62,378,167,20,21,63,379,168,64,380,169,170,65,171,381,382,383,384,385,257,296,258,386,387,388,389,390,391,392,393,394,395,66,396,397,398,399,400,67,297,298,299,300,301,401,402,403,404,405,68,406,407,259,302,260,408,409,410,411,412,413,414,415,416,417,69,6,184,78,190,79,310,418,191,80,81,27,192,193,194,419,195,82,83,271,7,196,28,197,198,199,200,201,29,202,263,420,203,84,421,204,30,31,85,422,205,86,423,206,207,87,208,424,425,426,427,209,428,210,211,358,312,429,212,88,313,430,213,89,90,32,214,215,216,431,217,91,92,272,8,218,33,219,220,221,222,223,34,224,264,432,225,93,433,226,35,36,94,434,227,95,435,228,229,96,230],"tindex":"1ac2f6dd-db87-11e4-8a30-5166e74f9da5","variableMapping":{"retBucket":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[324,359,325,326,327],"tindex":"1ac2f6de-db87-11e4-8a30-3fbd424beacf","variableMapping":{"intVal":"i","degree":"lastElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[436,437,438,439,440,441,442],"tindex":"1ac2f6df-db87-11e4-8a30-298155dbf82e","variableMapping":{"res":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"1ac2f6e0-db87-11e4-8a30-6b7ad85b70c8","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":0},{"failures":[443],"tindex":"1ac2f6e1-db87-11e4-8a30-a3510297d46f","variableMapping":{"mGarbage":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[98,238,239,2,240,241,99,334,335,137,51,138,139,140,52,141,142,53,143,144,54,3,55,56,145,146,147,149,150,151,152,4,266,330,267,268,357],"tindex":"1ac31df2-db87-11e4-8a30-9bf30969a6d2","variableMapping":{"initialized":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[122],"tindex":"1ac31df3-db87-11e4-8a30-87d9d7acf7d0","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[113,115,232,122,234,128,444,131,133,236],"tindex":"1ac31df4-db87-11e4-8a30-055d3d1df5af","variableMapping":{"cap":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"1ac31df5-db87-11e4-8a30-a761b62af9b8","variableMapping":{"distance":"lon","speed":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:140","type":"CtReturnImpl","sourcecode":"return com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[39],"tindex":"1ac31df6-db87-11e4-8a30-b3619eef21e0","variableMapping":{"newAdjIndex":"start","newBaseIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"1ac31df7-db87-11e4-8a30-4196d536b47f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"1ac31df8-db87-11e4-8a30-b9bfd54773d3","variableMapping":{"line":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"1ac31df9-db87-11e4-8a30-057be97112de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:346","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":0},{"failures":[],"tindex":"1ac31dfa-db87-11e4-8a30-37ab21950d4b","variableMapping":{"value":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":148,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":253,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":312,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":350,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":71,"com.graphhopper.reader.OSMReaderTest.testFerry":41,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":337,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":338,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":132,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":296,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":273,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":271,"com.graphhopper.coll.CompressedArrayTest.testCompress":437,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":331,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":261,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":5,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":383,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":314,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":333,"com.graphhopper.GraphHopperTest.testPrepare":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":147,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":266,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":144,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":275,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":366,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":384,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":38,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":53,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":302,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":78,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":89,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":326,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":357,"com.graphhopper.GraphHopperTest.testLoadOSM":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":413,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":260,"com.graphhopper.reader.OSMReaderTest.testSort":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":40,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":310,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":316,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":379,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":57,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":186,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":293,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":205,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":321,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":433,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":158,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":189,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":80,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":126,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":125,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":388,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":52,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":140,"com.graphhopper.coll.OSMIDMapTest.testGetLong":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":197,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":202,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":222,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":88,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":34,"com.graphhopper.coll.CompressedArrayTest.testCompress2":436,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":122,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":7,"com.graphhopper.GraphHopperAPITest.testLoad":334,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":425,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":443,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":159,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":17,"com.graphhopper.storage.LevelGraphStorageTest.testClone":215,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":81,"com.graphhopper.reader.OSMReaderTest.testBarriers":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":381,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":174,"com.graphhopper.util.GHUtilityTest.testCopy":247,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":66,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":362,"com.graphhopper.routing.PathTest.testFindInstruction":287,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":27,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":324,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":120,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":336,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":435,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":397,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":168,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":85,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":198,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":328,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":10,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":431,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":154,"com.graphhopper.util.InstructionListTest.testWayList2":243,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":414,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":111,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":295,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":91,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":196,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":297,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":141,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":104,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":150,"com.graphhopper.coll.OSMIDMapTest.testGet":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":83,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":237,"com.graphhopper.routing.PathBidirRefTest.testExtract":351,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":264,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":392,"com.graphhopper.storage.RAMDataAccessTest.testCopy":304,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":127,"com.graphhopper.storage.RAMDataAccessTest.testSegments":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":69,"com.graphhopper.util.GHUtilityTest.testSort2":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":145,"com.graphhopper.reader.OSMReaderTest.testMain":102,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":313,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":363,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":393,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":418,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":8,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":220,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":96,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":218,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":113,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":424,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":223,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":108,"com.graphhopper.storage.StorablePropertiesTest.testStore":311,"com.graphhopper.storage.GraphHopperStorageTest.testClone":156,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":171,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":110,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":160,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":345,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":209,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":175,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":211,"com.graphhopper.routing.PathTest.testTime":136,"com.graphhopper.util.BitUtilLittleTest.testToFloat":245,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":228,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":182,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":225,"com.graphhopper.util.GHUtilityTest.testSortDirected":371,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":116,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":289,"com.graphhopper.GraphHopperTest.testFootOnly":99,"com.graphhopper.util.BitUtilLittleTest.testToInt":246,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":42,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":387,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":179,"com.graphhopper.search.NameIndexTest.testCreate":279,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":308,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":288,"com.graphhopper.routing.QueryGraphTest.testOneWay":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":259,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":438,"com.graphhopper.reader.OSMReaderTest.testWithBounds":107,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":262,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":23,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":291,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":423,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":121,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":47,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":90,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":430,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":130,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":203,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":199,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":58,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":51,"com.graphhopper.util.BitUtilLittleTest.testToBitString":244,"com.graphhopper.util.InstructionListTest.testWayList":242,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":380,"com.graphhopper.GraphHopperAPITest.testDisconnected179":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":72,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":440,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":231,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":340,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":77,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":239,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":376,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":356,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":62,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":268,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":191,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":152,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":426,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":135,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":153,"com.graphhopper.routing.PathTest.testWayList":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":176,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":343,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":364,"com.graphhopper.coll.OSMIDMapTest.testGet2":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":4,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":94,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":420,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":163,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":195,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":389,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":390,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":305,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":265,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":391,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":325,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":123,"com.graphhopper.util.GHUtilityTest.testSort":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":410,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":442,"com.graphhopper.search.NameIndexTest.testPut":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":87,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":385,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":399,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":301,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":403,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":114,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":112,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":190,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":241,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":200,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":15,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":184,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":49,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":100,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":227,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":210,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":235,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":28,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":359,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":278,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":6,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":61,"com.graphhopper.util.InstructionListTest.testEmptyList":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":394,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":55,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":347,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":129,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":342,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":146,"com.graphhopper.reader.PrinctonReaderTest.testRead":339,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":64,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":258,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":270,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":286,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":70,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":322,"com.graphhopper.reader.OSMReaderTest.testFoot":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":74,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":255,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":282,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":411,"com.graphhopper.reader.OSMReaderTest.testOneWay":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":412,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":18,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":21,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":422,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":320,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":377,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":346,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":354,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":404,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":118,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":177,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":373,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":341,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":375,"com.graphhopper.routing.PathBidirRefTest.testExtract2":352,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":12,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":415,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":276,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":234,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":44,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":188,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":408,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":63,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":9,"com.graphhopper.GraphHopperTest.testFootAndCar":2,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":256,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":124,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":395,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":306,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":193,"com.graphhopper.GraphHopperTest.testPrepareOnly":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":149,"com.graphhopper.GraphHopperTest.testVia":98,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":22,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":249,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":358,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":101,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":378,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":50,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":180,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":348,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":434,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":36,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":79}}]
