[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"ee7fe0ae-db1d-11e4-b755-83a8ed8d4c54","variableMapping":{"weightApproximation":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,0,1,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,2,3,4,5,7,8,75,76,9],"tindex":"ee80f21f-db1d-11e4-b755-535dd80f3bad","variableMapping":{"turnCostsCount":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"ee80f220-db1d-11e4-b755-438ea8ba3f35","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"noOfStates","id":"noOfStates"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":0},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"ee80f221-db1d-11e4-b755-794bfe1a6f01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[107,108,109,110],"tindex":"ee80f222-db1d-11e4-b755-95e98a497814","variableMapping":{"from":"skippedEdge2","end":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[111],"tindex":"ee80f223-db1d-11e4-b755-db4f1129b6bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"ee80f224-db1d-11e4-b755-ab9b56ec4125","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:143","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"ee80f225-db1d-11e4-b755-c1ae21b4b9a7","variableMapping":{"segmentsToMap":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":0},{"failures":[],"tindex":"ee80f226-db1d-11e4-b755-25b62ae8a54a","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[21,33,112,113,114,115,116],"tindex":"ee811937-db1d-11e4-b755-e5f14516edba","variableMapping":{"pos":"index","mSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"ee811938-db1d-11e4-b755-d3cbe3378c25","variableMapping":{"guess":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-1},{"failures":[107,108,110,117,118],"tindex":"ee811939-db1d-11e4-b755-7bde1856d772","variableMapping":{"size":"from","i":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"ee81193a-db1d-11e4-b755-9d59fc3fef04","variableMapping":{"distance":"java.lang.Double.POSITIVE_INFINITY","maxSpeed":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"ee81193b-db1d-11e4-b755-657f9cafdffe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[119,120,121,122,123,124,115,125],"tindex":"ee81193c-db1d-11e4-b755-c984fa66f565","variableMapping":{"encoded":"encoded","backwardBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"ee81193d-db1d-11e4-b755-7955e52f09d5","variableMapping":{"res":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"ee81193e-db1d-11e4-b755-770d09b03597","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[18,126],"tindex":"ee81193f-db1d-11e4-b755-cbd0ca40f77c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-1},{"failures":[],"tindex":"ee811940-db1d-11e4-b755-e1cf378b87e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"ee811941-db1d-11e4-b755-637758857942","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[10,14,18,21,127,128],"tindex":"ee811942-db1d-11e4-b755-b3b9da3fe2a0","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"ee811943-db1d-11e4-b755-ada68c0b516b","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"start","tmpNode":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":0},{"failures":[129,130],"tindex":"ee811944-db1d-11e4-b755-d782b0d1de3d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-1},{"failures":[131,11,12,15,16,132,108,133,134,135,136,137,138,139,71,140,141,142,72,73,143,144,74,145,146,147,109,148,110,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"ee814055-db1d-11e4-b755-c3b1b5f2c978","variableMapping":{"minResolutionInMeter":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-1},{"failures":[140],"tindex":"ee814056-db1d-11e4-b755-89ab409b88f7","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[161,162,163,164,165,166],"tindex":"ee814057-db1d-11e4-b755-81c37ff9ebd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[],"tindex":"ee814058-db1d-11e4-b755-33d1836221b1","variableMapping":{"time":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[11,12,13,14,15,17,20,21,22,24,27,28,29,30,31,32,33,112,167,168],"tindex":"ee814059-db1d-11e4-b755-cb7d0f2b75a0","variableMapping":{"alreadyRun":"isRoundabout"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:80","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"ee81405a-db1d-11e4-b755-61aea7830000","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[112,127,169,170,171,172,130,173,174,175,176,177,178,179,180,181,182,183,116,142],"tindex":"ee81405b-db1d-11e4-b755-db0c1ded61df","variableMapping":{"defaultUTurnCost":"defaultD","weight":"defaultD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"ee81405c-db1d-11e4-b755-db998f86783e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"ee81405d-db1d-11e4-b755-e9a7ee8e51dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:41","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[27],"tindex":"ee81405e-db1d-11e4-b755-8d8226d9b543","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[184,185,159],"tindex":"ee81405f-db1d-11e4-b755-737beade4348","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"size","tmpNode":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[10,131,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,186,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,187,67,68,69,70,71,72,73,74],"tindex":"ee814060-db1d-11e4-b755-d96e236da580","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"ee814061-db1d-11e4-b755-43d1a058ae76","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"ee814062-db1d-11e4-b755-a12fa12adf6d","variableMapping":{"red":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[10,131,11,12,13,14,15,16,17,18,19,188,189,20,21,22,23,24,25,26,27,28,190,29,30,31,32,191,33,192,193,194,195,196,197,198,199,200,112,201,202,77,203,204,205,206,207,208,209,210,161,211,78,212,79,213,214,215,80,81,216,217,218,219,220,126,82,83,221,222,223,224,225,226,227,228,229,230,231,49,52,68,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,84,247,248,249,250,251,252,253,254,164,255,85,256,86,257,258,259,87,88,260,261,262,263,264,265,89,90,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,91,283,284,285,286,287,288,289,290,165,291,92,292,93,293,294,295,94,95,296,297,298,299,300,301,96,97,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,98,321,322,323,324,325,326,327,328,166,329,99,330,100,331,332,333,101,102,334,335,336,337,338,339,103,104,340,341,342,343,344,345,346,347,348,69,70,349,350,351,127,352,353,169,128,170,105,354,355,106,356,357,358,359,360,171,167,361,362,363,364,113,168,365,366,367,368,369,370,172,129,130,371,372,373,374,375,376,377,378,173,379,380,119,114,381,382,383,175,384,176,385,386,387,388,389,390,391,392,177,393,120,394,178,121,395,396,179,397,398,399,400,401,402,403,404,405,406,407,180,408,409,122,410,111,411,181,123,412,413,182,414,415,416,417,418,419,420,421,422,423,424,183,425,426,124,427,115,428,429,125,430,116,431,432,433,434,435,436,107,108,133,134,135,136,137,138,139,71,140,141,142,72,73,143,144,74,145,146,147,109,148,110,117,149,437,150,151,152,153,154,155,156,118,157,158,159,160,438,439],"tindex":"ee816773-db1d-11e4-b755-5f8460acd81e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[184,440,185,441,108,133,134,137,138,71,140,72,143,144,74,145,146,147,109,148,110,152,153,154,156,159],"tindex":"ee816774-db1d-11e4-b755-a1d1e6cdf0e2","variableMapping":{"values":"elem","i":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:323","type":"CtAssignmentImpl","sourcecode":"int[][int] = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"ee816775-db1d-11e4-b755-0f34dca4d7f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[116],"tindex":"ee816776-db1d-11e4-b755-ff65719567fd","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"ee816777-db1d-11e4-b755-7b8f75d9ee15","variableMapping":{"foundIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[185,71,154,156,159],"tindex":"ee816778-db1d-11e4-b755-0992e6ec89b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[107,140],"tindex":"ee816779-db1d-11e4-b755-01355e7cafae","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[10,131,11,12,13,14,15,16,17,18,19,188,189,20,21,22,23,24,25,26,27,28,29,30,31,32,33,192,193,194,195,442,443,196,444,445,197,198,199,200,112,446,447,161,126,448,449,450,451,452,230,453,454,455,456,457,231,458,459,460,461,462,463,34,35,36,37,38,39,40,41,42,43,44,45,46,47,186,48,49,51,52,464,53,54,55,56,57,58,59,60,61,62,63,64,65,66,187,67,68,465,466,467,468,469,470,471,472,473,474,232,233,234,235,236,237,238,239,240,241,242,243,245,246,84,247,248,249,250,251,252,253,254,164,255,85,256,86,257,258,259,87,88,260,261,262,263,264,265,89,90,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,91,283,284,285,286,287,288,289,290,165,291,92,292,93,293,294,295,94,95,296,297,298,299,300,301,96,97,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,319,320,98,321,322,323,324,325,326,327,328,166,329,99,330,100,331,332,333,101,102,334,335,336,337,338,339,103,104,340,341,342,343,344,345,346,347,348,69,70,351,105,354,355,106,356,357,410,111,431,432,433,434,435,436,107,108,133,134,135,136,137,138,139,71,140,141,142,72,73,143,144,74,145,146,147,109,148,110,117,149,150,151,152,153,154,155,156,118,157,158,159,160,475,475,476,476,477,477,478,478,438,438,479,479,480,480,439,439,481,481,482,482,483,483,484,484],"tindex":"ee818e8a-db1d-11e4-b755-dbcb5d94d21c","variableMapping":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[11,108,134,142,144,146,147,109,110,150,156,159],"tindex":"ee818e8b-db1d-11e4-b755-27409f4a233c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[111],"tindex":"ee818e8c-db1d-11e4-b755-671d0f10d58b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[171],"tindex":"ee82c70d-db1d-11e4-b755-059dfede91be","variableMapping":{"name":"tt","this":"this","refName":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:444","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String += \", \" + java.lang.String;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"ee82c70e-db1d-11e4-b755-5f48f2949a6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"ee82c70f-db1d-11e4-b755-371ef6f441c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"ee82c710-db1d-11e4-b755-17a24786b3b4","variableMapping":{"store":"store"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"ee82c711-db1d-11e4-b755-c90ab3de6dbe","variableMapping":{"args":"this","cgiarProvider":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:506","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.CGIARProvider.setAutoRemoveTemporaryFiles(com.graphhopper.util.CmdArgs.getBool(\"graph.elevation.cgiar.clear\", true))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"ee82c712-db1d-11e4-b755-2da2364244be","variableMapping":{"edgeTo":"int0","edgeFrom":"int0"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"ee82c713-db1d-11e4-b755-0b38f0eb4cee","variableMapping":{"shift":"allBits","backwardBit":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"ee82c714-db1d-11e4-b755-57f039196019","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[370,383,399,416],"tindex":"ee82c715-db1d-11e4-b755-cd4e91dc0c1d","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[],"tindex":"ee82ee26-db1d-11e4-b755-0f9f7d844be5","variableMapping":{"nanoTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"ee82ee27-db1d-11e4-b755-ed08522a60a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[10,131,11,12,13,14,15,16,17,18,19,188,189,20,21,22,23,24,25,26,27,28,29,30,31,32,33,192,193,194,195,442,443,196,444,445,197,198,199,200,112,446,447,201,202,77,203,204,205,206,207,208,209,210,161,211,78,212,79,213,214,215,80,81,216,217,218,219,220,126,82,83,221,222,223,224,225,226,227,228,229,448,449,450,451,485,452,230,453,454,455,456,486,457,231,458,459,460,461,462,487,463,34,35,36,37,38,39,40,41,42,43,44,45,46,47,186,48,49,51,52,464,53,54,55,56,57,58,59,60,61,62,63,64,65,66,187,67,68,232,233,234,235,236,237,238,239,240,241,242,243,245,246,84,247,248,249,250,251,252,253,254,164,255,85,256,86,257,258,259,87,88,260,261,262,263,264,265,89,90,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,91,283,284,285,286,287,288,289,290,165,291,92,292,93,293,294,295,94,95,296,297,298,299,300,301,96,97,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,98,321,322,323,324,325,326,327,328,166,329,99,330,100,331,332,333,101,102,334,335,336,337,338,339,103,104,340,341,342,343,344,345,346,347,348,488,69,70,351,105,354,355,106,356,357,410,111,431,432,433,434,435,436,107,108,133,134,135,136,137,138,139,71,140,141,142,72,73,143,144,74,145,146,147,109,148,110,117,149,150,151,152,153,154,155,156,118,157,158,159,160,475,475,476,476,477,477,478,478,438,438,479,479,480,480,439,439,481,481,482,482,483,483,484,484],"tindex":"ee82ee28-db1d-11e4-b755-474e319df0e7","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"ee82ee29-db1d-11e4-b755-bf7ef7958060","variableMapping":{"line":"encoderList"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-2},{"failures":[],"tindex":"ee82ee2a-db1d-11e4-b755-11b35e3eb01a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"ee82ee2b-db1d-11e4-b755-e3be6eb24ecc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[161,162,163,164,165,166],"tindex":"ee82ee2c-db1d-11e4-b755-194e09c634cc","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[129,130,378,176,392,396,397,407,413,414,424],"tindex":"ee82ee2d-db1d-11e4-b755-85a9e02cb19e","variableMapping":{"encoded":"unpavedBit","backwardBit":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[24,29,349,359,371,386,400,417],"tindex":"ee82ee2e-db1d-11e4-b755-ebc98d615aa4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[21,26,129,378,175,176,392,396,397,407,413,414,424,116],"tindex":"ee82ee2f-db1d-11e4-b755-c30fafc4a634","variableMapping":{"fullyLoaded":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1079","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[0,1,34,40,42,43,50,53,59,61,62,2,3,4,5,7,8,75,76,9],"tindex":"ee82ee30-db1d-11e4-b755-378e2c6a2268","variableMapping":{"res":"hash","maxBit":"hash","delta":"allBits","maxBits":"allBits","value":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:288","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long <<= 1) {\n    if ((long & long) != 0)\n        long |= 1;\n    \n    long <<= 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[131,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,191,33,193,112,201,206,208,161,222,224,230,231,49,52,68,232,234,236,245,250,252,164,267,269,281,286,288,165,303,305,319,324,326,166,341,343,350,351,352,358,171,167,362,363,364,113,168,369,172,173,114,381,382,175,177,178,180,410,111,181,183,435,436,107,108,140,142,72,117,118,439],"tindex":"ee831541-db1d-11e4-b755-9948bda1e4b5","variableMapping":{"bm":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-1},{"failures":[],"tindex":"ee831542-db1d-11e4-b755-91c2a5fcc2e2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[20,21,22,23,25,26,27,28,31,32,33,172,129,130,378,380,119,175,176,385,392,120,178,121,396,179,397,407,409,122,181,123,413,182,414,424,426,124,125,116],"tindex":"ee831543-db1d-11e4-b755-b3ffb596c797","variableMapping":{"segmentSizeInBytes":"speed","index":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-1},{"failures":[10,131,11,12,13,14,15,489,16,17,18,19,490,188,189,20,21,22,23,24,25,26,27,28,190,29,30,31,32,33,193,194,195,442,443,196,444,491,445,197,198,199,200,112,446,447,201,202,77,203,204,205,206,207,208,209,210,161,211,78,212,79,213,214,215,80,81,216,217,218,219,220,126,82,83,221,222,223,224,225,226,227,228,229,448,449,450,451,485,452,230,453,454,455,456,486,457,231,459,460,461,462,487,463,34,35,36,37,38,39,40,41,42,43,44,45,46,47,186,48,49,51,52,464,53,54,55,56,57,58,59,60,61,62,63,64,65,66,187,67,68,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,84,247,248,249,250,251,252,253,254,164,255,85,256,86,257,258,259,87,88,260,261,262,263,264,265,89,90,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,91,283,284,285,286,287,288,289,290,165,291,92,292,93,293,294,295,94,95,296,297,298,299,300,301,96,97,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,98,321,322,323,324,325,326,327,328,166,329,99,330,100,331,332,333,101,102,334,335,336,337,338,339,103,104,340,341,342,343,344,345,346,347,348,69,70,492,493,349,350,351,127,352,353,169,128,170,105,354,355,106,356,357,358,359,360,171,167,361,362,363,364,113,168,365,366,367,368,369,370,172,129,130,371,372,373,374,375,376,377,378,173,379,380,119,381,382,383,175,384,176,385,386,387,388,389,390,391,392,177,393,120,394,178,121,395,396,179,397,398,399,400,401,402,403,404,405,406,407,180,408,409,122,410,111,411,181,123,412,413,182,414,415,416,417,418,419,420,421,422,423,424,183,425,426,124,427,430,116,431,432,433,434,435,436,494,107,108,133,134,135,136,137,138,139,71,140,141,142,72,73,143,144,74,145,146,147,109,148,110,117,149,437,150,151,152,153,154,155,156,118,157,158,159,160,495,475,476,477,478,438,479,480,439,481,482,483,484,496,497],"tindex":"ee831544-db1d-11e4-b755-6358732932d9","variableMapping":{"str":"entry","name":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[174],"tindex":"ee831545-db1d-11e4-b755-fd1d16c3aa09","variableMapping":{"version":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-1},{"failures":[131,11,12,13,14,15,16,17,19,21,22,23,24,26,27,28,29,30,31,32,191,33,358,171,361,362,364,168],"tindex":"ee831546-db1d-11e4-b755-5bf6b60224fe","variableMapping":{"tt":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"ee831547-db1d-11e4-b755-81fea33dbe8b","variableMapping":{"empty":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"ee831548-db1d-11e4-b755-2143c6b8b2e3","variableMapping":{"line":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-2},{"failures":[128],"tindex":"ee831549-db1d-11e4-b755-6f0e065d857f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[10,131,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,498,499,500,501],"tindex":"ee833c5a-db1d-11e4-b755-3be6881b7b3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[105,356,357],"tindex":"ee833c5b-db1d-11e4-b755-c72038918245","variableMapping":{"size":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[107,108,133,136,137,74,146,147,109,110,117,156,118,160],"tindex":"ee833c5c-db1d-11e4-b755-95af6e1db300","variableMapping":{"EMPTY_FLAGS":"millis","turnFlags":"millis"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:127","type":"CtIfImpl","sourcecode":"if (long == (long))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"ee833c5d-db1d-11e4-b755-abd3f70cba51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:310","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":0},{"failures":[],"tindex":"ee833c5e-db1d-11e4-b755-890a7a6fec57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"ee833c5f-db1d-11e4-b755-49276faa5414","variableMapping":{"elem":"mValues","i":"valueIfKeyNotFound","value":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:302","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"ee833c60-db1d-11e4-b755-f9989c0970b0","variableMapping":{"nanoTime":"scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"ee833c61-db1d-11e4-b755-e5a0d56b49f7","variableMapping":{"towerNodeDistance":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[111],"tindex":"ee833c62-db1d-11e4-b755-43c91a091eba","variableMapping":{"edgePointer":"flags","edgeEntryBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","nextEdge":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"ee833c63-db1d-11e4-b755-cdebf4380c12","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[0,1,34,40,42,43,50,53,59,61,62,2,3,5,7,8,75,76,9],"tindex":"ee833c64-db1d-11e4-b755-6d1c4ebd53a2","variableMapping":{"factor":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[355],"tindex":"ee833c65-db1d-11e4-b755-5b51c316cf64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"ee833c66-db1d-11e4-b755-47ffddb934d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.Arrays.java.util.Arrays.asList(com.graphhopper.routing.util.FlagEncoder[]))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"ee833c67-db1d-11e4-b755-45e6add53a1b","variableMapping":{"time":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"ee833c68-db1d-11e4-b755-69aa4e55c11f","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":0},{"failures":[],"tindex":"ee833c69-db1d-11e4-b755-ff6df25d1701","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"ee833c6a-db1d-11e4-b755-fd449070c433","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-2},{"failures":[],"tindex":"ee833c6b-db1d-11e4-b755-ab3b97f496e0","variableMapping":{"size":"dLat","i":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"ee833c6c-db1d-11e4-b755-57de0d4f241b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[172],"tindex":"ee83637d-db1d-11e4-b755-0528a60a498d","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[10,131,11,12,13,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,502,503,504,505,506,507,508,509,510,511,512,513,514,162,515,516,517,518,519,520,521,522,163,311,523],"tindex":"ee83637e-db1d-11e4-b755-bf0c72b027f2","variableMapping":{"width":"segmentSizePower","i":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"ee83637f-db1d-11e4-b755-a7a6411f1b06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-2},{"failures":[524],"tindex":"ee836380-db1d-11e4-b755-d34831a5afa6","variableMapping":{"key":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":145,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":476,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":114,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":237,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":455,"com.graphhopper.GraphHopperAPITest.testNoLoad":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":202,"com.graphhopper.reader.OSMReaderTest.testFerry":20,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":194,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":195,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":179,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":56,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":131,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":328,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":391,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":152,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":216,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":464,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":507,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":519,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":157,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":117,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":295,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":441,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":140,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":392,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":447,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":243,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":356,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":178,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":139,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":37,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":397,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":311,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":75,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":245,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":160,"com.graphhopper.GraphHopperTest.testLoadOSM":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":44,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":469,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":38,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":430,"com.graphhopper.reader.OSMReaderTest.testSort":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":180,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":315,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":509,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":303,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":276,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":226,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":439,"com.graphhopper.routing.DijkstraTest.initializationError":496,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":342,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":523,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":264,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":287,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":312,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":413,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":173,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":60,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":93,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":73,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":58,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":136,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":135,"com.graphhopper.coll.OSMIDMapTest.testGetLong":505,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":330,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":321,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":258,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":240,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":87,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":172,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":166,"com.graphhopper.GraphHopperAPITest.testLoad":69,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":244,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":468,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":349,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":291,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":91,"com.graphhopper.storage.LevelGraphStorageTest.testClone":248,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":524,"com.graphhopper.reader.OSMReaderTest.testBarriers":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":320,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":357,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":138,"com.graphhopper.util.GHUtilityTest.testCopy":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":205,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":68,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":393,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":486,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":522,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":388,"com.graphhopper.routing.PathTest.testFindInstruction":436,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":98,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":184,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":169,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":193,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":412,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":454,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":304,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":340,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":154,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":422,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":429,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":495,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":206,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":279,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":474,"com.graphhopper.util.InstructionListTest.testWayList2":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":221,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":45,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":309,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":324,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":396,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":488,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":345,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":381,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":410,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":398,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":510,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":459,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":137,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":282,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":25,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":508,"com.graphhopper.routing.AStarTest.initializationError":493,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":147,"com.graphhopper.coll.OSMIDMapTest.testGet":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":327,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":128,"com.graphhopper.routing.PathBidirRefTest.testExtract":431,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":401,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":504,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":64,"com.graphhopper.storage.RAMDataAccessTest.testCopy":516,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":511,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":82,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":175,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":400,"com.graphhopper.storage.RAMDataAccessTest.testSegments":521,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":49,"com.graphhopper.util.GHUtilityTest.testSort2":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":143,"com.graphhopper.reader.OSMReaderTest.testMain":22,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":241,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":402,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":76,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":408,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":171,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":316,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":164,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":86,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":273,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":255,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":337,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":181,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":467,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":259,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":32,"com.graphhopper.storage.GraphHopperStorageTest.testClone":284,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":222,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":168,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":500,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":292,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":364,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":232,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":207,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":235,"com.graphhopper.routing.PathTest.testTime":434,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":375,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":271,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":249,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":369,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":487,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":81,"com.graphhopper.reader.OSMReaderTest.testRelation":190,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":262,"com.graphhopper.util.GHUtilityTest.testSortDirected":445,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":183,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":498,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":514,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":478,"com.graphhopper.GraphHopperTest.testFootOnly":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":384,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":362,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":460,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":59,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":213,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":520,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":475,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":471,"com.graphhopper.routing.QueryGraphTest.testOneWay":482,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":186,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":387,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":36,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":2,"com.graphhopper.reader.OSMReaderTest.testWithBounds":31,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":425,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":515,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":344,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":354,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":479,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":217,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":115,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":246,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":242,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":423,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":120,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":336,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":331,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":281,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":481,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":108,"com.graphhopper.util.InstructionListTest.testWayList":199,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":399,"com.graphhopper.GraphHopperAPITest.testDisconnected179":70,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":208,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":203,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":499,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":420,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":189,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":80,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":406,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":286,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":158,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":394,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":142,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":497,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":118,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":269,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":365,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":372,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":407,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":148,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":280,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":187,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":122,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":275,"com.graphhopper.routing.PathTest.testWayList":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":227,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":211,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":361,"com.graphhopper.coll.OSMIDMapTest.testGet2":503,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":110,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":405,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":294,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":350,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":325,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":61,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":257,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":62,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":517,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":162,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":63,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":417,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":440,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":129,"com.graphhopper.util.GHUtilityTest.testSort":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":220,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":404,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":54,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":456,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":463,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":450,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":182,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":480,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":111,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":448,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":371,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":382,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":332,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":105,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":473,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":126,"com.graphhopper.routing.PathTest.testFound":433,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":19,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":116,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":268,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":174,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":403,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":99,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":132,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":161,"com.graphhopper.util.InstructionListTest.testEmptyList":197,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":71,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":368,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":360,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":177,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":359,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":144,"com.graphhopper.reader.PrinctonReaderTest.testRead":188,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":305,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":57,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":326,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":210,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":201,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":333,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":418,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":428,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":501,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":374,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":123,"com.graphhopper.reader.OSMReaderTest.testFoot":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":219,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":484,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":42,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":272,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":383,"com.graphhopper.reader.OSMReaderTest.testOneWay":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":43,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":92,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":97,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":341,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":389,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":513,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":215,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":288,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":153,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":151,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":451,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":512,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":351,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":212,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":477,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":191,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":278,"com.graphhopper.routing.PathBidirRefTest.testExtract2":432,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":462,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":378,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":301,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":485,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":380,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":27,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":229,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":452,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":39,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":302,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":491,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":251,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":366,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":296,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":85,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":130,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":67,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":518,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":204,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":427,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":367,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":322,"com.graphhopper.GraphHopperTest.testPrepareOnly":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":146,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":457,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":77,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":29,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":236,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":112,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":300,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":352,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":214,"com.graphhopper.routing.AStarBidirectionTest.initializationError":494,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":358,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":267,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":90,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":314}}]
