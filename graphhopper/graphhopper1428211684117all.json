[{"failures":[],"tindex":"8af846ab-db54-11e4-a436-a77228e56b4b","variableMapping":{"hasOther":"in","hasRel":"out"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"8afba20c-db54-11e4-a436-738abfe06811","variableMapping":{"edgeId":"x1","nextEdge":"tmpErr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"8afba20d-db54-11e4-a436-6f1d58bf4cf6","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"8afba20e-db54-11e4-a436-4545ef05085a","variableMapping":{"orientation":"dist","java.lang.Math.PI":"dist"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"8afba20f-db54-11e4-a436-995ace2ae438","variableMapping":{"carEncoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests:80","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.CarFlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"8afba210-db54-11e4-a436-e16651e5d916","variableMapping":{"size":"maxValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"8afbc921-db54-11e4-a436-f31dbbe44f51","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edge":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:218","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-2},{"failures":[],"tindex":"8afbc922-db54-11e4-a436-fb32219b5f50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"8afbc923-db54-11e4-a436-d9dc62b232e6","variableMapping":{"byteCount":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"8afbc924-db54-11e4-a436-f5215c318270","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"8afbc925-db54-11e4-a436-09f983d5cac9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[5],"tindex":"8afbc926-db54-11e4-a436-bffdb443038e","variableMapping":{"maxLeafEntries":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"8afbc927-db54-11e4-a436-5504e06ee11f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"8afbc928-db54-11e4-a436-29f9027cf2d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:81","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.put(java.lang.String, com.graphhopper.storage.DAType)"},"status":0},{"failures":[6,7,8,9,10,11],"tindex":"8afbc929-db54-11e4-a436-9b53db1703a3","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"intendedValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20],"tindex":"8afbc92a-db54-11e4-a436-3556497274d8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"8afbc92b-db54-11e4-a436-19b227087772","variableMapping":{"len":"acceptBit","start":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"8afbc92c-db54-11e4-a436-257f058a76cd","variableMapping":{"message":"str","hash":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:82","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + ((this.java.lang.String) != null ? this.java.lang.String.hashCode() : 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[],"tindex":"8afbc92d-db54-11e4-a436-2390572c495d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:50","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState))"},"status":-2},{"failures":[33,22,34,35],"tindex":"8afbc92e-db54-11e4-a436-7df7d6f2525e","variableMapping":{"fullyLoaded":"isRoundabout"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1079","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[],"tindex":"8afbf03f-db54-11e4-a436-a3ff1b026f5c","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[36,12,13,37,14,38,15,16,17,39,18,19,20,40],"tindex":"8afbf040-db54-11e4-a436-77c30e7cd77e","variableMapping":{"location":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[41],"tindex":"8afbf041-db54-11e4-a436-5961c374020d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"8afbf042-db54-11e4-a436-03e9485a6bbf","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:188","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return null;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":0},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"8afbf043-db54-11e4-a436-0d5c618883fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"8afbf044-db54-11e4-a436-3fe9bfcdad45","variableMapping":{"flags":"directionBitMask","tmpValue":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"8afbf045-db54-11e4-a436-6d12677b6610","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"defaultD","speed":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"status":0},{"failures":[],"tindex":"8afbf046-db54-11e4-a436-8552be909021","variableMapping":{"this":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[63,64,21,65,66,67,68,69,70,71,72,73,74,75,76,33,77,78,79,80,81,82,83,84,85,86,87,88,22,34,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,44,163,164,165,166,167,45,168,46,47,169,170,171,172,173,174,175,176,177,178,49,179,180,181,182,183,50,184,51,52,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,6,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,7,23,24,35,352,353,354,25,355,41,356,357,358,359,360,361,36,12,362,8,363,364,365,366,367,368,13,26,369,370,371,372,373,374,375,376,37,377,9,378,379,380,381,382,14,28,383,384,385,38,386,387,15,29,16,388,389,10,390,391,392,393,394,395,17,30,396,397,398,399,400,401,39,402,403,18,31,19,404,405,11,406,407,408,409,410,411,20,32,412,413,414,415,416,40,417,418,419,420,421,422,423,0,1,424,425,426,427,428,429,430,53,2,431,3,432,433,434,435,436,437,438,439,440,441,4,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471],"tindex":"8b073ae7-db54-11e4-a436-f3c6e52750df","variableMapping":{"flags":"defaultL","scDirMask":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:727","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"8b073ae8-db54-11e4-a436-154593a3d52a","variableMapping":{"time":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"8b073ae9-db54-11e4-a436-4db69e977e04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:272","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterator com.graphhopper.util.EdgeSkipIterator = com.graphhopper.util.EdgeSkipExplorer.setBaseNode(com.graphhopper.util.EdgeIteratorState.getAdjNode())"},"status":-2},{"failures":[],"tindex":"8b073aea-db54-11e4-a436-19096dbcc321","variableMapping":{"encoded":"flags","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failures":[],"tindex":"8b073aeb-db54-11e4-a436-cdc9285b912f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[],"tindex":"8b073aec-db54-11e4-a436-4fcb47eff628","variableMapping":{"todoBytes":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"8b073aed-db54-11e4-a436-5780e17ce146","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"allBits","id":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8b073aee-db54-11e4-a436-cf9e3bc31c56","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"8b073aef-db54-11e4-a436-ad7cd820f769","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[354,373,0,2],"tindex":"8b073af0-db54-11e4-a436-2588445fd946","variableMapping":{"radiusInMeter":"speed","lon":"speed","lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[21,0,1,424,425,426,428,429,53,2,3,432,433,434,435,436,438,440,441,4,442,445,452,456],"tindex":"8b073af1-db54-11e4-a436-05c2e92788e1","variableMapping":{"tmp":"dist"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[83],"tindex":"8b073af2-db54-11e4-a436-4ba55a12d85a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[83],"tindex":"8b076203-db54-11e4-a436-4bfce0cae19f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[80,86,6,7,8,9,10,11],"tindex":"8b076204-db54-11e4-a436-a355d6d1d681","variableMapping":{"allowWrites":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1085","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[75,76,90,91,94,99,100,101,106,107,109,110,114,121,123,129,131,134,136,141,149,156,175,191,200,206,207,209,210,214,221,223,229,231,234,236,241,244,250,251,253,254,258,265,267,273,275,278,280,285,287,290,296,297,299,300,304,311,313,319,321,324,326,331,333,334,345,346,347,348,349,417,418,0,424,425,426,427,428,429,430,53,2,433,434,435,436,438,439,440,441,4,445,446,447,448,449,451,453,455,456,462],"tindex":"8b076205-db54-11e4-a436-c37fa20dd447","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"8b076206-db54-11e4-a436-65da96add615","variableMapping":{"index":"capacity","entriesPerSegment":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[21,65,68,70,472,1,424,425,426,427,428,429,430,53,2,431,3,432,433,434,435,436,437,438,439,440,441,4,443,445,446,447,448,449,450,451,453,454,455,456],"tindex":"8b076207-db54-11e4-a436-675f22c97a8b","variableMapping":{"segmentSizeInBytes":"toSize","index":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:227","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":-1},{"failures":[],"tindex":"8b076208-db54-11e4-a436-439553745ac3","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"8b076209-db54-11e4-a436-2b08c7cb32c8","variableMapping":{"mSize":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[473],"tindex":"8b07620a-db54-11e4-a436-3106312292ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"8b07620b-db54-11e4-a436-1b620745c786","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"8b07620c-db54-11e4-a436-293b44124a84","variableMapping":{"currEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":0},{"failures":[474,475],"tindex":"8b07620d-db54-11e4-a436-9f4bdbcfb831","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"8b07620e-db54-11e4-a436-d562baeff241","variableMapping":{"bit":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":0},{"failures":[],"tindex":"8b07620f-db54-11e4-a436-77281b6300b2","variableMapping":{"factor":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"8b078920-db54-11e4-a436-d1d6dc434ba1","variableMapping":{"nameIndexRef":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":0},{"failures":[],"tindex":"8b078921-db54-11e4-a436-efcaa442dc11","variableMapping":{"item":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"8b078922-db54-11e4-a436-03c49e922c4d","variableMapping":{"index":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"8b078923-db54-11e4-a436-3bcbefdd401a","variableMapping":{"encoded":"encoded","backwardBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[77,82,12,13,375,37,14,15,16,17,18,19,20,40],"tindex":"8b078924-db54-11e4-a436-c172beb5f91b","variableMapping":{"closed":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[63,64,21,65,66,67,68,70,71,72,73,75,76,33,77,78,79,80,81,82,83,84,86,87,88,22,34,476,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,477,157,158,159,160,161,162,44,163,164,165,166,167,45,168,46,47,169,170,171,172,173,174,175,176,177,178,49,179,180,181,182,183,50,184,51,52,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,478,333,334,338,345,346,347,348,349,350,399,400,417,418,419,420,421,422,0,1,424,425,426,427,428,429,430,53,2,431,3,432,433,434,435,436,437,438,439,440,441,4,442,443,445,446,447,448,449,450,451,452,453,454,455,456,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,466,467,467,468,468,469,469],"tindex":"8b078925-db54-11e4-a436-294ccdb5b08b","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[35],"tindex":"8b078926-db54-11e4-a436-cde564d67993","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[21,22,102,24,25,355,479,29,31],"tindex":"8b078927-db54-11e4-a436-15f98f782de8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"8b078928-db54-11e4-a436-1b933a8a9cc7","variableMapping":{"flags":"directionBitMask","scDirMask":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[63,64,21,65,66,67,68,70,71,72,73,33,77,78,79,80,81,82,83,84,86,87,88,22,480,34,102,481,482,40],"tindex":"8b078929-db54-11e4-a436-a9813e1db32f","variableMapping":{"lastKey":"relationFlags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[],"tindex":"8b07b03a-db54-11e4-a436-0372760920fc","variableMapping":{"bits":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"8b07b03b-db54-11e4-a436-1daca5ba1583","variableMapping":{"high":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[428,438,440,4,451],"tindex":"8b07b03c-db54-11e4-a436-812269933a38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[343],"tindex":"8b07b03d-db54-11e4-a436-af1b97333468","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"8b07b03e-db54-11e4-a436-69541942e9b3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"8b07b03f-db54-11e4-a436-51b2f1d70bce","variableMapping":{"defaultUTurnCost":"java.lang.Double.POSITIVE_INFINITY","turnCosts":"java.lang.Double.POSITIVE_INFINITY","edgeId":"maxTurnCosts","prevOrNextEdgeId":"maxTurnCosts","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[415],"tindex":"8b07b040-db54-11e4-a436-dbc4aaa55330","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[21,67,77,34,35,41],"tindex":"8b07b041-db54-11e4-a436-85e0e389085e","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[67,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,149,156,175,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,6,337,338,339,340,341,342,343,344,351,7,23,24,35,352,353,354,25,355,41,356,357,358,359,360,361,36,12,362,374,375,376,37,377,415,416,40,0,1,424,425,426,427,428,429,430,53,2,431,3,432,433,434,435,436,437,438,439,440,441,4],"tindex":"8b0f5162-db54-11e4-a436-ab3d657b9b7b","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"8b0f5163-db54-11e4-a436-2324ddd8d2e5","variableMapping":{"filter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:112","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[63,64,21,65,66,67,68,69,70,71,72,73,74,75,76,33,77,78,79,80,81,82,83,84,85,86,87,88,22,480,34,476,483,483,484,484,485,486,487,488,489,490,491,492,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,493,494,495,496,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,477,157,158,159,160,161,162,44,163,164,165,166,167,45,168,46,47,169,170,171,172,173,174,175,176,177,178,49,179,180,181,182,183,50,184,51,52,185,186,187,188,189,190,191,497,498,499,500,501,502,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,503,504,478,333,334,338,345,346,347,348,349,350,399,400,417,418,419,420,421,422,0,1,424,425,426,427,428,429,430,53,2,431,3,432,433,434,435,436,437,438,439,440,441,4,442,443,445,446,447,448,449,450,451,452,453,454,455,456,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,466,467,467,468,468,469,469],"tindex":"8b0f5164-db54-11e4-a436-4d4f23869d51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[],"tindex":"8b0f7875-db54-11e4-a436-c792c8a29fb7","variableMapping":{"high":"mask","guess":"mask","low":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"8b0f7876-db54-11e4-a436-a350a5a8707a","variableMapping":{"shift":"lastElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"8b0f7877-db54-11e4-a436-8f4d6dc5dc97","variableMapping":{"java.lang.Double.MAX_VALUE":"midLon","existingDirectWeight":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-2},{"failures":[],"tindex":"8b0f7878-db54-11e4-a436-6fd54b424cb1","variableMapping":{"locs":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[42,43,54,55,57,505,58,59],"tindex":"8b0f7879-db54-11e4-a436-97a3e793b493","variableMapping":{"orientation":"midLat","resultOrientation":"midLat","baseOrientation":"midLat","java.lang.Math.PI":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[63,64,21,65,68,70,72,89,92,94,176,177,178,49,179,180,181,182,183,50,184,51,52,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,0,1,424,425,426,427,428,429,430,53,2,431,3,432,433,434,435,436,437,438,439,440,441,4,442,443,445,446,447,448,449,450,451,452,453,454,455,456],"tindex":"8b0f787a-db54-11e4-a436-d1419021f1f7","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1378","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.checkInit()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"8b0f787b-db54-11e4-a436-27d3a89d1f6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"8b0f787c-db54-11e4-a436-79b4915acf31","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[],"tindex":"8b0f787d-db54-11e4-a436-bdb2d78642bd","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"index","nodeId":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-2},{"failures":[],"tindex":"8b0f787e-db54-11e4-a436-99f880618139","variableMapping":{"err":"length","dLat":"length","tmpErr":"segmentSizePower","x1":"length","sLon":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"8b0f787f-db54-11e4-a436-8b48e285f714","variableMapping":{"message":"str","hash":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:82","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + ((this.java.lang.String) != null ? this.java.lang.String.hashCode() : 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[63,67,72,73,33,77,78,79,80,81,82,83,84,86,87,88,22,34,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,149,156,175,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,336,6,337,338,339,340,341,342,343,344,351,7,23,24,35,352,353,354,25,355,41,356,357,358,359,360,415,506,507,40,423,0,1,424,425,426,427,428,429,430,53,2,431,3,432,433,434,435,436,437,438,439,440,441,4,457,458,470,471],"tindex":"8b0f7880-db54-11e4-a436-7d9d2cc72fdc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[21,65,66,67,68,71,72,73,33,77,78,80,81,82,83,84,86,87,88,22,34,102,6,339,343,7,24,35,352,353,25,355,41,361,36,12,362,8,365,366,367,13,26,369,370,479,374,37,9,380,381,14,28,383,38,387,15,16,389,10,392,393,394,17,30,396,397,39,403,18,19,405,11,408,409,410,20,32,412,413,40],"tindex":"8b0f9f91-db54-11e4-a436-51f687f63329","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:164","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failures":[],"tindex":"8b0f9f92-db54-11e4-a436-af90a39a43a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"8b0f9f93-db54-11e4-a436-df4afed36076","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"8b0f9f94-db54-11e4-a436-71368adc579f","variableMapping":{"high":"nodeA","len":"nodeA","start":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":0},{"failures":[36,38,39,40],"tindex":"8b0f9f95-db54-11e4-a436-017d4955dbff","variableMapping":{"edgeId":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","nodeA":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[],"tindex":"8b0f9f96-db54-11e4-a436-8b5962c5a712","variableMapping":{"factor":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"8b0f9f97-db54-11e4-a436-ad3bdbf480e7","variableMapping":{"width":"cap","lonSimilar":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"8b0f9f98-db54-11e4-a436-f539c588b9ca","variableMapping":{"id":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[40],"tindex":"8b0f9f99-db54-11e4-a436-7148a5e91c02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[343,24,41,369,375,37,383,38,16,396,39,19,412],"tindex":"8b0f9f9a-db54-11e4-a436-7d6dc86c0815","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:188","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-1},{"failures":[],"tindex":"8b0f9f9b-db54-11e4-a436-cdb1841ee044","variableMapping":{"intVal":"minOnewayNetworkSize","degree":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"8b0f9f9c-db54-11e4-a436-57b5dcdec0a9","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"8b0f9f9d-db54-11e4-a436-139b83369e72","variableMapping":{"a":"index","b":"start","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:323","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":437,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":459,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":197,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":479,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":152,"com.graphhopper.GraphHopperAPITest.testNoLoad":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":106,"com.graphhopper.reader.OSMReaderTest.testFerry":33,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":90,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":181,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":64,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":305,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":484,"com.graphhopper.coll.CompressedArrayTest.testCompress":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":382,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":284,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":126,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":260,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":453,"com.graphhopper.GraphHopperTest.testPrepare":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":436,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":442,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":475,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":2,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":99,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":104,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":203,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":49,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":349,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":424,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":430,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":165,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":16,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":287,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":60,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":205,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":474,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":456,"com.graphhopper.GraphHopperTest.testLoadOSM":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":166,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":416,"com.graphhopper.reader.OSMReaderTest.testSort":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":30,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":87,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":291,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":279,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":244,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":139,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":465,"com.graphhopper.routing.DijkstraTest.initializationError":470,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":326,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":230,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":256,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":288,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":18,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":295,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":184,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":183,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":427,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":426,"com.graphhopper.coll.OSMIDMapTest.testGetLong":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":309,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":315,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":222,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":200,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":224,"com.graphhopper.coll.CompressedArrayTest.testCompress2":42,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":269,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":36,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":306,"com.graphhopper.GraphHopperAPITest.testLoad":333,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":204,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":6,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":261,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":251,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":5,"com.graphhopper.storage.LevelGraphStorageTest.testClone":209,"com.graphhopper.reader.OSMReaderTest.testBarriers":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":296,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":350,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":404,"com.graphhopper.util.GHUtilityTest.testCopy":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":191,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":367,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":154,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":383,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":379,"com.graphhopper.routing.PathTest.testFindInstruction":422,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":297,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":89,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":342,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":238,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":403,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":280,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":265,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":324,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":410,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":507,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":457,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":111,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":247,"com.graphhopper.util.InstructionListTest.testWayList2":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":170,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":285,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":301,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":15,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":329,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":372,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":386,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":245,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":399,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":120,"com.graphhopper.storage.RAMDirectoryTest.testSynched":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":307,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":157,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":428,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":81,"com.graphhopper.routing.AStarTest.initializationError":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":439,"com.graphhopper.coll.OSMIDMapTest.testGet":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":304,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":343,"com.graphhopper.routing.PathBidirRefTest.testExtract":417,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":390,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":490,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":132,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":10,"com.graphhopper.util.GHUtilityTest.testSort2":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":434,"com.graphhopper.reader.OSMReaderTest.testMain":78,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":201,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":391,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":396,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":24,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":292,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":216,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":220,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":241,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":217,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":39,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":223,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":22,"com.graphhopper.storage.StorablePropertiesTest.testStore":503,"com.graphhopper.storage.GraphHopperStorageTest.testClone":253,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":135,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":41,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":501,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":25,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":263,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":192,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":112,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":195,"com.graphhopper.routing.PathTest.testTime":420,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":366,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":239,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":360,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":172,"com.graphhopper.reader.OSMReaderTest.testRelation":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":125,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":228,"com.graphhopper.util.GHUtilityTest.testSortDirected":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":32,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":498,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":461,"com.graphhopper.GraphHopperTest.testFootOnly":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":376,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":158,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":353,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":502,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":50,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":482,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":425,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":401,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":121,"com.graphhopper.search.NameIndexTest.testCreate":496,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":458,"com.graphhopper.routing.QueryGraphTest.testOneWay":467,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":173,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":378,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":483,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":164,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":54,"com.graphhopper.reader.OSMReaderTest.testWithBounds":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":328,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":346,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":463,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":127,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":344,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":481,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":206,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":411,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":384,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":318,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":311,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":249,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":466,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":1,"com.graphhopper.util.InstructionListTest.testWayList":100,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":389,"com.graphhopper.GraphHopperAPITest.testDisconnected179":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":113,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":505,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":408,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":395,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":66,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":255,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":454,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":385,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":3,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":471,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":452,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":356,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":293,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":398,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":243,"com.graphhopper.routing.PathTest.testWayList":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":140,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":117,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":352,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":27,"com.graphhopper.coll.OSMIDMapTest.testGet2":489,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":4,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":234,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":485,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":394,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":266,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":337,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":302,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":51,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":221,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":11,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.util.GHUtilityTest.testSort":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":168,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":393,"com.graphhopper.search.NameIndexTest.testPut":494,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":331,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":153,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":162,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":31,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":464,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":400,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":8,"com.graphhopper.storage.MMapDirectoryTest.testSynched":497,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":373,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":486,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":440,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":345,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":131,"com.graphhopper.routing.PathTest.testFound":419,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":40,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":73,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":236,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":392,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":308,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":472,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":495,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":116,"com.graphhopper.util.InstructionListTest.testEmptyList":98,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":432,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":28,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":435,"com.graphhopper.reader.PrinctonReaderTest.testRead":75,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":182,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":303,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":115,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":492,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":105,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":313,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":406,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":506,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":365,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":402,"com.graphhopper.reader.OSMReaderTest.testFoot":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":129,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":469,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":487,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":46,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":59,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":240,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":374,"com.graphhopper.reader.OSMReaderTest.testOneWay":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":47,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":262,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":277,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":325,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":380,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":123,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":448,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":445,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":455,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":119,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":460,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":246,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":480,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":499,"com.graphhopper.routing.PathBidirRefTest.testExtract2":418,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":473,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":171,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":493,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":275,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":370,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":142,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":339,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":409,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":167,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":278,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":96,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":212,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":357,"com.graphhopper.GraphHopperTest.testFootAndCar":67,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":270,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":218,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":362,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":109,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":358,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":450,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":299,"com.graphhopper.storage.StorablePropertiesTest.testLoad":504,"com.graphhopper.GraphHopperTest.testPrepareOnly":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":438,"com.graphhopper.GraphHopperTest.testVia":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":107,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":86,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":196,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":102,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":274,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":340,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":122,"com.graphhopper.routing.AStarBidirectionTest.initializationError":423,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":351,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":235,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":233,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":290}}]
