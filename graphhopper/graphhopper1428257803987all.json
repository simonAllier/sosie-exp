[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"ebd0e597-dbbf-11e4-93ff-cbc9bb8d1e01","variableMapping":{"res":"capacity","maxBit":"capacity","delta":"segmentSizeInBytes","maxBits":"segmentSizeInBytes","value":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:288","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long <<= 1) {\n    if ((long & long) != 0)\n        long |= 1;\n    \n    long <<= 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[],"tindex":"ebd1f708-dbbf-11e4-93ff-bb6ac29565af","variableMapping":{"err":"size","tmpErr":"size","y1":"size","dLon":"size","sLat":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":0},{"failures":[],"tindex":"ebd1f709-dbbf-11e4-93ff-2b34e7378c08","variableMapping":{"value":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,1,58,59,60,61,62,63,64,2,65,3,4,66,5,67,68,69,6,7,70,71,72,73,74,75,8,9,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,10,99,100,101,102,103,104,105,11,106,12,13,107,14,108,109,110,15,16,111,112,113,114,115,116,17,18,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,21,191,192,193,194,195,196,197,22,198,23,24,199,25,200,201,202,26,27,203,204,205,206,207,208,28,29,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,30,297,297,298,298,299,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,310,311,312,313,314,31,315,32,33,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"ebd9e64a-dbbf-11e4-93ff-8db1fec14e8f","variableMapping":{"str":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:434","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\\t\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[374,375,376,377,378,379,380,381,382,383,384],"tindex":"ebd9e64b-dbbf-11e4-93ff-73cdb002c088","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"ebd9e64c-dbbf-11e4-93ff-ed37d4616ade","variableMapping":{"newAdjIndex":"x1","newBaseIndex":"y2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"ebd9e64d-dbbf-11e4-93ff-0b78b3c61e5a","variableMapping":{"i":"y2","lastIndex":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[385,386,65,106,198,229],"tindex":"ebd9e64e-dbbf-11e4-93ff-e19b1ed081f3","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[],"tindex":"ebd9e64f-dbbf-11e4-93ff-833f093e57ae","variableMapping":{"minDistance":"java.lang.Math.PI","rMin":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:737","type":"CtIfImpl","sourcecode":"if (double < double) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[34,35,44,45,46,47,48,49,0,50,51,52,53,54,56,57,1,58,59,60,61,62,63,64,2,65,3,4,66,5,67,68,69,6,7,70,71,72,73,74,75,8,9,76,77,78,79,80,81,82,83,84,89,91,92,93,94,95,97,98,10,99,100,101,102,103,104,105,11,106,12,13,107,14,108,109,110,15,16,111,112,113,114,115,116,17,18,117,118,119,120,121,122,123,124,125,19,387,388,389,390,20,391,392,393,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,183,184,185,186,187,189,190,21,191,192,193,194,195,196,197,22,198,23,24,199,25,200,201,202,26,27,203,204,205,206,207,208,28,29,209,210,211,212,213,214,215,216,217,229,244,261,262,263,264,265,266,267,269,270,271,272,274,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,30,297,297,298,298,299,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,310,311,312,313,314,31,315,32,33,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"ebd9e650-dbbf-11e4-93ff-334a7595d4d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[374],"tindex":"ebda0d61-dbbf-11e4-93ff-758c6382470a","variableMapping":{"motorcarTag":"highway","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"ebda0d62-dbbf-11e4-93ff-175fdd7b4ac0","variableMapping":{"mKeys":"mValues","com.graphhopper.coll.SparseIntIntArray.DELETED":"index","i":"index","mSize":"index","value":"index","mValues":"mValues","key":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:165","type":"CtIfImpl","sourcecode":"if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    int[][int] = int;\n    int[][int] = int;\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[289,394,395,374,396,377,380,397,383],"tindex":"ebda0d63-dbbf-11e4-93ff-af3104aeb2b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[],"tindex":"ebda0d64-dbbf-11e4-93ff-85c199e19d95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"ebda0d65-dbbf-11e4-93ff-595e01de06cd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[33],"tindex":"ebda0d66-dbbf-11e4-93ff-bd2868517eba","variableMapping":{"tmpNo":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":-1},{"failures":[44,46,54,57,1,64,73,77,79,83,263,322,334,344,345,347,348,353,354,355,358],"tindex":"ebda0d67-dbbf-11e4-93ff-13bec71cd2a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.next()"},"status":-1},{"failures":[34,35,44,45,46,47,48,0,50,51,53,54,56,57,1,58,59,60,61,62,63,64,2,65,3,4,66,5,67,68,69,6,7,70,71,72,73,75,8,9,76,77,78,79,80,81,82,83,84,89,91,92,94,95,97,98,10,99,100,101,102,103,104,105,11,106,12,13,107,14,108,109,110,15,16,111,112,113,114,116,17,18,117,118,119,120,121,122,123,124,125,387,388,389,20,391,392,393,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,173,174,175,176,177,178,179,183,184,186,187,189,190,21,191,192,193,194,195,196,197,22,198,23,24,199,25,200,201,202,26,27,203,204,205,206,208,28,29,209,210,211,212,213,214,215,216,217,229,244,261,262,263,264,265,266,267,269,270,271,272,274,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,30,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,314,31,315,32,33,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"ebda0d68-dbbf-11e4-93ff-a7956b7d4d6d","variableMapping":{"wayIndex":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:263","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[34,35,36,37,38,39,41,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,1,58,59,60,61,62,63,64,2,65,3,4,66,5,67,68,69,6,7,70,71,72,73,74,75,8,9,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,10,99,100,101,102,103,104,105,11,106,12,13,107,14,108,109,110,15,16,111,112,113,114,115,116,17,18,117,118,119,120,121,122,123,124,125,126,127,128,129,398,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,399,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,400,165,166,167,168,169,170,171,172,173,174,175,176,177,401,178,179,180,181,182,183,184,185,186,187,188,189,190,21,191,192,193,194,195,196,197,22,198,23,24,199,25,200,201,202,26,27,203,204,205,206,207,208,28,29,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,30,297,297,298,298,299,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,310,311,312,313,314,31,315,32,33,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"ebda3479-dbbf-11e4-93ff-9d13b8fa528b","variableMapping":{"type":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[],"tindex":"ebda347a-dbbf-11e4-93ff-871cb8c4b790","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[],"tindex":"ebda347b-dbbf-11e4-93ff-5f2d3b98b6d4","variableMapping":{"bytes":"hash","capacity":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":0},{"failures":[34,35,44,45,46,47,48,0,50,51,54,56,57,1,58,59,60,61,62,63,64,2,65,3,4,66,5,67,68,69,6,7,70,71,72,73,75,8,9,76,77,78,79,80,81,82,83,84,89,91,92,95,97,98,10,99,100,101,102,103,104,105,11,106,12,13,107,14,108,109,110,15,16,111,112,113,114,116,17,18,117,118,119,120,121,122,123,124,125,19,387,388,402,389,20,391,392,393,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,173,174,175,176,177,178,179,183,184,187,189,190,21,191,192,193,194,195,196,197,22,198,23,24,199,25,200,201,202,26,27,203,204,205,206,208,28,29,209,210,211,212,213,214,215,216,217,229,244,261,263,264,265,266,267,269,270,271,272,274,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,30,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,314,31,315,32,33,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"ebda347c-dbbf-11e4-93ff-8323fe911d0a","variableMapping":{"counter":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[],"tindex":"ebda347d-dbbf-11e4-93ff-aff4ffb29548","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[385,386,51,56,70,8,79,89,92,97,111,17,120,134,136,153,155,184,189,203,28,212,218,239,244,245,250,256,261,264,265,267,270,282,284,285,286,287,288,289,290,292,293,294,295,30,298,305,308,313,341,364,365,403,404,405,371],"tindex":"ebda5b8e-dbbf-11e4-93ff-9b539789365d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":-1},{"failures":[],"tindex":"ebda5b8f-dbbf-11e4-93ff-1fef21c76703","variableMapping":{"this":"g","newEdgeId":"removed","fromNodeId":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:351","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.connectNewEdge(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-2},{"failures":[406],"tindex":"ebda5b90-dbbf-11e4-93ff-71dbc1f0de90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"ebda5b91-dbbf-11e4-93ff-5bd27af1351e","variableMapping":{"bits":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"ebda5b92-dbbf-11e4-93ff-8521060a39b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:154","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"ebda5b93-dbbf-11e4-93ff-179f0e6ea9b6","variableMapping":{"java.lang.Double.MAX_VALUE":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"ebda5b94-dbbf-11e4-93ff-db8a31e64738","variableMapping":{"elem":"mValues","keys":"mValues","i":"mSize","key":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:180","type":"CtWhileImpl","sourcecode":"while ((int[][(int / 2)]) > int) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[],"tindex":"ebda5b95-dbbf-11e4-93ff-1796721a510c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"ebda5b96-dbbf-11e4-93ff-19d23a395078","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"ebda5b97-dbbf-11e4-93ff-2f721e5c58bc","variableMapping":{"size":"toSize","keys":"elem","child":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:114","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:260","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(int[], int, ((int) + 1), 0)"},"status":0},{"failures":[],"tindex":"ebda5b98-dbbf-11e4-93ff-9fdfce28aa98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"ebda5b99-dbbf-11e4-93ff-99f7517b6fa0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[],"tindex":"ebda5b9a-dbbf-11e4-93ff-2f711287daf2","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"ebda5b9b-dbbf-11e4-93ff-2b82683c92d3","variableMapping":{"ret":"segmentSizePower","retBucket":"length","i":"segmentSizePower","storedKey":"todoBytes","bucketSize":"segmentsToCreate","key":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"ebda5b9c-dbbf-11e4-93ff-2d8d7f7d5a78","variableMapping":{"size":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failures":[],"tindex":"ebda5b9d-dbbf-11e4-93ff-a3589b68c527","variableMapping":{"bits":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"ebda82ae-dbbf-11e4-93ff-81353b52fb10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:32","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[319],"tindex":"ebda82af-dbbf-11e4-93ff-ed57b643a330","variableMapping":{"factor":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,220,228,230,231,233,237,238,245,246,30,31,32,33],"tindex":"ebda82b0-dbbf-11e4-93ff-afa661c9d108","variableMapping":{"size":"index","keys":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:68","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum key.\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"ebda82b1-dbbf-11e4-93ff-3d4b42a9b665","variableMapping":{"preferWayEncoder":"this","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.getValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[321,322,341,342,344,358],"tindex":"ebda82b2-dbbf-11e4-93ff-e9112095a770","variableMapping":{"periodicUpdates":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"ebda82b3-dbbf-11e4-93ff-c5cc27cfcd3e","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[407],"tindex":"ebda82b4-dbbf-11e4-93ff-75527602eaa1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[319],"tindex":"ebda82b5-dbbf-11e4-93ff-110b47b4978d","variableMapping":{"fwdFaster":"eleDelta","incDist2DSum":"eleDelta","fwdSlower":"incEleSum","fullDist2D":"incEleSum","restDist2D":"eleDelta","speed":"incEleSum","decDist2DSum":"eleDelta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"ebda82b6-dbbf-11e4-93ff-df3186fe41c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:346","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":0},{"failures":[263,265,266,270,298,300,301,303,305,308,328,330,334,335,338,408],"tindex":"ebda82b7-dbbf-11e4-93ff-a9b20ab56081","variableMapping":{"maxRasterWidth2InMeterNormed":"lat","currNormedDist":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:374","type":"CtReturnImpl","sourcecode":"return double < (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-1},{"failures":[32,33],"tindex":"ebda82b8-dbbf-11e4-93ff-5d6dd110a651","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":-1},{"failures":[31,316,317],"tindex":"ebda82b9-dbbf-11e4-93ff-3551104f052b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[],"tindex":"ebda82ba-dbbf-11e4-93ff-5b39292a419a","variableMapping":{"file":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.lastIndexOf(\".\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[],"tindex":"ebda82bb-dbbf-11e4-93ff-a9e260e0a172","variableMapping":{"factor":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":0},{"failures":[],"tindex":"ebdaa9cc-dbbf-11e4-93ff-f948c245ee1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"ebdaa9cd-dbbf-11e4-93ff-f1df8dc0f326","variableMapping":{"factor":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[409],"tindex":"ebdaa9ce-dbbf-11e4-93ff-d351517ead33","variableMapping":{"size":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[47,48,51,54,56,57,1,58,59,60,61,62,63,64,3,4,66,5,67,69,6,7,71,73,75,8,9,76,78,79,81,82,83,84,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,261,263,264,267,269,271,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,361,369,371],"tindex":"ebdaa9cf-dbbf-11e4-93ff-a99baf5ca031","variableMapping":{"err":"edgeCount","dLat":"edgeCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"ebdaa9d0-dbbf-11e4-93ff-03d2362ff394","variableMapping":{"cap":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[283,30],"tindex":"ebdaa9d1-dbbf-11e4-93ff-216677c04bf6","variableMapping":{"high":"shift","guess":"shift","low":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:376","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[410,379],"tindex":"ebdaa9d2-dbbf-11e4-93ff-25a6a9a8cf9c","variableMapping":{"val":"trackType","existing":"trackType","key":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,1,58,59,60,61,62,63,64,2,65,3,4,66,5,67,68,69,6,7,70,71,72,73,74,75,8,9,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,95,96,97,98,10,99,100,101,102,103,104,105,11,106,12,13,107,14,108,109,110,15,16,111,112,113,114,115,116,17,18,117,118,119,120,121,122,123,124,125,131,147,166,179,183,184,185,186,187,188,189,190,21,191,192,193,194,195,196,197,22,198,23,24,199,25,200,201,202,26,27,203,204,205,206,207,208,28,29,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,261,266,271,272,282,283,284,285,286,287,288,289,290,292,293,294,295,30,297,411,412,413,414,415,416,417,394,418,419,420,406,421,422,423,424,425,426,427,428,429,430,431,432,407,433,320,434,435,436,437,438,439,440,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"tindex":"ebdaa9d3-dbbf-11e4-93ff-d319351cc637","variableMapping":{"tmpNo":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[441,409,442,443,444,445,446,447],"tindex":"ebdad0e4-dbbf-11e4-93ff-596138931cb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"ebdad0e5-dbbf-11e4-93ff-432a49174008","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"ebdad0e6-dbbf-11e4-93ff-0353b25ce056","variableMapping":{"str":"wayTypeName","tr":"tr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:244","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"stopover\", ((com.graphhopper.util.FinishInstruction)(this)).getViaPosition())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":-2},{"failures":[],"tindex":"ebdad0e7-dbbf-11e4-93ff-81a529856e7e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[289],"tindex":"ebdad0e8-dbbf-11e4-93ff-5363e9520c05","variableMapping":{"oldValueIndex":"directionBitMask","lastKey":"forwardBit","key":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[34,35,44,45,46,47,48,49,0,50,51,52,53,54,56,57,1,58,59,60,61,62,63,64,2,65,3,4,66,5,67,68,69,6,7,70,71,72,73,74,75,8,9,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,95,97,98,10,99,100,101,102,103,104,105,11,106,12,13,107,14,108,109,110,15,16,111,112,113,114,115,116,17,18,117,118,119,120,121,122,123,124,125,126,127,128,129,398,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,399,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,400,165,166,167,168,169,170,171,172,173,174,175,176,177,401,178,179,183,184,185,186,187,189,190,21,191,192,193,194,195,196,197,22,198,23,24,199,25,200,201,202,26,27,203,204,205,206,207,208,28,29,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,261,262,263,264,265,266,267,269,270,271,272,274,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,30,297,297,298,298,299,299,300,300,301,301,302,302,303,303,304,304,305,305,306,306,307,307,308,308,309,310,311,312,313,314,31,315,32,33,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"tindex":"ebdad0e9-dbbf-11e4-93ff-6385fd0508a3","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[34,51,56,57,1,64,65,73,76,79,83,89,92,97,98,10,105,106,114,117,120,124,184,189,190,21,197,198,206,209,212,216,218,219,220,227,229,242,247,250,254,280,281,283,30,301,304,31,316,317,321,322,326,329,332,334,335,344,345,347,348,353,354,355,358,361,367],"tindex":"ebdad0ea-dbbf-11e4-93ff-f1c557c6b806","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[427],"tindex":"ebdad0eb-dbbf-11e4-93ff-3db8601e1fb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"ebdad0ec-dbbf-11e4-93ff-7de45f1bf79e","variableMapping":{"fwdFaster":"bwFaster","incDist2DSum":"bwFaster","fwdSlower":"bwFaster","fullDist2D":"bwFaster","restDist2D":"bwFaster","speed":"bwFaster","decDist2DSum":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[448],"tindex":"ebdaf7fd-dbbf-11e4-93ff-3f4334f2791e","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[],"tindex":"ebdaf7fe-dbbf-11e4-93ff-e56e2bf67183","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"ebdaf7ff-dbbf-11e4-93ff-7bb173e84aa7","variableMapping":{"tt":"bikeTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[],"tindex":"ebddde30-dbbf-11e4-93ff-fbff59b3c419","variableMapping":{"flags2":"ferryBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"ferryBit","flags1":"internalFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"ebddde31-dbbf-11e4-93ff-dd065104e1bd","variableMapping":{"orientation":"weight","resultOrientation":"weight","baseOrientation":"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT","java.lang.Math.PI":"weight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":0},{"failures":[],"tindex":"ebddde32-dbbf-11e4-93ff-9576371559f8","variableMapping":{"nodeB":"com.graphhopper.coll.SparseIntIntArray.DELETED","edgeId":"com.graphhopper.coll.SparseIntIntArray.DELETED","nodeA":"com.graphhopper.coll.SparseIntIntArray.DELETED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[],"tindex":"ebddde33-dbbf-11e4-93ff-c919ca0283a3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"ebddde34-dbbf-11e4-93ff-0f8eb151a7ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"ebddde35-dbbf-11e4-93ff-eb5b1140da24","variableMapping":{"currentEntry":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"ebddde36-dbbf-11e4-93ff-1bfed9c0edce","variableMapping":{"graphHopperFolder":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[],"tindex":"ebddde37-dbbf-11e4-93ff-bb0eb60520aa","variableMapping":{"flags":"flags","mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":0},{"failures":[],"tindex":"ebddde38-dbbf-11e4-93ff-b3dbfd03075a","variableMapping":{"this":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:232","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.isShortcut())\n    throw new java.lang.IllegalStateException((\"Cannot call fetchWayGeometry on shortcut \" + com.graphhopper.storage.GraphHopperStorage.EdgeIterable.(getEdge())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,220,228,230,231,233,237,238,245,246,31,33],"tindex":"ebde0549-dbbf-11e4-93ff-27ae9145cbba","variableMapping":{"need":"key","i":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"ebde054a-dbbf-11e4-93ff-89880dbc6041","variableMapping":{"weightLong":"directionBitMask","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[423],"tindex":"ebde054b-dbbf-11e4-93ff-0d3fe8dc9e35","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"ebde054c-dbbf-11e4-93ff-830c429f7298","variableMapping":{"cap":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[263,264,265,266,267,270,283,284,286,289,290,292,293,294,30,421,427,366],"tindex":"ebde054d-dbbf-11e4-93ff-8de2c63de409","variableMapping":{"bytePointer":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[282,423,427],"tindex":"ebde054e-dbbf-11e4-93ff-1dc798dd3563","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"ebde054f-dbbf-11e4-93ff-3f82a14d76ab","variableMapping":{"originalEdgesCount":"nodeA","edgeDifference":"nodeA","contractedNeighbors":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,220,228,230,231,233,237,238,245,246,30,31,32,33],"tindex":"ebde0550-dbbf-11e4-93ff-b9e333f4f47f","variableMapping":{"mKeys":"mKeys","nkeys":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"ebde0551-dbbf-11e4-93ff-4b0f8066b6f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[282,283,284,285,287,288,289,290,294,295,30,441,409,395,374,375,442,443,376,396,377,378,444,379,380,381,445,446,382,397,383,384,447],"tindex":"ebde0552-dbbf-11e4-93ff-e329cd975982","variableMapping":{"lastKey":"backwardBit","key":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"ebde0553-dbbf-11e4-93ff-bf93ee186f96","variableMapping":{"flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:848","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":0},{"failures":[406],"tindex":"ebde0554-dbbf-11e4-93ff-ddce3ca3fd9b","variableMapping":{"algo":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[449,450,451,452],"tindex":"ebde0555-dbbf-11e4-93ff-75e174e28aa6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,220,228,230,231,233,237,238,245,246,30,31,32,33],"tindex":"ebde0556-dbbf-11e4-93ff-d7c26bc9201b","variableMapping":{"tmpNo":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"ebde0557-dbbf-11e4-93ff-f79f359363d4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[448,453,426],"tindex":"ebde0558-dbbf-11e4-93ff-ddb8863569a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"ebde2c69-dbbf-11e4-93ff-4b82af8e3aee","variableMapping":{"i":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":0},{"failures":[32],"tindex":"ebde2c6a-dbbf-11e4-93ff-2deb64abc22b","variableMapping":{"workerThreads":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":75,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":339,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":49,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":453,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":219,"com.graphhopper.reader.OSMReaderTest.testFerry":282,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":367,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":154,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":262,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":378,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":11,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":276,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":215,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":239,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":198,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":355,"com.graphhopper.GraphHopperTest.testPrepare":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":338,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":331,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":363,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":167,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":375,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":360,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":374,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":323,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":329,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":135,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":383,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":89,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":358,"com.graphhopper.GraphHopperTest.testLoadOSM":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":142,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":136,"com.graphhopper.reader.OSMReaderTest.testSort":285,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":32,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":93,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":210,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":252,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":304,"com.graphhopper.routing.DijkstraTest.initializationError":411,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":119,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":74,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":402,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":195,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":90,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":376,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":97,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":158,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":25,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":335,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":156,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":326,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":1,"com.graphhopper.coll.OSMIDMapTest.testGetLong":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":107,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":99,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":68,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":51,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":6,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":410,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":106,"com.graphhopper.GraphHopperAPITest.testLoad":34,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":55,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":388,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":23,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":21,"com.graphhopper.storage.LevelGraphStorageTest.testClone":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":98,"com.graphhopper.reader.OSMReaderTest.testBarriers":286,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":317,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":328,"com.graphhopper.util.GHUtilityTest.testCopy":371,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":166,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":398,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":449,"com.graphhopper.routing.PathTest.testFindInstruction":314,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":10,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":361,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":437,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":80,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":127,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":211,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":117,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":14,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":351,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":417,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":414,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":61,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":224,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":393,"com.graphhopper.util.InstructionListTest.testWayList2":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":143,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":382,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":446,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":318,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":63,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":408,"com.graphhopper.storage.RAMDirectoryTest.testSynched":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":12,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":168,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":327,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":287,"com.graphhopper.routing.AStarTest.initializationError":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":341,"com.graphhopper.coll.OSMIDMapTest.testGet":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":105,"com.graphhopper.routing.PathBidirRefTest.testExtract":309,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":438,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":70,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":245,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":147,"com.graphhopper.util.GHUtilityTest.testSort2":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":336,"com.graphhopper.reader.OSMReaderTest.testMain":284,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":15,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":452,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":249,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":65,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":5,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":83,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":3,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":114,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":387,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":69,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":295,"com.graphhopper.storage.StorablePropertiesTest.testStore":180,"com.graphhopper.storage.GraphHopperStorageTest.testClone":192,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":427,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":41,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":199,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":425,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":44,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":451,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":225,"com.graphhopper.routing.PathTest.testTime":312,"com.graphhopper.util.BitUtilLittleTest.testToFloat":404,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":81,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":60,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":432,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":145,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":238,"com.graphhopper.reader.OSMReaderTest.testRelation":291,"com.graphhopper.util.GHUtilityTest.testSortDirected":373,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":86,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":300,"com.graphhopper.GraphHopperTest.testFootOnly":271,"com.graphhopper.util.BitUtilLittleTest.testToInt":405,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":169,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":423,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":43,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":157,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":234,"com.graphhopper.search.NameIndexTest.testCreate":39,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":297,"com.graphhopper.routing.QueryGraphTest.testOneWay":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":399,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":134,"com.graphhopper.reader.OSMReaderTest.testWithBounds":294,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":231,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":302,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":240,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":439,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":441,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":57,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":53,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":442,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":113,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":179,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":108,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":189,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":322,"com.graphhopper.util.BitUtilLittleTest.testToBitString":403,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":213,"com.graphhopper.util.InstructionListTest.testWayList":364,"com.graphhopper.GraphHopperAPITest.testDisconnected179":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":226,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":221,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":87,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":281,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":254,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":265,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":194,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":356,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":206,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":333,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":354,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":428,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":384,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":95,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":400,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":447,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":183,"com.graphhopper.routing.PathTest.testWayList":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":422,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":448,"com.graphhopper.coll.OSMIDMapTest.testGet2":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":344,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":76,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":112,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":201,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":103,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":193,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":67,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":159,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":160,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":379,"com.graphhopper.util.GHUtilityTest.testSort":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":243,"com.graphhopper.search.NameIndexTest.testPut":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":124,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":191,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":129,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":152,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":173,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":176,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":391,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":396,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":303,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":91,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":270,"com.graphhopper.storage.MMapDirectoryTest.testSynched":85,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":278,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":31,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":392,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":244,"com.graphhopper.routing.PathTest.testFound":311,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":272,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":394,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":78,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":46,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":13,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":38,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":229,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":197,"com.graphhopper.util.InstructionListTest.testEmptyList":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":330,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":334,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":431,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":420,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":419,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":337,"com.graphhopper.reader.PrinctonReaderTest.testRead":280,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":155,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":228,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":218,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":110,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":416,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":443,"com.graphhopper.reader.OSMReaderTest.testFoot":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":242,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":279,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":308,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":140,"com.graphhopper.reader.OSMReaderTest.testOneWay":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":141,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":24,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":29,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":118,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":204,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":347,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":357,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":426,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":348,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":232,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":299,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":186,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":296,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":88,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":20,"com.graphhopper.routing.PathBidirRefTest.testExtract2":310,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":321,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":144,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":381,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":36,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":208,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":401,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":255,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":434,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":137,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":209,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":429,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":203,"com.graphhopper.GraphHopperTest.testFootAndCar":266,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":4,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":222,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":100,"com.graphhopper.storage.StorablePropertiesTest.testLoad":181,"com.graphhopper.GraphHopperTest.testPrepareOnly":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":340,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":130,"com.graphhopper.GraphHopperTest.testVia":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":220,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":292,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":48,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":207,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":366,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":435,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":235,"com.graphhopper.routing.AStarBidirectionTest.initializationError":412,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":418,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":77,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":9,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":92}}]
