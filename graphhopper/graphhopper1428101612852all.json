[{"failures":[],"tindex":"421025aa-da54-11e4-bbb4-5d3a5001a8d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"4210c1eb-da54-11e4-bbb4-6fc7a5778ad1","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"4210c1ec-da54-11e4-bbb4-3303954d7682","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"4210e8fd-da54-11e4-bbb4-5540a5dd8a3d","variableMapping":{"tt":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[28,29,30,31,32],"tindex":"4210e8fe-da54-11e4-bbb4-8353df9e26f5","variableMapping":{"high":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"4210e8ff-da54-11e4-bbb4-53dabf968379","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:244","type":"CtLocalVariableImpl","sourcecode":"java.util.List<gnu.trove.list.array.TIntArrayList> java.util.List<gnu.trove.list.array.TIntArrayList> = new com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm(com.graphhopper.storage.GraphStorage , com.graphhopper.routing.util.EdgeFilter).findComponents()"},"status":-2},{"failures":[33,34,35,36],"tindex":"4210e900-da54-11e4-bbb4-73b4405c5462","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:400","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"4210e901-da54-11e4-bbb4-2b48c329ddcb","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:279","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[],"tindex":"4210e902-da54-11e4-bbb4-fd956e7b5d94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"))"},"status":-2},{"failures":[],"tindex":"4210e903-da54-11e4-bbb4-bb22eb9e072b","variableMapping":{"factor":"maxLat","delta_lon":"maxLat","a_lon":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"4210e904-da54-11e4-bbb4-db32e61f4466","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[3,5,37],"tindex":"4210e905-da54-11e4-bbb4-57f06a732ce8","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-1},{"failures":[3,5,37],"tindex":"4210e906-da54-11e4-bbb4-1998397abcd0","variableMapping":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"4210e907-da54-11e4-bbb4-a7f54236e74f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"4210e908-da54-11e4-bbb4-098c72f6ba64","variableMapping":{"res":"hash","maxBit":"hash","value":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"4210e909-da54-11e4-bbb4-693d3be5fdd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"4211101a-da54-11e4-bbb4-9f5845bd5306","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"4211101b-da54-11e4-bbb4-1187a1c1fbaa","variableMapping":{"size":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":0},{"failures":[],"tindex":"4211101c-da54-11e4-bbb4-a3cb9363ab03","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,5,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,7,8,9,10,11,13,191,37,15,16,18,20,21,22,23,24,27,192,193,194,195],"tindex":"4211101d-da54-11e4-bbb4-bbe8d4944931","variableMapping":{"acceptBit":"forwardBit","internalFlags":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[196,197,28,198,199,29,200,201,202,33,203,204,205,206,207,208,209,210,211,34,212,213,214,215,216,217,218,219,220,35,221,222,223,224,30,225,226,31,227,228,229,36,230,231,232,233,234,235,37,15,16,17,236,19,20,21,24,25,27],"tindex":"4211101e-da54-11e4-bbb4-0d89c761e791","variableMapping":{"costs":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"4211101f-da54-11e4-bbb4-3da6af8f9da4","variableMapping":{"flags":"backwardBit","scDirMask":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[],"tindex":"42111020-da54-11e4-bbb4-8316d7adf8a6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[63,237,238,239,240,241,83,242,243,244,245,246,100,247,248,249,250,251,118,252,253,254,255,256,139,142],"tindex":"42111021-da54-11e4-bbb4-057c46d17e5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[5,37,25,27],"tindex":"42111022-da54-11e4-bbb4-57f023b931dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"42111023-da54-11e4-bbb4-3199e06a5e0c","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"42113734-da54-11e4-bbb4-95e6c29b3f11","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[],"tindex":"42113735-da54-11e4-bbb4-01b58aad7c97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isBool(long, int);\n}"},"status":-2},{"failures":[],"tindex":"42113736-da54-11e4-bbb4-8def3b274c16","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"42113737-da54-11e4-bbb4-2bdb1be5103f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:108","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.flagsDefault(boolean, boolean)"},"status":-2},{"failures":[257,203,212,221,4,258,230],"tindex":"42113738-da54-11e4-bbb4-09537cef135d","variableMapping":{"precision":"speed","lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"42113739-da54-11e4-bbb4-23c88b63e8a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"4211373a-da54-11e4-bbb4-699aee569e4d","variableMapping":{"nodeB":"allBits","edgeId":"allBits","nodeA":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"4211373b-da54-11e4-bbb4-15b310f87fc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[0,259,260,1,144,2,3,145,4,258,5,261,262,263,146,264,265,266,147,267,148,268,269,270,271,272,233,273,234,235,37,15,16,17,18,236,19,20,21,22,23,24,25,27],"tindex":"4211373c-da54-11e4-bbb4-dff1a02981f8","variableMapping":{"cap":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"4211373d-da54-11e4-bbb4-53cf106aa811","variableMapping":{"lastKey":"tmpValue","key":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":0},{"failures":[],"tindex":"4211373e-da54-11e4-bbb4-ffc183543117","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[274],"tindex":"4211373f-da54-11e4-bbb4-d90e0cda8ae1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"42113740-da54-11e4-bbb4-53390fe17e64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"42113741-da54-11e4-bbb4-abb9ef6ae857","variableMapping":{"edgeId":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"42113742-da54-11e4-bbb4-57049c8827e5","variableMapping":{"shift":"shift","preferWayEncoder":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"42115e53-da54-11e4-bbb4-d7c9fc4a9036","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"42115e54-da54-11e4-bbb4-f7eb2cbc9dd2","variableMapping":{"silent":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"42115e55-da54-11e4-bbb4-a9627c3f0b7c","variableMapping":{"empty":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[275,276,166,175,177],"tindex":"42115e56-da54-11e4-bbb4-9bd1147b6200","variableMapping":{"mainEdgeState":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-1},{"failures":[],"tindex":"42115e57-da54-11e4-bbb4-4ff64b808c57","variableMapping":{"compressionLevel":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[277,278,279,280],"tindex":"42115e58-da54-11e4-bbb4-991aa544d3c4","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"42115e59-da54-11e4-bbb4-41925e38073e","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"42115e5a-da54-11e4-bbb4-1dfc39528db8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"42115e5b-da54-11e4-bbb4-490a7510894c","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[],"tindex":"42115e5c-da54-11e4-bbb4-3b25dde3394f","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"found"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"42115e5d-da54-11e4-bbb4-c1309029e12a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[281,282,283,284,285,286,39,287,288,289,290,291,42,292,293,294,295,296,77,43,297,298,299,300,301,46,302,303,304,305,306,78,307,308,309,310,140,141,142,174,177,178,181,311,6,7,8,9,10,11,12,13,191,14,15,16,17,18,236,19,20,21,22,23,24,27,194,195],"tindex":"42115e5e-da54-11e4-bbb4-816b864b2dab","variableMapping":{"segmentSizeInBytes":"endIndexPlusOne","indexDivisor":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[139],"tindex":"42115e5f-da54-11e4-bbb4-91b11cf40a3a","variableMapping":{"g":"g","start":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:226","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[198,33,207,208,34,217,35,225,36],"tindex":"42115e60-da54-11e4-bbb4-a16e148d0427","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation.setEmpty()"},"status":-1},{"failures":[],"tindex":"42115e61-da54-11e4-bbb4-81ab949772fa","variableMapping":{"obj":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:69","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"42118572-da54-11e4-bbb4-31c1ab10e184","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[],"tindex":"42118573-da54-11e4-bbb4-5fc741326fdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[274],"tindex":"42118574-da54-11e4-bbb4-d127c7b0080b","variableMapping":{"indexM":"knotInteger","tmp":"str","version":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:98","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[312,263,313,273],"tindex":"42118575-da54-11e4-bbb4-33f09377dfc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"42118576-da54-11e4-bbb4-334aeb79dee3","variableMapping":{"midLat":"minLonTmp","spatialKey":"hash","midLon":"lon","bits":"hash","lon":"lon","lat":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[58,314,315,316,59,317,318,319,60,320,321,322,61,62,63,323,64,65,324,325,66,67,326,68,237,238,327,328,69,329,70,239,330,331,332,333,71,334,72,240,241,73,335,74,75,336,337,338,76,339,340,281,282,283,341,342,284,285,286,343,39,344,287,288,289,290,40,291,41,42,292,293,294,295,345,296,77,43,346,297,298,299,300,44,301,45,46,302,303,304,305,347,306,78,348,349,350,351,352,353,79,354,355,356,357,358,359,80,81,82,83,360,84,85,361,362,86,87,363,88,242,243,364,365,89,366,90,244,367,368,369,370,91,371,92,245,246,93,372,94,95,373,374,375,96,376,377,97,378,379,380,98,99,100,381,101,102,382,383,103,104,384,105,247,248,385,386,106,387,107,249,388,389,390,391,108,392,109,250,251,110,393,111,112,394,395,396,113,397,398,114,399,400,115,401,402,403,116,117,118,404,119,120,405,406,121,122,407,123,252,253,408,409,124,410,125,254,411,412,413,414,126,415,127,255,256,128,416,129,130,417,418,419,131,420,421,422,423,424,425,426,132,133,134,135,136,307,308,137,138,139,140,141,142,143,427,147,428,149,429,150,151,152,153,154,155,156,157,158,159,430,160,161,162,431,163,164,165,166,167,168,169,170,171,172,173,174,175,432,176,177,178,179,180,181,433,182,183,184,185,186,187,188,434,434,435,435,436,436,437,437,189,189,438,438,439,439,190,190,440,440,441,441,442,442,443,443,311,6,7,8,9,10,11,12,13,191,14,444,37,15,16,17,18,236,19,20,21,22,23,24,25,27,192,193,194,195],"tindex":"42118577-da54-11e4-bbb4-4fafe8d3b68c","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[270],"tindex":"42118578-da54-11e4-bbb4-7f7e0b6f5aad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"4211ac89-da54-11e4-bbb4-99d59c25a0f5","variableMapping":{"flags2":"unpavedBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags","flags1":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"4211ac8a-da54-11e4-bbb4-952462a769fb","variableMapping":{"incDist2DSum":"fwdDecline","fullDist2D":"fwdDecline","decDist2DSum":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[92,6,7,8,9,10,11,12,13,191,194,195],"tindex":"4211ac8b-da54-11e4-bbb4-850e635db2fa","variableMapping":{"nodes":"maxTurnCosts","adj":"maxTurnCosts","base":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[],"tindex":"4211ac8c-da54-11e4-bbb4-4bfe97cb101b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[47,48,49,50,51,52,445,53,54,57],"tindex":"4211ac8d-da54-11e4-bbb4-897c6d1df437","variableMapping":{"maxMCSpeed":"midLon","speed":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"4211ac8e-da54-11e4-bbb4-dbf6023e9119","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"4211ac8f-da54-11e4-bbb4-791ff05e5e0c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"421221c0-da54-11e4-bbb4-4ddc4eaae0c3","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[314,316,318,285,343,154,155,160,163,171,174,175,181,182,184,186,7,191],"tindex":"4212e511-da54-11e4-bbb4-555301fec5ac","variableMapping":{"allBits":"level"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[],"tindex":"4212e512-da54-11e4-bbb4-17bf1d9d74e5","variableMapping":{"speed":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"4212e513-da54-11e4-bbb4-d165a041b923","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[257,203,212,221,4,258,230],"tindex":"4212e514-da54-11e4-bbb4-dbf50d191b36","variableMapping":{"tmp":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"4212e515-da54-11e4-bbb4-7d556700a322","variableMapping":{"lat":"connectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[],"tindex":"4212e516-da54-11e4-bbb4-ad33015ecfd3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[277,446,278,447,279,448,2,3,5,270,280,449],"tindex":"4212e517-da54-11e4-bbb4-a7d96b042feb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[450,312,261,263,451,313,273,20],"tindex":"42130c28-da54-11e4-bbb4-a944ff7bf62f","variableMapping":{"nodes":"maxTurnCosts","adj":"maxTurnCosts","base":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[199,452,446,453,447,448,2,3,5,267,269,270,226,454,449,311,10,191,15,19,20],"tindex":"42130c29-da54-11e4-bbb4-73c8109717c4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[153,155,160,161,164,165,166,167,168,169,170,171,172,173,174,175,432,176,177,178,179,180,181,433,182,183,184,185,186,7,8,9,10,11,13,191,194,195],"tindex":"42130c2a-da54-11e4-bbb4-11003f1f718c","variableMapping":{"numTiles":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[],"tindex":"42130c2b-da54-11e4-bbb4-9ff9542215fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":0},{"failures":[198,29,33,207,208,34,217,35,225,31,36],"tindex":"42130c2c-da54-11e4-bbb4-0960eed4afa6","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"42130c2d-da54-11e4-bbb4-4397ab3c78fa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"42130c2e-da54-11e4-bbb4-f39b25c165ad","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":0},{"failures":[],"tindex":"42130c2f-da54-11e4-bbb4-cda300a6ceea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[],"tindex":"42130c30-da54-11e4-bbb4-413436204b5e","variableMapping":{"foundIndex":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":0},{"failures":[],"tindex":"42130c31-da54-11e4-bbb4-2d7425330b6a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-2},{"failures":[149,235,150,165,175],"tindex":"42130c32-da54-11e4-bbb4-bf27ec0edee2","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[],"tindex":"42130c33-da54-11e4-bbb4-fb5bbbe18962","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[47,48,49,50,51,52,445,53,54,57],"tindex":"42130c34-da54-11e4-bbb4-5ba06f7a8852","variableMapping":{"err":"allBits","dLat":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"42130c35-da54-11e4-bbb4-e7782485e7ba","variableMapping":{"i":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"42130c36-da54-11e4-bbb4-cf2413cca226","variableMapping":{"edgeId":"shift","nextEdge":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[60,287,288,289,297,298,299,455,97,114,115,423,132,133,134,135,456,457,458,459,460,428,149,151,152,183,434,435,437,189,438,439,190,440,442,443,311,7,8,9,11,12,13,191,37,15,16,17,18,236,19,20,21,22,23,24,25,27,461,462,463,464,465,466,467],"tindex":"42133347-da54-11e4-bbb4-571eaaf9cbf1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[139,143,427],"tindex":"42133348-da54-11e4-bbb4-8f60b321e806","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:97","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[],"tindex":"42133349-da54-11e4-bbb4-872b57714dc1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[270],"tindex":"4213334a-da54-11e4-bbb4-97ea74c6d041","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"4213334b-da54-11e4-bbb4-157eb9d2580a","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"4213334c-da54-11e4-bbb4-51fe749beb31","variableMapping":{"x1":"fwdDecline","x2":"fwdDecline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:150","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[318,63,326,237,238,239,240,241,83,363,242,243,244,245,246,100,384,247,248,249,250,251,118,407,252,253,254,255,256,142,27],"tindex":"4213334d-da54-11e4-bbb4-b7a4cb75abb7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":433,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":435,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":257,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":317,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":82,"com.graphhopper.reader.OSMReaderTest.testFerry":37,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":137,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":199,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":218,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":288,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":6,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":407,"com.graphhopper.coll.CompressedArrayTest.testCompress":48,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":396,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":157,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":368,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":162,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":373,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":153,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":28,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":175,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":340,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":35,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":308,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":143,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":173,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":298,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":114,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":55,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":164,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":302,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":299,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":203,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":401,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":393,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":97,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":374,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":190,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":129,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":455,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":334,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":383,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":399,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":116,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":291,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":178,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":286,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":170,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":169,"com.graphhopper.coll.OSMIDMapTest.testGetLong":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":408,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":411,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":329,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":60,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":239,"com.graphhopper.coll.CompressedArrayTest.testCompress2":47,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":388,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":206,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":123,"com.graphhopper.GraphHopperAPITest.testLoad":194,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":265,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":247,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":100,"com.graphhopper.storage.LevelGraphStorageTest.testClone":64,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":172,"com.graphhopper.util.GHUtilityTest.testCopy":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":278,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":358,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":448,"com.graphhopper.routing.PathTest.testFindInstruction":152,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":118,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":136,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":269,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":336,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":30,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":355,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":111,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":128,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":421,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":159,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":280,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":361,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":380,"com.graphhopper.util.InstructionListTest.testWayList2":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":303,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":113,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":198,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":398,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":197,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":418,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":378,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":428,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":252,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":281,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":171,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":183,"com.graphhopper.coll.OSMIDMapTest.testGet":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":122,"com.graphhopper.routing.PathBidirRefTest.testExtract":187,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":200,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":331,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":458,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":420,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":78,"com.graphhopper.util.GHUtilityTest.testSort2":422,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":179,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":254,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":56,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":294,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":446,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":1,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":402,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":68,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":309,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":328,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":76,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":189,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":223,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":70,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":25,"com.graphhopper.storage.GraphHopperStorageTest.testClone":101,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":372,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":5,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":4,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":385,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":58,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":447,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":362,"com.graphhopper.routing.PathTest.testTime":150,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":211,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":337,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":65,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":264,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":305,"com.graphhopper.reader.OSMReaderTest.testRelation":32,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":367,"com.graphhopper.util.GHUtilityTest.testSortDirected":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":230,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":437,"com.graphhopper.GraphHopperTest.testFootOnly":191,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":216,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":3,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":282,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":40,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":89,"com.graphhopper.search.NameIndexTest.testCreate":467,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":434,"com.graphhopper.routing.QueryGraphTest.testOneWay":441,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":347,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":52,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":297,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":49,"com.graphhopper.reader.OSMReaderTest.testWithBounds":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":449,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":417,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":438,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":369,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":233,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":62,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":453,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":222,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":414,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":124,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":98,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":166,"com.graphhopper.util.InstructionListTest.testWayList":133,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":394,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":452,"com.graphhopper.GraphHopperAPITest.testDisconnected179":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":445,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":415,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":228,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":193,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":96,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":382,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":431,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":450,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":161,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":33,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":403,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":345,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":205,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":377,"com.graphhopper.routing.PathTest.testWayList":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":375,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":242,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":274,"com.graphhopper.coll.OSMIDMapTest.testGet2":457,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":186,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":73,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":461,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":277,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":266,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":406,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":41,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":42,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":207,"com.graphhopper.util.GHUtilityTest.testSort":424,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":371,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":202,"com.graphhopper.search.NameIndexTest.testPut":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":131,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":381,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":344,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":357,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":284,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":226,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":149,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":348,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":400,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":276,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":462,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":410,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":139,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":92,"com.graphhopper.routing.PathTest.testFound":429,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":14,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":235,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":74,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":201,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":253,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":466,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":88,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":104,"com.graphhopper.util.InstructionListTest.testEmptyList":426,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":174,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":177,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":260,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":259,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":180,"com.graphhopper.reader.PrinctonReaderTest.testRead":192,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":112,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":289,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":121,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":363,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":81,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":227,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":279,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":273,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":224,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":91,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":443,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":45,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":54,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":338,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":46,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":248,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":251,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":416,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":220,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":90,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":158,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":155,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":163,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":156,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":351,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":147,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":364,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":436,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":26,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":379,"com.graphhopper.routing.PathBidirRefTest.testExtract2":188,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":165,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":304,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":464,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":109,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":213,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":376,"com.graphhopper.util.SimpleIntDequeTest.testPush":310,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":353,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":300,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":110,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":262,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":389,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":238,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":84,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":272,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":182,"com.graphhopper.GraphHopperTest.testPrepareOnly":311,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":83,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":59,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":135,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":392,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":148,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":366,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":335,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":241,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":115}}]
