[{"failures":[0],"tindex":"acf15bae-dafc-11e4-84be-a9a371a64fad","variableMapping":{"midLat":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[],"tindex":"acf2460f-dafc-11e4-84be-192611f0b4d0","variableMapping":{"segmentSizeInBytes":"shift","allSegments":"shift","capacity":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:97","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"acf24610-dafc-11e4-84be-41e3c5d1e5f2","variableMapping":{"lastName":"val","name":"val","lastIndex":"defaultL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:75","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    return long;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":0},{"failures":[],"tindex":"acf24611-dafc-11e4-84be-3d3d1a71eeb9","variableMapping":{"y1":"priorityFromRelation","y2":"priorityFromRelation","x1":"priorityFromRelation","x2":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-2},{"failures":[],"tindex":"acf24612-dafc-11e4-84be-432f61bac15d","variableMapping":{"factor":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,0,88,89,90,91,92,93],"tindex":"acf26d23-dafc-11e4-84be-c553fbdec630","variableMapping":{"size":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[94,95,96,97,98],"tindex":"acf26d24-dafc-11e4-84be-857133a99ea1","variableMapping":{"com.graphhopper.routing.DijkstraOneToMany.EMPTY_PARENT":"i","n":"i","parents":"elem"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:131","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.routing.DijkstraOneToMany.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"acf26d25-dafc-11e4-84be-b1470f633cea","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"acf26d26-dafc-11e4-84be-e51674b5ff39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[99,100,101,102,103,7,104,105,8,9,106,107,108,10,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,11,129,130,131,132,133,12,134,135,136,137,13,138,14,15,139,140,16,141,142,17,18,143,144,145,19,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,20,166,167,168,169,170,21,171,172,173,174,22,175,23,24,176,177,178,179,180,181,182,37,38,183,184,185,39,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,40,206,207,208,209,210,41,211,212,213,214,42,215,43,44,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,45,244,245,246,247,248,249,250,251,252,253,254,50,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,88,307,308,309],"tindex":"acf26d27-dafc-11e4-84be-95015b72f14b","variableMapping":{"val":"entryVal","existing":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","key":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[310,311,312,313,314,315,316,317,318,319,320],"tindex":"acf26d28-dafc-11e4-84be-83e0a3c4063d","variableMapping":{"flags":"relationFlags","nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-1},{"failures":[],"tindex":"acf26d29-dafc-11e4-84be-25c41368d276","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[310,311,312,313,314,315,316,317,318,319,320],"tindex":"acf2943a-dafc-11e4-84be-a701f9dda7c9","variableMapping":{"osmId":"flags","com.graphhopper.reader.OSMReader.TOWER_NODE":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","tmpNode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:665","type":"CtIfImpl","sourcecode":"if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n    throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[],"tindex":"acf2943b-dafc-11e4-84be-ff20223d151f","variableMapping":{"retBucket":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":0},{"failures":[],"tindex":"acf2943c-dafc-11e4-84be-bb62399f54ce","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[321,50,52,53,59,288,289,293,297,300,301,302,304,306,307,309],"tindex":"acf2943d-dafc-11e4-84be-4b2d36c63a9f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[293,306,307],"tindex":"acf2943e-dafc-11e4-84be-2520f39a5496","variableMapping":{"shiftSum":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-1},{"failures":[],"tindex":"acf2943f-dafc-11e4-84be-a5b1e2eac343","variableMapping":{"defaultUTurnCost":"speedVal","weight":"speedVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"acf29440-dafc-11e4-84be-5b81f1e11b11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[322,323,324,325],"tindex":"acf29441-dafc-11e4-84be-4738ffc1d0fc","variableMapping":{"acceptBit":"acceptBit","way":"way","sidewalks":"ferries"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"acf29442-dafc-11e4-84be-518dbdae8f28","variableMapping":{"pavementName":"key","wayTypeName":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"acf29443-dafc-11e4-84be-ef6414fc8766","variableMapping":{"value":"start","numberOfBits":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-2},{"failures":[326,68,327,328,274,329],"tindex":"acf29444-dafc-11e4-84be-5f76d13e7d5e","variableMapping":{"lastIndex":"shift","fromIndex":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[61,73,74,271],"tindex":"acf29445-dafc-11e4-84be-f7feefb9a51d","variableMapping":{"str":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[0],"tindex":"acf29446-dafc-11e4-84be-5b2a59b0e0a9","variableMapping":{"allBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[330,331,332],"tindex":"acf29447-dafc-11e4-84be-377f72f959b8","variableMapping":{"size":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"acf2bb58-dafc-11e4-84be-7b4a1b1acbb6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"acf2bb59-dafc-11e4-84be-b5ae4e89f292","variableMapping":{"dataAccess":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:163","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":0},{"failures":[287],"tindex":"acf2bb5a-dafc-11e4-84be-694f345d1c00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:250","type":"CtIfImpl","sourcecode":"if (!boolean)\n    return com.graphhopper.storage.GraphHopperStorage.reverseFlags(long, long);\n"},"status":-1},{"failures":[269],"tindex":"acf2bb5b-dafc-11e4-84be-6551625da86e","variableMapping":{"towerNodeDistance":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:334","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"acf2bb5c-dafc-11e4-84be-4f478491ff76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[333,334,335,336,337,338,339,340],"tindex":"acf2bb5d-dafc-11e4-84be-016e5e20c6e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[265],"tindex":"acf2bb5e-dafc-11e4-84be-ed1c1ffed103","variableMapping":{"edgePointer":"encoded","edgeEntryBytes":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","nextEdge":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"acf2e26f-dafc-11e4-84be-4dc9bbe9579f","variableMapping":{"finishedTo":"blockFords","finishedFrom":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"acf2e270-dafc-11e4-84be-5fabc2727a0e","variableMapping":{"this":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[52,73,341,342,343,263,264,269,344,345,346],"tindex":"acf2e271-dafc-11e4-84be-6163f0649254","variableMapping":{"size":"kmInteger","from":"kmInteger","end":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"acf2e272-dafc-11e4-84be-ebeb4d820533","variableMapping":{"fwdFaster":"midLat","incDist2DSum":"maxLatTmp","fwdSlower":"midLat","fullDist2D":"maxLatTmp","restDist2D":"midLat","speed":"midLat","decDist2DSum":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[347,348,28,30,349,350,351,352,353,354,355,180,52,53,56,296,300,301,304],"tindex":"acf2e273-dafc-11e4-84be-ad7effa98dbc","variableMapping":{"id":"nodeB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[74,356,357],"tindex":"acf2e274-dafc-11e4-84be-9528108ab66a","variableMapping":{"segmentSizeInBytes":"biggestStart","index":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":-1},{"failures":[358,260,0,287,297],"tindex":"acf2e275-dafc-11e4-84be-278e3745138e","variableMapping":{"distance":"speed","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[359,360],"tindex":"acf2e276-dafc-11e4-84be-b5db53b9bbb0","variableMapping":{"lazyUpdates":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"acf2e277-dafc-11e4-84be-2f57dd66f608","variableMapping":{"byteCount":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"acf2e278-dafc-11e4-84be-2736744a1996","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.VERY_NICE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"acf30989-dafc-11e4-84be-877923996b53","variableMapping":{"len":"y1","i":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"acf3098a-dafc-11e4-84be-5389c95df3f7","variableMapping":{"start":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[100,102,104,347,361,52,53,59,293,304,306,307,362,363,364,365,98],"tindex":"acf3098b-dafc-11e4-84be-6db5528c1e66","variableMapping":{"i":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"acf3098c-dafc-11e4-84be-7f669f4e1543","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"acf3098d-dafc-11e4-84be-a7c079cd5dea","variableMapping":{"tmp":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"acf3098e-dafc-11e4-84be-6f0e5df630ba","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"to","nodeId":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-2},{"failures":[],"tindex":"acf3098f-dafc-11e4-84be-631a68765cb0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"acf30990-dafc-11e4-84be-e5f8c83bc8b7","variableMapping":{"equalNormedDelta":"d1","currNormedDist":"d1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:883","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-2},{"failures":[],"tindex":"acf30991-dafc-11e4-84be-9bc48c73b8eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[],"tindex":"acf30992-dafc-11e4-84be-0f10b3a3df41","variableMapping":{"distance":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","maxSpeed":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[68],"tindex":"acf30993-dafc-11e4-84be-85b05dc0fe41","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[266],"tindex":"acf30994-dafc-11e4-84be-e1e2a95c834d","variableMapping":{"empty":"blockFords"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[359,360,99,100,101,102,103,7,104,105,8,9,106,107,108,10,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,11,129,130,131,132,133,12,134,135,136,137,13,138,14,15,139,140,16,141,142,17,18,143,144,145,19,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,20,166,167,168,169,170,21,171,172,173,174,22,175,23,24,176,177,178,179,348,180,181,182,37,38,183,184,185,39,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,40,206,207,208,209,210,41,211,212,213,214,42,215,43,44,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,45,244,245,246,247,248,249,250,251,252,253,254,50,51,52,53,54,55,56,57,58,59,60,326,366,367,61,62,63,64,65,66,67,68,69,368,70,71,72,73,369,74,78,81,370,371,372,358,85,86,259,373,327,374,375,376,260,377,378,330,379,356,357,331,332,380,381,382,310,383,384,385,386,387,388,389,311,341,322,390,261,87,0,391,392,393,394,312,342,313,328,395,396,397,398,399,400,401,402,314,343,323,403,404,405,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,406,407,315,316,408,409,410,411,412,413,414,317,344,324,415,416,417,418,419,420,318,345,319,329,421,422,423,424,425,426,427,428,320,346,325,429,430,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,88,307,308,309,431,362,432,363,433,434,435,436,437,364,438,365,439,98,440,441,442,89,90,91,92,443,444,93],"tindex":"acf330a5-dafc-11e4-84be-ed89fd607f59","variableMapping":{"encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:138","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"Encoding manager was not set.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[],"tindex":"acf330a6-dafc-11e4-84be-d78930bcdb3e","variableMapping":{"size":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"acf330a7-dafc-11e4-84be-8f39b4eae8b3","variableMapping":{"item":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[393,419],"tindex":"acf330a8-dafc-11e4-84be-553b6150aca4","variableMapping":{"encoderList":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"acf330a9-dafc-11e4-84be-970e073b86f7","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"acf330aa-dafc-11e4-84be-b35be7b35c17","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[74],"tindex":"acf330ab-dafc-11e4-84be-bf24a7aadaca","variableMapping":{"res":"backwardBit","maxBit":"encoded","value":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"acf330ac-dafc-11e4-84be-d9efe5bda0b0","variableMapping":{"id":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"acf330ad-dafc-11e4-84be-eff90af0ae7a","variableMapping":{"weightToPrioMap":"weightToPrioMap","highway":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[359,360,445,99,100,101,102,103,7,104,105,8,9,106,107,108,10,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,11,129,130,131,132,133,12,134,135,136,137,13,138,14,15,139,140,16,141,142,17,18,143,144,145,19,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,20,166,167,168,169,170,21,171,172,173,174,22,175,23,24,176,177,446,447,448,449,450,451,178,452,453,25,26,27,454,455,456,457,458,459,460,461,462,463,464,179,347,348,361,465,466,28,29,30,349,467,350,468,469,351,352,353,354,470,355,180,31,32,33,34,471,35,472,473,474,475,476,477,181,182,37,38,183,184,185,39,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,40,206,207,208,209,210,41,211,212,213,214,42,215,43,44,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,45,244,245,246,247,248,249,250,251,252,253,254,50,51,52,53,54,55,56,478,57,58,59,60,479,366,367,61,62,63,64,65,66,67,68,69,368,70,71,72,73,74,75,76,480,77,78,79,80,81,82,481,83,84,255,370,371,256,257,258,372,358,85,86,259,376,260,377,378,330,379,356,357,331,332,380,381,382,310,383,384,385,386,387,388,389,311,341,322,390,261,87,0,391,392,393,394,312,342,313,328,395,396,397,398,399,400,401,402,314,343,323,403,404,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,406,407,315,316,408,409,410,411,412,413,414,317,344,324,415,416,417,418,419,420,318,345,319,329,421,422,423,424,425,426,427,428,320,346,325,429,430,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,88,307,308,309,431,362,432,363,433,434,435,436,437,364,438,365,439,98,440,482,483,441,442,89,90,91,92,443,444,484,485,93,486,487,488],"tindex":"acf357be-dafc-11e4-84be-f9b52f8883ca","variableMapping":{"str":"entry","s":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:132","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \".\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[392,407,418],"tindex":"acf357bf-dafc-11e4-84be-b9b1c56c1deb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"acf357c0-dafc-11e4-84be-f308f883a81a","variableMapping":{"minLatInit":"minLat","maxLonInit":"maxLat","minLonInit":"minLat","bounds":"this","maxLatInit":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[119,156,196,229,61,73,358,85,260,377,381,310,341,261,0,392,342,313,343,405,264,267,269,270,276,278,280,281,283,285,407,316,344,418,345,319,346,287,288,297,299,309,92],"tindex":"acf357c1-dafc-11e4-84be-cbd539ba6e74","variableMapping":{"defaultUTurnCost":"speedVal","weight":"speedVal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[61,267,271],"tindex":"acf357c2-dafc-11e4-84be-e9c84ce8f147","variableMapping":{"scDirMask":"ferryBit","flags":"ferryBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"acf37ed3-dafc-11e4-84be-09af7e308ddd","variableMapping":{"r":"fwdSlower","x":"fwdSlower","absY":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[68,327,391,328,272,274,417,329],"tindex":"acf37ed4-dafc-11e4-84be-d7aa38910c2b","variableMapping":{"nodes":"maxTurnCosts","adj":"maxTurnCosts","base":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[328,274,329],"tindex":"acf37ed5-dafc-11e4-84be-81fa2907e2a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[452,457,458,489,465,468,469,333,334,335,337,338,490,491,492,339,340],"tindex":"acf37ed6-dafc-11e4-84be-87b10115f79f","variableMapping":{"x1":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:158","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[],"tindex":"acf37ed7-dafc-11e4-84be-f3d552b42801","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"acf37ed8-dafc-11e4-84be-0704f045839d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[310,311,312,313,314,315,316,317,318,319,320],"tindex":"acf37ed9-dafc-11e4-84be-a7f8ac9eb4f5","variableMapping":{"edgePointer":"unpavedBit","maxEdges":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[373,375,390,393,404,416,419,430],"tindex":"acf37eda-dafc-11e4-84be-2db08cab6b86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"acf37edb-dafc-11e4-84be-5f7c1f83e088","variableMapping":{"res":"directionBitMask","value":"encoded","maxBits":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:259","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    long <<= int;\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"acf37edc-dafc-11e4-84be-991cf63c0656","variableMapping":{"height":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:415","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = int + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"acf37edd-dafc-11e4-84be-9953d4e1a387","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[],"tindex":"acf37ede-dafc-11e4-84be-a50571306847","variableMapping":{"i":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[59,260,280,283],"tindex":"acf3a5ef-dafc-11e4-84be-4774c6c520ad","variableMapping":{"maxLeafEntries":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[493,494,5,495,496,497,498,499,500,501,502,503,504,505,6,506,507,508,509,510,511,512,513,514,515,7,8,9,16,17,18,36,37,38,516,50,51,52,53,54,55,56,57,58,59,60,517,518,519,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"acf3a5f0-dafc-11e4-84be-db71bb3945f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":-1},{"failures":[],"tindex":"acf3a5f1-dafc-11e4-84be-496fa7c2c543","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"acf3a5f2-dafc-11e4-84be-838819ec3703","variableMapping":{"maxTurnCosts":"maxTurnCosts","costs":"costs","turnRestrictionBit":"turnRestrictionBit","restricted":"restricted"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":0},{"failures":[],"tindex":"acf3a5f3-dafc-11e4-84be-dfcecbc2a25e","variableMapping":{"newName":"wayTypeName","name":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[],"tindex":"acf3a5f4-dafc-11e4-84be-d7c3eba8a192","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"acf3a5f5-dafc-11e4-84be-39b9f768400e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"acf3a5f6-dafc-11e4-84be-9388d435c5fa","variableMapping":{"lastIndex":"minutes","fromIndex":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[260,310,311,392,312,313,314,407,315,317,418,318,319,320],"tindex":"acf3a5f7-dafc-11e4-84be-19cff08eae13","variableMapping":{"location":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[384,396,262,277,408,422],"tindex":"acf3a5f8-dafc-11e4-84be-b16f1b66e9cd","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"acf3a5f9-dafc-11e4-84be-bfcfb47eb322","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":0},{"failures":[],"tindex":"acf3a5fa-dafc-11e4-84be-3523ef7b0dbd","variableMapping":{"high":"allowed","len":"allowed","start":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":0},{"failures":[52,53,56,59,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,306,88,307,308,309,431,363,364,438,440],"tindex":"acf3a5fb-dafc-11e4-84be-59853eb5e191","variableMapping":{"edge":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[289,292,293,304,306,307,431,364,438],"tindex":"acf3a5fc-dafc-11e4-84be-e5316652184a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:89","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[493,494,5,495,496,497,498,499,500,501,502,503,504,505,6,506,507,508,509,510,511,512,513,514,515,7,8,9,16,17,18,36,37,38,516,50,51,52,53,54,55,56,57,58,59,60,517,518,519,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"acf3cd0d-dafc-11e4-84be-417389a7a413","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":-1},{"failures":[],"tindex":"acf3cd0e-dafc-11e4-84be-cda801e9e12e","variableMapping":{"flags":"turnRestrictionBit","mask":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"acf3cd0f-dafc-11e4-84be-53fe63676f59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"acf3cd10-dafc-11e4-84be-1d216a17b330","variableMapping":{"weightLong":"flags","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":133,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":305,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":7,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":405,"com.graphhopper.GraphHopperAPITest.testNoLoad":445,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":219,"com.graphhopper.reader.OSMReaderTest.testFerry":61,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":443,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":444,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":345,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":383,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":29,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":51,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":155,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":504,"com.graphhopper.coll.CompressedArrayTest.testCompress":340,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":389,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":44,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":239,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":196,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":361,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":505,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":498,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":365,"com.graphhopper.GraphHopperTest.testPrepare":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":304,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":431,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":97,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":420,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":311,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":483,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":107,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":465,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":310,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":289,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":26,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":319,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":479,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":16,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":490,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":10,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":440,"com.graphhopper.GraphHopperTest.testLoadOSM":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":27,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":376,"com.graphhopper.reader.OSMReaderTest.testSort":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":346,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":18,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":507,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":213,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":37,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":251,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":81,"com.graphhopper.storage.RAMDataAccessTest.testHeader":499,"com.graphhopper.routing.DijkstraTest.initializationError":255,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":174,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":515,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":132,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":192,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":141,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":19,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":118,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":350,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":348,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":349,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":478,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":292,"com.graphhopper.coll.OSMIDMapTest.testGetLong":48,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":291,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":165,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":125,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":321,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":8,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":127,"com.graphhopper.coll.CompressedArrayTest.testCompress2":339,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":205,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":407,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":156,"com.graphhopper.GraphHopperAPITest.testLoad":359,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":108,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":277,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":197,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":187,"com.graphhopper.storage.LevelGraphStorageTest.testClone":112,"com.graphhopper.reader.OSMReaderTest.testBarriers":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":347,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":328,"com.graphhopper.util.GHUtilityTest.testCopy":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":322,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":450,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":502,"com.graphhopper.routing.PathTest.testFindInstruction":86,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":386,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":129,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":147,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":283,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":441,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":447,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":214,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":172,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":484,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":401,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":374,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":258,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":114,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":224,"com.graphhopper.util.InstructionListTest.testWayList2":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":460,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":23,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":419,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":38,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":87,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":116,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":329,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":508,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":157,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":31,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":293,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":66,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":506,"com.graphhopper.routing.AStarTest.initializationError":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":88,"com.graphhopper.coll.OSMIDMapTest.testGet":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":154,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":284,"com.graphhopper.routing.PathBidirRefTest.testExtract":370,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":423,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":516,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":352,"com.graphhopper.storage.RAMDataAccessTest.testCopy":495,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":509,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":244,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":381,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":422,"com.graphhopper.storage.RAMDataAccessTest.testSegments":501,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":179,"com.graphhopper.util.GHUtilityTest.testSort2":485,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":302,"com.graphhopper.reader.OSMReaderTest.testMain":63,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":424,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":491,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":325,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":353,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":248,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":119,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":123,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":139,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":78,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":392,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":126,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":73,"com.graphhopper.storage.StorablePropertiesTest.testStore":36,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":5,"com.graphhopper.storage.GraphHopperStorageTest.testClone":189,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":247,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":271,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":199,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":269,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":324,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":225,"com.graphhopper.routing.PathTest.testTime":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":412,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":14,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":462,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":238,"com.graphhopper.reader.OSMReaderTest.testRelation":368,"com.graphhopper.util.GHUtilityTest.testSortDirected":488,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":343,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":513,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":77,"com.graphhopper.GraphHopperTest.testFootOnly":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":382,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":467,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":391,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":234,"com.graphhopper.search.NameIndexTest.testCreate":4,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":500,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":75,"com.graphhopper.routing.QueryGraphTest.testOneWay":481,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":463,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":385,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":25,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":333,"com.graphhopper.reader.OSMReaderTest.testWithBounds":72,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":503,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":323,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":494,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":231,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":379,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":240,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":285,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":373,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":106,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":402,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":390,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":167,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":161,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":39,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":288,"com.graphhopper.util.InstructionListTest.testWayList":90,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":421,"com.graphhopper.GraphHopperAPITest.testDisconnected179":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":226,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":336,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":452,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":399,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":367,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":428,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":54,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":191,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":439,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":208,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":417,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":299,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":438,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":320,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":144,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":308,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":430,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":182,"com.graphhopper.routing.PathTest.testWayList":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":252,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":266,"com.graphhopper.coll.OSMIDMapTest.testGet2":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":309,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":510,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":135,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":517,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":166,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":427,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":202,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":152,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":190,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":124,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":469,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":496,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":514,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":396,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":315,"com.graphhopper.util.GHUtilityTest.testSort":486,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":456,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":492,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":384,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":426,"com.graphhopper.search.NameIndexTest.testPut":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":176,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":188,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":449,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":466,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":35,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":342,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":472,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":408,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":378,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":518,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":307,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":330,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":45,"com.graphhopper.routing.PathTest.testFound":372,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":60,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":260,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":137,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":425,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":158,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":3,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":229,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":194,"com.graphhopper.util.InstructionListTest.testEmptyList":442,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":493,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":414,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":300,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":263,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":262,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":341,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":303,"com.graphhopper.reader.PrinctonReaderTest.testRead":366,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":42,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":30,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":153,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":228,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":218,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":397,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":393,"com.graphhopper.reader.OSMReaderTest.testFoot":62,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":242,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":519,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":15,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":457,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":380,"com.graphhopper.reader.OSMReaderTest.testOneWay":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":458,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":198,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":211,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":387,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":512,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":206,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":395,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":435,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":489,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":433,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":475,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":511,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":279,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":232,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":480,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":183,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":369,"com.graphhopper.routing.PathBidirRefTest.testExtract2":371,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":287,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":178,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":461,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":1,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":210,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":476,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":415,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":254,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":280,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":477,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":454,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":212,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":487,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":115,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":273,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":40,"com.graphhopper.GraphHopperTest.testFootAndCar":55,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":121,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":355,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":497,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":222,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":259,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":149,"com.graphhopper.GraphHopperTest.testPrepareOnly":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":306,"com.graphhopper.GraphHopperTest.testVia":52,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":451,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":220,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":70,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":103,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":92,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":209,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":281,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":235,"com.graphhopper.routing.AStarBidirectionTest.initializationError":256,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":261,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":136,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":134,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":17}}]
