[{"failures":[],"tindex":"143a99e0-db87-11e4-850d-3398ec527be2","variableMapping":{"high":"shift","guess":"shift","low":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"143ac0f1-db87-11e4-850d-c1d396d0cf2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"143ac0f2-db87-11e4-850d-05e1fc19b7ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"143ac0f3-db87-11e4-850d-794ec6fe5679","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[107,70,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"143ac0f4-db87-11e4-850d-c19f79602004","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"143ac0f5-db87-11e4-850d-bd024434b7af","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"speed","java.lang.Double.POSITIVE_INFINITY":"speed","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[77,79,80,81,153,82,84,85,86,89,154,96],"tindex":"143ac0f6-db87-11e4-850d-fb3a0e820ea9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-1},{"failures":[109,112,114,124,155,131,134,136,146,156,157,158,151,159],"tindex":"143ae807-db87-11e4-850d-53f7bd09fab2","variableMapping":{"location":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:648","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[90,95,97],"tindex":"143ae808-db87-11e4-850d-71a6b9091003","variableMapping":{"size":"i","hash":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"143ae809-db87-11e4-850d-53995b695220","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[],"tindex":"143ae80a-db87-11e4-850d-01c061e0999c","variableMapping":{"edgeCount":"index","lastEdgeIndex":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":0},{"failures":[],"tindex":"143ae80b-db87-11e4-850d-bfcdb135ef7b","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:613","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) == null)\n    throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"143ae80c-db87-11e4-850d-dbe991111e33","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[0,160,161,1,2,162,163,3,164,165,166,167,4,168,169,170,171,5,172,6,173,174,175,176,177,7,8,178,179,9,180,10,11,181,182,183,12,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,13,14,237,238,15,16,239,240,17,241,242,243,244,245,18,246,247,248,249,19,250,20,251,252,253,254,255,21,22,256,257,23,258,24,25,259,260,261,26,262,30,34,263,39,264,265,266,40,267,41,268,269,42,43,270,271,44,272,273,274,275,276,45,277,278,279,280,46,281,47,282,283,284,285,286,48,49,287,288,50,289,51,52,290,291,292,53,293,54,294,55,295,296,297,298,56,299,300,57,58,59,301,302,303,304,305,60,61,306,62,63,307,64,107,70,72,308,309,310,311,312,73,313,314,74,315,316,317,318,75,76,77,78,79,80,81,153,82,83,84,319,85,86,87,320,88,89,321,322,90,323,324,154,91,325,92,326,327,93,328,94,329,95,96,97,330,98,331,99,100,101,332,333,334,102,335,336,337,103,104,338,339,340,341,105,342,343,344,345,346,106,347,348,349],"tindex":"143b362d-db87-11e4-850d-03fd46fac89b","variableMapping":{"tmpNo":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[112,114,124,134,136,146,157,350,158,151,159],"tindex":"143b362e-db87-11e4-850d-bf68cd55ba5e","variableMapping":{"err":"wayType","tmpErr":"wayType","y1":"wayType","dLon":"wayType","sLat":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[],"tindex":"143b362f-db87-11e4-850d-271a44842c14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"143b3630-db87-11e4-850d-03fb155588b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[351,352,331,332,335,103],"tindex":"143b3631-db87-11e4-850d-c1710f4a899c","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"143b3632-db87-11e4-850d-a16e4ef3d1a3","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[],"tindex":"143b5d43-db87-11e4-850d-9bdb435f534a","variableMapping":{"time":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[0,161,175,178,11,187,189,223,225,353,13,14,238,253,256,25,354,355,34,356,37,357,358,359,263,41,269,284,287,52,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,58,59,72,310,73,313,74,315,318,96,377,378,379,380,381,331,100,101,333,102,335,104,339,340,341,105,342,345],"tindex":"143b5d44-db87-11e4-850d-4bc396406978","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"143b5d45-db87-11e4-850d-2594b33262d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[382,383,384,385,386,387,388,389,390,391],"tindex":"143b5d46-db87-11e4-850d-c1563b55574d","variableMapping":{"r":"lon","angle":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"143b5d47-db87-11e4-850d-e99ff0bf4b24","variableMapping":{"tmpNo":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[0,175,11,187,223,13,14,253,25,355,34,37,41,284,52,366,373,374,375,376,56,59,72,377,331,99,100,101,333,102,335,337,104,338,339,340,341,105,342,343,344,345,346,106],"tindex":"143b5d48-db87-11e4-850d-a7db5f9ab767","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":-1},{"failures":[60,307],"tindex":"143b5d49-db87-11e4-850d-55c5ef8e7de2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"143b5d4a-db87-11e4-850d-131663b8d179","variableMapping":{"intIndex":"bufferIndex","len":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[392,0,393,394,160,395,161,1,2,162,163,3,164,165,166,167,396,4,168,169,170,171,5,172,6,173,174,175,176,177,7,397,8,178,179,9,180,10,11,181,182,183,12,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,398,199,200,201,202,203,204,399,205,206,207,208,209,210,400,211,212,213,214,215,401,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,402,235,236,13,403,404,14,405,406,237,407,238,15,16,239,240,17,241,242,243,244,245,18,246,247,248,249,19,250,20,251,252,253,254,255,21,408,22,256,257,23,258,24,25,259,260,261,26,262,354,27,28,409,410,29,411,412,413,414,415,30,416,417,418,419,31,420,32,421,422,355,423,424,33,425,34,356,426,35,427,36,37,428,429,430,38,431,39,264,265,266,40,432,267,433,41,434,435,268,436,269,42,43,270,271,44,272,273,274,275,276,45,277,278,279,280,46,281,47,282,283,284,285,286,48,437,49,287,288,50,289,51,52,290,291,292,53,293,54,294,438,55,295,296,297,298,56,299,439,300,440,57,58,59,301,302,303,304,305,441,60,61,306,62,63,307,442,443,64,351,65,444,445,352,446,447,448,449,66,450,451,67,452,453,68,454,455,456,69,457,458,107,70,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,459,460,129,461,155,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,462,156,157,350,463,464,465,466,467,468,469,158,470,471,472,473,474,475,476,151,477,478,479,480,481,482,483,159,484,485,486,487,488,71,72,308,489,309,310,311,312,73,313,314,74,315,316,317,318,75,76,490,77,78,79,80,81,153,82,83,84,319,85,86,87,320,88,89,321,322,90,323,324,154,91,325,92,326,327,93,328,94,329,95,96,97,330,98,491,492,331,493,99,100,101,332,333,494,334,102,335,336,495,337,103,104,338,339,340,341,105,342,152,343,344,345,346,106,348,349],"tindex":"143b845b-db87-11e4-850d-c9cfcb4a416b","variableMapping":{"latSimilar":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"status":-1},{"failures":[75,77,82,83,86,87,320,88,89,321,322,90,323,324,154,91,92,326,327,93,328,94,95,96,97,330,98,99,100,333,335],"tindex":"143b845c-db87-11e4-850d-9deee50f3604","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[82,85,496,497,498,499,500],"tindex":"143bab6d-db87-11e4-850d-8f228fc86173","variableMapping":{"shift":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"143bd27e-db87-11e4-850d-b967bb8c88ea","variableMapping":{"high":"flags","len":"directionBitMask","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"143bd27f-db87-11e4-850d-2bb87977b631","variableMapping":{"compressionLevel":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"143bd280-db87-11e4-850d-d99bda7a5026","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[501,502,503,504,0,393,161,175,178,11,182,183,187,188,189,398,399,207,208,209,210,400,211,401,223,224,225,402,505,353,506,507,508,509,510,511,512,513,514,515,516,517,13,403,14,405,238,253,256,25,260,261,354,27,28,409,410,29,411,412,413,414,415,416,417,418,419,31,420,32,421,422,355,423,424,33,425,34,356,426,35,427,36,37,428,429,430,38,431,432,41,434,269,284,287,52,291,292,518,519,520,360,361,521,362,522,523,363,364,365,366,524,525,526,367,368,527,369,528,529,370,371,372,373,56,57,58,59,301,107,70,72,308,309,310,312,73,313,314,74,315,317,318,96,377,378,379,380,381,331,99,100,101,332,333,334,102,335,336,337,103,104,338,339,340,341,105,342,343,344,345,346,106,530,531,532,533,534],"tindex":"143bd281-db87-11e4-850d-83608e4fe135","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"143bd282-db87-11e4-850d-41a00be6c2f0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"143bd283-db87-11e4-850d-2fa8ee23d63d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:71","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[110,114,535,536,132,136,350,151],"tindex":"143bd284-db87-11e4-850d-0f76a771a5f8","variableMapping":{"initialized":"partOfCycleRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:299","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call prepareIndex only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"143bf995-db87-11e4-850d-a359a42b8076","variableMapping":{"finishedTo":"closed","finishedFrom":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"143bf996-db87-11e4-850d-8183eae46eb9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"143bf997-db87-11e4-850d-373111e1aacc","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"empty","v":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[],"tindex":"143bf998-db87-11e4-850d-8d5c1eb06d41","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"lon1","java.lang.Double.POSITIVE_INFINITY":"lat2","weight":"lat1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-2},{"failures":[2,396,168,169,171,173,174,178,179,16,245,246,247,249,251,252,256,257,28,415,416,417,419,421,422,356,426,267,43,276,277,278,280,282,283,287,288,60,62],"tindex":"143bf999-db87-11e4-850d-c5e7135f9e36","variableMapping":{"index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[90,97],"tindex":"143c47ba-db87-11e4-850d-999bfe050c6a","variableMapping":{"err":"from","tmpErr":"skippedEdge2","y1":"skippedEdge2","dLon":"from","sLat":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"143c47bb-db87-11e4-850d-3f107db45a3b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"143c47bc-db87-11e4-850d-69b38cbb5e81","variableMapping":{"newAdjIndex":"segmentSizeInBytes","newBaseIndex":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-2},{"failures":[],"tindex":"143c47bd-db87-11e4-850d-3bd87c31bdc1","variableMapping":{"bbox":"this","box":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[151],"tindex":"143c47be-db87-11e4-850d-119f8ecfb533","variableMapping":{"str":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[392,0,393,394,160,161,1,2,162,163,3,164,165,166,167,396,4,168,169,170,171,5,172,6,173,174,175,176,177,7,397,8,178,179,9,180,10,11,181,182,183,12,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,13,404,14,405,406,237,238,15,16,239,240,17,241,242,243,244,245,18,246,247,248,249,19,250,20,251,252,253,254,255,21,408,22,256,257,23,258,24,25,259,260,261,26,262,30,34,537,357,538,358,39,264,265,266,40,432,267,433,41,434,435,268,269,42,43,270,271,44,272,273,274,275,276,45,277,278,279,280,46,281,47,282,283,284,285,286,48,437,49,287,288,50,289,51,52,290,291,292,53,293,54,294,55,295,296,297,298,56,299,300,440,57,58,59,301,302,303,304,305,60,61,306,62,63,307,64,107,70,72,308,309,310,311,312,73,313,314,74,315,316,317,318,75,76,77,78,79,80,81,153,82,83,84,319,85,86,87,320,88,89,321,322,90,323,324,154,91,325,92,326,327,93,328,94,329,95,96,97,330,98,331,493,99,100,101,332,333,334,102,335,336,337,103,104,338,339,340,341,105,342,343,344,345,346,106,347,348,349],"tindex":"143c6ecf-db87-11e4-850d-e30b8b9625f2","variableMapping":{"size":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"143c6ed0-db87-11e4-850d-9117188acd0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:71","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[392,0,393,394,160,395,161,1,2,162,163,3,164,165,166,167,396,4,168,169,170,171,5,172,6,173,174,175,176,177,7,397,8,178,179,9,180,10,11,181,182,183,12,184,200,206,217,236,13,403,404,14,405,406,237,407,238,15,16,239,240,17,241,242,243,244,245,18,246,247,248,249,19,250,20,251,252,253,254,255,21,408,22,256,257,23,258,24,25,259,260,261,26,262,354,27,28,409,410,29,411,412,413,414,415,30,416,417,418,419,31,420,32,421,422,355,423,424,33,425,34,356,426,35,427,36,37,428,429,430,38,431,39,264,265,266,40,432,267,433,41,434,435,268,436,269,42,43,270,271,44,272,273,274,275,276,45,277,278,279,280,46,281,47,282,283,284,285,286,48,437,49,287,288,50,289,51,52,290,291,292,53,293,441,306,442,443,64,351,65,444,445,352,446,447,448,449,66,450,451,67,452,453,68,454,455,456,69,457,458,107,70,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,535,539,540,536,155,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,462,156,157,350,463,464,465,466,467,468,469,158,470,471,472,473,474,475,476,151,477,478,479,480,481,482,483,159,484,485,486,487,489,309,87,320,88,89,321,322,90,323,324,154,91,325,92,326,327,93,328,94,329,95,96,97,330,98,491,492,332,336,337,103,104,338,339,340,341,105,342,343,344,345,346,106],"tindex":"143c6ed1-db87-11e4-850d-6d1381946f2c","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) > 1)\n    throw new java.lang.IllegalStateException((\"Multiple encoders are active. cannot return one:\" + com.graphhopper.routing.util.EncodingManager.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[112,114,124,134,136,146,157,350,158,151,159],"tindex":"143c94e2-db87-11e4-850d-7bee36555c31","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[453,541,542],"tindex":"143c94e3-db87-11e4-850d-b99fd0b3b78d","variableMapping":{"currentEntry":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"143c94e4-db87-11e4-850d-1bb0a7cbb76b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-2},{"failures":[301,449,452,458,346],"tindex":"143c94e5-db87-11e4-850d-f966b8c58dcd","variableMapping":{"tmp":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"143c94e6-db87-11e4-850d-8b6ef8b47498","variableMapping":{"retBucket":"nodeEntryBytes","bucketSize":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[126,148,471,485],"tindex":"143c94e7-db87-11e4-850d-2b3dd29c02b5","variableMapping":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"143c94e8-db87-11e4-850d-2da77bc5ffdd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"143c94e9-db87-11e4-850d-5556e4ddf725","variableMapping":{"newName":"val","name":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[0,161,1,2,166,167,4,5,7,9,11,12,200,206,217,236,13,14,238,15,16,243,244,18,19,21,23,25,26,354,27,28,413,414,30,31,33,35,37,38,40,41,269,42,43,274,275,45,46,48,50,52,53,54,55,295,60,306,63,307,65,66,67,68,69,73,74,77,78,82,84,86,320,325,92,326,327,98,99,332,103,339,105,343,106,348,349],"tindex":"143c94ea-db87-11e4-850d-51e1c35220ab","variableMapping":{"edgeKey1":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","edgeKey2":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:521","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[],"tindex":"143c94eb-db87-11e4-850d-df924dd275a0","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"143c94ec-db87-11e4-850d-2ff444b1f1d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[],"tindex":"143c94ed-db87-11e4-850d-936115f54f08","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[110,112,113,114,124,128,132,134,135,136,146,150,157,350,158,473,475,151,159,486],"tindex":"143c94ee-db87-11e4-850d-5dc096b17121","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"143c94ef-db87-11e4-850d-13e4ce83eae8","variableMapping":{"lastIndex":"shift","fromIndex":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"143c94f0-db87-11e4-850d-55186098d877","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"143c94f1-db87-11e4-850d-5536dbf87bdf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[543],"tindex":"143c94f2-db87-11e4-850d-c925861e723b","variableMapping":{"value":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"143c94f3-db87-11e4-850d-a70743cb1ae8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[535,536,152],"tindex":"143c94f4-db87-11e4-850d-e3537662314a","variableMapping":{"bm":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[2,396,169,171,173,174,178,179,16,245,247,249,251,252,256,257,28,415,417,419,421,422,356,426,43,276,278,280,282,283,287,288,60,306,62,106],"tindex":"143cbc05-db87-11e4-850d-5f0ee888c0af","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"143cbc06-db87-11e4-850d-1bd8b313b059","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 1))"},"status":-2},{"failures":[],"tindex":"143cbc07-db87-11e4-850d-8f56d3c1eaab","variableMapping":{"name":"str","location":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:66","type":"CtReturnImpl","sourcecode":"return (java.lang.String) + (java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-2},{"failures":[],"tindex":"143cbc08-db87-11e4-850d-5b7dd9dc539b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[39,82,85],"tindex":"143cbc09-db87-11e4-850d-93a174af6cca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"143cbc0a-db87-11e4-850d-f12bbe5174c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[75,77,82,83,86,87,320,88,89,321,322,90,323,324,154,91,92,326,327,93,328,94,95,96,97,330,98,99,100,333,335],"tindex":"143cbc0b-db87-11e4-850d-89204858b6c6","variableMapping":{"this":"this","edgeState":"mainEdgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"143cbc0c-db87-11e4-850d-d98880cb6f82","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[85],"tindex":"143cbc0d-db87-11e4-850d-376fba8a42a4","variableMapping":{"cap":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[185,191,193,194,544,221,227,229,230,382,383,384,385,387,389,390,545,546,391],"tindex":"143cbc0e-db87-11e4-850d-137e33d26888","variableMapping":{"i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[301,443,65,445,446,449,66,452,453,68,458,114,459,460,136,541,475,151,71,72,87,320,326,98,337],"tindex":"143cbc0f-db87-11e4-850d-b157f481139f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"143ce320-db87-11e4-850d-a17133ac5a5a","variableMapping":{"acceptBit":"encoded","ferryBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[497,499],"tindex":"143ce321-db87-11e4-850d-0f3eac606518","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"143ce322-db87-11e4-850d-5395a8ed569a","variableMapping":{"y":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","angle":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[],"tindex":"143d0a33-db87-11e4-850d-87b735b33997","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.setProperties(double, boolean, boolean)"},"status":-2},{"failures":[129],"tindex":"143d0a34-db87-11e4-850d-836fcb51941e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":-1},{"failures":[112,114,124,134,136,146,157,350,158,151,159],"tindex":"143d0a35-db87-11e4-850d-f3cf02f0a154","variableMapping":{"str":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[],"tindex":"143d0a36-db87-11e4-850d-c1bde265c2e1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"143d0a37-db87-11e4-850d-d945dd56c46c","variableMapping":{"heights":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:77","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"143d0a38-db87-11e4-850d-6970057c8d2f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[],"tindex":"143d0a39-db87-11e4-850d-eb93c3a27f7a","variableMapping":{"longSegmentSize":"lastTime","bufferStart":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"143d0a3a-db87-11e4-850d-eb84b846012a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"143d0a3b-db87-11e4-850d-b12bcc537fa1","variableMapping":{"importance":"biggestStart","hash":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"143d0a3c-db87-11e4-850d-e319ef1a34d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"143d314d-db87-11e4-850d-839360c38067","variableMapping":{"segmentSizePower":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":0},{"failures":[547],"tindex":"143d314e-db87-11e4-850d-65d673e05543","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[548,309,310,312,73,313,314,74,315,316,318,323,154,326,327,94,98,99,101,332,102,335],"tindex":"143d314f-db87-11e4-850d-6f3c8b62ec34","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-1},{"failures":[264,267,56,75,76,77,78,79,80,81,82,83,84,85,86,87,320,88,89,321,90,323,324,91,325,92,326,327,93,328,94,95,96,97,98,99,100,333],"tindex":"143d3150-db87-11e4-850d-73e9bb9d4f3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[382,383,384,385,387,388,389,390],"tindex":"143d3151-db87-11e4-850d-45fabfa3ea36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"143d3152-db87-11e4-850d-8928eb72f2ed","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":49,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":329,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":432,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":541,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":203,"com.graphhopper.GraphHopperAPITest.testNoLoad":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":27,"com.graphhopper.reader.OSMReaderTest.testFerry":337,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":295,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":477,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":224,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":493,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":293,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":128,"com.graphhopper.storage.MMapDataAccessTest.testSegments":515,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":245,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":524,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":534,"com.graphhopper.coll.CompressedArrayTest.testCompress":383,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":483,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":79,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":355,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":4,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":220,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":525,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":522,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":84,"com.graphhopper.GraphHopperTest.testPrepare":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":428,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":75,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":500,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":133,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":91,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":159,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":303,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":268,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":63,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":324,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":396,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":511,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":188,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":136,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":13,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":512,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":545,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":269,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":498,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":86,"com.graphhopper.GraphHopperTest.testLoadOSM":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":189,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":461,"com.graphhopper.reader.OSMReaderTest.testSort":338,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":306,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":344,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":405,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":180,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":0,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":429,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":74,"com.graphhopper.storage.RAMDataAccessTest.testHeader":523,"com.graphhopper.routing.DijkstraTest.initializationError":487,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":24,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":353,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":513,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":437,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":165,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":403,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":238,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":276,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":473,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":470,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":228,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":171,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":327,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":226,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":494,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":414,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":322,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":321,"com.graphhopper.coll.OSMIDMapTest.testGetLong":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":248,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":252,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":281,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":41,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":282,"com.graphhopper.coll.CompressedArrayTest.testCompress2":382,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":156,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":18,"com.graphhopper.GraphHopperAPITest.testLoad":54,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":436,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":357,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":442,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":168,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":2,"com.graphhopper.storage.LevelGraphStorageTest.testClone":271,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":547,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":307,"com.graphhopper.reader.OSMReaderTest.testBarriers":339,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":218,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":29,"com.graphhopper.util.GHUtilityTest.testCopy":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":323,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":527,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":236,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":468,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":399,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":485,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":365,"com.graphhopper.routing.PathTest.testFindInstruction":308,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":480,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":16,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":496,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":55,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":445,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":111,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":202,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":10,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":23,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":249,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":433,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":122,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":540,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":489,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":272,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":411,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":514,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":263,"com.graphhopper.util.InstructionListTest.testWayList2":59,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":196,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":12,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":260,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":107,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":393,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":274,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":521,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":526,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":137,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":369,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":548,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":246,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":207,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":90,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":340,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":367,"com.graphhopper.routing.AStarTest.initializationError":492,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":96,"com.graphhopper.coll.OSMIDMapTest.testGet":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":244,"com.graphhopper.routing.PathBidirRefTest.testExtract":304,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":352,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":140,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":284,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":232,"com.graphhopper.storage.RAMDataAccessTest.testCopy":360,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":528,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":426,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":356,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":475,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":139,"com.graphhopper.storage.RAMDataAccessTest.testSegments":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":200,"com.graphhopper.util.GHUtilityTest.testSort2":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":93,"com.graphhopper.reader.OSMReaderTest.testMain":104,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":434,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":251,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":546,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":233,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":449,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":406,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":45,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":280,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":53,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":73,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":109,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":537,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":47,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":346,"com.graphhopper.storage.StorablePropertiesTest.testStore":505,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":520,"com.graphhopper.storage.GraphHopperStorageTest.testClone":163,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":427,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":68,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":170,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":452,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":471,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":412,"com.graphhopper.routing.PathTest.testTime":71,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":467,"com.graphhopper.util.BitUtilLittleTest.testToFloat":375,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":291,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":44,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":457,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":400,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":198,"com.graphhopper.reader.OSMReaderTest.testRelation":152,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":422,"com.graphhopper.util.GHUtilityTest.testSortDirected":300,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":499,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":125,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":372,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":312,"com.graphhopper.GraphHopperTest.testFootOnly":335,"com.graphhopper.util.BitUtilLittleTest.testToInt":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":476,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":451,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":227,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":536,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":31,"com.graphhopper.search.NameIndexTest.testCreate":504,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":363,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":309,"com.graphhopper.routing.QueryGraphTest.testOneWay":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":398,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":387,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":479,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":533,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":187,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":384,"com.graphhopper.reader.OSMReaderTest.testWithBounds":345,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":126,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":519,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":259,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":423,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":446,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":535,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":42,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":435,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":123,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":486,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":255,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":67,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":19,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":161,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":320,"com.graphhopper.util.BitUtilLittleTest.testToBitString":374,"com.graphhopper.util.InstructionListTest.testWayList":58,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":181,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":507,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":138,"com.graphhopper.GraphHopperAPITest.testDisconnected179":294,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":413,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":408,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":185,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":516,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":120,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":349,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":145,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":101,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":164,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":209,"com.graphhopper.routing.util.EncodedValueTest.testSwap":543,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":319,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":130,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":92,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":491,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":83,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":454,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":464,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":237,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":330,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":402,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":538,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":150,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":392,"com.graphhopper.routing.PathTest.testWayList":72,"com.graphhopper.storage.MMapDataAccessTest.testCopy":510,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":430,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":416,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":450,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":542,"com.graphhopper.coll.OSMIDMapTest.testGet2":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":98,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":529,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":50,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":530,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":144,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":172,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":443,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":242,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":46,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":230,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":361,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":373,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":231,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":117,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":497,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":157,"com.graphhopper.util.GHUtilityTest.testSort":299,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":509,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":425,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":143,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":478,"com.graphhopper.search.NameIndexTest.testPut":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":26,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":407,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":211,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":214,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":113,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":212,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":404,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":463,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":460,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":531,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":250,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":60,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":359,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":34,"com.graphhopper.routing.PathTest.testFound":488,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":155,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":336,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":51,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":142,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":247,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":503,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":30,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":167,"com.graphhopper.util.InstructionListTest.testEmptyList":440,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":518,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":154,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":469,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":234,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":326,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":448,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":447,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":484,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":328,"com.graphhopper.reader.PrinctonReaderTest.testRead":348,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":11,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":517,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":225,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":243,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":381,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":354,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":118,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":482,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":506,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":539,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":110,"com.graphhopper.reader.OSMReaderTest.testFoot":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":33,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":318,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":532,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":193,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":292,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":390,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":474,"com.graphhopper.reader.OSMReaderTest.testOneWay":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":194,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":169,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":179,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":258,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":481,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":371,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":32,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":80,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":544,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":453,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":78,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":215,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":64,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":418,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":311,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":394,"com.graphhopper.routing.PathBidirRefTest.testExtract2":305,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":87,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":197,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":206,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":501,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":8,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":401,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":472,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":105,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":431,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":190,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":9,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":439,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":273,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":455,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":175,"com.graphhopper.GraphHopperTest.testFootAndCar":332,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":278,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":350,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":235,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":362,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":410,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":508,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":95,"com.graphhopper.GraphHopperTest.testPrepareOnly":331,"com.graphhopper.GraphHopperTest.testVia":99,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":28,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":343,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":40,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":301,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":397,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":65,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":420,"com.graphhopper.routing.AStarBidirectionTest.initializationError":441,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":458,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":289,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":288,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":14}}]
