[{"failures":[],"tindex":"d81bd93f-db5e-11e4-8552-619d29ea1b89","variableMapping":{"segmentSizeInBytes":"node","length":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":0},{"failures":[0,1],"tindex":"d81bd940-db5e-11e4-8552-3d0510648d7b","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,0,126,127,128,129,130,131,132,1,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,387,387,388,388,389,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430],"tindex":"d81c0051-db5e-11e4-8552-dfa013316f26","variableMapping":{"err":"segmentSizeInBytes","dLat":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"d81c0052-db5e-11e4-8552-8be2fb69bef5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"d81c0053-db5e-11e4-8552-09a04059b03b","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"d81c0054-db5e-11e4-8552-8de6339e6429","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"com.graphhopper.util.EdgeIterator.NO_EDGE","nodeId":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[431,432],"tindex":"d81c0055-db5e-11e4-8552-11747908b818","variableMapping":{"longSegmentSize":"relBitMask","bufferStart":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[325,330],"tindex":"d81c0056-db5e-11e4-8552-4fba7b52ed01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"d81c0057-db5e-11e4-8552-b72fba491cb6","variableMapping":{"high":"flags","low":"flags","guess":"flags","guessedKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[],"tindex":"d81c0058-db5e-11e4-8552-97b37d7e01ed","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"d81c2769-db5e-11e4-8552-8f7510d77d9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":0},{"failures":[],"tindex":"d81c276a-db5e-11e4-8552-472c73bba5d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[314,433,434,395,400,403,408,409],"tindex":"d81c276b-db5e-11e4-8552-7bcd1dd9e534","variableMapping":{"initLeafSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[435,436,437,438,409],"tindex":"d81c276c-db5e-11e4-8552-3b24aaaa6f7d","variableMapping":{"speedEncoder":"turnCostEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[],"tindex":"d81c276d-db5e-11e4-8552-87543538876c","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-2},{"failures":[439,440,441,442,443,444,445,446,447,448,449],"tindex":"d81c276e-db5e-11e4-8552-29c14de81b60","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:101","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,101,102,103,104,105,106,108,109,110,147,162,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,221,222,224,225,226,228,229,230,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,294,295,297,298,299,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,387,387,388,388,389,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,420,421,422,423,424,425,426,427,428,429,430],"tindex":"d81c276f-db5e-11e4-8552-c1ff0094f8bc","variableMapping":{"index":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d81c2770-db5e-11e4-8552-55c03e629ffc","variableMapping":{"incEleSum":"fullDist2D","incDist2DSum":"incDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":0},{"failures":[],"tindex":"d81c2771-db5e-11e4-8552-49b6fbe5ba30","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[435,436,437,438,409],"tindex":"d81c2772-db5e-11e4-8552-e10fba6fffb4","variableMapping":{"c":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:228","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-1},{"failures":[],"tindex":"d81c4e83-db5e-11e4-8552-8fb129daaa38","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"d81c4e84-db5e-11e4-8552-c9f2357baad3","variableMapping":{"precision":"speed","lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":0},{"failures":[],"tindex":"d81c4e85-db5e-11e4-8552-edf212dfc97d","variableMapping":{"a_lon_deg":"fromHeight","factor":"fromHeight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[],"tindex":"d81c4e86-db5e-11e4-8552-9b85be0b74c8","variableMapping":{"currEdge":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:898","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[325,329,330],"tindex":"d81c4e87-db5e-11e4-8552-e3ce41396671","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[6,10,14,15,16,22,23,25,38,43,46,50,78,95,102,109,136,137,138,144,145,147,160,165,168,172,175,179,180,181,187,188,190,203,208,211,215,245,248,252,253,254,260,261,263,276,281,284,288,315,318,325,327,329,330,450,451,340,341,346,348,351,363,366,375,382,385,395,403,406,412,417,423,424,425],"tindex":"d81c4e88-db5e-11e4-8552-8974aa2d7a2d","variableMapping":{"flags2":"forwardBit","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"forwardBit","flags1":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"d81c4e89-db5e-11e4-8552-8daf083ac0e1","variableMapping":{"val":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:599","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"d81c4e8a-db5e-11e4-8552-f98c539075af","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:69","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[452,402],"tindex":"d81c4e8b-db5e-11e4-8552-61d3203835af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[453,62,68,70,71,79,85,87,88,454,455,456,457,458,459,460,461,462],"tindex":"d81c4e8c-db5e-11e4-8552-d95141aee0e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"d81c4e8d-db5e-11e4-8552-234ba88658e4","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,463,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,464,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,245,246,247,248,249,250,251,465,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,305,306,307,308,466,309,310,311,312,313,314,315,316,317,318,319,467,468,433,469,470,471,472,439,473,440,435,474,475,476,477,478,479,480,481,441,482,483,484,485,486,487,442,443,488,489,490,491,492,493,494,444,495,496,497,498,499,325,326,327,328,329,330,500,501,502,445,503,504,505,506,507,508,509,446,510,511,512,513,514,515,516,517,452,450,518,434,519,520,521,436,451,522,523,524,331,525,526,527,528,529,530,332,333,531,532,533,534,447,535,448,437,536,537,538,539,540,541,542,543,449,544,545,546,547,548,431,438,549,432,550,551,552,334,335,336,337,553,554,338,339,555,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,556,557,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,558,397,398,399,400,559,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,423,424,425,426,560],"tindex":"d81c759e-db5e-11e4-8552-e9ff484e9702","variableMapping":{"segmentSizePower":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"d81c759f-db5e-11e4-8552-a53b930771bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[],"tindex":"d81c75a0-db5e-11e4-8552-db956d123f4a","variableMapping":{"latSize":"usedBits","size":"usedBits","lonSize":"bitsForEdgeFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-2},{"failures":[],"tindex":"d81c75a1-db5e-11e4-8552-b572775b2cea","variableMapping":{"store":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"d81c75a2-db5e-11e4-8552-fd173dd1b48a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[],"tindex":"d81c75a3-db5e-11e4-8552-2f7512b5d752","variableMapping":{"mainEdgeState":"mainEdgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[470,487,532],"tindex":"d81c75a4-db5e-11e4-8552-8ff3a998183e","variableMapping":{"currentEntry":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[529],"tindex":"d81c75a5-db5e-11e4-8552-e37132cc2c5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"d81c75a6-db5e-11e4-8552-917ee8e98ab9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:342","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[338,346,347,354,357,358,369,371,373],"tindex":"d81c75a7-db5e-11e4-8552-4f200b8d1cc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:96","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[],"tindex":"d81c75a8-db5e-11e4-8552-bd0ce81a6746","variableMapping":{"val":"size","com.graphhopper.coll.SparseIntIntArray.DELETED":"size","keys":"elem","values":"elem","i":"child","o":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:134","type":"CtIfImpl","sourcecode":"if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n    if (int != int) {\n        int[][int] = int[][int];\n        int[][int] = int;\n    } \n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[561,452,402],"tindex":"d81c75a9-db5e-11e4-8552-cde50b02f786","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"d81c75aa-db5e-11e4-8552-614807eebc69","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[439,440,441,442,443,444,445,446,447,448,449],"tindex":"d81c75ab-db5e-11e4-8552-b7b9acff7fd3","variableMapping":{"edgeId":"pavementType","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"pavementType","nodeA":"pavementType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"d81c9cbc-db5e-11e4-8552-5732155ab163","variableMapping":{"acceptBit":"acceptBit","way":"way","sidewalks":"ferries"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[325,329,330],"tindex":"d81c9cbd-db5e-11e4-8552-2f3ea189acbd","variableMapping":{"y1":"start","y2":"start","x1":"start","x2":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[],"tindex":"d81c9cbe-db5e-11e4-8552-f5bb62465ff6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[470,472,478,479,482,484,487,491,492,495,497,503,507,510,532,534,540,541,544,546],"tindex":"d81c9cbf-db5e-11e4-8552-1b7b572adfdf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:462","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"d81c9cc0-db5e-11e4-8552-fd3e89e37883","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[325,329,330],"tindex":"d81c9cc1-db5e-11e4-8552-d951471bad60","variableMapping":{"size":"start","index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"d81c9cc2-db5e-11e4-8552-d11bb5dcf01a","variableMapping":{"from":"indexDivisor","lonSize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:300","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"d81c9cc3-db5e-11e4-8552-3d757aa4e312","variableMapping":{"size":"tmpPrevEdge","newSize":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":0},{"failures":[338,340,346,347,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,371,372,373,374,375,392,393,394,395,396,398,399,425],"tindex":"d81c9cc4-db5e-11e4-8552-8fdc73a1fec8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"d81c9cc5-db5e-11e4-8552-a1ae12dd8d29","variableMapping":{"periodicUpdatesPercentage":"from","periodicUpdate":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:267","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    boolean = false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":0},{"failures":[2,6,10,15,16,19,25,30,32,38,40,43,45,46,50,137,138,141,147,152,154,160,162,165,167,168,172,175,180,181,184,190,195,197,203,205,208,210,211,215,245,248,253,254,257,263,268,270,276,278,281,283,284,288,307,311,312,313,315,325,326,328,329,516,450,519,451,331,526,333,335,336,338,339,340,341,342,343,344,346,347,348,350,351,352,354,355,358,362,364,367,369,371,372,373,375,382,385,392,393,394,398,403,404,409,417,425],"tindex":"d81c9cc6-db5e-11e4-8552-bfc2a4835c13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[561,452],"tindex":"d81c9cc7-db5e-11e4-8552-1b444903315e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[325,330],"tindex":"d81cc3d8-db5e-11e4-8552-37e94668f1fd","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"i","nodeId":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[435,436,437],"tindex":"d81cc3d9-db5e-11e4-8552-cd7af395ee20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-1},{"failures":[],"tindex":"d81cc3da-db5e-11e4-8552-f310e699ab0a","variableMapping":{"shift":"mask","flags":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[562,563,564,565,566,567,340,341,342,343,344,345,346,348,350,351,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,392],"tindex":"d81cc3db-db5e-11e4-8552-eb54f75bd4ec","variableMapping":{"foundIndex":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[2,6,10,15,16,19,25,30,32,38,40,43,45,46,50,137,138,141,147,152,154,160,162,165,167,168,172,175,180,181,184,190,195,197,203,205,208,210,211,215,245,248,253,254,257,263,268,270,276,278,281,283,284,288,307,311,312,313,315,325,326,328,329,516,450,519,451,331,526,333,335,336,338,339,340,341,342,343,344,346,347,348,350,351,352,354,355,358,362,364,367,369,371,372,373,375,382,385,392,393,394,398,403,404,409,417,425],"tindex":"d81cc3dc-db5e-11e4-8552-dba2581a7d87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[4,7,9,10,11,12,25,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,101,102,103,104,105,106,108,109,147,174,175,176,177,190,245,247,248,249,250,263,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,387,387,388,388,389,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,412,413,414,415,417,423,424,425,426],"tindex":"d81cc3dd-db5e-11e4-8552-f7e5732bb347","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"d81cc3de-db5e-11e4-8552-a9b900df5a55","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[162,399],"tindex":"d81cc3df-db5e-11e4-8552-b19b6a689936","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-1},{"failures":[],"tindex":"d81cc3e0-db5e-11e4-8552-8b6644998474","variableMapping":{"midLat":"maxLonTmp","spatialKey":"hash","bits":"hash","lat":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":0},{"failures":[],"tindex":"d81cc3e1-db5e-11e4-8552-4948ced97457","variableMapping":{"currentBucket":"length","currentIndex":"length","bucketSize":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"d81cc3e2-db5e-11e4-8552-6bf7e3620b14","variableMapping":{"str":"minStr","mpInteger":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":0},{"failures":[439,440,441,442,443,444,445,446,447,448,449],"tindex":"d81cc3e3-db5e-11e4-8552-2f215c3f6ac0","variableMapping":{"key":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[433,518,434],"tindex":"d81cc3e4-db5e-11e4-8552-1b3476ba8978","variableMapping":{"speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[10,14,35,41,46,49,64,65,66,81,82,83,110,127,128,133,134,135,136,157,162,163,168,171,175,179,200,206,211,214,218,221,222,224,227,228,229,230,245,248,252,273,279,284,287,291,294,295,297,300,301,302,303,307,311,312,313,568,569,570,320,321,322,323,324,332,333,336,372,378,379,381,382,383,384,385,386,388,389,390,391,392,393,394,396,397,398,399,400,402,404,405,406,407,408,409,410,412,413,414,415,417],"tindex":"d81ceaf5-db5e-11e4-8552-275d4ab1cf29","variableMapping":{"offset":"value","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[10,14,35,41,46,54,55,64,66,81,83,111,128,133,134,135,136,157,162,163,168,175,179,200,206,211,221,222,224,227,228,229,230,245,248,252,273,279,284,294,295,297,300,301,302,303,307,312,313,569,571,570,572,320,321,322,323,324,336,372,379,382,383,385,386,389,390,392,393,394,396,398,399,402,404,405,406,407,408,409,410,412,413,414,415,417],"tindex":"d81ceaf6-db5e-11e4-8552-c7c6176c9f2f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-1},{"failures":[562,563,564,565,567,340,342,343,344,346,348,350],"tindex":"d81ceaf7-db5e-11e4-8552-3b054e28f185","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[362],"tindex":"d81ceaf8-db5e-11e4-8552-652c2a79fd59","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[],"tindex":"d81ceaf9-db5e-11e4-8552-f1f0c55b4adf","variableMapping":{"line":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[313,573,574,336,337],"tindex":"d81ceafa-db5e-11e4-8552-c97faf64138f","variableMapping":{"x1":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:158","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-1},{"failures":[],"tindex":"d81ceafb-db5e-11e4-8552-97a3d98dbe4a","variableMapping":{"weight":"factor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":0},{"failures":[16,27,33,41,42,138,149,155,163,164,181,192,198,206,207,254,265,271,279,280,325,328],"tindex":"d81ceafc-db5e-11e4-8552-05bf7e94f60f","variableMapping":{"capacity":"low"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"d81ceafd-db5e-11e4-8552-bb9c5faf84f0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"d81ceafe-db5e-11e4-8552-438aae290a70","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"d81ceaff-db5e-11e4-8552-034f79671167","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[435,436,437,438,401,409],"tindex":"d81ceb00-db5e-11e4-8552-3532e796a189","variableMapping":{"segmentSizeInBytes":"nextTurnBit","indexDivisor":"nextTurnBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[],"tindex":"d81ceb01-db5e-11e4-8552-215c1572ada4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[10,14,15,16,23,25,38,43,46,50,136,137,138,145,147,160,165,168,172,175,179,180,181,188,190,203,208,211,215,245,248,252,253,254,261,263,276,281,284,288,315,318,325,329,330,338,340,341,346,347,348,351,352,353,357,360,363,365,366,375,382,385,403,417,423,424,425],"tindex":"d81ceb02-db5e-11e4-8552-b308d5141056","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"d81ceb03-db5e-11e4-8552-99531ff63a36","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d81ceb04-db5e-11e4-8552-5d7384195f03","variableMapping":{"precision":"fullDist2D","lat":"incDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":0},{"failures":[],"tindex":"d81d1215-db5e-11e4-8552-3b123cf90e9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[575],"tindex":"d81d1216-db5e-11e4-8552-6f9536d682ce","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[],"tindex":"d81d1217-db5e-11e4-8552-6f62c18122e1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[325,330],"tindex":"d81d1218-db5e-11e4-8552-8fb56a7bf21b","variableMapping":{"currentEntry":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d81d1219-db5e-11e4-8552-03de56522ee5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:451","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"d81d121a-db5e-11e4-8552-4d972b916653","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"d81d121b-db5e-11e4-8552-21c4e91f5488","variableMapping":{"weightLong":"lastTime","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[333],"tindex":"d81d121c-db5e-11e4-8552-3de530a00596","variableMapping":{"lastTime":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[487],"tindex":"d81d121d-db5e-11e4-8552-8b9cce8b9b34","variableMapping":{"key":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,463,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,78,95,102,109,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,464,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,245,246,247,248,249,250,251,465,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,486,487,442,443,499,500,501,502,445,503,513,514,515,516,517,452,450,518,434,519,520,521,436,451,522,523,524,331,525,526,527,528,529,530,548,550,551,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,395],"tindex":"d81d121e-db5e-11e4-8552-3d31b7c24bd1","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[471,441,485,444,498,446,512,533,449,547],"tindex":"d81d121f-db5e-11e4-8552-3d154dbab4a4","variableMapping":{"osmFile":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[453,62,68,70,71,79,85,87,88,454,455,456,457,458,459,460,461,462],"tindex":"d81d1220-db5e-11e4-8552-bda7c49024b6","variableMapping":{"flags":"hash","mask":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"d81d1221-db5e-11e4-8552-8b4f6b723022","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[470,472,478,479,482,487,491,492,495,507,510,532,534,540,541,544],"tindex":"d81d1222-db5e-11e4-8552-b74d95517b8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":370,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":379,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":7,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":433,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":105,"com.graphhopper.GraphHopperAPITest.testNoLoad":560,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":137,"com.graphhopper.reader.OSMReaderTest.testFerry":402,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":318,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":473,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":503,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":65,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":391,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":547,"com.graphhopper.storage.MMapDataAccessTest.testSegments":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":262,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":217,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":419,"com.graphhopper.coll.CompressedArrayTest.testCompress":455,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":509,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":214,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":157,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":190,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":61,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":218,"com.graphhopper.util.AngleCalcTest.testOrientation":573,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":348,"com.graphhopper.GraphHopperTest.testPrepare":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":369,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":338,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":567,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":472,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":362,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":52,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":446,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":317,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":13,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":329,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":445,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":470,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":354,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":117,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":360,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":82,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":440,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":559,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":245,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":118,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":461,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":14,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":565,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":351,"com.graphhopper.GraphHopperTest.testLoadOSM":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":89,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":83,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":550,"com.graphhopper.reader.OSMReaderTest.testSort":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":482,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":327,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":413,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":249,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":209,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":175,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":170,"com.graphhopper.storage.RAMDataAccessTest.testHeader":299,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":385,"com.graphhopper.routing.DijkstraTest.initializationError":556,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":401,"com.graphhopper.storage.MMapDataAccessTest.testHeader":120,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":283,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":119,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":39,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":238,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":129,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":186,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":555,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":246,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":447,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":252,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":498,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":495,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":69,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":67,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":558,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":357,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":16,"com.graphhopper.coll.OSMIDMapTest.testGetLong":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":266,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":272,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":31,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":10,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":33,"com.graphhopper.coll.CompressedArrayTest.testCompress2":454,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":199,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":487,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":263,"com.graphhopper.GraphHopperAPITest.testLoad":425,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":463,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":128,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":523,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":191,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":181,"com.graphhopper.storage.LevelGraphStorageTest.testClone":18,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":561,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":330,"com.graphhopper.reader.OSMReaderTest.testBarriers":406,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":240,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":59,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":141,"com.graphhopper.util.GHUtilityTest.testCopy":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":359,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":223,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":493,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":511,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":302,"com.graphhopper.routing.PathTest.testFindInstruction":337,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":506,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":254,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":562,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":315,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":528,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":47,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":534,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":210,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":195,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":281,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":305,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":344,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":542,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":549,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":557,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":142,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":178,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":121,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":135,"com.graphhopper.util.InstructionListTest.testWayList2":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":546,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":90,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":286,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":467,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":471,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":332,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":22,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":296,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":219,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":435,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":264,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":53,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":358,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":407,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":221,"com.graphhopper.routing.AStarTest.initializationError":553,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":372,"com.graphhopper.coll.OSMIDMapTest.testGet":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":261,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":234,"com.graphhopper.routing.PathBidirRefTest.testExtract":376,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":529,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":35,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":322,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":476,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":235,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":73,"com.graphhopper.storage.RAMDataAccessTest.testCopy":294,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":163,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":501,"com.graphhopper.storage.RAMDataAccessTest.testSegments":301,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":475,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":95,"com.graphhopper.util.GHUtilityTest.testSort2":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":367,"com.graphhopper.reader.OSMReaderTest.testMain":404,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":516,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":477,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":462,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":483,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":515,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":250,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":25,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":29,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":50,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":26,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":539,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":276,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":127,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":532,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":32,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":415,"com.graphhopper.storage.StorablePropertiesTest.testStore":243,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":292,"com.graphhopper.storage.GraphHopperStorageTest.testClone":183,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":166,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":519,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":518,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":496,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":143,"com.graphhopper.routing.PathTest.testTime":335,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":492,"com.graphhopper.util.BitUtilLittleTest.testToFloat":569,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":48,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":522,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":92,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":156,"com.graphhopper.reader.OSMReaderTest.testRelation":411,"com.graphhopper.util.GHUtilityTest.testSortDirected":309,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":566,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":544,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":229,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":381,"com.graphhopper.GraphHopperTest.testFootOnly":399,"com.graphhopper.util.BitUtilLittleTest.testToInt":570,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":502,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":452,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":244,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":68,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":115,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":432,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":339,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":531,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":152,"com.graphhopper.search.NameIndexTest.testCreate":430,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":300,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":378,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":132,"com.graphhopper.routing.QueryGraphTest.testOneWay":387,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":93,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":505,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":418,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":81,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":456,"com.graphhopper.reader.OSMReaderTest.testWithBounds":414,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":303,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":233,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":545,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":285,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":326,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":158,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":530,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":431,"com.graphhopper.util.BitUtilLittleTest.testToDouble":571,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":15,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":12,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":486,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":543,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":512,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":275,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":102,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":268,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":179,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":386,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":353,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":242,"com.graphhopper.util.BitUtilLittleTest.testToBitString":568,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":212,"com.graphhopper.util.InstructionListTest.testWayList":312,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":474,"com.graphhopper.GraphHopperAPITest.testDisconnected179":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":144,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":79,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":540,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":424,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":328,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":172,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":481,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":394,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":185,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":349,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":469,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":364,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":552,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":347,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":520,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":489,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":441,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":374,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":76,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":126,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":131,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":485,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":174,"com.graphhopper.storage.MMapDataAccessTest.testCopy":116,"com.graphhopper.routing.PathTest.testWayList":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":171,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":490,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":517,"com.graphhopper.coll.OSMIDMapTest.testGet2":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":375,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":226,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":43,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":274,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":480,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":196,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":524,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":259,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":30,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":70,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":71,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":295,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":537,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":564,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":442,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":114,"com.graphhopper.util.GHUtilityTest.testSort":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":479,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":504,"com.graphhopper.search.NameIndexTest.testPut":428,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":465,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":63,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":106,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":58,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":98,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":535,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":384,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":247,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":488,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":421,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":468,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":527,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":373,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":237,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":325,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":134,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":162,"com.graphhopper.routing.PathTest.testFound":334,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":400,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":551,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":45,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":220,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":575,"com.graphhopper.util.AngleCalcTest.testAtan2":574,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":478,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":265,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":563,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":232,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":429,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":147,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":188,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":290,"com.graphhopper.util.InstructionListTest.testEmptyList":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":361,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":494,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":365,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":451,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":514,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":510,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":513,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":368,"com.graphhopper.reader.PrinctonReaderTest.testRead":423,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":124,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":211,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":66,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":146,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":324,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":136,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":270,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":508,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":538,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":111,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":438,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":491,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":533,"com.graphhopper.reader.OSMReaderTest.testFoot":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":160,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":389,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":422,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":87,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":460,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":500,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":88,"com.graphhopper.reader.OSMReaderTest.testOneWay":417,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":192,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":207,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":282,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":507,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":228,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":536,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":154,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":343,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":453,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":350,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":434,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":99,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":341,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":331,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":150,"com.graphhopper.util.BitUtilLittleTest.testToLong":572,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":380,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":177,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":416,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":304,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":1,"com.graphhopper.routing.PathBidirRefTest.testExtract2":377,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":91,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":109,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":444,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":231,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":427,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":205,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":497,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":173,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":525,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":541,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":84,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":208,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":466,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":21,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":521,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":200,"com.graphhopper.GraphHopperTest.testFootAndCar":395,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":77,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":140,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":548,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":436,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":345,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":371,"com.graphhopper.GraphHopperTest.testPrepareOnly":390,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":108,"com.graphhopper.GraphHopperTest.testVia":392,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":138,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":412,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":6,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":204,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":314,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":526,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":153,"com.graphhopper.routing.AStarBidirectionTest.initializationError":554,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":499,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":44,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":42,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":248}}]
