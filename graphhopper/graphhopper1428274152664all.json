[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"fb8cf496-dbe5-11e4-aee3-2b61c25bbea9","variableMapping":{"ghLocation":"tt"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[14,27],"tindex":"fb8ef067-dbe5-11e4-aee3-37c723a91808","variableMapping":{"entry":"highway","entryVal":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:145","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"fb8ef068-dbe5-11e4-aee3-b34db45ab7a1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"fb8f1779-dbe5-11e4-aee3-43a2506de848","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[0,53],"tindex":"fb8f177a-dbe5-11e4-aee3-cb1c5c2a01c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"fb8f177b-dbe5-11e4-aee3-b1157f7031e4","variableMapping":{"width":"endNode","i":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:147","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[54,55,56,57,58,59,60,61,62],"tindex":"fb8f177c-dbe5-11e4-aee3-730bc15378a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"fb8f177d-dbe5-11e4-aee3-cfe5e01f79f1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:229","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"fb8f177e-dbe5-11e4-aee3-b1e1fd45497c","variableMapping":{"maxLat":"minLat","minLat":"minLat","bbox":"bbox"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[0,1,2,3,63,4,5,6,7,64,65,66,8,9,10,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,11,12,96,97,98,13,14,99,15,16,17,100,101,102,103,104,105,106,107,108,18,109,110,19,20,111,21,112,22,23,113,114,115,116,117,118,24,119,120,25,121,122,123,26,27,124,28,29,30,125,126,127,128,129,130,131,132,133,31,134,135,32,33,136,34,35,36,137,138,139,140,141,142,143,37,144,145,38,39,146,147,148],"tindex":"fb8f177f-dbe5-11e4-aee3-cf022bc60cd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:193","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"cycleway\") , 30)"},"status":-1},{"failures":[149,150,151,152,153,2,3,63,4,5,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,121,122,205,206,207,208,209,210,211,212,213,214,215],"tindex":"fb8f1780-dbe5-11e4-aee3-bddcec95641a","variableMapping":{"intLen":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[68,77,102,113,127,137],"tindex":"fb8f3e91-dbe5-11e4-aee3-d5dcd3e08536","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[216,217,218,219,220,221,222,223,224],"tindex":"fb8f3e92-dbe5-11e4-aee3-6127f4a4ccb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[93,11],"tindex":"fb8f3e93-dbe5-11e4-aee3-f387a395b332","variableMapping":{"size":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[225,40,41,226,42,43,227,45,46],"tindex":"fb8f3e94-dbe5-11e4-aee3-1bec271a3cd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[228,229,230,231,149,232,233,234,150,151,152,153,235,236,237,238,239,240,0,1,2,3,63,4,5,6,7,65,66,8,9,10,241,242,67,243,244,162,245,246,163,247,248,249,164,250,251,252,253,254,255,256,257,258,259,260,261,54,262,263,264,265,266,267,268,165,269,270,271,272,273,166,55,274,275,276,167,277,168,169,278,279,170,280,281,171,282,283,284,172,285,286,287,288,289,290,291,292,293,294,295,296,56,297,298,299,300,301,302,303,173,304,305,306,307,308,174,57,309,310,311,175,312,176,177,313,314,315,316,317,318,319,320,321,322,323,324,47,325,178,179,180,326,327,328,48,49,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,50,350,181,182,183,351,352,353,51,52,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,58,374,375,376,377,378,379,380,381,382,383,384,385,184,386,59,387,388,389,390,391,392,393,394,395,396,185,397,398,399,186,400,401,402,403,404,405,406,407,408,409,410,411,60,412,413,414,415,416,417,418,187,419,420,421,422,423,188,61,424,425,426,189,427,190,191,428,429,430,431,195,432,196,197,198,199,200,201,202,203,204,70,433,434,96,62,435,436,121,122,437,146,205,206,438,439,207,207,208,208,440,440,209,209,210,210,211,211,441,441,212,212,213,213,442,442,443,443,214,214,216,444,445,446,447,448,449,450,217,218,451,452,453,454,147,455,219,456,457,220,221,458,459,460,148,461,462,463,464,465,466,222,467,223,215,224,468,469],"tindex":"fb8f3e95-dbe5-11e4-aee3-a9c036caf84d","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"fb8f65a6-dbe5-11e4-aee3-5f1be18c73cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"fb8f65a7-dbe5-11e4-aee3-8775355a1e58","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"fb8f65a8-dbe5-11e4-aee3-654eaf12cde6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"fb8f65a9-dbe5-11e4-aee3-158fcad8aa61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"fb8f65aa-dbe5-11e4-aee3-d7e97e5164e4","variableMapping":{"values":"elem","n":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:321","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = -1;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"fb8f65ab-dbe5-11e4-aee3-bf43437baa36","variableMapping":{"tmpNo":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"fb8f65ac-dbe5-11e4-aee3-a7b3b5709ac7","variableMapping":{"wayType":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.CYCLEWAY","com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.ROAD":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.ROAD","highway":"highway","roadValues":"roadValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"fb8f65ad-dbe5-11e4-aee3-db0710748ce6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":-2},{"failures":[],"tindex":"fb8f65ae-dbe5-11e4-aee3-e9612334a3f3","variableMapping":{"bits":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"fb8f65af-dbe5-11e4-aee3-e79c6b441cef","variableMapping":{"encoderList":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[228,229,230,231,149,232,233,234,150,151,152,153,235,236,237,238,239,240,470,471,472,473,474,0,1,2,3,63,4,5,6,7,64,65,66,8,9,475,10,154,155,156,157,158,476,477,478,479,159,480,481,482,483,160,484,485,486,487,488,489,490,491,492,493,494,241,242,67,243,244,162,245,246,163,247,248,249,495,164,250,251,252,253,254,255,256,257,258,259,260,261,54,262,263,264,265,266,267,268,165,269,270,271,272,273,166,55,274,275,276,167,277,168,169,278,279,170,280,281,171,282,283,284,496,172,285,286,287,288,289,290,291,292,293,294,295,296,56,297,298,299,300,301,302,303,173,304,305,306,307,308,174,57,309,310,311,175,312,176,177,313,314,315,316,317,318,319,320,321,322,323,324,47,325,178,179,180,326,327,328,48,49,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,50,350,181,182,183,351,352,353,51,52,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,58,374,375,376,377,378,379,380,381,382,383,384,385,184,386,59,387,388,389,390,391,392,393,394,395,396,185,397,398,399,497,186,400,401,402,403,404,405,406,407,408,409,410,411,60,412,413,414,415,416,417,418,187,419,420,421,422,423,188,61,424,425,426,189,427,190,191,428,429,498,499,500,501,502,192,193,194,430,431,195,432,196,197,198,199,200,503,201,202,203,204,504,70,433,434,96,62,435,436,121,122,437,146,205,206,438,439,207,207,208,208,440,440,209,209,210,210,211,211,441,441,212,212,213,213,442,442,443,443,214,214,216,444,445,446,447,448,449,450,217,218,451,452,453,454,147,455,219,456,457,220,221,458,459,460,148,461,462,463,464,465,466,222,467,223,215,224,468,469],"tindex":"fb8f8cc0-dbe5-11e4-aee3-658027058d93","variableMapping":{"obtained":"synched"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[68,77,102,113,127,137],"tindex":"fb8f8cc1-dbe5-11e4-aee3-4fe6e65e24f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"fb8f8cc2-dbe5-11e4-aee3-1d8c656ca077","variableMapping":{"bits":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"fb8f8cc3-dbe5-11e4-aee3-4f1e3493318c","variableMapping":{"i":"x1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"fb8f8cc4-dbe5-11e4-aee3-95521a9e7ce8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"fb8f8cc5-dbe5-11e4-aee3-314dec173ffe","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"fb8f8cc6-dbe5-11e4-aee3-692e677eed6e","variableMapping":{"size":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:80","type":"CtLocalVariableImpl","sourcecode":"long long = (long) * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"fb8f8cc7-dbe5-11e4-aee3-cba8039062d1","variableMapping":{"newName":"val","name":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"fb8f8cc8-dbe5-11e4-aee3-732fb819f24c","variableMapping":{"factor":"absY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":0},{"failures":[228,229,230,231,149,232,233,234,150,151,152,153,235,236,237,238,239,240,0,1,2,3,63,4,5,6,7,65,66,8,9,10,505,506,507,508,509,510,241,67,243,244,245,246,163,249,164,250,251,252,253,254,255,256,257,258,259,260,261,54,262,263,264,265,266,267,268,165,269,270,271,273,166,55,274,275,276,167,277,168,169,278,279,170,281,171,284,172,285,286,287,288,289,290,291,292,293,294,295,296,56,297,298,299,300,301,302,303,173,304,305,306,308,174,57,309,310,311,175,312,176,177,313,314,315,316,317,318,320,321,322,323,47,325,178,179,180,326,327,328,48,49,329,330,331,332,334,335,337,338,339,340,342,343,344,345,346,348,349,50,350,181,182,183,351,352,353,51,52,354,355,356,357,359,360,372,184,396,185,399,186,400,401,402,403,404,405,406,407,408,409,410,411,60,412,413,414,415,416,417,418,187,419,420,421,423,188,61,424,425,189,427,190,191,428,429,430,431,195,196,197,198,199,200,201,202,203,204,70,433,434,96,62,435,436,121,122,205,206,438,439,207,208,440,209,210,211,441,212,213,442,443,214,216,444,445,446,447,448,449,450,217,218,451,452,453,454,147,455,219,456,457,220,221,458,459,460,148,461,462,463,464,465,466,222,467,223,215,224,468,469],"tindex":"fb8fb3d9-dbe5-11e4-aee3-079f36baa722","variableMapping":{"res":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[228,229,230,231,149,232,233,234,150,151,152,153,235,236,237,238,239,240,0,1,2,3,63,4,5,6,7,65,66,8,9,10,505,511,512,508,241,242,67,243,244,162,245,246,163,247,248,249,164,250,251,252,253,254,255,256,257,258,259,260,261,54,262,263,264,265,266,267,268,165,269,270,271,272,273,166,55,274,275,276,167,277,168,169,278,279,170,281,171,282,283,284,172,285,286,287,288,289,290,291,292,293,294,295,296,56,297,298,299,300,301,302,303,173,304,305,306,307,308,174,57,309,310,311,175,312,176,177,313,314,315,316,317,318,320,321,322,323,324,47,325,178,179,180,326,327,328,48,49,329,330,331,332,334,335,337,338,339,340,342,343,344,345,346,348,349,50,350,181,182,183,351,352,353,51,52,354,355,356,357,359,360,372,184,396,185,397,398,399,186,400,401,402,403,404,405,406,407,408,409,410,411,60,412,413,414,415,416,417,418,187,419,420,421,422,423,188,61,424,425,426,189,427,190,191,428,429,430,431,195,432,196,197,198,199,200,201,202,203,204,70,433,434,96,62,435,436,121,122,205,206,438,439,207,208,440,209,210,211,441,212,213,442,443,214,216,444,445,446,447,448,449,450,217,218,451,452,453,454,147,455,219,456,457,220,221,458,459,460,148,461,462,463,464,465,466,222,467,223,215,224,468,469],"tindex":"fb8fb3da-dbe5-11e4-aee3-7f9460d06305","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","capacity":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:413","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"fb8fb3db-dbe5-11e4-aee3-67254d50bf45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[510,200],"tindex":"fb8fb3dc-dbe5-11e4-aee3-21496f83327e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:293","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.close()"},"status":-1},{"failures":[454,147,455,215,224,469],"tindex":"fb8fb3dd-dbe5-11e4-aee3-af12f4b182fb","variableMapping":{"edge":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[513],"tindex":"fb8fb3de-dbe5-11e4-aee3-c91076fa1b10","variableMapping":{"key":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"fb8fb3df-dbe5-11e4-aee3-fbd387a79d04","variableMapping":{"segmentsToMap":"unvisitedDeadEnds"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[],"tindex":"fb8fb3e0-dbe5-11e4-aee3-415ada78c876","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"fb8fdaf1-dbe5-11e4-aee3-23ad8f7324ab","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"fb8fdaf2-dbe5-11e4-aee3-218bda317072","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"fb8fdaf3-dbe5-11e4-aee3-037511fb05ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[228,229,230,231,149,232,514,233,234,150,151,152,153,235,236,237,238,239,0,1,2,3,63,4,5,6,7,64,65,66,8,9,10,241,242,67,243,244,162,245,246,163,247,248,249,495,164,250,251,252,253,254,255,256,257,258,259,260,261,54,262,263,264,265,266,267,268,165,269,270,271,272,273,166,55,274,275,276,167,277,168,169,278,279,170,280,281,171,282,283,284,496,172,285,286,287,288,289,290,291,292,293,294,295,296,56,297,298,299,300,301,302,303,173,304,305,306,307,308,174,57,309,310,311,175,312,176,177,313,314,315,316,317,318,319,320,321,322,323,324,47,325,178,179,180,326,327,328,48,49,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,50,350,181,182,183,351,352,353,51,52,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,58,374,375,376,377,378,379,380,381,382,383,384,385,184,386,59,387,388,389,390,391,392,393,394,395,396,185,397,398,399,497,186,400,401,402,403,404,405,406,407,408,409,410,411,60,412,413,414,415,416,417,418,187,419,420,421,422,423,188,61,424,425,426,189,427,190,191,428,429,430,431,515,195,432,196,197,198,199,200,503,201,202,203,204,504,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,516,12,433,434,96,62,435,436,97,98,13,14,99,15,16,17,100,101,102,103,104,105,106,107,108,18,109,110,19,20,111,21,112,22,23,113,114,115,116,117,118,24,119,120,25,121,122,123,26,27,124,28,29,30,125,126,127,128,129,130,131,132,133,31,134,135,32,33,136,34,35,36,137,138,139,140,141,142,143,37,144,145,38,39,517,518,519,520,521,522,437,146,205,206,438,439,207,208,440,209,210,211,441,212,213,442,443,214,523,216,444,524,445,446,447,448,449,450,217,218,451,452,453,454,147,455,219,456,457,220,221,458,459,460,148,461,462,463,464,465,466,222,467,223,215,224,468,469],"tindex":"fb8fdaf4-dbe5-11e4-aee3-37c95feadc6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[],"tindex":"fb8fdaf5-dbe5-11e4-aee3-99929b851ce5","variableMapping":{"y":"speed","angle":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":0},{"failures":[242,243,245,322,324,432,196,197,200,201,216,445,447,217,218,454,455,219,456,457,220,221,458,459,148,461,462,463,464,465,466,222,223,215,224,469],"tindex":"fb8fdaf6-dbe5-11e4-aee3-15361c2b949e","variableMapping":{"i":"nodeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[96,62],"tindex":"fb8fdaf7-dbe5-11e4-aee3-0118aee911c8","variableMapping":{"currentBucket":"biggestStart","currentIndex":"biggestStart","bucketSize":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":-1},{"failures":[],"tindex":"fb8fdaf8-dbe5-11e4-aee3-a34042ffade0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":-2},{"failures":[],"tindex":"fb900209-dbe5-11e4-aee3-27025f1cc225","variableMapping":{"size":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"fb90020a-dbe5-11e4-aee3-17803c693ded","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[525],"tindex":"fb90020b-dbe5-11e4-aee3-697ea0af8ddb","variableMapping":{"mGarbage":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"fb90020c-dbe5-11e4-aee3-a39a284cd2be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"fb90020d-dbe5-11e4-aee3-83b5d72583a6","variableMapping":{"allBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":0},{"failures":[],"tindex":"fb90020e-dbe5-11e4-aee3-e57688cb805f","variableMapping":{"entry":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"fb90020f-dbe5-11e4-aee3-4d30a2f13a23","variableMapping":{"nodeId":"index","mainNodes":"I_LEVEL"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[0,9,10,82,86],"tindex":"fb900210-dbe5-11e4-aee3-7b2dcff38b3d","variableMapping":{"versionHint":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-1},{"failures":[],"tindex":"fb900211-dbe5-11e4-aee3-6fd3c5c65dbe","variableMapping":{"gradient":"maxLatTmp","yend":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"fb900212-dbe5-11e4-aee3-69f67851003f","variableMapping":{"width":"i","lonSimilar":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-2},{"failures":[0,1,2,63,6,7,65,66,8,9,10,69,70,71,72,74,76,95,122],"tindex":"fb900213-dbe5-11e4-aee3-4908eb0a2abd","variableMapping":{"high":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"fb900214-dbe5-11e4-aee3-6f4ca7e7bb71","variableMapping":{"latSize":"segmentSizePower","lonSize":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[1,10,12],"tindex":"fb900215-dbe5-11e4-aee3-fd9bc745dd6a","variableMapping":{"value":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[225,40,526,41,226,42,43,45,46],"tindex":"fb900216-dbe5-11e4-aee3-c1c4e1344fad","variableMapping":{"r":"lat","angle":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"fb900217-dbe5-11e4-aee3-a54613894eca","variableMapping":{"acceptBit":"ferryBit","intendedValues":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"fb900218-dbe5-11e4-aee3-cde82f995b7c","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[15,17,18,22,24,28,30,31,35,36,37],"tindex":"fb902929-dbe5-11e4-aee3-d3330b68f489","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:206","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"fb90292a-dbe5-11e4-aee3-f1bb71939c82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"fb90292b-dbe5-11e4-aee3-f18487d7b9cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:244","type":"CtLocalVariableImpl","sourcecode":"java.util.List<gnu.trove.list.array.TIntArrayList> java.util.List<gnu.trove.list.array.TIntArrayList> = new com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm(com.graphhopper.storage.GraphStorage , com.graphhopper.routing.util.EdgeFilter).findComponents()"},"status":-2},{"failures":[122],"tindex":"fb90292c-dbe5-11e4-aee3-9fcda1cc60a5","variableMapping":{"turnRestrictionBit":"flags","shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"fb90292d-dbe5-11e4-aee3-e1c86e639c79","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[433,435],"tindex":"fb90292e-dbe5-11e4-aee3-fbf55babc4ff","variableMapping":{"turnCostIndex":"node","NO_TURN_ENTRY":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[18,21,22,24,31,37],"tindex":"fb90ec7f-dbe5-11e4-aee3-f74db2022476","variableMapping":{"fullyLoaded":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:658","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"fb90ec80-dbe5-11e4-aee3-b57cfb3d38a8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:58","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge1()"},"status":-2},{"failures":[93,11,14,17,27,30,36],"tindex":"fb911391-dbe5-11e4-aee3-fdfa2ae6cb16","variableMapping":{"size":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[225,40,526,41,226,42,43,45,46],"tindex":"fb91afd2-dbe5-11e4-aee3-635396c746e7","variableMapping":{"distInMeter":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"fb91afd3-dbe5-11e4-aee3-b3d05dfa96e8","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[153,9,108,109,118,119,133,134,143,144],"tindex":"fb91afd4-dbe5-11e4-aee3-ebe04e6b4f43","variableMapping":{"lat":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.Circle:52","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[228,229,230,231,149,232,233,234,150,151,152,153,235,236,237,238,239,240,0,1,2,3,63,4,5,6,7,65,66,8,9,10,527,505,511,506,512,507,508,509,510,241,242,67,243,244,162,245,246,163,247,248,249,164,250,251,252,253,254,255,256,257,258,259,260,261,54,262,263,264,265,266,267,268,165,269,270,271,272,273,166,55,274,275,276,167,277,168,169,278,279,170,281,171,282,283,284,172,285,286,287,288,289,290,291,292,293,294,295,296,56,297,298,299,300,301,302,303,173,304,305,306,307,308,174,57,309,310,311,175,312,176,177,313,314,315,316,317,318,320,321,322,323,324,47,325,178,179,180,326,327,328,48,49,329,330,331,332,334,335,336,337,338,339,340,342,343,344,345,346,348,349,50,350,181,182,183,351,352,353,51,52,354,355,356,357,359,360,372,184,396,185,397,398,399,186,400,401,402,403,404,405,406,407,408,409,410,411,60,412,413,414,415,416,417,418,187,419,420,421,422,423,188,61,424,425,426,189,427,190,191,428,429,430,431,195,432,196,197,198,199,200,201,202,203,204,70,433,434,96,62,435,436,121,122,437,146,205,206,438,439,207,207,208,208,440,440,209,209,210,210,211,211,441,441,212,212,213,213,442,442,443,443,214,214,216,444,445,446,447,448,449,450,217,218,451,452,453,454,147,455,219,456,457,220,221,458,459,460,148,461,462,463,464,465,466,222,467,223,215,224,468,469],"tindex":"fb91d6e5-dbe5-11e4-aee3-3dbd05fcbd34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[528,529,530,531,532,217,453],"tindex":"fb91d6e6-dbe5-11e4-aee3-cf066986e240","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[228,229,230,231,149,232,233,150,151,152,153,235,236,237,238,239,240,0,1,2,3,63,4,5,6,7,65,66,8,9,10,505,511,506,507,508,509,510,241,242,67,243,244,245,246,163,249,164,250,251,252,253,254,255,256,257,258,259,260,261,54,262,263,264,265,266,267,268,165,269,270,271,273,166,55,274,275,276,167,277,168,169,278,279,170,281,171,284,172,285,286,287,288,289,290,291,292,293,294,295,296,56,297,298,299,300,301,302,303,173,304,305,306,308,174,57,309,310,311,175,312,176,177,313,314,315,316,317,318,320,321,322,323,324,47,325,178,179,180,326,327,328,48,49,329,330,331,332,334,335,337,338,339,340,342,343,344,345,346,348,349,50,350,181,182,183,351,352,353,51,52,354,355,356,357,359,360,372,184,396,185,399,186,400,401,402,403,404,405,406,407,408,409,410,411,60,412,413,414,415,416,417,418,187,419,420,421,423,188,61,424,425,426,189,427,190,191,428,429,430,431,195,196,197,198,199,200,201,202,203,204,70,433,434,96,62,435,436,121,122,205,206,438,439,207,208,440,209,210,211,441,212,213,442,443,214,216,444,445,446,447,448,449,450,217,218,451,452,453,454,147,455,219,456,457,220,221,458,459,460,148,461,462,463,464,465,466,222,467,223,215,224,468,469],"tindex":"fb91d6e7-dbe5-11e4-aee3-adf27dd9b74f","variableMapping":{"nodeId":"bytePos","nodeIdOffset":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"fb91d6e8-dbe5-11e4-aee3-37826579e2c7","variableMapping":{"max":"x1","tmpSize":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"fb91d6e9-dbe5-11e4-aee3-8f0f88ef8a9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:143","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"fb91d6ea-dbe5-11e4-aee3-f7318070f385","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[0,82,86],"tindex":"fb91d6eb-dbe5-11e4-aee3-830a5c08c3ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"fb91d6ec-dbe5-11e4-aee3-59d06c2f6a87","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[153,0,9,260,295,372,410,69,72,79,84,85,91,12,97,13,16,17,109,21,22,119,122,26,29,30,134,34,144,533,517,518,146,205,147,455,463],"tindex":"fb91d6ed-dbe5-11e4-aee3-4dbbeedc3b64","variableMapping":{"reverseSpeed":"speedEncoder","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:110","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[13,99,105,106,109,19,23,116,119,26,124,130,131,134,32,34,140,141,144,38],"tindex":"fb91d6ee-dbe5-11e4-aee3-d9c68546ffd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:462","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[153,513],"tindex":"fb91d6ef-dbe5-11e4-aee3-5d70b5d83218","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[216,217,218,219,220,221,222,223,224],"tindex":"fb91fe00-dbe5-11e4-aee3-cba35a14d4ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"fb91fe01-dbe5-11e4-aee3-c994973a2272","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[110,120,135,145],"tindex":"fb91fe02-dbe5-11e4-aee3-fb1a4a6c7480","variableMapping":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[67],"tindex":"fb91fe03-dbe5-11e4-aee3-93c2ab9094ac","variableMapping":{"len":"lastEdgeIndex","i":"lastEdgeIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:148","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-1},{"failures":[433,435,436],"tindex":"fb91fe04-dbe5-11e4-aee3-ab63caadbb02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[],"tindex":"fb91fe05-dbe5-11e4-aee3-e9593c67d309","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[230,149,237,241,242,67,243,244,245,246,163,249,164,250,251,252,253,254,255,256,257,258,259,261,54,262,263,264,265,266,267,268,165,269,270,271,272,273,166,55,274,275,276,167,277,168,169,278,279,322,323,324,47,325,178,179,180,326,327,328,48,49,329,330,331,332,333,334,335,195,196,197,200,201,203,216,444,445,446,447,448,449,450,217,218,451,452,453,454,147,455,219,456,457,220,221,458,459,460,148,461,462,463,464,465,466,222,467,223,215,224,468,469],"tindex":"fb91fe06-dbe5-11e4-aee3-43eebe9a8158","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initStorage()"},"status":-1},{"failures":[],"tindex":"fb91fe07-dbe5-11e4-aee3-89fb39be8ea1","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"fb91fe08-dbe5-11e4-aee3-69f2815e4b04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"fb91fe09-dbe5-11e4-aee3-07ff6103e082","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":273,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":467,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":162,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":533,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":317,"com.graphhopper.GraphHopperAPITest.testNoLoad":515,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":362,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":235,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":16,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":23,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":179,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":432,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":31,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":383,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":294,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":474,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":482,"com.graphhopper.coll.CompressedArrayTest.testCompress":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":118,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":191,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":381,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":324,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":483,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":451,"com.graphhopper.GraphHopperTest.testPrepare":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":391,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":216,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":416,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":532,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":148,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":150,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":336,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":24,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":229,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":249,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":435,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":13,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":527,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":219,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":182,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":17,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":504,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":170,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":164,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":530,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":454,"com.graphhopper.GraphHopperTest.testLoadOSM":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":354,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":506,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":183,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":516,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":109,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":282,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":486,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":425,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":185,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":392,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":212,"com.graphhopper.routing.DijkstraTest.initializationError":522,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":311,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":272,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":406,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":524,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":280,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":172,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":328,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":326,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":503,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":370,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":220,"com.graphhopper.coll.OSMIDMapTest.testGetLong":157,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":297,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":303,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":265,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":163,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":267,"com.graphhopper.coll.CompressedArrayTest.testCompress2":45,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":418,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":295,"com.graphhopper.GraphHopperAPITest.testLoad":430,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":495,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":511,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":68,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":411,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":401,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":53,"com.graphhopper.storage.LevelGraphStorageTest.testClone":253,"com.graphhopper.reader.OSMReaderTest.testBarriers":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":285,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":436,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":125,"com.graphhopper.util.GHUtilityTest.testCopy":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":458,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":487,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":142,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":335,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":120,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":319,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":115,"com.graphhopper.routing.PathTest.testFindInstruction":206,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":286,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":528,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":74,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":237,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":124,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":316,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":426,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":414,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":309,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":449,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":132,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":95,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":521,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":367,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":399,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":510,"com.graphhopper.util.InstructionListTest.testWayList2":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":387,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":355,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":428,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":526,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":290,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":15,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":481,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":176,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":517,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":121,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":397,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":257,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":160,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":100,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":488,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":375,"com.graphhopper.storage.RAMDirectoryTest.testSynched":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":296,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":221,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":400,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":4,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":485,"com.graphhopper.routing.AStarTest.initializationError":520,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":215,"com.graphhopper.coll.OSMIDMapTest.testGet":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":293,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":75,"com.graphhopper.routing.PathBidirRefTest.testExtract":438,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":103,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":156,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":330,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":314,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":102,"com.graphhopper.util.GHUtilityTest.testSort2":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":465,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":247,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":302,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":110,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":331,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":79,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":389,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":260,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":263,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":278,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":210,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":26,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":505,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":266,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":9,"com.graphhopper.storage.StorablePropertiesTest.testStore":159,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":161,"com.graphhopper.storage.GraphHopperStorageTest.testClone":403,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":388,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":86,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":477,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":84,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":412,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":145,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":368,"com.graphhopper.routing.PathTest.testTime":146,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":141,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":168,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":91,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":357,"com.graphhopper.reader.OSMReaderTest.testRelation":64,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":380,"com.graphhopper.util.GHUtilityTest.testSortDirected":233,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":531,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":134,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":499,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":493,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":209,"com.graphhopper.GraphHopperTest.testFootOnly":203,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":112,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":82,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":338,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":479,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":327,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":444,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":376,"com.graphhopper.search.NameIndexTest.testCreate":194,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":207,"com.graphhopper.routing.QueryGraphTest.testOneWay":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":358,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":114,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":473,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":181,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":225,"com.graphhopper.reader.OSMReaderTest.testWithBounds":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":58,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":312,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":434,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":382,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":93,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":250,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":248,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":133,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":25,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":305,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":83,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":299,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":186,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":455,"com.graphhopper.util.InstructionListTest.testWayList":151,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":427,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":101,"com.graphhopper.GraphHopperAPITest.testDisconnected179":431,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":369,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":364,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":500,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":130,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":239,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":379,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":394,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":198,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":405,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":174,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":452,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":98,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":421,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":462,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":519,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":218,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":87,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":18,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":468,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":497,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":333,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":512,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":20,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":396,"com.graphhopper.routing.PathTest.testWayList":205,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":393,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":373,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":513,"com.graphhopper.coll.OSMIDMapTest.testGet2":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":469,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":490,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":274,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":470,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":107,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":415,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":291,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":404,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":48,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":49,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":494,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":127,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":529,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":35,"com.graphhopper.util.GHUtilityTest.testSort":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":385,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":113,"com.graphhopper.search.NameIndexTest.testPut":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":313,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":496,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":318,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":325,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":342,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":345,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":508,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":29,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":122,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":343,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":281,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":137,"com.graphhopper.storage.MMapDirectoryTest.testSynched":498,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":471,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":518,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":300,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":433,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":509,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":184,"com.graphhopper.routing.PathTest.testFound":437,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":12,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":204,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":276,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":484,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":67,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":105,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":56,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":193,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":372,"com.graphhopper.util.InstructionListTest.testEmptyList":234,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":460,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":332,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":463,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":77,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":119,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":417,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":466,"com.graphhopper.reader.PrinctonReaderTest.testRead":238,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":189,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":525,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":180,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":292,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":40,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":361,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":252,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":301,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":94,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":478,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":140,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":27,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":384,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":472,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":51,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":111,"com.graphhopper.reader.OSMReaderTest.testOneWay":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":52,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":60,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":61,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":116,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":492,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":378,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":407,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":448,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":445,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":453,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":346,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":446,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":491,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":70,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":374,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":440,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":398,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":475,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":501,"com.graphhopper.routing.PathBidirRefTest.testExtract2":439,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":507,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":37,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":356,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":502,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":423,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":347,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":38,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":6,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":395,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":351,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":424,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":514,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":256,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":88,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":187,"com.graphhopper.GraphHopperTest.testFootAndCar":199,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":54,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":36,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":334,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":365,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":450,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":288,"com.graphhopper.storage.StorablePropertiesTest.testLoad":480,"com.graphhopper.GraphHopperTest.testPrepareOnly":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":223,"com.graphhopper.GraphHopperTest.testVia":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":320,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":363,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":65,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":244,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":153,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":422,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":72,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":377,"com.graphhopper.routing.AStarBidirectionTest.initializationError":523,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":97,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":275,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":55,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":171}}]
