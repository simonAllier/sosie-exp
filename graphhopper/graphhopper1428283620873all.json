[{"failures":[],"tindex":"06e80da3-dbfc-11e4-a735-3178dca29534","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"06eb41f4-dbfc-11e4-a735-e3b4e1725eb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:462","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"06eb41f5-dbfc-11e4-a735-5bdc7b1639ff","variableMapping":{"foundIndex":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[],"tindex":"06eb41f6-dbfc-11e4-a735-5dc82705095b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"06eb41f7-dbfc-11e4-a735-f5888f9833aa","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,20,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,22,23,97,98,99,100,101,102,103,104,25,26,105,105,106,106,107,107,108,108,109,109,110,110,111,111,27,27,112,112,113,113,114,114,115,115,116,117,28,29,118,119,120,121,122,123,124,125,126,127,30,31,128,129,130,131,132,133,134,135,136,137,32,138,139,140,141,142,143,144,145,33,146,147,148,149,150,151,152,153,154,34,155,156,157,158,159,160,161,35,162,163,36,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,37,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,40,244,245,246,247,248,249,250,42,251,252,253,254,255,256,257,43,258,259,44,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,45,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,46,295,296,297,47,298,299,300,301,302,303,304,48,305,306,307,308,309,310,311,49,312,313,50,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,51,334,335,336,337,338],"tindex":"06eb6908-dbfc-11e4-a735-c74b601a7f96","variableMapping":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"06eb6909-dbfc-11e4-a735-fd145f605bf5","variableMapping":{"costs":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"06eb690a-dbfc-11e4-a735-7940fd3301ce","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":0},{"failures":[339,340,341,342,343,344,345,346,347],"tindex":"06eb690b-dbfc-11e4-a735-1dec46118ebb","variableMapping":{"segmentsToMap":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"06eb690c-dbfc-11e4-a735-2f4977130279","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"06eb690d-dbfc-11e4-a735-ff7bb16a91a6","variableMapping":{"tmp":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[86,91,348,349,350,351,352,353],"tindex":"06eb690e-dbfc-11e4-a735-31e7948c5b81","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"06eb690f-dbfc-11e4-a735-c17d0944ea7b","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"06eb6910-dbfc-11e4-a735-07ba7b13af02","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"06eb6911-dbfc-11e4-a735-430629b900c1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[354,355,356,357,358,359,360,361,362,363],"tindex":"06eb6912-dbfc-11e4-a735-4ba4c1451590","variableMapping":{"start":"initialBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-1},{"failures":[354,355,125,356,357,358,359,361,362,364,365,363,366,192,198,200,201,227,233,235,236],"tindex":"06eb6913-dbfc-11e4-a735-81a85eed88db","variableMapping":{"segmentSizePower":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[354,355,356,357,358,359,361,362,364,365,363,366,192,198,200,201,227,233,235,236],"tindex":"06eb6914-dbfc-11e4-a735-b9397aa01fcc","variableMapping":{"oldValueIndex":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"06eb9025-dbfc-11e4-a735-35bc4572724e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":0},{"failures":[71,367],"tindex":"06eb9026-dbfc-11e4-a735-8569ca7a483f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"06eb9027-dbfc-11e4-a735-8d8803e4e491","variableMapping":{"retBucket":"length","bucketSize":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"06eb9028-dbfc-11e4-a735-2538a6ec4dac","variableMapping":{"lock":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfDecoder:135","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"06eb9029-dbfc-11e4-a735-6be2352217d7","variableMapping":{"hasOther":"defaultB","hasRel":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[52,54,55,56,57,58,59,60,61,62,68,69,70,71,74,368,369,370,371,372,373,374,375,376,82,83,84,85,86,87,88,89,90,91,92,93,94,95,377,378,379,380,381,96,22,25,26,105,106,108,109,110,111,27,112,114,115,134,151,152,34,173,179,37,185,186,194,195,196,206,382,216,217,218,219,383,220,384,229,230,231,241,38,385,386,387,388,389,390,391,39,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,244,408,409,410,411,412,41,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,245,431,247,248,42,269,275,45,281,282,432,298,301,302,48,323,329,51,335,336,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458],"tindex":"06eb902a-dbfc-11e4-a735-239234c0e067","variableMapping":{"size":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"06eb902b-dbfc-11e4-a735-33ffd2a937cc","variableMapping":{"len":"indexDivisor","start":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[82,459],"tindex":"06eb902c-dbfc-11e4-a735-157af1a3d73c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[52,54,55,56,57,58,59,60,61,62,63,64,82,83,84,85,86,87,88,89,90,91,92,93,94,95,354,355,125,31,128,131,356,357,358,359,360,361,362,364,365,363,366,189,190,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"06eb902d-dbfc-11e4-a735-7fd184709e14","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[96,22,460,0,340,1,461,462,341,463,464,349,465,466,2,3,467,468,469,4,470,5,471,472,473,14,346,15,474,475,347,476,477,353,478,479,16,17,480,481,482,18,483,19,484],"tindex":"06eb902e-dbfc-11e4-a735-c576eb0da0c8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[354,355,356,357,359,360,361,362],"tindex":"06ebb73f-dbfc-11e4-a735-d14b37c70b01","variableMapping":{"speed":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"06ebb740-dbfc-11e4-a735-73bdff18e30d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[97,101],"tindex":"06ebb741-dbfc-11e4-a735-51e917f6723b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[485,486,487,488,148],"tindex":"06ebb742-dbfc-11e4-a735-7389f6589f44","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"child","tmpNode":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"06ebb743-dbfc-11e4-a735-7d495f2ac67e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"06ebb744-dbfc-11e4-a735-730d2f73f383","variableMapping":{"currentBucket":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:52","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"06ebb745-dbfc-11e4-a735-838761db5c68","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[489],"tindex":"06ebb746-dbfc-11e4-a735-ed63e0531d04","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"06ebb747-dbfc-11e4-a735-cda6ea7456ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":0},{"failures":[145,148,46],"tindex":"06ebb748-dbfc-11e4-a735-83bc63564676","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"06ebb749-dbfc-11e4-a735-47426d332cbc","variableMapping":{"keyIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"06ebb74a-dbfc-11e4-a735-cbf635c4bd4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[97,101],"tindex":"06ebb74b-dbfc-11e4-a735-5b1aed59282d","variableMapping":{"i":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"06ec7a9c-dbfc-11e4-a735-35049a08f2dc","variableMapping":{"lastInBoundsPillarNode":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:660","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[461,341,469,490,344,491,345,492,474,347,482],"tindex":"06ec7a9d-dbfc-11e4-a735-6f74d8bc2deb","variableMapping":{"freeIndex":"paveType","currentIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[],"tindex":"06ec7a9e-dbfc-11e4-a735-5d340f543048","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"06ec7a9f-dbfc-11e4-a735-89bc43b8268c","variableMapping":{"start":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[83,95],"tindex":"06ec7aa0-dbfc-11e4-a735-55c3853c78a0","variableMapping":{"reverseSpeed":"preferWayEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"06eca1b1-dbfc-11e4-a735-915fb125e88c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"06eca1b2-dbfc-11e4-a735-3f49c3757b66","variableMapping":{"encoderList":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"06eca1b3-dbfc-11e4-a735-75ff8e7268c3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[97,100,156,164,165,171,179,180,386,394,395,401,408,409,252,260,261,267,275,276,306,314,315,321,329,330],"tindex":"06eca1b4-dbfc-11e4-a735-39d07f4e41d4","variableMapping":{"minResolutionInMeter":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"06eca1b5-dbfc-11e4-a735-570a78fa9047","variableMapping":{"this":"graph","index":"tmpEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1126","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getRemovedNodes().add(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-2},{"failures":[],"tindex":"06eca1b6-dbfc-11e4-a735-a196c2e445f3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[354,355,356,357,359,361,362,364,365,363,366,192,200,201,227,235,236],"tindex":"06eca1b7-dbfc-11e4-a735-dd49a29cb1b6","variableMapping":{"res":"hash","maxBit":"hash","value":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"06eca1b8-dbfc-11e4-a735-fd195bb242fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:114","type":"CtLocalVariableImpl","sourcecode":"int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int))"},"status":-2},{"failures":[],"tindex":"06eca1b9-dbfc-11e4-a735-3de05062df44","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"06eca1ba-dbfc-11e4-a735-f36cde69b0de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:153","type":"CtIfImpl","sourcecode":"if ((java.util.Map<java.lang.Integer, java.lang.Integer>.size()) < 2)\n    return ;\n"},"status":0},{"failures":[0,462,341,5,6,344,10,493,345,11,14,475,347,19],"tindex":"06eca1bb-dbfc-11e4-a735-47912f00f6d3","variableMapping":{"nodeThis":"speed","nextEdgeOther":"speed","nodeOther":"speed","nextEdge":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"06eca1bc-dbfc-11e4-a735-1f8d9b97c2b7","variableMapping":{"speed":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[354,355,356,357,358,359,360,361,362,364,365,363,366],"tindex":"06eca1bd-dbfc-11e4-a735-d13abbbd0cda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[486,494,29,119,122,123,125,31,129,130,132,133,134,135,136,137,145,148],"tindex":"06ecc8ce-dbfc-11e4-a735-e77119fa9c7a","variableMapping":{"lat":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"06ecc8cf-dbfc-11e4-a735-a1e45407e5cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[101,102],"tindex":"06ecc8d0-dbfc-11e4-a735-07701998f78d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[],"tindex":"06ecc8d1-dbfc-11e4-a735-537bc6796a57","variableMapping":{"size":"edgeId","from":"edgeId","end":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"06ecc8d2-dbfc-11e4-a735-3daf428e0a29","variableMapping":{"elem":"elem","size":"i","keys":"elem","i":"child","child":"child","lastPrio":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:111","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-2},{"failures":[53,54,55,58,59,29,118,119,120,121,122,123,124,125,126,127,30,31,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"06ecc8d3-dbfc-11e4-a735-7f087688e9e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-1},{"failures":[],"tindex":"06ecc8d4-dbfc-11e4-a735-193290605953","variableMapping":{"nodesContracted":"factor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":0},{"failures":[0,6,14],"tindex":"06ecc8d5-dbfc-11e4-a735-5dcb24cb027f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:638","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[97,102],"tindex":"06ecc8d6-dbfc-11e4-a735-a5de6c26d87c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"06ecc8d7-dbfc-11e4-a735-afb0f6e589bf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[367],"tindex":"06ecc8d8-dbfc-11e4-a735-4196164801d1","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[459],"tindex":"06ecc8d9-dbfc-11e4-a735-43b0320fc473","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[58],"tindex":"06ecc8da-dbfc-11e4-a735-e52f99d33dad","variableMapping":{"calcPoints":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:127","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"06ecc8db-dbfc-11e4-a735-03d307038ca5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"06ecc8dc-dbfc-11e4-a735-e3c205f60031","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[82,495],"tindex":"06ecc8dd-dbfc-11e4-a735-c5345bfeff84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"06ecc8de-dbfc-11e4-a735-e1f69c4406fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[],"tindex":"06ecc8df-dbfc-11e4-a735-4ff38642e465","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[97,102],"tindex":"06ecc8e0-dbfc-11e4-a735-4908057797cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[340,342,343,346],"tindex":"06ecc8e1-dbfc-11e4-a735-4bac53205c04","variableMapping":{"currentEntry":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"06ecc8e2-dbfc-11e4-a735-b752a39e995a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"06eceef3-dbfc-11e4-a735-554b3cc0bc92","variableMapping":{"str":"highway","lon":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:203","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    java.lang.String += \"E\";\nelse\n    java.lang.String += \"W\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[95,99],"tindex":"06eceef4-dbfc-11e4-a735-15dd6baaf8ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[52,52,53,54,55,56,57,58,496,59,60,61,62,62,497,63,64,103,104,105,106,107,107,108,109,110,111,27,112,113,114,115,150,151,151,152,152,153,154,498,34,155,156,157,158,158,159,160,161,35,162,163,36,36,164,165,166,166,167,168,169,170,171,172,173,174,175,176,177,178,178,179,180,181,182,183,37,184,185,186,187,188,202,203,204,205,206,207,208,210,211,212,382,213,214,216,217,218,219,383,220,222,223,224,384,225,226,237,238,239,240,241,242,243,38,385,386,387,388,388,389,390,391,39,392,393,40,40,394,395,396,396,397,398,399,400,401,402,403,404,405,406,407,244,244,408,409,410,411,412,41,413,414,415,416,417,245,245,431,246,247,247,248,248,249,250,499,42,251,252,253,254,254,255,256,257,43,258,259,44,44,260,261,262,262,263,264,265,266,267,268,269,270,271,272,273,274,274,275,276,277,278,279,45,280,281,282,283,284,432,500,501,298,300,301,301,302,302,303,304,502,48,305,306,307,308,308,309,310,311,49,312,313,50,50,314,315,316,316,317,318,319,320,321,322,323,324,325,326,327,328,328,329,330,331,332,333,51,334,335,336,337,338],"tindex":"06eceef5-dbfc-11e4-a735-03fbf2b6fb55","variableMapping":{"names":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:146","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[54,55,58,74,28,29,118,119,120,122,123,124,126,127,30,31,128,129,130,131,133,134,135,137,32,138,139,140,141,142,143,145,33,146,148,149,295,299],"tindex":"06eceef6-dbfc-11e4-a735-49be38758eb6","variableMapping":{"initLeafSize":"I_LEVEL","maxLeafEntries":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:57","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"06eceef7-dbfc-11e4-a735-3b728aa1e938","variableMapping":{"line":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":-2},{"failures":[345],"tindex":"06eceef8-dbfc-11e4-a735-9d16be5793ed","variableMapping":{"baseUrl":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"06eceef9-dbfc-11e4-a735-152650e10edc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"06eceefa-dbfc-11e4-a735-c5d2feb07c41","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[55,58,189],"tindex":"06eceefb-dbfc-11e4-a735-5b387deef64d","variableMapping":{"intIndex":"nodeA","len":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"06eceefc-dbfc-11e4-a735-efac97d02f4f","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"06eceefd-dbfc-11e4-a735-59f2d17cfa28","variableMapping":{"hasOther":"storing","hasRel":"storing"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[503,504,505,506,419,420,507,427,428,431,286,508,509,292,434,435,510,442,443,449,450,511,455,456],"tindex":"06eceefe-dbfc-11e4-a735-ebace43da539","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[],"tindex":"06eceeff-dbfc-11e4-a735-b9bd1edee5cf","variableMapping":{"freeIndex":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-2},{"failures":[29,118,126,30,128,129,130,131,133,135,137,139],"tindex":"06ed1610-dbfc-11e4-a735-99c6fd6c8fae","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"finishedFrom"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-1},{"failures":[54,55,56,57,58,60,71,94,512,513,514,515,516],"tindex":"06ed1611-dbfc-11e4-a735-bb8edad1d043","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[517],"tindex":"06ed1612-dbfc-11e4-a735-3154c2cc6924","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[86,91,348,349,350,351,352,353],"tindex":"06ed1613-dbfc-11e4-a735-d5ebee607567","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-1},{"failures":[],"tindex":"06ed1614-dbfc-11e4-a735-3b24b36f6545","variableMapping":{"baseNode":"length","id":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:360","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[57,61,83,518,517],"tindex":"06ed1615-dbfc-11e4-a735-158812522db0","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"06ed1616-dbfc-11e4-a735-19d205b76519","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":328,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":132,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":298,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":516,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":385,"com.graphhopper.reader.OSMReaderTest.testFerry":82,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":77,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":475,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":11,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":195,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":53,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":338,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":469,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":471,"com.graphhopper.storage.MMapDataAccessTest.testSegments":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":259,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":376,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":433,"com.graphhopper.coll.CompressedArrayTest.testCompress":355,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":141,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":403,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":36,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":191,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":434,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":425,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":146,"com.graphhopper.GraphHopperTest.testPrepare":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":32,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":170,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":488,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":15,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":126,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":215,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":492,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":66,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":192,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":101,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":345,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":14,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":124,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":163,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":452,"com.graphhopper.coll.BitSetImplTest.testCopy":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":230,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":347,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":497,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":245,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":364,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":453,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":48,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":487,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":149,"com.graphhopper.GraphHopperTest.testLoadOSM":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":237,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":289,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":231,"com.graphhopper.reader.OSMReaderTest.testSort":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":18,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":248,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":437,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":182,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":151,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":414,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":27,"com.graphhopper.storage.RAMDataAccessTest.testHeader":426,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":279,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":446,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":454,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":327,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":161,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":431,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":42,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":313,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":9,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":199,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":128,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":190,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":197,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":496,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":120,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":306,"com.graphhopper.coll.OSMIDMapTest.testGetLong":380,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":268,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":319,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":301,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":321,"com.graphhopper.coll.CompressedArrayTest.testCompress2":354,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":172,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":44,"com.graphhopper.GraphHopperAPITest.testLoad":63,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":502,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":288,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":350,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":164,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":156,"com.graphhopper.storage.LevelGraphStorageTest.testClone":308,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":495,"com.graphhopper.reader.OSMReaderTest.testBarriers":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":251,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":506,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":463,"com.graphhopper.util.GHUtilityTest.testCopy":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":389,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":208,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":382,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":429,"com.graphhopper.routing.PathTest.testFindInstruction":26,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":252,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":485,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":20,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":210,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":183,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":168,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":507,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":277,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":263,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":467,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":310,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":390,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":455,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":294,"com.graphhopper.util.InstructionListTest.testWayList2":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":238,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":187,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":474,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":281,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":96,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":152,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":49,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":423,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":476,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":260,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":122,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":155,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":87,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":134,"com.graphhopper.coll.OSMIDMapTest.testGet":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":258,"com.graphhopper.routing.PathBidirRefTest.testExtract":116,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":517,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":323,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":379,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":478,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":203,"com.graphhopper.storage.RAMDataAccessTest.testCopy":421,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":440,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":408,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":493,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":353,"com.graphhopper.storage.RAMDataAccessTest.testSegments":428,"com.graphhopper.util.GHUtilityTest.testSort2":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":129,"com.graphhopper.reader.OSMReaderTest.testMain":84,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":479,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":204,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":483,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":326,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":512,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":412,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":50,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":317,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":337,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":109,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":272,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":0,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":287,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":320,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":94,"com.graphhopper.storage.StorablePropertiesTest.testStore":432,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":420,"com.graphhopper.storage.GraphHopperStorageTest.testClone":158,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":411,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":166,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":513,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":46,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":391,"com.graphhopper.routing.PathTest.testTime":104,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":8,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":335,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":309,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":383,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":240,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":325,"com.graphhopper.reader.OSMReaderTest.testRelation":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":402,"com.graphhopper.util.GHUtilityTest.testSortDirected":76,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":494,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":4,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":444,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":108,"com.graphhopper.GraphHopperTest.testFootOnly":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":459,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":198,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":343,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":511,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":460,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":398,"com.graphhopper.search.NameIndexTest.testCreate":371,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":427,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":105,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":291,"com.graphhopper.routing.QueryGraphTest.testOneWay":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":241,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":359,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":229,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":356,"com.graphhopper.reader.OSMReaderTest.testWithBounds":93,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":430,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":504,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":470,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":98,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":404,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":342,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":305,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":468,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":21,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":264,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":34,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":29,"com.graphhopper.util.InstructionListTest.testWayList":69,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":184,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":477,"com.graphhopper.GraphHopperAPITest.testDisconnected179":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":39,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":360,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":273,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":227,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":457,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":2,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":100,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":416,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":481,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":56,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":160,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":147,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":473,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":33,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":482,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":250,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":136,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":498,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":206,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":290,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":508,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":484,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":150,"com.graphhopper.routing.PathTest.testWayList":25,"com.graphhopper.storage.MMapDataAccessTest.testCopy":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":394,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":367,"com.graphhopper.coll.OSMIDMapTest.testGet2":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":137,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":441,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":331,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":480,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":169,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":257,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":200,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":318,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":201,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":422,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":349,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":486,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":490,"com.graphhopper.util.GHUtilityTest.testSort":75,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":407,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":352,"com.graphhopper.search.NameIndexTest.testPut":369,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":499,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":193,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":212,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":223,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":462,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":22,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":221,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":246,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":351,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":265,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":97,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":293,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":316,"com.graphhopper.routing.PathTest.testFound":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":244,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":62,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":333,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":510,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":296,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":16,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":261,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":370,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":503,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":40,"com.graphhopper.util.InstructionListTest.testEmptyList":67,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":162,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":125,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":348,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":130,"com.graphhopper.reader.PrinctonReaderTest.testRead":80,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":37,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":458,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":196,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":43,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":357,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":38,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":266,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":465,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":447,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":340,"com.graphhopper.reader.OSMReaderTest.testFoot":83,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":115,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":235,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":336,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":362,"com.graphhopper.reader.OSMReaderTest.testOneWay":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":236,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":165,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":180,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":278,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":12,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":443,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":464,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":142,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":366,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":514,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":140,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":224,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":442,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":23,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":505,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":396,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":107,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":153,"com.graphhopper.routing.PathBidirRefTest.testExtract2":117,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":509,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":239,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":491,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":368,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":178,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":384,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":10,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":417,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":518,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":232,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":181,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":311,"com.graphhopper.GraphHopperTest.testFootAndCar":57,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":173,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":315,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":207,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":388,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":472,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":449,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":254,"com.graphhopper.storage.StorablePropertiesTest.testLoad":500,"com.graphhopper.GraphHopperTest.testPrepareOnly":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":133,"com.graphhopper.GraphHopperTest.testVia":54,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":386,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":91,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":47,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":71,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":177,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":24,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":399,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":515,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":332,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":330,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":247}}]
