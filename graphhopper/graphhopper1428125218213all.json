[{"failures":[],"tindex":"37edad70-da8b-11e4-add4-b54cd4e986cf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":0},{"failures":[],"tindex":"37eebee1-da8b-11e4-add4-fbdb9716f0ad","variableMapping":{"finishedTo":"empty","finishedFrom":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[0],"tindex":"37eebee2-da8b-11e4-add4-851c8271a58d","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[1],"tindex":"37eebee3-da8b-11e4-add4-e563afcffe78","variableMapping":{"distInMeter":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"37eebee4-da8b-11e4-add4-3fc3637dc6b8","variableMapping":{"name":"highwayValue","this":"this","refName":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:444","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String += \", \" + java.lang.String;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":0},{"failures":[],"tindex":"37eebee5-da8b-11e4-add4-75579e7f081e","variableMapping":{"orientation":"factor","java.lang.Math.PI":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:97","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-2},{"failures":[2,3,4,5,6,7,8,9],"tindex":"37f06c96-da8b-11e4-add4-e795168d2ee1","variableMapping":{"r":"speed","x":"speed","absY":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"37f06c97-da8b-11e4-add4-e1c9cdb97ba9","variableMapping":{"turnCostIndex":"to","nextTurnCostIndex":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-1},{"failures":[48,3,49,50,5,51,7,52,53,8,54],"tindex":"37f06c98-da8b-11e4-add4-0d0776a3d73a","variableMapping":{"node":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:173","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[35,55,56,57,58,59,60,61,62,63,64,65,66,67,1,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,39,40,41,42,43,84,44,45,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"37f06c99-da8b-11e4-add4-0b3c90b8c31f","variableMapping":{"len":"indexDivisor","start":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"37f06c9a-da8b-11e4-add4-9f21ec82df33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-2},{"failures":[140,3,141,5,7,142,143],"tindex":"37f06c9b-da8b-11e4-add4-93650c8b7191","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[144,145,146],"tindex":"37f06c9c-da8b-11e4-add4-b3b7671ed0db","variableMapping":{"sacScale":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"37f06c9d-da8b-11e4-add4-c769f6b25c89","variableMapping":{"eleDelta":"maxEle","decEleSum":"maxEle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:49","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[147,53,8],"tindex":"37f06c9e-da8b-11e4-add4-4d5bc13140a3","variableMapping":{"systemProperty":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[11,12,148,149,17,21,25,27,30,34,35,36,38,150,151],"tindex":"37f06c9f-da8b-11e4-add4-41c163bad4f9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"37f093b0-da8b-11e4-add4-e94d71f482fb","variableMapping":{"val":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[152,10,153,154,11,155,156,157,158,159,12,13,148,160,149,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,161,162,55,56,163,57,58,59,60,61,62,164,63,64,165,166,167,168,65,66,169,170,171,172,140,173,48,2,3,174,175,176,177,178,179,180,181,182,49,183,184,185,186,67,1,187,188,141,189,50,4,5,190,191,192,193,194,195,196,197,198,51,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,0,217,218,6,219,7,220,221,222,223,224,225,226,52,227,228,229,230,147,53,8,231,232,233,234,235,236,237,54,238,239,240,241,242,243,144,244,245,145,246,247,248,146,249,250,251,252,253,254,255,9,256,257,68,69,70,71,72,73,74,75,76,143,77,78,79,80,81,258,259,82,83,39,40,41,42,43,260,84,44,45,85,261,262,90,91,92,93,263,264,265,266,267,94,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,95,299,300,301,302,303,304,305,306,307,308,309,96,310,311,97,98,312,313,314,99,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,100,335,336,337,338,339,101,340,341,342,343,102,344,103,104,345,346,347,348,349,350,351,352,353,354,355,356,357,358,105,106,107,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,108,109,110,380,381,382,383,384,385,386,387,388,389,390,391,111,112,113,114,392,115,393,118,119,394,395,396,120,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,121,417,418,419,420,421,122,422,423,424,425,123,426,124,125,427,428,429,430,150,431,151,127,432,433,128,129,434,435,436,130,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,131,457,458,459,460,461,132,462,463,464,465,133,466,134,135,467,468,46,47,469],"tindex":"37f0bac1-da8b-11e4-add4-db572a5861ec","variableMapping":{"tt":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[152,10,153,154,11,155,156,157,158,159,12,13,148,160,149,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,161,162,55,56,163,57,58,59,60,61,62,164,63,64,165,166,167,168,65,66,169,170,171,172,140,173,48,2,3,174,175,176,177,178,179,180,181,182,49,183,184,185,186,67,1,187,188,141,189,50,4,5,190,191,192,193,194,195,196,197,198,51,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,0,217,218,6,219,7,220,221,222,223,224,225,226,52,227,228,229,230,147,53,8,231,232,233,234,235,236,237,54,238,239,240,241,242,243,144,244,245,145,246,247,248,146,249,250,251,252,253,254,255,9,256,257,68,69,70,71,72,73,74,75,76,143,77,78,79,80,81,258,259,82,83,39,40,41,42,43,260,84,44,45,85,261,262,90,91,92,93,263,264,265,266,267,94,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,95,299,300,301,302,303,304,305,306,307,308,309,96,310,311,97,98,312,313,314,99,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,100,335,336,337,338,339,101,340,341,342,343,102,344,103,104,345,346,347,348,349,350,351,352,353,354,355,356,357,358,105,106,107,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,108,109,110,380,381,382,383,384,385,386,387,388,389,390,391,111,112,113,114,392,115,393,118,119,394,395,396,120,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,121,417,418,419,420,421,122,422,423,424,425,123,426,124,125,427,428,429,430,150,431,151,127,432,433,128,129,434,435,436,130,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,131,457,458,459,460,461,132,462,463,464,465,133,466,134,135,467,468,46,47,469],"tindex":"37f0bac2-da8b-11e4-add4-69e57c3d5139","variableMapping":{"name":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String + \".tif\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-1},{"failures":[470,471],"tindex":"37f0bac3-da8b-11e4-add4-7732643284b5","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"37f0bac4-da8b-11e4-add4-d3ffe2bbbe5a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:940","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"37f0bac5-da8b-11e4-add4-b3fb2caa9aa1","variableMapping":{"edgePointer":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":0},{"failures":[],"tindex":"37f0e1d6-da8b-11e4-add4-f70acaf27751","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[10,153,154,11,155,156,157,158,159,12,13,148,160,149,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,58,165,166,167,168,65,66,169,170,209,210,211,212,213,214,215,216,0,217,242,243,144,244,245,145,246,247,248,146,249,250,251,252,253,254,255,258,259,39,40,41,42,43,44,85,93,263,264,265,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,95,299,300,301,302,303,304,305,306,307,308,309,96,310,311,97,98,312,313,314,99,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,100,335,336,337,338,339,101,340,341,342,343,102,344,103,104,345,346,353,355,370,377,391,393,118,119,394,395,396,120,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,121,417,418,419,420,421,122,422,423,424,425,123,426,124,125,427,428,429,430,150,431,151,127,432,433,128,129,434,435,436,130,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,131,457,458,459,460,461,132,462,463,464,465,133,466,134,135,467,468],"tindex":"37f0e1d7-da8b-11e4-add4-c9443020c4c4","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"37f0e1d8-da8b-11e4-add4-5fe46000d7af","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[472],"tindex":"37f0e1d9-da8b-11e4-add4-8bea1cb85894","variableMapping":{"str":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[24,32,57,39,42,473],"tindex":"37f0e1da-da8b-11e4-add4-012d1f697e7a","variableMapping":{"maxRasterWidth2InMeterNormed":"lon","currNormedDist":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:374","type":"CtReturnImpl","sourcecode":"return double < (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-1},{"failures":[2,175,176,184,4,191,192,200,209,210,213,216,0,221,228,230,231,239,144,245,145,247,146,68,69,70,71,72,73,74,75,76,77,78,79,80,474,81,82,83,39,40,41,42,43,84,44,45,85],"tindex":"37f0e1db-da8b-11e4-add4-91944b675395","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"37f0e1dc-da8b-11e4-add4-c17123105216","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"37f0e1dd-da8b-11e4-add4-394566b8acf2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[475,476,477,478,479,480,481,482,483,484,485,486,357,360,362,363,378,381,383,384],"tindex":"37f108ee-da8b-11e4-add4-d715156cff5c","variableMapping":{"red":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"37f108ef-da8b-11e4-add4-5dd9f0bbb8b5","variableMapping":{"pos":"segmentSizeInBytes","mSize":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"37f108f0-da8b-11e4-add4-198ba9d05c02","variableMapping":{"hasOther":"storing","hasRel":"storing"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[203,207,208],"tindex":"37f108f1-da8b-11e4-add4-7b6deec31fb5","variableMapping":{"turnCostIndex":"start","NO_TURN_ENTRY":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"37f108f2-da8b-11e4-add4-53c840933b8f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"37f108f3-da8b-11e4-add4-813add9dafed","variableMapping":{"item":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:256","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[174,190,251,487,75],"tindex":"37f108f4-da8b-11e4-add4-81a8cc384ec1","variableMapping":{"tmp":"costs","tmpNo":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:156","type":"CtOperatorAssignmentImpl","sourcecode":"double /= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"37f108f5-da8b-11e4-add4-1597589c8461","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"37f108f6-da8b-11e4-add4-4fa5228e3fd4","variableMapping":{"endIndexPlusOne":"shift","frontIndex":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[213,0,69,82,42,45],"tindex":"37f108f7-da8b-11e4-add4-c5320d911834","variableMapping":{"name":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"37f108f8-da8b-11e4-add4-b7ed8b1e19d7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"37f108f9-da8b-11e4-add4-2d6b4046b8c5","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[10,153,11,155,156,157,158,12,13,148,160,149,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,58,61,165,166,168,65,66,1,203,204,206,207,212,214,244,246,146,250,252,488,69,70,72,75,76,77,78,79,81,258,259,82,83,39,40,41,42,43,84,44,45,90,91,92,93,263,264,265,94,273,274,275,277,278,281,282,284,289,291,297,95,301,303,304,308,96,97,99,315,316,318,319,322,323,325,330,332,337,339,341,343,102,345,118,120,397,398,400,401,404,405,407,412,414,419,421,423,425,123,427,429,151,128,130,437,438,440,441,444,445,447,452,454,459,461,463,465,133,467,46],"tindex":"37f1300a-da8b-11e4-add4-1ddd918011e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-1},{"failures":[28,29,32,70,71,39,40,41,42,43,44,45,489,490,491,492,486,493,494,354,357,106,359,361,362,363,365,366,369,378,109,110,382,383,384,386,387,388,46,47],"tindex":"37f1300b-da8b-11e4-add4-1d3650be243c","variableMapping":{"from":"y2","end":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"37f1300c-da8b-11e4-add4-b9e47a0bb4ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"37f1300d-da8b-11e4-add4-932bfc88bed0","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"37f1300e-da8b-11e4-add4-c9d4060ebb4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"37f1300f-da8b-11e4-add4-bd11874b6f7b","variableMapping":{"i":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[1],"tindex":"37f13010-da8b-11e4-add4-67af8846000a","variableMapping":{"bytePos":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"37f13011-da8b-11e4-add4-df1883c63c76","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[140,186,141,202,229,241,142,495],"tindex":"37f15722-da8b-11e4-add4-6d518a4318c2","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"37f15723-da8b-11e4-add4-057ae6b8bf33","variableMapping":{"val":"this","osmValue":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:153","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.Object))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[10,153,11,155,156,157,158,159,12,13,148,160,149,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,55,56,56,163,163,57,57,58,58,59,59,60,60,61,61,62,62,164,164,63,63,64,64,165,166,167,168,65,66,67,1,203,204,205,206,207,208,212,68,69,70,71,72,73,74,75,76,77,78,79,80,81,496,258,259,82,83,39,40,41,42,43,84,44,45,85,262,90,91,92,93,263,264,265,266,267,94,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,95,299,300,301,302,303,304,305,306,307,308,309,96,310,311,97,98,312,313,99,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,100,335,336,337,338,339,101,340,341,342,343,102,344,103,104,345,346,347,348,349,350,351,352,353,354,355,356,357,358,105,106,107,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,108,109,110,380,381,382,383,384,385,386,387,388,389,390,391,497,111,112,113,114,392,115,393,118,119,394,395,120,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,121,417,418,419,420,421,122,422,423,424,425,123,426,124,125,427,428,429,430,150,431,151,127,432,433,128,129,434,435,130,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,131,457,458,459,460,461,132,462,463,464,465,133,466,134,135,467,468,46,47],"tindex":"37f15724-da8b-11e4-add4-c9e718d56d25","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[3,182,183,5,198,199,209,6,7,226,227,8,237,238,144,9],"tindex":"37f15725-da8b-11e4-add4-717ea8057438","variableMapping":{"turnCosts":"speed","weight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"37f15726-da8b-11e4-add4-dbd86696908d","variableMapping":{"com.graphhopper.storage.DAType.MMAP":"type","type":"defaultType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:166","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-2},{"failures":[142,495],"tindex":"37f15727-da8b-11e4-add4-7bc1d85442d2","variableMapping":{"max":"nextRelBit","tmpSize":"nextRelBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-1},{"failures":[475,476,477,478,479,480,481,482,483,484,485,486,357,360,362,363,378,381,383,384],"tindex":"37f15728-da8b-11e4-add4-97e6517dfca6","variableMapping":{"oldValueIndex":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[10,153,11,155,156,157,158,159,12,13,148,160,149,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,56,163,57,58,59,60,61,62,164,63,64,165,166,65,66,67,1,203,204,205,206,207,208,212,68,69,70,71,72,73,74,75,76,77,78,79,80,81,496,258,259,82,39,40,41,42,43,84,44,45,85,262,90,91,92,93,263,264,265,266,267,94,268,270,271,272,284,95,96,311,97,313,99,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,100,335,336,337,339,101,340,341,342,343,102,344,103,104,345,346,347,348,349,350,352,353,354,355,356,357,358,105,106,107,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,376,377,378,379,108,109,110,380,381,382,383,384,385,386,387,388,390,391,111,112,113,114,115,393,118,395,120,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,121,417,418,419,421,122,422,423,424,425,123,426,124,125,427,428,429,430,150,431,151,432,433,128,435,130,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,131,457,458,459,461,132,462,463,464,465,133,466,134,135,467,468,498,499,500,501,502,503,504,505,506,46,47],"tindex":"37f17e39-da8b-11e4-add4-6bfa292f913a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":-1},{"failures":[203,207],"tindex":"37f1f36a-da8b-11e4-add4-59d40f6e7a74","variableMapping":{"com.graphhopper.coll.SparseIntIntArray.DELETED":"connectedId","keys":"nodeIndex","values":"nodeLowLink","n":"connectedId","o":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:131","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = int[][int];\n    if (int != (com.graphhopper.coll.SparseIntIntArray.int)) {\n        if (int != int) {\n            int[][int] = int[][int];\n            int[][int] = int;\n        } \n        int++;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"37f1f36b-da8b-11e4-add4-158b86e5e1a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"37f1f36c-da8b-11e4-add4-0bb5238ca179","variableMapping":{"hasOther":"uTurnSupport","hasRel":"uTurnSupport"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"37f1f36d-da8b-11e4-add4-6f41f00f2ad4","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"status":0},{"failures":[],"tindex":"37f1f36e-da8b-11e4-add4-514c5bb06398","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"37f1f36f-da8b-11e4-add4-ff82b8de3bf4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[35,55,56,57,58,59,60,61,62,63,64,65,66,67,1,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,39,40,41,42,43,84,44,45,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"37f21a80-da8b-11e4-add4-6559582b4377","variableMapping":{"size":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-1},{"failures":[22,24,28,29,32,35,56,57,58,59,62,164,64,73,39,41,42,44,45,473,94,507,294,100,508,489,509,510,491,492,493,494,361,382,121,131],"tindex":"37f21a81-da8b-11e4-add4-3bfc815b54ff","variableMapping":{"ab_rb":"epsilon","ab_ar":"d1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:34","type":"CtReturnImpl","sourcecode":"return java.lang.Math.(java.lang.Math.abs((double - double))) < double"},"status":-1},{"failures":[],"tindex":"37f21a82-da8b-11e4-add4-07b81b3d41fa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"37f21a83-da8b-11e4-add4-2535d9f9dc74","variableMapping":{"line":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"37f21a84-da8b-11e4-add4-156ebc4e5381","variableMapping":{"width":"size","lonSimilar":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"37f21a85-da8b-11e4-add4-bb5e43c8df96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"37f21a86-da8b-11e4-add4-29ce07df7dbb","variableMapping":{"id":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[244],"tindex":"37f21a87-da8b-11e4-add4-bfb8c3dfba62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[203,204,205,206],"tindex":"37f21a88-da8b-11e4-add4-7f91b0413960","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:45","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"status":-2},{"failures":[35,56,59,61,62,64,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,39,40,41,43,44,45,86,87,511,88,89,512,513,514,515,91,92,94,273,294,95,299,304,96,97,99,100,101,102,104,105,108,112,113,114,115,516,517,518,519,520,521,522,523,524,525,526,527,528,529,118,120,121,122,123,125,530,128,130,131,132,133,135,500,504,505,506],"tindex":"37f21a89-da8b-11e4-add4-47bc3a8debe7","variableMapping":{"length":"offset","factor":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-1},{"failures":[],"tindex":"37f21a8a-da8b-11e4-add4-f1016f070314","variableMapping":{"high":"biggestStart","guess":"biggestStart","low":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:173","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"37f21a8b-da8b-11e4-add4-a1082fb4e2b3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:498","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"37f21a8c-da8b-11e4-add4-41cce7fcf7f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[1],"tindex":"37f21a8d-da8b-11e4-add4-7be9a7dc7211","variableMapping":{"r":"fullDist2D","x":"fullDist2D","absY":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"37f21a8e-da8b-11e4-add4-13657c3a3aec","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"37f21a8f-da8b-11e4-add4-77ad1a8a9350","variableMapping":{"currentEntry":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[531,153,11,155,12,149,14,16,17,20,32,35,36,38,429,150,151],"tindex":"37f21a90-da8b-11e4-add4-0d74c00e4623","variableMapping":{"high":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-1},{"failures":[],"tindex":"37f2b6d1-da8b-11e4-add4-5fe29d867ebf","variableMapping":{"edgeId":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"37f2b6d2-da8b-11e4-add4-a5d85ed583f7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:207","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:218","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[48,3,49,50,5,51,7,52,53,8,54],"tindex":"37f2b6d3-da8b-11e4-add4-bf57e1a7666f","variableMapping":{"size":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[532],"tindex":"37f2b6d4-da8b-11e4-add4-2751c5bff926","variableMapping":{"versionHint":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":-1},{"failures":[],"tindex":"37f2b6d5-da8b-11e4-add4-eb06d25f6334","variableMapping":{"currentBucket":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"37f2dde6-da8b-11e4-add4-9fc29c5e6d68","variableMapping":{"nodeId":"shift","mainNodes":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"37f2dde7-da8b-11e4-add4-bb35cecdd553","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[10,12,13,17,20,21,32,34,36],"tindex":"37f2dde8-da8b-11e4-add4-57b1c860b687","variableMapping":{"edge":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[144],"tindex":"37f2dde9-da8b-11e4-add4-213c1f765b68","variableMapping":{"str":"highwayValue","name":"highwayValue","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:80","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.String += (java.lang.String) + \" \";\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[203,205,206,81,275,283,285,286,288,292,293,299,300,316,324,326,327,329,333,334,101,340,398,406,408,409,411,415,416,122,422,432,438,446,448,449,451,455,456,132,462],"tindex":"37f2ddea-da8b-11e4-add4-9de4abfb16f3","variableMapping":{"oldPriorities":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[203,206,275,286,288,292,293,299,300,316,327,329,333,334,101,340,398,409,411,415,416,122,422,438,449,451,455,456,132,462],"tindex":"37f2ddeb-da8b-11e4-add4-4d0eebee1999","variableMapping":{"latSize":"start","lonSize":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-1},{"failures":[67,1],"tindex":"37f2ddec-da8b-11e4-add4-4b19bbfb2aaa","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","edgeId":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","edgeCount":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:654","type":"CtIfImpl","sourcecode":"if ((int <= (com.graphhopper.util.EdgeIterator.int)) || (int >= (int)))\n    throw new java.lang.IllegalStateException(((((\"edgeId \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \"]\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-1},{"failures":[10,153,11,155,156,157,158,159,12,13,148,160,149,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,56,163,57,58,59,60,61,62,164,63,64,165,166,65,66,67,1,203,204,205,206,207,208,212,68,69,70,71,72,73,74,75,76,77,78,79,80,81,496,258,259,82,39,40,41,42,43,84,44,45,85,90,91,92,93,263,264,265,266,267,94,268,270,271,272,284,95,96,311,97,313,99,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,100,335,336,337,339,101,340,341,342,343,102,344,103,104,345,346,347,348,349,350,352,353,354,355,356,357,358,105,106,107,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,376,377,378,379,108,109,110,380,381,382,383,384,385,386,387,388,390,391,111,112,113,114,115,393,118,395,120,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,121,417,418,419,421,122,422,423,424,425,123,426,124,125,427,428,429,430,150,431,151,432,433,128,435,130,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,131,457,458,459,461,132,462,463,464,465,133,466,134,135,467,468,498,499,500,502,503,504,505,506,46,47],"tindex":"37f2dded-da8b-11e4-add4-21d4d74d6edd","variableMapping":{"flags":"bytePos","mask":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[203,207],"tindex":"37f2ddee-da8b-11e4-add4-97558f797571","variableMapping":{"capacity":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[488],"tindex":"37f2ddef-da8b-11e4-add4-9799a2c8f45f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:196","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[],"tindex":"37f30500-da8b-11e4-add4-9d60b8fb42a8","variableMapping":{"i":"speed","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":0},{"failures":[176,192,210,221,231,242,72,77],"tindex":"37f30501-da8b-11e4-add4-d94420f283bd","variableMapping":{"sacScale":"res"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":461,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":33,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":56,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":127,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":373,"com.graphhopper.GraphHopperAPITest.testNoLoad":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":274,"com.graphhopper.reader.OSMReaderTest.testFerry":68,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":263,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":2,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":220,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":508,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":106,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":83,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":468,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":324,"com.graphhopper.coll.CompressedArrayTest.testCompress":476,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":226,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":156,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":294,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":407,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":356,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":148,"com.graphhopper.GraphHopperTest.testPrepare":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":10,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":25,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":497,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":52,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":272,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":435,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":357,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":207,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":172,"com.graphhopper.util.PointListTest.testEquals":507,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":498,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":23,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":109,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":96,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":483,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":14,"com.graphhopper.GraphHopperTest.testLoadOSM":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":385,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":502,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":110,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":255,"com.graphhopper.reader.OSMReaderTest.testSort":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":183,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":98,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":517,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":424,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":118,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":306,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":61,"com.graphhopper.routing.DijkstraTest.initializationError":256,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":343,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":460,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":489,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":501,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":403,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":310,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":99,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":446,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":238,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":361,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":29,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":355,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":359,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":19,"com.graphhopper.coll.OSMIDMapTest.testGetLong":88,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":438,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":334,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":453,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":128,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":455,"com.graphhopper.coll.CompressedArrayTest.testCompress2":475,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":416,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":147,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":325,"com.graphhopper.GraphHopperAPITest.testLoad":46,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":436,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":500,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":210,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":408,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":398,"com.graphhopper.storage.LevelGraphStorageTest.testClone":440,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":532,"com.graphhopper.reader.OSMReaderTest.testBarriers":72,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":315,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.util.GHUtilityTest.testCopy":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":278,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":236,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":370,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":228,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":375,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":509,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":528,"com.graphhopper.routing.PathTest.testFindInstruction":66,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":223,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":316,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":216,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":265,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":189,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":372,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":425,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":412,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":329,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":433,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":197,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":488,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":161,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":279,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":395,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":506,"com.graphhopper.util.InstructionListTest.testWayList2":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":386,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":427,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":479,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":320,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":140,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":67,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":119,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":493,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":444,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":174,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":473,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":518,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":288,"com.graphhopper.storage.RAMDirectoryTest.testSynched":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":326,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":21,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":397,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":73,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":516,"com.graphhopper.routing.AStarTest.initializationError":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":35,"com.graphhopper.coll.OSMIDMapTest.testGet":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":323,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":0,"com.graphhopper.routing.PathBidirRefTest.testExtract":165,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":131,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":177,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":511,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":365,"com.graphhopper.storage.RAMDataAccessTest.testCopy":523,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":346,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":176,"com.graphhopper.storage.RAMDataAccessTest.testSegments":527,"com.graphhopper.util.GHUtilityTest.testSort2":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":30,"com.graphhopper.reader.OSMReaderTest.testMain":70,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":129,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":333,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":484,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":184,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":366,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":144,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":459,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":312,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":447,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":451,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":467,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":58,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":337,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":188,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":499,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":454,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":80,"com.graphhopper.storage.StorablePropertiesTest.testStore":126,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":117,"com.graphhopper.storage.GraphHopperStorageTest.testClone":400,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":247,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":410,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":429,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":280,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":431,"com.graphhopper.routing.PathTest.testTime":168,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":235,"com.graphhopper.util.BitUtilLittleTest.testToFloat":512,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":134,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":441,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":253,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":392,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":388,"com.graphhopper.reader.OSMReaderTest.testRelation":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":293,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":458,"com.graphhopper.util.GHUtilityTest.testSortDirected":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":199,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":521,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":57,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":494,"com.graphhopper.util.BitUtilLittleTest.testToInt":514,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":219,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":112,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":145,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":360,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":495,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":18,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":490,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":289,"com.graphhopper.search.NameIndexTest.testCreate":139,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":526,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":55,"com.graphhopper.routing.QueryGraphTest.testOneWay":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":389,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":480,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":108,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":477,"com.graphhopper.reader.OSMReaderTest.testWithBounds":79,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":529,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":200,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":344,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":295,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":142,"com.graphhopper.util.BitUtilLittleTest.testToDouble":513,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":437,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":434,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":198,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":229,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":246,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":330,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":120,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":16,"com.graphhopper.util.InstructionListTest.testWayList":91,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":426,"com.graphhopper.routing.ch.PrepareEncoderTest.testOverwrite":531,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":175,"com.graphhopper.GraphHopperAPITest.testDisconnected179":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":281,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":195,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":308,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":41,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":402,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":160,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":171,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":419,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":27,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":13,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":133,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":232,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":313,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":456,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":37,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":396,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":186,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":393,"com.graphhopper.routing.PathTest.testWayList":65,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":307,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":285,"com.graphhopper.coll.OSMIDMapTest.testGet2":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":38,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":181,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":321,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":362,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":452,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":363,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":524,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":522,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":364,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":192,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":53,"com.graphhopper.util.GHUtilityTest.testSort":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":382,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":485,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":180,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":221,"com.graphhopper.search.NameIndexTest.testPut":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":345,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":358,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":374,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":349,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":504,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":4,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":60,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":1,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":347,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":231,"com.graphhopper.storage.MMapDirectoryTest.testSynched":470,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":170,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":331,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":203,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":505,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":95,"com.graphhopper.routing.PathTest.testFound":167,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":9,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":85,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":465,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":472,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":179,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":327,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":138,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":284,"com.graphhopper.util.InstructionListTest.testEmptyList":262,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":237,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":28,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":252,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":243,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":227,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":242,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":31,"com.graphhopper.reader.PrinctonReaderTest.testRead":258,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":107,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":322,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":283,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":273,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":332,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":530,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":487,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":141,"com.graphhopper.reader.OSMReaderTest.testFoot":69,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":297,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":383,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":482,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":218,"com.graphhopper.reader.OSMReaderTest.testOneWay":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":384,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":409,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":422,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":342,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":224,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":520,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":291,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":404,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":157,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":486,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":155,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":350,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":491,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":519,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":287,"com.graphhopper.util.BitUtilLittleTest.testToLong":515,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":163,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":394,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":474,"com.graphhopper.routing.PathBidirRefTest.testExtract2":166,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":503,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":54,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":387,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":136,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":421,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":351,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":240,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":75,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":492,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":510,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":309,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":380,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":423,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":269,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":443,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":250,"com.graphhopper.GraphHopperTest.testFootAndCar":42,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":121,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":449,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":369,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":525,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":277,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":34,"com.graphhopper.GraphHopperTest.testPrepareOnly":82,"com.graphhopper.GraphHopperTest.testVia":39,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":376,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":275,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":77,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":151,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":93,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":420,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":214,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":76,"com.graphhopper.routing.AStarBidirectionTest.initializationError":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":290,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":209,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":464,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":462,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":97}}]
