[{"failures":[0,1,2,3,4,5,6],"tindex":"6cd5943b-dacb-11e4-a471-4f2934e250b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"6cd6ccbc-dacb-11e4-a471-29818ec0fdd5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"6cd6ccbd-dacb-11e4-a471-d5ca53f94ebf","variableMapping":{"value":"i","numberOfBits":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-2},{"failures":[],"tindex":"6cd6ccbe-dacb-11e4-a471-7d874a91f623","variableMapping":{"currEdge":"this","edge":"hash","tmpEdge":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidirRef:93","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.EdgeEntry.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":0},{"failures":[],"tindex":"6cd6ccbf-dacb-11e4-a471-99d3a876eb9a","variableMapping":{"max":"speed","time":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:52","type":"CtIfImpl","sourcecode":"if (long > (double))\n    double = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":0},{"failures":[],"tindex":"6cd6ccc0-dacb-11e4-a471-49832b77795b","variableMapping":{"counts":"endIndexPlusOne","counter":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[7],"tindex":"6cd6ccc1-dacb-11e4-a471-e71df172f18f","variableMapping":{"x1":"decDist2DSum","x2":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:150","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,7,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"6cd6f3d2-dacb-11e4-a471-b34415937402","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) > 1)\n    throw new java.lang.IllegalStateException((\"Multiple encoders are active. cannot return one:\" + com.graphhopper.routing.util.EncodingManager.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[343,344,345],"tindex":"6cd6f3d3-dacb-11e4-a471-19eb9baa9ad5","variableMapping":{"ref":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"6cd6f3d4-dacb-11e4-a471-a36e5e0a31db","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"6cd6f3d5-dacb-11e4-a471-ab71ad0f6ebd","variableMapping":{"size":"y1","delta":"y2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"6cd6f3d6-dacb-11e4-a471-abb66a99eb45","variableMapping":{"need":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6cd6f3d7-dacb-11e4-a471-31484111b174","variableMapping":{"bytePos":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[],"tindex":"6cd741f8-dacb-11e4-a471-95cad720d6ae","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"6cd741f9-dacb-11e4-a471-41ebc23e6d09","variableMapping":{"newUniqueOsmId":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"6cd741fa-dacb-11e4-a471-e90dda37e42e","variableMapping":{"size":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"6cd741fb-dacb-11e4-a471-11205b92079c","variableMapping":{"orientation":"com.graphhopper.util.AngleCalc.PI_4","resultOrientation":"x","baseOrientation":"com.graphhopper.util.AngleCalc.PI3_4","java.lang.Math.PI":"absY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":0},{"failures":[13,16,21,42,48,53,55,346,347,348,349,350,351,352,353,102,107,128,134,139,141,354,355,145,148,153,174,180,185,187,356,357,358,359,360,361,362,363,364,365,366,320,367,368,369,370,371,372,373,374,375,376,377,378,328,331,334,335,379,380,381],"tindex":"6cd741fc-dacb-11e4-a471-cdc7551188e0","variableMapping":{"from":"length","end":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"6cd7690d-dacb-11e4-a471-598a0f3c2bda","variableMapping":{"byteCount":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"6cd7690e-dacb-11e4-a471-5d0e4c312754","variableMapping":{"edge":"edgeEntryBytes","updatedB":"tmpPrevEdge","updatedA":"tmpPrevEdge","linkA":"edgeEntryBytes","this":"this","linkB":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[],"tindex":"6cd7690f-dacb-11e4-a471-65a5ce4abc2b","variableMapping":{"highwayValue":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":0},{"failures":[250,329],"tindex":"6cd76910-dacb-11e4-a471-cdd4aff32499","variableMapping":{"logMessages":"longTripsSpeed","logMessagesPercentage":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:158","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[382,383,300,301,323],"tindex":"6cd76911-dacb-11e4-a471-438bac0065eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[1,3],"tindex":"6cd76912-dacb-11e4-a471-dd3d52773957","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"6cd76913-dacb-11e4-a471-896712a0e962","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[23,33,34,40,48,49,65,75,76,82,90,91,109,119,120,126,134,135,155,165,166,172,180,181,343,384],"tindex":"6cd76914-dacb-11e4-a471-a98fef8ea261","variableMapping":{"edgeId":"i","nextEdge":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"6cd76915-dacb-11e4-a471-c57d8eb671a4","variableMapping":{"weightLong":"value","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[8,12,16,26,32,37,39,47,50,52,57,68,74,79,81,89,92,94,99,102,112,118,123,125,133,136,138,143,145,148,158,164,169,171,179,182,184,189,385,357,358,359,386,387,192,213,343,344,231,248,251,258,261,262,264,268,7,271,388,365,389,390,391,392,393,5,6,300,301,302,303,306,310,312,313,315,317,319,320,321,323,394],"tindex":"6cd7b736-dacb-11e4-a471-317734cd1ab0","variableMapping":{"acceptBit":"forwardBit","ferryBit":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[],"tindex":"6cd7b737-dacb-11e4-a471-a3428a8ced5e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[],"tindex":"6cd7b738-dacb-11e4-a471-ab62bb62d40c","variableMapping":{"lastKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[13,16,25,395,396,397,398,67,89,102,111,133,399,400,401,402,145,148,157,179,403,404,373,375,376,377,328],"tindex":"6cd7b739-dacb-11e4-a471-57d30715ecf9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"6cd7b73a-dacb-11e4-a471-6dad2b4c61ad","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[384],"tindex":"6cd7b73b-dacb-11e4-a471-5310a2654075","variableMapping":{"segmentSizeInBytes":"maxCount","indexDivisor":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[34,49,76,91,120,135,166,181,384],"tindex":"6cd7de4c-dacb-11e4-a471-eb2371519acb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"6cd7de4d-dacb-11e4-a471-61cc6e5f2f48","variableMapping":{"flags":"encoded","nodeFlags":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[],"tindex":"6cd7de4e-dacb-11e4-a471-4f0406380042","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"6cd7de4f-dacb-11e4-a471-fdcfbe80296d","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[200,216,235,260,279],"tindex":"6cd7de50-dacb-11e4-a471-5d84f599633d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:120","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"6cd7de51-dacb-11e4-a471-e7660cb127b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:134","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"6cd7de52-dacb-11e4-a471-d19537559398","variableMapping":{"size":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"6cd7de53-dacb-11e4-a471-614cd938a56c","variableMapping":{"todoBytes":"flags2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[195,207,214,215,223,233,241,274,286],"tindex":"6cd7de54-dacb-11e4-a471-f547075bccd8","variableMapping":{"name":"message","refName":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:449","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"6cd7de55-dacb-11e4-a471-55b322856606","variableMapping":{"elem":"mValues","i":"i","value":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:302","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[195,197,207,214,215,223,233,241,274,276,286],"tindex":"6cd7de56-dacb-11e4-a471-719a527a7ac3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-1},{"failures":[],"tindex":"6cd7de57-dacb-11e4-a471-158947310601","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:306","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"not supported yet: mmap will overwrite existing storage at the same location\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":0},{"failures":[8,10,11,12,15,16,19,21,22,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,405,406,407,408,350,409,351,410,411,412,413,414,415,416,417,418,419,59,420,385,386,382,421,389,390,391,392,393,422,5,383,423,424,6,425,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,373,426,374,427,375,376,378],"tindex":"6cd80568-dacb-11e4-a471-257f38af1bb0","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"a","edgeTo":"a","edgeFrom":"b"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[7],"tindex":"6cd80569-dacb-11e4-a471-9353420d7d1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[],"tindex":"6cd8056a-dacb-11e4-a471-dd78bc56e257","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"6cd8056b-dacb-11e4-a471-fffbae67a980","variableMapping":{"high":"allowed","len":"allowed","start":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"6cd8056c-dacb-11e4-a471-29eac11d7c56","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6cd8056d-dacb-11e4-a471-194e652eec5a","variableMapping":{"directionBitMask":"wayBitMask","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[428,429,430,431,432,433,434,435,436],"tindex":"6cd8056e-dacb-11e4-a471-edae28109c48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[294],"tindex":"6cd8056f-dacb-11e4-a471-c13abacbeb5f","variableMapping":{"tmp":"shift","initializedCounter":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"6cd80570-dacb-11e4-a471-63d64883cbbf","variableMapping":{"store":"out"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"6cd80571-dacb-11e4-a471-c7116202e300","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"6cd80572-dacb-11e4-a471-f59d38fb3cde","variableMapping":{"val":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[248,254,374,327,330,342],"tindex":"6cd80573-dacb-11e4-a471-1976837e7831","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[437,438],"tindex":"6cd80574-dacb-11e4-a471-d3ae5cf0b596","variableMapping":{"res":"capacity","maxBit":"capacity","value":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[382,389,5,383,425,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,374,427,439,327,375,377,378,394,440],"tindex":"6cd82b85-dacb-11e4-a471-051e4554711c","variableMapping":{"allowWrites":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1085","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[],"tindex":"6cd82b86-dacb-11e4-a471-5b3c9d40a547","variableMapping":{"fromNode":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[193,197,233,272,276,292,441],"tindex":"6cd82b87-dacb-11e4-a471-ed9c4d5dfc37","variableMapping":{"E_ADDITIONAL":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1455","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[442],"tindex":"6cd82b88-dacb-11e4-a471-3fae0b0c3b30","variableMapping":{"str":"hourStr","s":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:132","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \".\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"6cd82b89-dacb-11e4-a471-797d3978eed7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[],"tindex":"6cd82b8a-dacb-11e4-a471-f16221d268a2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-2},{"failures":[],"tindex":"6cd82b8b-dacb-11e4-a471-c5f223a473ed","variableMapping":{"allSegments":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[443,444,445,446,447,448,449,450,451,452],"tindex":"6cd82b8c-dacb-11e4-a471-d359ba3cf8dd","variableMapping":{"angle":"midLon","com.graphhopper.util.AngleCalc.PI3_4":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[192,213,271],"tindex":"6cd82b8d-dacb-11e4-a471-83833bce94b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:638","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[434,407,413,414,453,454,455,443,444,445,446,448,450,451,456,457],"tindex":"6cd82b8e-dacb-11e4-a471-3be3ad1d7385","variableMapping":{"orientation":"midLat","java.lang.Math.PI":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"6cd82b8f-dacb-11e4-a471-e986bb900f0e","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":0},{"failures":[],"tindex":"6cd82b90-dacb-11e4-a471-81d3f312783e","variableMapping":{"mGarbage":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[],"tindex":"6cd82b91-dacb-11e4-a471-cf523137ee97","variableMapping":{"filter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:112","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[],"tindex":"6cd82b92-dacb-11e4-a471-8b2f2a68ad56","variableMapping":{"counter":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[292,295,441],"tindex":"6cd82b93-dacb-11e4-a471-eb617aeaca51","variableMapping":{"high":"flags","low":"flags","guess":"oldRelationFlags","guessedKey":"oldRelationFlags","key":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"6cd82b94-dacb-11e4-a471-537ff65afcff","variableMapping":{"next":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:424","type":"CtReturnImpl","sourcecode":"return int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"6cd82b95-dacb-11e4-a471-4f3b42545861","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"6cd82b96-dacb-11e4-a471-93761dfed8ec","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"6cd852a7-dacb-11e4-a471-6be57750aa9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[434,407,411,413,414,453,458,454,455,443,444,445,446,447,448,450,451,456,457,452],"tindex":"6cd852a8-dacb-11e4-a471-53720093c755","variableMapping":{"size":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"6cd852a9-dacb-11e4-a471-3118891bb624","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"6cd852aa-dacb-11e4-a471-ad80b4450e51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"6cd852ab-dacb-11e4-a471-ff8c4ed467aa","variableMapping":{"finishedTo":"defaultB","finishedFrom":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"6cd852ac-dacb-11e4-a471-b706d4a9720b","variableMapping":{"err":"start","dLat":"start","tmpErr":"start","x1":"start","sLon":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-2},{"failures":[247],"tindex":"6cd852ad-dacb-11e4-a471-9599ce7bb021","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"6cd852ae-dacb-11e4-a471-4f3d157bb074","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"6cd852af-dacb-11e4-a471-19c1957b0ad6","variableMapping":{"high":"acceptBit","len":"acceptBit","start":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[0,2,4],"tindex":"6cd852b0-dacb-11e4-a471-d10b262380a8","variableMapping":{"edgeId":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"6cd852b1-dacb-11e4-a471-a10db97f8a6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[192,231,233,271,292],"tindex":"6cd852b2-dacb-11e4-a471-99ceafedc87d","variableMapping":{"E_ADDITIONAL":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1455","type":"CtAssignmentImpl","sourcecode":"int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"6cd852b3-dacb-11e4-a471-45ecba012d82","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[434,407,411,413,414,453,458,454,455,443,444,309,445,446,447,448,450,451,456,457,452],"tindex":"6cd852b4-dacb-11e4-a471-3917f51f88ad","variableMapping":{"edgePointer":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"6cd852b5-dacb-11e4-a471-5f41d0cceb90","variableMapping":{"ret":"subNetworks","retBucket":"subNetworks","i":"subNetworks","bucketSize":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[191,255,270],"tindex":"6cd852b6-dacb-11e4-a471-fd6616e2c20b","variableMapping":{"maxTurnCosts":"maxTurnCosts","costs":"costs","turnRestrictionBit":"turnRestrictionBit","restricted":"restricted"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"6cd96427-dacb-11e4-a471-013a7083c6e8","variableMapping":{"factor":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"6cd98b38-dacb-11e4-a471-998e0ef14842","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[443,444,445,446,448,449,450,451],"tindex":"6cd98b39-dacb-11e4-a471-d9c5e99be3af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"6cd98b3a-dacb-11e4-a471-8f77782936fe","variableMapping":{"logSize":"capacity","java.lang.Integer.MAX_VALUE":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:259","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":0},{"failures":[],"tindex":"6cd98b3b-dacb-11e4-a471-5f16cdf0409c","variableMapping":{"encoded":"bits","backwardBit":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":0},{"failures":[360,248,254,374,427,439,327,375,377,329,330,331,333,336,337,338,339,340,341,342],"tindex":"6cd98b3c-dacb-11e4-a471-4d6ffc6bc397","variableMapping":{"initialized":"isRoundabout"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"6cd98b3d-dacb-11e4-a471-47b293132f40","variableMapping":{"maxLatTmp":"lon","minLatTmp":"lon","lat":"midLat","hash":"spatialKey"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":318,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":367,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":64,"com.graphhopper.reader.OSMReaderTest.testFerry":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":196,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":234,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":428,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":409,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":426,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":163,"com.graphhopper.coll.CompressedArrayTest.testCompress":444,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":240,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":142,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":84,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":423,"com.graphhopper.GraphHopperTest.testPrepare":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":317,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":382,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":310,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":241,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":19,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":407,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":344,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":192,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":302,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":308,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":145,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":456,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":21,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":425,"com.graphhopper.GraphHopperTest.testLoadOSM":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":353,"com.graphhopper.reader.OSMReaderTest.testSort":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":208,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":229,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":149,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":137,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":102,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":97,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":370,"com.graphhopper.storage.RAMDataAccessTest.testHeader":404,"com.graphhopper.routing.DijkstraTest.initializationError":324,"com.graphhopper.storage.MMapDataAccessTest.testHeader":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":184,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":46,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":429,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":402,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":114,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":146,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":274,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":153,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":227,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":412,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":406,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":305,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":304,"com.graphhopper.coll.OSMIDMapTest.testGetLong":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":173,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":38,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":16,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":40,"com.graphhopper.coll.CompressedArrayTest.testCompress2":443,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":164,"com.graphhopper.GraphHopperAPITest.testLoad":394,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":20,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":260,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":119,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":109,"com.graphhopper.storage.LevelGraphStorageTest.testClone":25,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":154,"com.graphhopper.reader.OSMReaderTest.testBarriers":333,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":307,"com.graphhopper.util.GHUtilityTest.testCopy":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":221,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":243,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":430,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":237,"com.graphhopper.routing.PathTest.testFindInstruction":366,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":43,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":155,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":266,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":386,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":273,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":138,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":182,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":420,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":393,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":284,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":294,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":325,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":69,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":105,"com.graphhopper.util.InstructionListTest.testWayList2":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":92,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":143,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":193,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":387,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":269,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":435,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":29,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":165,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":306,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":334,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":399,"com.graphhopper.routing.AStarTest.initializationError":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":320,"com.graphhopper.coll.OSMIDMapTest.testGet":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":162,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":401,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":267,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":201,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":416,"com.graphhopper.storage.RAMDataAccessTest.testCopy":403,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":90,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":231,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":315,"com.graphhopper.reader.OSMReaderTest.testMain":331,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":172,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":202,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":457,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":209,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":417,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":45,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":150,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":32,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":36,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":57,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":33,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":271,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":397,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":39,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":341,"com.graphhopper.storage.StorablePropertiesTest.testStore":355,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":356,"com.graphhopper.storage.GraphHopperStorageTest.testClone":111,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":254,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":252,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":225,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":70,"com.graphhopper.routing.PathTest.testTime":388,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":220,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":55,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":26,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":259,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":83,"com.graphhopper.reader.OSMReaderTest.testRelation":441,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":287,"com.graphhopper.GraphHopperTest.testFootOnly":378,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":436,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":232,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":250,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":346,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":411,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":303,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":421,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":79,"com.graphhopper.search.NameIndexTest.testCreate":381,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":326,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":398,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":448,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":352,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":445,"com.graphhopper.reader.OSMReaderTest.testWithBounds":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":186,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":85,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":268,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":292,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":22,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":285,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":176,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":169,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":107,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":301,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":140,"com.graphhopper.util.InstructionListTest.testWayList":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":199,"com.graphhopper.GraphHopperAPITest.testDisconnected179":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":71,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":449,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":282,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":206,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":439,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":113,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":424,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":131,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":191,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":312,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":383,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":255,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":207,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":151,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":322,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":211,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":101,"com.graphhopper.routing.PathTest.testWayList":365,"com.graphhopper.storage.MMapDataAccessTest.testCopy":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":249,"com.graphhopper.coll.OSMIDMapTest.testGet2":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":323,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":400,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":175,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":205,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":124,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":261,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":160,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":414,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":279,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":1,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":88,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":452,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":204,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":235,"com.graphhopper.search.NameIndexTest.testPut":379,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":408,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":147,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":377,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":216,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":321,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":343,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":89,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":296,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":328,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":52,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":166,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":380,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":74,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":309,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":418,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":313,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":246,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":242,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":245,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":316,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":351,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":73,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":364,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":63,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":171,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":280,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":272,"com.graphhopper.reader.OSMReaderTest.testFoot":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":87,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":372,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":56,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":230,"com.graphhopper.reader.OSMReaderTest.testOneWay":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":455,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":120,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":135,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":183,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":238,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":81,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":392,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":434,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":6,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":389,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":390,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":432,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":262,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":77,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":104,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":438,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":300,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":223,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":133,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":226,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":336,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":433,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":100,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":283,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":136,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":28,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":256,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":128,"com.graphhopper.GraphHopperTest.testFootAndCar":327,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":215,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":67,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":291,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":422,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":319,"com.graphhopper.GraphHopperTest.testPrepareOnly":373,"com.graphhopper.GraphHopperTest.testVia":374,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":65,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":338,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":12,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":132,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":360,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":264,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":80,"com.graphhopper.routing.AStarBidirectionTest.initializationError":299,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":228,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":51,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":49,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":148}}]
