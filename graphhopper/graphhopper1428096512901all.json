[{"failures":[],"tindex":"615d91cd-da48-11e4-bfdd-538cc36d50f9","variableMapping":{"dLat":"segmentSizePower","dLon":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"615e551e-da48-11e4-bfdd-ef0872dbf415","variableMapping":{"mask":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-2},{"failures":[0],"tindex":"615e551f-da48-11e4-bfdd-05efa78479f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[1,2],"tindex":"615e5520-da48-11e4-bfdd-a536ec9c1edd","variableMapping":{"empty":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[3],"tindex":"615e5521-da48-11e4-bfdd-090625890162","variableMapping":{"str":"hourStr","lonInt":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:283","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[4,5,6],"tindex":"615e5522-da48-11e4-bfdd-abd3d4bc40b3","variableMapping":{"start":"maxCount","onStack":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[7,8,9,10,11,12],"tindex":"615e5523-da48-11e4-bfdd-d5b4fbcb6639","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[],"tindex":"615e7c34-da48-11e4-bfdd-55b93686972b","variableMapping":{"directionBitMask":"encoded","shift":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"615e7c35-da48-11e4-bfdd-0f287990a30e","variableMapping":{"turnCosts":"ele","weight":"ele"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"615e7c36-da48-11e4-bfdd-6fb3eaa31e8d","variableMapping":{"mGarbage":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[13],"tindex":"615e7c37-da48-11e4-bfdd-63899c000a50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,5],"tindex":"615e7c38-da48-11e4-bfdd-dfc1de8d4e89","variableMapping":{"size":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-1},{"failures":[],"tindex":"615e7c39-da48-11e4-bfdd-794c977f0419","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"615e7c3a-da48-11e4-bfdd-6bd9fd3855fa","variableMapping":{"res":"directionBitMask","maxBit":"forwardBit","value":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:290","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":0},{"failures":[43,44,45,46,47,48],"tindex":"615e7c3b-da48-11e4-bfdd-077da1971a60","variableMapping":{"scDirMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"615e7c3c-da48-11e4-bfdd-63f9bd16a72e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"615e7c3d-da48-11e4-bfdd-6daedfd60e24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"615e7c3e-da48-11e4-bfdd-476b4b0bdfe0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[49,11],"tindex":"615e7c3f-da48-11e4-bfdd-b1535080a7a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,14,64,65,66,67,68,69,70,71,72,73,15,74,16,75,76,77,17,18,78,79,80,81,82,83,19,20,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,21,153,154,155,156,157,158,159,160,161,162,22,163,23,164,165,166,24,25,167,168,169,170,171,172,26,27,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,28,189,190,191,192,193,194,195,196,197,198,29,199,30,200,201,202,31,32,203,204,205,206,207,208,33,34,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,35,227,228,229,230,231,232,233,234,235,236,36,237,37,238,239,240,38,39,241,242,243,244,245,246,40,41,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,42,271,4,5,272,273,274,275,13,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,7,8,9,293,294,295,296,49,297,298,299,300,301,302,303,304,305,306,307,308,309,10,11,310,12,311,312,313,313,314,314,315,315,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,324,325,326,327,328,329,46,330,331,332,47,333,334,335,48,336,337,338,339,340,341,342,343,344,345,346,6,347,348,349,350],"tindex":"615ef170-da48-11e4-bfdd-69b21e0b19de","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"615ef171-da48-11e4-bfdd-6f38378bafe2","variableMapping":{"bit":"subNetworks"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[42,272,273],"tindex":"615ef172-da48-11e4-bfdd-69b4f4cd7c57","variableMapping":{"y1":"index","y2":"index","x1":"start","x2":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-1},{"failures":[351,103,111,112,120,128,129,352,353,354,355,356,357,358,359,360],"tindex":"615ef173-da48-11e4-bfdd-0925c9149588","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[42,272,273],"tindex":"615ef174-da48-11e4-bfdd-9dc8ae7ce32d","variableMapping":{"initializedCounter":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[361,362,363,45],"tindex":"615ef175-da48-11e4-bfdd-2b89c44ecbd5","variableMapping":{"numTiles":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[],"tindex":"615ef176-da48-11e4-bfdd-2bcc6d690eda","variableMapping":{"defaultUTurnCost":"maxSpeed","weight":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:336","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[265,364,365,366,367,368,369,370,326,327,328,329,46,330,331,332,333,335,48,336,337,338,339,340,341,342,343,344,345,346,371,6],"tindex":"615ef177-da48-11e4-bfdd-a10fb81914c4","variableMapping":{"eleDelta":"speed","decEleSum":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"615ef178-da48-11e4-bfdd-f948bbb9ce73","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[13],"tindex":"615f3f99-da48-11e4-bfdd-bdd90caea97b","variableMapping":{"size":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[58,62,63,14,70,72,75,81,84,87,91,151,152,21,159,161,164,170,173,176,180,183,187,188,28,195,197,200,206,209,212,216,218,221,225,226,35,233,235,238,244,247,250,254,258,266,269,372,361,362,42,272,273,373,374,375,376,377,378,363,278,282,283,288,290,7,8,9,300,301,302,303,304,12,317,320,347,348,349],"tindex":"615f3f9a-da48-11e4-bfdd-b3feb5e3568b","variableMapping":{"acceptBit":"backwardBit","ferryBit":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[280,289,8,9,12],"tindex":"615f3f9b-da48-11e4-bfdd-c15c92e54eb6","variableMapping":{"shift":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"615f3f9c-da48-11e4-bfdd-51169d1bd7c7","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"615f3f9d-da48-11e4-bfdd-b3070a743c04","variableMapping":{"newUniqueOsmId":"defaultValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, long)"},"status":-2},{"failures":[],"tindex":"615f3f9e-da48-11e4-bfdd-3f680c17dc61","variableMapping":{"byteCount":"allowed","longSegmentSize":"directionBitMask","segmentsToMap":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:120","type":"CtIfImpl","sourcecode":"if ((long % long) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"615f3f9f-da48-11e4-bfdd-1dd48f38207f","variableMapping":{"latSize":"indexDivisor","lonSize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:218","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"615f66b0-da48-11e4-bfdd-958580861917","variableMapping":{"mask":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[282,288,292,293,49,304,307,309,11],"tindex":"615f66b1-da48-11e4-bfdd-5796b5192081","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-1},{"failures":[],"tindex":"615f66b2-da48-11e4-bfdd-1578f81bd052","variableMapping":{"x1":"guess","sLon":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[50,53,58,61,62,63,66,68,69,70,15,16,75,77,17,78,80,81,83,19,20,84,86,91,100,110,112,114,115,116,258,266,280,281,282,283,284,285,286,288,289,290,291,292,7,8,9,293,294,295,296,49,297,298,299,300,302,303,304,305,306,307,308,309,10,11,310,12,325,326,327,328,330,331,47],"tindex":"615f66b3-da48-11e4-bfdd-e73792dc0513","variableMapping":{"numTiles":"b"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[52,275,13,45,277,8,300],"tindex":"615f66b4-da48-11e4-bfdd-0b7054a09752","variableMapping":{"originalEdgesCount":"shift","edgeDifference":"shift","contractedNeighbors":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[351,103,109,111,112,120,126,128,129,352,353,354,355,356,357,358,359,360,379],"tindex":"615f66b5-da48-11e4-bfdd-35e929461a98","variableMapping":{"angle":"midLon","com.graphhopper.util.AngleCalc.PI3_4":"maxLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[380,381],"tindex":"615f66b6-da48-11e4-bfdd-6357cef06e3c","variableMapping":{"capacity":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:203","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"615f66b7-da48-11e4-bfdd-6fb07ff0ebf7","variableMapping":{"high":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[53,54,58,61,62,63,14,64,65,66,67,68,69,70,73,15,74,16,75,77,17,18,78,79,81,83,19,20,84,85,86,87,89,90,91,92,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,256,258,266,280,281,282,283,284,285,286,287,288,289,290,291,292,7,8,9,293,294,295,296,49,297,298,299,300,301,302,303,304,305,306,307,308,309,10,11,310,12,325,326,327,328,330,331,47],"tindex":"615f66b8-da48-11e4-bfdd-4b7b2e18814d","variableMapping":{"retBucket":"lastEdgeIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[364,382,369],"tindex":"615f8dc9-da48-11e4-bfdd-bf634347b36d","variableMapping":{"cap":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[383,384,385,386,387,388,389,390,391,392,373,380,393,394,395,396,397,398,399,400,381,401,45,335,48,336,337,339,340,341,342,345,346,6],"tindex":"615f8dca-da48-11e4-bfdd-435c1525fa5c","variableMapping":{"versionHint":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"615f8dcb-da48-11e4-bfdd-f3f4c8bd6469","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"615f8dcc-da48-11e4-bfdd-3320903b316c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[402],"tindex":"615f8dcd-da48-11e4-bfdd-191abd2c894b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"615f8dce-da48-11e4-bfdd-59ade1411005","variableMapping":{"hasOther":"storing","hasRel":"storing"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[361,383,403,384,386,404,405,406,387,407,408,388,362,389,390,409,410,411,391,412,413,392,373,414,380,415,416,417,393,418,394,363,395,419,396,398,420,421,422,399,423,424,400,381,401,45,335,48,336,337,339,340,341,342,345,346,6],"tindex":"615f8dcf-da48-11e4-bfdd-63e9b58c203f","variableMapping":{"speedVal":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[402],"tindex":"615f8dd0-da48-11e4-bfdd-e9c72b1ec829","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[384,386,387,389,390,391,380,393,396,398,399],"tindex":"615f8dd1-da48-11e4-bfdd-e9b880660bbb","variableMapping":{"str":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:274","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.substring(0, ((java.lang.String.length()) - 2))) + \":\") + (java.lang.String.substring(((java.lang.String.length()) - 2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[],"tindex":"615f8dd2-da48-11e4-bfdd-23aa353fac72","variableMapping":{"res":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"615f8dd3-da48-11e4-bfdd-1b29c2c56c63","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[45],"tindex":"615f8dd4-da48-11e4-bfdd-8fa8b49ef677","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[425],"tindex":"615f8dd5-da48-11e4-bfdd-d9f8e1450bbd","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"615f8dd6-da48-11e4-bfdd-97b7d6786bd2","variableMapping":{"allBits":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":0},{"failures":[],"tindex":"615f8dd7-da48-11e4-bfdd-4b8ddf6593d6","variableMapping":{"this":"graph","index":"skippedEdge1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1126","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getRemovedNodes().add(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-2},{"failures":[3,335],"tindex":"615f8dd8-da48-11e4-bfdd-335db925145c","variableMapping":{"nodeId":"minutes","mainNodes":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[282,7,12],"tindex":"615fb4e9-da48-11e4-bfdd-2b63c447db6d","variableMapping":{"flags":"flags","tmpValue":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[51],"tindex":"615fb4ea-da48-11e4-bfdd-3bd296d43ffe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"615fb4eb-da48-11e4-bfdd-0d2d803af08c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[13],"tindex":"615fb4ec-da48-11e4-bfdd-3db4ab9ee1df","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"615fb4ed-da48-11e4-bfdd-2b6075c96e61","variableMapping":{"entries":"elem","lastEntry":"i","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:195","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"615fb4ee-da48-11e4-bfdd-291594058aed","variableMapping":{"size":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"615fb4ef-da48-11e4-bfdd-0784471cc635","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:78","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.Integer, java.lang.Integer> java.util.Map<java.lang.Integer, java.lang.Integer> = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks()"},"status":-2},{"failures":[55,58,59,65,94,95,96,97,98,99,100,101,105,106,107,108,110,113,114,115,116,117,118,119,122,123,124,125,127,130,131,132,133,134,135,136,426,427,428,429,154,172,183,184,190,208,430,431,432,433,218,221,222,228,246,434,435,299,303,304,307,325,326,327,328,329,46,330,331,332,47,333,335,48,336,337,338,339,340,341,342,343,344,345,346,6,349,350],"tindex":"615fb4f0-da48-11e4-bfdd-fb515f7ea906","variableMapping":{"foundIndex":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"615fb4f1-da48-11e4-bfdd-1bba686ab2b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"615fb4f2-da48-11e4-bfdd-c5b890031b77","variableMapping":{"intIndex":"tmp","len":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,14,64,65,66,67,68,69,70,71,72,73,15,74,16,75,76,77,17,18,78,79,80,81,82,83,19,20,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,142,143,144,145,146,147,149,150,436,428,437,438,439,440,441,442,2,161,172,182,183,184,185,186,187,188,28,189,190,191,192,193,194,195,196,197,198,29,199,30,200,201,202,31,32,203,204,205,206,207,208,33,34,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,35,227,228,229,230,231,232,233,234,235,236,36,237,37,238,239,240,38,39,241,242,243,244,245,246,40,41,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,42,271,4,5,272,273,274,275,13,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,7,8,9,293,294,295,296,49,297,298,299,300,301,302,303,304,305,306,307,308,309,10,11,310,12,311,312,313,313,314,314,315,315,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,324,325,326,327,328,329,46,330,331,332,47,333,334,335,48,336,337,338,339,340,341,342,343,344,345,346,6,347,348,349,350],"tindex":"615fb4f3-da48-11e4-bfdd-4d5b61e51969","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[383,386,380,395,398,381,443],"tindex":"615fdc04-da48-11e4-bfdd-d9e292c60fa6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[56,14,71,73,15,16,17,18,19,20,21,160,162,22,23,24,25,26,27,28,196,198,29,30,31,32,33,34,35,234,236,36,37,38,39,40,41,42,4,5,6],"tindex":"615fdc05-da48-11e4-bfdd-bd95c3b3e7b3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[],"tindex":"615fdc06-da48-11e4-bfdd-cbe7218f09ce","variableMapping":{"segmentSizeInBytes":"shift","indexDivisor":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[55,58,62,78,19,87,89,90,105,106,107,122,123,124,172,183,187,203,33,212,214,215,444,445,218,221,225,241,40,250,252,253,446,258,262,263,264,265,447,448,449,450,451,275,13,278,279,10,313,314,316,317,318,320,321,324,325,327,329,330,331,332,47,333,336,337,338,339,340,452,453,454],"tindex":"615fdc07-da48-11e4-bfdd-c57931172a7a","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[455],"tindex":"615fdc08-da48-11e4-bfdd-a1fc09461f36","variableMapping":{"str":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:434","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\\t\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[364,13],"tindex":"615fdc09-da48-11e4-bfdd-63c6ba4daaf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[361,403,405,406,407,362,410,411,412,417,418,363,419,421,422,423],"tindex":"615fdc0a-da48-11e4-bfdd-691c869fc9e5","variableMapping":{"orientation":"maxSpeed","resultOrientation":"maxSpeed","baseOrientation":"maxSpeed","java.lang.Math.PI":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"615fdc0b-da48-11e4-bfdd-f9300260322a","variableMapping":{"from":"indexDivisor","lonSize":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:300","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[58,62,63,14,70,72,81,84,87,91,151,152,21,159,161,170,173,176,180,183,187,188,28,195,197,206,209,212,216,218,221,225,226,35,233,235,244,247,250,254,266,269,42,272,273,280,282,283,288,289,290,7,8,9,296,298,301,303,304,12,317,320,48,6,347,348,349],"tindex":"615fdc0c-da48-11e4-bfdd-cde7d97cb20f","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"615fdc0d-da48-11e4-bfdd-7f65211e6c22","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,14,64,65,66,67,68,69,70,71,72,73,15,74,16,75,76,77,17,18,78,79,80,81,82,83,19,20,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,21,153,154,155,156,157,158,159,160,161,162,22,163,23,164,165,166,24,25,167,168,169,170,171,172,26,27,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,28,189,190,191,192,193,194,195,196,197,198,29,199,30,200,201,202,31,32,203,204,205,206,207,208,33,34,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,35,227,228,229,230,231,232,233,234,235,236,36,237,37,238,239,240,38,39,241,242,243,244,245,246,40,41,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,42,271,4,5,272,273,274,275,13,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,7,8,9,293,294,295,296,49,297,298,299,300,301,302,303,304,305,306,307,308,309,10,11,310,12,311,312,313,313,314,314,315,315,316,316,317,317,318,318,319,319,320,320,321,321,322,322,323,323,324,324,325,326,327,328,329,46,330,331,332,47,333,334,335,48,336,337,338,339,340,341,342,343,344,345,346,6,347,348,349,350],"tindex":"6160031e-da48-11e4-bfdd-2bd42203b166","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[456,264,457,458,459,278],"tindex":"6160031f-da48-11e4-bfdd-7f73450ce56f","variableMapping":{"dX":"angle","dY":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-1},{"failures":[],"tindex":"61600320-da48-11e4-bfdd-71bb9807c1c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"61600321-da48-11e4-bfdd-411723814657","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[460,461,462,463,464,465],"tindex":"61600322-da48-11e4-bfdd-8fbc57640c37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"61600323-da48-11e4-bfdd-41ca5763cd9d","variableMapping":{"tmp":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-2},{"failures":[],"tindex":"61600324-da48-11e4-bfdd-931216d6ab11","variableMapping":{"orientation":"len","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:100","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.toDegrees(double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[13],"tindex":"61600325-da48-11e4-bfdd-1bcbc81e419f","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","capacity":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"61600326-da48-11e4-bfdd-bb39081874e4","variableMapping":{"high":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"61600327-da48-11e4-bfdd-dba2a1a27b38","variableMapping":{"longSegmentSize":"mask","bufferStart":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[382],"tindex":"61602a38-da48-11e4-bfdd-a988024740e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"61602a39-da48-11e4-bfdd-39ddb97d7342","variableMapping":{"numTiles":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":0},{"failures":[],"tindex":"61602a3a-da48-11e4-bfdd-8d72b09898b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"61602a3b-da48-11e4-bfdd-ad804d3a3d0a","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[],"tindex":"61602a3c-da48-11e4-bfdd-c9cbe51a836c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:749","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-2},{"failures":[94,95,96,99,100,101,103,105,106,107,108,110,112,113,114,115,116,118,119,120,122,123,124,125,127,129,130,131,132,133,135,136,267,268,271,4,5,299,303,304,307,325,326,327,328,329,46,330,331,332,47,333,48,336,337,338,339,340,341,342,343,344,345,6,349,350],"tindex":"61602a3d-da48-11e4-bfdd-9debfbdfcef1","variableMapping":{"closestNode":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:126","type":"CtReturnImpl","sourcecode":"return (int) >= 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-1},{"failures":[],"tindex":"61602a3e-da48-11e4-bfdd-bf203c391ca0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[100,101,105,107,108,110,113,114,115,116,118,119,299,303,304,307,328,330],"tindex":"61602a3f-da48-11e4-bfdd-95b1ea3d98e5","variableMapping":{"length":"nodeB","factor":"nodeB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":308,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":314,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":55,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":364,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":152,"com.graphhopper.reader.OSMReaderTest.testFerry":335,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":269,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":270,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":385,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":415,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":106,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":326,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":456,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":399,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":234,"com.graphhopper.coll.CompressedArrayTest.testCompress":353,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":215,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":167,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":197,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":102,"com.graphhopper.util.AngleCalcTest.testOrientation":457,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":290,"com.graphhopper.GraphHopperTest.testPrepare":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":307,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":403,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":300,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":93,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":393,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":268,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":61,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":272,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":380,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":361,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":293,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":123,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":218,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":359,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":7,"com.graphhopper.GraphHopperTest.testLoadOSM":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":130,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":124,"com.graphhopper.reader.OSMReaderTest.testSort":337,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":407,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":4,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":222,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":210,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":183,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":178,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":320,"com.graphhopper.storage.RAMDataAccessTest.testHeader":435,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":334,"com.graphhopper.storage.MMapDataAccessTest.testHeader":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":249,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":82,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":433,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":193,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":219,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":396,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":225,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":392,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":412,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":110,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":30,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":296,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":295,"com.graphhopper.coll.OSMIDMapTest.testGetLong":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":237,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":227,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":76,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":58,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":17,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":459,"com.graphhopper.coll.CompressedArrayTest.testCompress2":352,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":362,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":235,"com.graphhopper.GraphHopperAPITest.testLoad":349,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":437,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":464,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":198,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":28,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":3,"com.graphhopper.storage.LevelGraphStorageTest.testClone":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":273,"com.graphhopper.reader.OSMReaderTest.testBarriers":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":155,"com.graphhopper.util.GHUtilityTest.testCopy":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":297,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":119,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":148,"com.graphhopper.routing.PathTest.testFindInstruction":279,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":35,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":44,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":266,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":88,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":419,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":211,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":247,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":37,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":286,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":156,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":186,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":2,"com.graphhopper.util.InstructionListTest.testWayList2":264,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":131,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":230,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":252,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":372,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":383,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":184,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":275,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":69,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":236,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":49,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":188,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":339,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":10,"com.graphhopper.coll.OSMIDMapTest.testGet":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":233,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":432,"com.graphhopper.routing.PathBidirRefTest.testExtract":311,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":402,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":404,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":449,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":114,"com.graphhopper.storage.RAMDataAccessTest.testCopy":434,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":26,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":373,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":460,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":136,"com.graphhopper.util.GHUtilityTest.testSort2":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":305,"com.graphhopper.reader.OSMReaderTest.testMain":336,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":38,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":360,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":115,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":81,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":223,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":72,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":16,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":91,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":73,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":363,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":428,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":77,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":346,"com.graphhopper.storage.StorablePropertiesTest.testStore":445,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":446,"com.graphhopper.storage.GraphHopperStorageTest.testClone":190,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":174,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":370,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":199,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":368,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":50,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":157,"com.graphhopper.routing.PathTest.testTime":277,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":411,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":89,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":66,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":25,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":80,"com.graphhopper.reader.OSMReaderTest.testRelation":443,"com.graphhopper.util.GHUtilityTest.testSortDirected":260,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":423,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":316,"com.graphhopper.GraphHopperTest.testFootOnly":47,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":414,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":0,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":109,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":164,"com.graphhopper.search.NameIndexTest.testCreate":454,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":313,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":429,"com.graphhopper.routing.QueryGraphTest.testOneWay":322,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":134,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":356,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":416,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":122,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":354,"com.graphhopper.reader.OSMReaderTest.testWithBounds":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":251,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":271,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":168,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":378,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":381,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":63,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":394,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":243,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":238,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":187,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":9,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":213,"com.graphhopper.util.InstructionListTest.testWayList":263,"com.graphhopper.GraphHopperAPITest.testDisconnected179":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":158,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":421,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":348,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":180,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":329,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":192,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":291,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":206,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":289,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":87,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":387,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":310,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":117,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":439,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":388,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":182,"com.graphhopper.routing.PathTest.testWayList":278,"com.graphhopper.storage.MMapDataAccessTest.testCopy":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":162,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":382,"com.graphhopper.coll.OSMIDMapTest.testGet2":448,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":12,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":431,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":242,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":201,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":376,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":231,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":75,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":112,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":465,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":389,"com.graphhopper.util.GHUtilityTest.testSort":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":171,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":379,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":406,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":462,"com.graphhopper.search.NameIndexTest.testPut":452,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":254,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":104,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":147,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":99,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":139,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":397,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":13,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":220,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":332,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":461,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":239,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":42,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":442,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":172,"com.graphhopper.routing.PathTest.testFound":276,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":45,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":333,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":86,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":455,"com.graphhopper.util.AngleCalcTest.testAtan2":458,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":52,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":405,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":36,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":453,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":161,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":195,"com.graphhopper.util.InstructionListTest.testEmptyList":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":375,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":418,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":463,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":306,"com.graphhopper.reader.PrinctonReaderTest.testRead":347,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":1,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":107,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":160,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":355,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":151,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":420,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":395,"com.graphhopper.reader.OSMReaderTest.testFoot":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":170,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":324,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":128,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":358,"com.graphhopper.reader.OSMReaderTest.testOneWay":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":129,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":29,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":34,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":248,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":417,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":166,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":285,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":351,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":292,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":369,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":283,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":274,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":163,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":315,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":185,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":371,"com.graphhopper.routing.PathBidirRefTest.testExtract2":312,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":440,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":132,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":150,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":391,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":208,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":141,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":413,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":341,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":181,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":422,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":125,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":209,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":68,"com.graphhopper.GraphHopperTest.testFootAndCar":46,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":203,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":390,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":309,"com.graphhopper.GraphHopperTest.testPrepareOnly":325,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":149,"com.graphhopper.GraphHopperTest.testVia":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":21,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":343,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":54,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":207,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":265,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":377,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":165,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":365,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":85,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":20,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":221}}]
