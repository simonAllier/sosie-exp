[{"failures":[],"tindex":"b5ac04a3-da6c-11e4-8bec-f57d9f83c36d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"tindex":"b5aec3c4-da6c-11e4-8bec-bbbef51669c1","variableMapping":{"shift":"shift","nodeBitMask":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"b5aec3c5-da6c-11e4-8bec-818f58ffffd3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"b5aeead6-da6c-11e4-8bec-39afc51ef2fc","variableMapping":{"sayText":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:450","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) <= 0)) {\n    return java.lang.String;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:742","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"status":0},{"failures":[],"tindex":"b5aeead7-da6c-11e4-8bec-39d858b0a708","variableMapping":{"bbox":"this","box":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"b5aeead8-da6c-11e4-8bec-cdf4bc100e88","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"b5aeead9-da6c-11e4-8bec-c365213531c6","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":0},{"failures":[157],"tindex":"b5aeeada-da6c-11e4-8bec-8d545ef018fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"b5aeeadb-da6c-11e4-8bec-09467d7e7309","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"b5aeeadc-da6c-11e4-8bec-75e0852413de","variableMapping":{"maxLat":"java.lang.Double.MAX_VALUE","bounds":"com.graphhopper.util.shapes.BBox.INVERSE","lat":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:182","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:46","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"b5aeeadd-da6c-11e4-8bec-e10ce89fe3f7","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,158,10,11,159,12,13,160,14,161,162,15,16,17,18,19,163,20,164,165,165,166,166,167,167,168,168,21,21,169,169,170,170,22,22,171,171,172,172,173,173,174,174,175,23,24,25,26,27,29,36,37,176,38,39,177,178,40,41,42,43,44,45,46,47,179,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,180,181,182,78,79,80,81,183,184,82,185,186,83,84,85,86,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,94],"tindex":"b5aeeade-da6c-11e4-8bec-69c97353546e","variableMapping":{"tmpNo":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"b5aeeadf-da6c-11e4-8bec-15cba3d685a5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"b5aeeae0-da6c-11e4-8bec-19fae69d964f","variableMapping":{"segmentSizePower":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:224","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":0},{"failures":[36,39,177],"tindex":"b5af11f1-da6c-11e4-8bec-b55599038e87","variableMapping":{"segmentSizeInBytes":"start","index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"b5af11f2-da6c-11e4-8bec-b7b66b5206a1","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edge":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,158,159,12,13,160,14,161,162,15,16,17,18,19,163,241,20,242,31,243,244,33,245,246,81],"tindex":"b5af11f3-da6c-11e4-8bec-97a8694ece0e","variableMapping":{"synched":"isRoundabout"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:74","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"b5af11f4-da6c-11e4-8bec-a3770fd9641b","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"b5af11f5-da6c-11e4-8bec-45e4f19c5356","variableMapping":{"edgeId":"minutes","nextEdge":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":0},{"failures":[3,6,45,48,50,51,52],"tindex":"b5af11f6-da6c-11e4-8bec-3d7be30e2126","variableMapping":{"edgeTo":"int1","edgeFrom":"int1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-2},{"failures":[],"tindex":"b5af11f7-da6c-11e4-8bec-7b57eef26069","variableMapping":{"edgeId":"endNode","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"endNode","nodeA":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[2,3,4,5,6,8,12,13,14,15,16,17,18,19,163,242,31,243,244,33,245,246,81],"tindex":"b5af11f8-da6c-11e4-8bec-8b9c19d741ac","variableMapping":{"hash":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[1,2,3,6,7,42,43,44,45,46,47,179,48,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,247],"tindex":"b5af11f9-da6c-11e4-8bec-6507565cfecb","variableMapping":{"capacity":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"b5af11fa-da6c-11e4-8bec-6b17ba8f48a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"b5affc5b-da6c-11e4-8bec-f93687ad730a","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":0},{"failures":[5,9,248,28,249,250,251,29,252,30,253,254,255,256,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,193,199,215,240,87,88,89,257,90,91,258,259,92,93,260,94,261,262,263,264,95,265,96,266,267,268,269,270,97,271,98,272,273,99,274,100,101,275,276,277,102,278,103,279,280,281,104,282,283,284,105,285,286,287,288,106,107,108,289,109,110,290,291,111,112,292,113,293,294,295,296,114,297,115,298,299,300,301,302,116,303,117,304,305,118,306,119,120,307,308,309,121,310,122,311,312,123,313,314,315,316,124,125,126,317,127,128,318,319,129,130,320,131,321,322,323,324,132,325,133,326,327,328,329,330,134,331,135,332,333,136,334,137,138,335,336,337,139,338,339,140,340,341,342,343,141,142,143,344,144,145,345,346,146,147,347,148,348,349,350,351,149,352,150,353,354,355,356,357,151,358,152,359,360,153,361,154,155,362,363,364,156,365],"tindex":"b5b0e6bc-da6c-11e4-8bec-1d2ae2b45e77","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[],"tindex":"b5b0e6bd-da6c-11e4-8bec-8db6428d8733","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"b5b0e6be-da6c-11e4-8bec-f1a037f2665b","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"b5b0e6bf-da6c-11e4-8bec-bb8e2ec97b7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[36,39],"tindex":"b5b0e6c0-da6c-11e4-8bec-2bc8575699f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,158,159,12,13,160,14,161,162,15,16,17,18,19,163,241,20,242,31,243,244,33,245,246,81],"tindex":"b5b0e6c1-da6c-11e4-8bec-0d457a450bfd","variableMapping":{"eleDelta":"speed","decEleSum":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"b5b0e6c2-da6c-11e4-8bec-f1644877c228","variableMapping":{"max":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[20,176],"tindex":"b5b0e6c3-da6c-11e4-8bec-c54fdaa8cbe1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[],"tindex":"b5b0e6c4-da6c-11e4-8bec-05b58ee52a12","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"b5b0e6c5-da6c-11e4-8bec-2fa298ceac48","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxCount","nextEdge":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:794","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-2},{"failures":[],"tindex":"b5b0e6c6-da6c-11e4-8bec-19b25a4ff7c4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"b5b10dd7-da6c-11e4-8bec-6d050c420dee","variableMapping":{"key":"com.graphhopper.routing.util.EncodingManager.BIKE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[157],"tindex":"b5b10dd8-da6c-11e4-8bec-954006a12f1b","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:424","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[366],"tindex":"b5b10dd9-da6c-11e4-8bec-b74a50e3db57","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"b5b10dda-da6c-11e4-8bec-7fa7bd8007f8","variableMapping":{"midLat":"orientation","lat":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"b5b10ddb-da6c-11e4-8bec-a580e7f6a9e0","variableMapping":{"calcMean":"finishedTo","eleCalcMean":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:75","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382],"tindex":"b5b10ddc-da6c-11e4-8bec-e7307f015a17","variableMapping":{"str":"highway","lon":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:203","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    java.lang.String += \"E\";\nelse\n    java.lang.String += \"W\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[246],"tindex":"b5b10ddd-da6c-11e4-8bec-e7589654a756","variableMapping":{"shift":"flags","tmpValue":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[94,113,131,148,383],"tindex":"b5b10dde-da6c-11e4-8bec-6b7f6836969b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[384,385,386,387,388,389,390,391,392,393,200,206,208,209,394,225,231,233,234],"tindex":"b5b10ddf-da6c-11e4-8bec-df42c147cb83","variableMapping":{"orientation":"maxLonTmp","resultOrientation":"minLatTmp","baseOrientation":"minLatTmp","java.lang.Math.PI":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"b5b10de0-da6c-11e4-8bec-85abe6789d27","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"b5b10de1-da6c-11e4-8bec-9985dc47c2ac","variableMapping":{"dist":"minLon","com.graphhopper.util.DistanceCalcEarth.R":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[157],"tindex":"b5b10de2-da6c-11e4-8bec-eda28b4dbe66","variableMapping":{"message":"str","hash":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:82","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + ((this.java.lang.String) != null ? this.java.lang.String.hashCode() : 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"b5b10de3-da6c-11e4-8bec-375d6d0a46fe","variableMapping":{"acceptBit":"ferryBit","ferryBit":"acceptBit","ferries":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"b5b10de4-da6c-11e4-8bec-b9550d9f242a","variableMapping":{"a_lat_deg":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:223","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":0},{"failures":[],"tindex":"b5b10de5-da6c-11e4-8bec-836d7ed582f1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-2},{"failures":[],"tindex":"b5b10de6-da6c-11e4-8bec-8bb6d241d149","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[395,248,250,251,29,252,30,253,254,255,256,396,397,242,31,398,399,32,243,244,33,400,34,401,35,402,245,403,404,373,405,374,406,407,408,409,410,411,412,413,375,376,414,415,416,377,417,418,419,178,40,420,378,421,379,422,423,424,425,426,427,428,429,380,381,430,431,432,382,433,434,435],"tindex":"b5b134f7-da6c-11e4-8bec-91b32bc20268","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"b5b134f8-da6c-11e4-8bec-c3c327de8f87","variableMapping":{"tmpDegreeCounter":"includeWay"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[],"tindex":"b5b134f9-da6c-11e4-8bec-db8e79c3c1c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"b5b134fa-da6c-11e4-8bec-f3462a43f75b","variableMapping":{"high":"relBitMask","len":"relBitMask","start":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"b5b134fb-da6c-11e4-8bec-c71f5cfc7f9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[0,158],"tindex":"b5b134fc-da6c-11e4-8bec-5ba7f72a9c1c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[],"tindex":"b5b134fd-da6c-11e4-8bec-d5dcc5a097f4","variableMapping":{"value":"x2","numberOfBits":"y2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"b5b134fe-da6c-11e4-8bec-010ca87274be","variableMapping":{"com.graphhopper.storage.DAType.MMAP":"type","type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:166","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":0},{"failures":[2,4,5,8,9,165,166,168,21,169,170,22,171,172,174,61,63,67,68,71,77,436],"tindex":"b5b134ff-da6c-11e4-8bec-2dfb26da9b8c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-1},{"failures":[],"tindex":"b5b13500-da6c-11e4-8bec-a5214502d5f0","variableMapping":{"da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"b5b13501-da6c-11e4-8bec-1934a4f5fb8e","variableMapping":{"intVal":"valueIfKeyNotFound"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"b5b13502-da6c-11e4-8bec-e712c202a733","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"b5b13503-da6c-11e4-8bec-a317d9a2ddcf","variableMapping":{"java.lang.Double.NaN":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"b5b13504-da6c-11e4-8bec-e16df7e3c003","variableMapping":{"heights":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:77","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"b5b13505-da6c-11e4-8bec-7b9d1b9524e0","variableMapping":{"value":"value","numberOfBits":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-2},{"failures":[405,421],"tindex":"b5b13506-da6c-11e4-8bec-ff2a1c6a6bd5","variableMapping":{"graphHopperFolder":"highway","removeZipped":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:664","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    throw new java.lang.IllegalArgumentException(\"To import an osm file you need to use importOrLoad\");\n} else if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException java.io.IOException) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[367,437,438,439,403,440,373,407,408,418,378,423,424,434],"tindex":"b5b15c17-da6c-11e4-8bec-d3050917b8ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"b5b15c18-da6c-11e4-8bec-a3b6c6eb6f6f","variableMapping":{"val":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:769","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[15,164,441,401,409,425],"tindex":"b5b15c19-da6c-11e4-8bec-e7a877371d61","variableMapping":{"edgeId":"maxTurnCosts","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"maxTurnCosts","nodeA":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[],"tindex":"b5b15c1a-da6c-11e4-8bec-a5bf2e60bceb","variableMapping":{"r":"r","angle":"absY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:43","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"status":-2},{"failures":[],"tindex":"b5b15c1b-da6c-11e4-8bec-6d025ba2165c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[405,421],"tindex":"b5b1aa3c-da6c-11e4-8bec-956cbe3f02c7","variableMapping":{"ghLocation":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[159,163,20,33],"tindex":"b5b1aa3d-da6c-11e4-8bec-61d5671e25aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"b5b1aa3e-da6c-11e4-8bec-277ba198f8ad","variableMapping":{"maxLat":"minLat","minLat":"minLat","bbox":"bbox"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"b5b1aa3f-da6c-11e4-8bec-f3f86d60fb09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[249],"tindex":"b5b1aa40-da6c-11e4-8bec-45d351a77a42","variableMapping":{"orientation":"speed","resultOrientation":"speed","baseOrientation":"speed","java.lang.Math.PI":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[14,161,17,442,443,250,396,398,444,411,427],"tindex":"b5b1aa41-da6c-11e4-8bec-bdccbfcbdabd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"b5b1aa42-da6c-11e4-8bec-2f7a7074c55b","variableMapping":{"towerNodeDistance":"incDist2DSum","zeroCounter":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:740","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    (long)++;\n    double = 1.0E-4;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":0},{"failures":[],"tindex":"b5b1aa43-da6c-11e4-8bec-df09543650c3","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:414","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[],"tindex":"b5b1aa44-da6c-11e4-8bec-f39b83e1d204","variableMapping":{"eIter":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:282","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[445,437,446,403,447,406,408,416,422,424,432],"tindex":"b5b1aa45-da6c-11e4-8bec-011489cd1253","variableMapping":{"str":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:520","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"b5b1aa46-da6c-11e4-8bec-db319f668841","variableMapping":{"maxLeafEntries":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"b5b1aa47-da6c-11e4-8bec-a16bede1b996","variableMapping":{"time":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"b5b1d158-da6c-11e4-8bec-97cc657874ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[40],"tindex":"b5b1d159-da6c-11e4-8bec-9977c6deffaf","variableMapping":{"hash":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[281,301],"tindex":"b5b1d15a-da6c-11e4-8bec-656bc506b1c8","variableMapping":{"tmpNo":"I_SKIP_EDGE2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[448,449,450,451,452,453,410,414,417,426,430,433],"tindex":"b5b1d15b-da6c-11e4-8bec-69705c4c4970","variableMapping":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"b5b1d15c-da6c-11e4-8bec-9f4faeb10529","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":0},{"failures":[450,453,417,433],"tindex":"b5b1d15d-da6c-11e4-8bec-23d24d6210ad","variableMapping":{"acceptedRailways":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[0,1,2,3,6,7,9,10,11,395,454,455,456,164,457,458,459,460,165,165,166,166,167,167,168,168,21,21,169,169,170,170,22,22,171,171,172,172,173,173,174,174,175,23,24,25,26,27,29,36,37,176,38,39,177,178,40,41,42,43,44,45,46,47,179,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,180,181,182,78,79,80,81,183,184,82,185,186,83,84,85,86,187,461,462,463,464,465,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,466,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,94,98,280,284,286,288,113,117,312,314,316,131,135,339,341,343,148,152,467,468],"tindex":"b5b1f86e-da6c-11e4-8bec-2df03596043a","variableMapping":{"k":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"graphhopper.\".length())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":-1},{"failures":[],"tindex":"b5b1f86f-da6c-11e4-8bec-67cb99e5a359","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"b5b1f870-da6c-11e4-8bec-95bcf898dfb3","variableMapping":{"speed":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = 30"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":0},{"failures":[20,176,38,283,108,292,293,294,298,304,305,126,320,321,322,326,332,333,143,347,348,349,353,359,360,469],"tindex":"b5b1f871-da6c-11e4-8bec-fde70b314f95","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[470,366],"tindex":"b5b1f872-da6c-11e4-8bec-9bdfb2bbc9ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:152","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"b5b1f873-da6c-11e4-8bec-b9ec38c83710","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"b5b1f874-da6c-11e4-8bec-5de759f43879","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"b5b1f875-da6c-11e4-8bec-05f8213ac4c3","variableMapping":{"size":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":72,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":166,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":246,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":282,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":88,"com.graphhopper.reader.OSMReaderTest.testFerry":159,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":83,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":407,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":228,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":320,"com.graphhopper.coll.CompressedArrayTest.testCompress":393,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":364,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":45,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":268,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":50,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":41,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":64,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":78,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":216,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":447,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":181,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":225,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":403,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":62,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":203,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":337,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":122,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":389,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":53,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":210,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":204,"com.graphhopper.reader.OSMReaderTest.testSort":160,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":377,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":313,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":361,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":140,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":276,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":22,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":137,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":303,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":346,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":311,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":422,"com.graphhopper.reader.OSMNodeTest.testSetTags":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":124,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":370,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":232,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":351,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":68,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":223,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":58,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":108,"com.graphhopper.coll.OSMIDMapTest.testGetLong":464,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":327,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":297,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":105,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":298,"com.graphhopper.coll.CompressedArrayTest.testCompress2":392,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":354,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":367,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":131,"com.graphhopper.GraphHopperAPITest.testLoad":86,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":288,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":250,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":348,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":143,"com.graphhopper.storage.LevelGraphStorageTest.testClone":109,"com.graphhopper.reader.OSMReaderTest.testBarriers":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":177,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":61,"com.graphhopper.util.GHUtilityTest.testCopy":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":240,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":449,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":453,"com.graphhopper.routing.PathTest.testFindInstruction":25,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":126,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":85,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":254,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":307,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":379,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":154,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":136,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":47,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":430,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":28,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":258,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":342,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":383,"com.graphhopper.util.InstructionListTest.testWayList2":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":211,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":406,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":178,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":340,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":409,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":321,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":60,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":142,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":74,"com.graphhopper.coll.OSMIDMapTest.testGet":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":130,"com.graphhopper.routing.PathBidirRefTest.testExtract":26,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":255,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":412,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":272,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":439,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":411,"com.graphhopper.util.GHUtilityTest.testSort2":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":69,"com.graphhopper.reader.OSMReaderTest.testMain":13,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":413,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":390,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":237,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":417,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":116,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":314,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":113,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":296,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":121,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":21,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":293,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":378,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":115,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":163,"com.graphhopper.storage.GraphHopperStorageTest.testClone":144,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":274,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":33,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":243,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":350,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":103,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":259,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":281,"com.graphhopper.routing.PathTest.testTime":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":369,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":308,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":110,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":402,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":466,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":267,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":302,"com.graphhopper.reader.OSMReaderTest.testRelation":395,"com.graphhopper.util.GHUtilityTest.testSortDirected":186,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":382,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":168,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":218,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":399,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":95,"com.graphhopper.search.NameIndexTest.testCreate":460,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":165,"com.graphhopper.routing.QueryGraphTest.testOneWay":172,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":202,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":384,"com.graphhopper.reader.OSMReaderTest.testWithBounds":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":433,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":37,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":335,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":269,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":107,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":448,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":431,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":32,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":132,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":141,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":55,"com.graphhopper.util.InstructionListTest.testWayList":79,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":362,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":410,"com.graphhopper.GraphHopperAPITest.testDisconnected179":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":92,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":380,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":415,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":345,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":51,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":404,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":49,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":416,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":76,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":343,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":419,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":339,"com.graphhopper.routing.PathTest.testWayList":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":261,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":398,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":157,"com.graphhopper.coll.OSMIDMapTest.testGet2":462,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":77,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":118,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":454,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":414,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":352,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":251,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":319,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":114,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":427,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":470,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":445,"com.graphhopper.util.GHUtilityTest.testSort":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":271,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":391,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":444,"com.graphhopper.search.NameIndexTest.testPut":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":316,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":344,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":226,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":221,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":423,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":40,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":194,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":312,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":443,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":455,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":325,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":36,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":98,"com.graphhopper.routing.PathTest.testFound":175,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":158,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":249,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":119,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":280,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":375,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":322,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":247,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":459,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":94,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":147,"com.graphhopper.util.InstructionListTest.testEmptyList":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":63,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":397,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":372,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":396,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":70,"com.graphhopper.reader.PrinctonReaderTest.testRead":10,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":229,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":260,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":385,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":87,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":428,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":452,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":441,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":421,"com.graphhopper.reader.OSMReaderTest.testFoot":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":97,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":174,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":456,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":208,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":309,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":388,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":451,"com.graphhopper.reader.OSMReaderTest.testOneWay":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":209,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":349,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":360,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":371,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":96,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":46,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":197,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":29,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":263,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":167,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":241,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":341,"com.graphhopper.routing.PathBidirRefTest.testExtract2":27,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":469,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":54,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":446,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":457,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":438,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":15,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":278,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":381,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":205,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":153,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":291,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":34,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":355,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":437,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":90,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":401,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":127,"com.graphhopper.storage.StorablePropertiesTest.testLoad":467,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":73,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":192,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":89,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":17,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":104,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":81,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":358,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":30,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":265,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":245,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":306,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":305,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":123}}]
