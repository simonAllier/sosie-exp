[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"b18a5621-db74-11e4-967b-a1c67f88b39d","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"b18bdcc2-db74-11e4-967b-5b35a6f9b71c","variableMapping":{"logMessagesPercentage":"java.lang.Double.MAX_VALUE","logMessages":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"b18bdcc3-db74-11e4-967b-e3213e3cf69d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,26,27,28,29,31,32],"tindex":"b18bdcc4-db74-11e4-967b-2f708d8495f2","variableMapping":{"towerNodeDistance":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[33,11,34,35],"tindex":"b18bdcc5-db74-11e4-967b-e1e4f3be1e03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"b18bdcc6-db74-11e4-967b-8d4b92415aee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:87","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.pollFirstEntry().getKey()"},"status":-2},{"failures":[36,37,38,10,12,39,40,41,42,43],"tindex":"b18bdcc7-db74-11e4-967b-a343577822e2","variableMapping":{"java.lang.Double.NaN":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:104","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"b18bdcc8-db74-11e4-967b-3197a4907780","variableMapping":{"i":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"b18bdcc9-db74-11e4-967b-95471b4bec9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"b18bdcca-db74-11e4-967b-a3b8116e9629","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"b18bdccb-db74-11e4-967b-4d9c13d30871","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"b18bdccc-db74-11e4-967b-af6fc6281bb7","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"b18c03dd-db74-11e4-967b-2f23325bd03d","variableMapping":{"currentBucket":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:70","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"b18c03de-db74-11e4-967b-a5b167047269","variableMapping":{"edgeKey1":"maxTurnCosts","edgeKey2":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:521","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[],"tindex":"b18c03df-db74-11e4-967b-95bb53c76dfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"b18c03e0-db74-11e4-967b-7f38b02d40eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.isBool(long, int);\n}"},"status":-2},{"failures":[],"tindex":"b18c03e1-db74-11e4-967b-7528a3752482","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"high","edge":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b18c03e2-db74-11e4-967b-05a41099b2dc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[33,1,3,11,34,35],"tindex":"b18c03e3-db74-11e4-967b-b746dccd7c0a","variableMapping":{"closed":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"b18c03e4-db74-11e4-967b-95c6d9087bae","variableMapping":{"distance":"durationInHours","speed":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"b18c03e5-db74-11e4-967b-7f8fcf977f9b","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"b18c03e6-db74-11e4-967b-7b2868481552","variableMapping":{"err":"child","dLat":"i","tmpErr":"size","x1":"child","sLon":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b18c03e7-db74-11e4-967b-49c15668f2bf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[44],"tindex":"b18c03e8-db74-11e4-967b-cb6963361b0b","variableMapping":{"foundIndex":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1016","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":-1},{"failures":[44],"tindex":"b18c03e9-db74-11e4-967b-bdd5b31927e6","variableMapping":{"tmp":"hash","initializedCounter":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[45],"tindex":"b18c03ea-db74-11e4-967b-59ed645f201f","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"b18c03eb-db74-11e4-967b-f31454c013d5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"b18c2afc-db74-11e4-967b-15796a6c7f95","variableMapping":{"size":"segmentSizePower","capacity":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":0},{"failures":[],"tindex":"b18c2afd-db74-11e4-967b-07344cad6b69","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[46],"tindex":"b18c2afe-db74-11e4-967b-cbf9aa9813e4","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"b18c2aff-db74-11e4-967b-ed1a7208cfd8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"b18c2b00-db74-11e4-967b-593a769f7d4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,36,75,76,77,78,79,80,81,82,83,84,85,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,43,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,24,185,186,187,188,189,25,190,26,27,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,29,207,208,209,210,211,30,212,31,32,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408],"tindex":"b18c2b01-db74-11e4-967b-bb3a53c503a8","variableMapping":{"cp":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[409,410,411],"tindex":"b18c5212-db74-11e4-967b-81a456015fd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"b18c5213-db74-11e4-967b-b9dcfd409cc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[62,63,36,76],"tindex":"b18c5214-db74-11e4-967b-c14c6d38db25","variableMapping":{"flags":"includeWay","nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"b18c5215-db74-11e4-967b-4723133be812","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:340","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[],"tindex":"b18c5216-db74-11e4-967b-8bead4f2e8fb","variableMapping":{"minLon":"d2","maxLon":"d1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:94","type":"CtIfImpl","sourcecode":"if ((double) >= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[],"tindex":"b18c5217-db74-11e4-967b-7de3d7827c96","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[106,109,225,236,242,250,251,280,291,297,305,306,326,337,343,351,352,370,381,387,395,396],"tindex":"b18c5218-db74-11e4-967b-1b96f136e1ab","variableMapping":{"cap":"low"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"b18c5219-db74-11e4-967b-8167fb451c02","variableMapping":{"precision":"r","lat":"x"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":-2},{"failures":[412,413,33,3,11,414,415,34,416,417,35],"tindex":"b18c521a-db74-11e4-967b-8d72b92151d8","variableMapping":{"com.graphhopper.routing.AlgorithmOptions.ASTAR":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:192","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AlgorithmOptions.java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-1},{"failures":[418,412,413,419,420,421,422,33,38,423,424,425,426,2,3,4,6,7,8,11,12,14,427,428,429,414,415,430,431,432,433,34,40,434,435,436,437,438,416,417,439,440,441,442,35,42,443,444],"tindex":"b18c521b-db74-11e4-967b-3f096c023c47","variableMapping":{"tmpDegreeCounter":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[106,109,225,233,235,236,238,242,243,250,251,271,280,288,290,291,293,297,298,305,306,326,334,336,337,339,343,344,351,352,370,378,380,381,383,387,388,395,396],"tindex":"b18c521c-db74-11e4-967b-8d1cdca65a21","variableMapping":{"turnCostIndex":"mSize","nextTurnCostIndex":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[47,49,50,51,52,53,55,56,57,58,64,65,67,68,84,85,86,88,94,95,98,101,102,148,155,156,157,43,160,168,169,170,171,172,186,188,208,210,249,270,273,278,299,305,310,312,313,316,319,324,345,351,356,358,359,363,368,389,395,400,402,403,445,446,406],"tindex":"b18c521d-db74-11e4-967b-858f9fdd288b","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edgeTo":"length","edgeFrom":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"b18c521e-db74-11e4-967b-13aae93dc10d","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[],"tindex":"b18c792f-db74-11e4-967b-53c93c5990ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[425],"tindex":"b18c7930-db74-11e4-967b-49b81b9e726c","variableMapping":{"nodeId":"flags","nodeIdOffset":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:122","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.EncodedValue.getValue(long))"},"status":-1},{"failures":[],"tindex":"b18c7931-db74-11e4-967b-cb82d43252b6","variableMapping":{"is3D":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Cannot add point without elevation data in 3D mode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-2},{"failures":[69,447,13,448,449,450,451],"tindex":"b18c7932-db74-11e4-967b-79536d37fb1c","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[412,413,33,3,11,414,415,34,416,417,35],"tindex":"b18c7933-db74-11e4-967b-b95b3bfcacd6","variableMapping":{"com.graphhopper.util.Constants.VERSION_LOCATION_IDX":"wayType","com.graphhopper.util.Constants.VERSION_GEOMETRY":"wayType","com.graphhopper.util.Constants.VERSION_EDGE":"wayType","com.graphhopper.util.Constants.VERSION_NAME_IDX":"wayType","com.graphhopper.util.Constants.VERSION_NODE":"wayType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:67","type":"CtReturnImpl","sourcecode":"return ((((((((com.graphhopper.util.Constants.int) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-1},{"failures":[],"tindex":"b18c7934-db74-11e4-967b-57646c418ef8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[109],"tindex":"b18c7935-db74-11e4-967b-b391b5da1c7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"b18c7936-db74-11e4-967b-9d386ec5c82b","variableMapping":{"entries":"elem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:187","type":"CtLocalVariableImpl","sourcecode":"int int = int[][0]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[],"tindex":"b18c7937-db74-11e4-967b-95fb6ec9b61c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"b18c7938-db74-11e4-967b-17d92646cc2b","variableMapping":{"nodeB":"length","edgeId":"com.graphhopper.coll.SparseIntIntArray.DELETED","reverse":"mGarbage","nodeA":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:510","type":"CtIfImpl","sourcecode":"if (boolean)\n    return int > int ? int : int + 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-2},{"failures":[412,413,33,3,11,414,415,34,416,417,35],"tindex":"b18c7939-db74-11e4-967b-afe65a583696","variableMapping":{"i":"paveType","to":"paveType","lonSize":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"b18c793a-db74-11e4-967b-4b2748be3137","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[109,225,235,236,242,250,251,280,290,291,297,305,306,326,336,337,343,351,352,370,380,381,387,395,396],"tindex":"b18c793b-db74-11e4-967b-65a77451da67","variableMapping":{"tmp":"key","initializedCounter":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[],"tindex":"b18c793c-db74-11e4-967b-899350c939f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"b18c793d-db74-11e4-967b-bff1f7807580","variableMapping":{"pos":"shift","mSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"b18ca04e-db74-11e4-967b-cf801d9014f7","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[106,109,225,233,235,236,238,242,243,250,251,280,288,290,291,293,297,298,305,306,326,334,336,337,339,343,344,351,352,370,378,380,381,383,387,388,395,396],"tindex":"b18ca04f-db74-11e4-967b-751c720db5db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[452,453,454,5,455,456],"tindex":"b18ca050-db74-11e4-967b-698f12690694","variableMapping":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"b18ca051-db74-11e4-967b-2bc490effed9","variableMapping":{"flags":"includeWay","mask":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":0},{"failures":[47,52,57,58,62,63,68,36,76],"tindex":"b18ca052-db74-11e4-967b-41c9d71ad793","variableMapping":{"shiftSum":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[47,49,51,53,55,56,57,58,64,65,66,67,68,84,85,86,87,88,90,91,92,94,95,98,101,102,112,113,148,155,156,157,43,160,168,169,170,171,172,186,187,188,208,209,210,249,270,273,278,299,305,310,312,313,316,319,324,345,351,356,358,359,363,368,389,395,400,402,403,445,446,406],"tindex":"b18ca053-db74-11e4-967b-eb17005c42c6","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"b18ca054-db74-11e4-967b-8b313ac7e6ed","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"b18ca055-db74-11e4-967b-3b238a9caeb0","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"b18ca056-db74-11e4-967b-770432d86e6a","variableMapping":{"bits":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-2},{"failures":[49,63,76,457,458],"tindex":"b18ca057-db74-11e4-967b-e7d8c11dd8b9","variableMapping":{"forwardBit":"directionBitMask","way":"way","encoded":"encoded","backwardBit":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:589","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:239","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[15,16,459,17,18,19,20,21,460,137,22,23,24,25,26,27,28,29,30,31,32],"tindex":"b18e9c28-db74-11e4-967b-4f69e4681e34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"b18e9c29-db74-11e4-967b-d395812d88b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":0},{"failures":[459,18],"tindex":"b18e9c2a-db74-11e4-967b-533cdc9d6fd5","variableMapping":{"pointer":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[461],"tindex":"b18ec33b-db74-11e4-967b-3d82c22d9d27","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[15,16,459,17,462,18,19,22,23],"tindex":"b18ec33c-db74-11e4-967b-6f0b66b2e409","variableMapping":{"resultOrientation":"lat","orientation":"lat","java.lang.Math.PI":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"b18ec33d-db74-11e4-967b-1fa41e807c48","variableMapping":{"cap":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"b18ec33e-db74-11e4-967b-9356dd60f747","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"status":-1},{"failures":[47,49,50,51,52,53,55,56,57,58,64,65,66,67,68,84,85,86,87,88,90,91,92,94,95,98,101,102,112,113,148,155,156,157,43,160,168,169,170,171,172,186,187,188,208,209,210,249,270,273,278,299,305,310,312,313,316,319,324,345,351,356,358,359,363,368,389,395,400,402,403,445,446,406],"tindex":"b18ec33f-db74-11e4-967b-d9388f4562f0","variableMapping":{"size":"bufferIndex","from":"index","end":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:287","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"b18ec340-db74-11e4-967b-2dafddb2ca70","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"tmpPrevEdge","edge":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-2},{"failures":[],"tindex":"b18ec341-db74-11e4-967b-a95df4921f8f","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[71,463,464],"tindex":"b18ec342-db74-11e4-967b-2dcd5ab2000f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[465],"tindex":"b18ec343-db74-11e4-967b-a97a01f034f0","variableMapping":{"tmpNo":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"b18ec344-db74-11e4-967b-dfce5e7f1fb3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[412,413,33,3,11,414,34,416,35],"tindex":"b18ec345-db74-11e4-967b-85c05fd1c7bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[],"tindex":"b18ec346-db74-11e4-967b-8fc0e80886f5","variableMapping":{"lastIndex":"key","fromIndex":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[71,463,3,428,415,437,417],"tindex":"b18ec347-db74-11e4-967b-17a851128033","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[49,36,461,466,467,448,450,468,43],"tindex":"b18ec348-db74-11e4-967b-83d5e5ef7297","variableMapping":{"lat":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-1},{"failures":[49,50,51,52,53,56,63,64,66,69,70,72,73,74,36,461,457,466,467,458,469,468,43],"tindex":"b18ec349-db74-11e4-967b-e166f4065abf","variableMapping":{"bits":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"b18ec34a-db74-11e4-967b-cfa40c4d29d9","variableMapping":{"osmId":"hash","com.graphhopper.reader.OSMReader.TOWER_NODE":"i","tmpNode":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:665","type":"CtIfImpl","sourcecode":"if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n    throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"b18eea5b-db74-11e4-967b-e53458367421","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"b18f116c-db74-11e4-967b-8f0f812d198f","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"flags","roundaboutBit":"flags","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","forwardBit":"flags","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[],"tindex":"b18f116d-db74-11e4-967b-0be6fa73cf62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"b18f116e-db74-11e4-967b-d9afeb5cea32","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[48,49,50,51,52,53,55,56,58,63,64,65,66,68,69,70,72,73,74,36,75,76,461,470,46,466,458,469],"tindex":"b18f387f-db74-11e4-967b-bb62a0a9e717","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[76,108,109,225,238,242,243,250,251,280,293,297,298,305,306,326,339,343,344,351,352,370,383,387,388,395,396],"tindex":"b18f3880-db74-11e4-967b-21e5310795e5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-1},{"failures":[],"tindex":"b18f3881-db74-11e4-967b-c5582095259e","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"b18f3882-db74-11e4-967b-2595db658e10","variableMapping":{"lastIndex":"allBits","fromIndex":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[69],"tindex":"b18f3883-db74-11e4-967b-8b492f5b18f3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":304,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":146,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":270,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":468,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":224,"com.graphhopper.reader.OSMReaderTest.testFerry":62,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":163,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":164,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":448,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":4,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":209,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":48,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":334,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":78,"com.graphhopper.coll.CompressedArrayTest.testCompress":23,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":10,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":403,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":118,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":244,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":206,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":124,"com.graphhopper.GraphHopperTest.testPrepare":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":114,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":386,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":138,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":155,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":153,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":110,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":427,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":130,"com.graphhopper.coll.BitSetImplTest.testCopy":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":136,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":378,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":187,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":415,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":316,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":20,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":278,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":410,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":127,"com.graphhopper.GraphHopperTest.testLoadOSM":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":188,"com.graphhopper.reader.OSMReaderTest.testSort":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":40,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":73,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":320,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":398,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":363,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":257,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":94,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":355,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":303,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":375,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":317,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":416,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":424,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":38,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":212,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":142,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":205,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":211,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":132,"com.graphhopper.coll.OSMIDMapTest.testGetLong":171,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":280,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":344,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":295,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":273,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":297,"com.graphhopper.coll.CompressedArrayTest.testCompress2":22,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":388,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":418,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":335,"com.graphhopper.GraphHopperAPITest.testLoad":166,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":277,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":453,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":380,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":370,"com.graphhopper.storage.LevelGraphStorageTest.testClone":282,"com.graphhopper.reader.OSMReaderTest.testBarriers":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":325,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":135,"com.graphhopper.util.GHUtilityTest.testCopy":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":228,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":218,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":7,"com.graphhopper.routing.PathTest.testFindInstruction":102,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":326,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":409,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":165,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":311,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":438,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":399,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":384,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":353,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":120,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":339,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":229,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":366,"com.graphhopper.util.InstructionListTest.testWayList2":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":443,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":192,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":404,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":414,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":112,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":364,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":286,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":238,"com.graphhopper.storage.RAMDirectoryTest.testSynched":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":336,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":134,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":369,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":148,"com.graphhopper.coll.OSMIDMapTest.testGet":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":333,"com.graphhopper.routing.PathBidirRefTest.testExtract":103,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":170,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":361,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":250,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":455,"com.graphhopper.util.GHUtilityTest.testSort2":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":143,"com.graphhopper.reader.OSMReaderTest.testMain":64,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":274,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":343,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":431,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":21,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":449,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":461,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":321,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":289,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":293,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":314,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":426,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":91,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":436,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":296,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":36,"com.graphhopper.storage.StorablePropertiesTest.testStore":406,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":446,"com.graphhopper.storage.GraphHopperStorageTest.testClone":372,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":458,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":262,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":382,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":466,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":265,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":230,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":268,"com.graphhopper.routing.PathTest.testTime":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":422,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":312,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":283,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":194,"com.graphhopper.reader.OSMReaderTest.testRelation":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":243,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":301,"com.graphhopper.util.GHUtilityTest.testSortDirected":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":42,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":220,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":90,"com.graphhopper.GraphHopperTest.testFootOnly":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":2,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":46,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":199,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":30,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":464,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":239,"com.graphhopper.search.NameIndexTest.testCreate":86,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":87,"com.graphhopper.routing.QueryGraphTest.testOneWay":96,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":6,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":186,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":15,"com.graphhopper.reader.OSMReaderTest.testWithBounds":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":451,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":245,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":463,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":279,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":14,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":347,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":340,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":368,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":129,"com.graphhopper.util.InstructionListTest.testWayList":156,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":401,"com.graphhopper.GraphHopperAPITest.testDisconnected179":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":231,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":462,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":349,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":226,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":441,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":242,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":259,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":51,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":374,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":200,"com.graphhopper.routing.util.EncodedValueTest.testSwap":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":351,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":125,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":392,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":123,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":310,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":34,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":150,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":435,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":362,"com.graphhopper.routing.PathTest.testWayList":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":470,"com.graphhopper.coll.OSMIDMapTest.testGet2":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":151,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":307,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":346,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":331,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":373,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":31,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":32,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":456,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":412,"com.graphhopper.util.GHUtilityTest.testSort":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":248,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":460,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":433,"com.graphhopper.search.NameIndexTest.testPut":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":360,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":371,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":176,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":207,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":203,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":450,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":113,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":179,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":318,"com.graphhopper.storage.MMapDirectoryTest.testSynched":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":452,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":341,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":106,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":292,"com.graphhopper.routing.PathTest.testFound":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":249,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":58,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":465,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":309,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":432,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":337,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":85,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":234,"com.graphhopper.util.InstructionListTest.testEmptyList":154,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":37,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":454,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":144,"com.graphhopper.reader.PrinctonReaderTest.testRead":60,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":400,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":210,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":332,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":16,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":223,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":281,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":342,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":439,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":263,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":421,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":437,"com.graphhopper.reader.OSMReaderTest.testFoot":63,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":81,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":247,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":26,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":313,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":27,"com.graphhopper.reader.OSMReaderTest.testOneWay":76,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":381,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":396,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":354,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":8,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":241,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":376,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":119,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":126,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":467,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":117,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":182,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":237,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":89,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":75,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":365,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":222,"com.graphhopper.routing.PathBidirRefTest.testExtract2":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":128,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":33,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":193,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":83,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":394,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":423,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":260,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":189,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":397,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":285,"com.graphhopper.GraphHopperTest.testFootAndCar":52,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":389,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":217,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":328,"com.graphhopper.storage.StorablePropertiesTest.testLoad":407,"com.graphhopper.GraphHopperTest.testPrepareOnly":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":147,"com.graphhopper.GraphHopperTest.testVia":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":225,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":72,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":269,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":43,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":393,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":240,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":469,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":308,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":306,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":319}}]
