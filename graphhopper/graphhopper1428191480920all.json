[{"failures":[],"tindex":"7e7c8519-db25-11e4-98a8-37ed4353b610","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"7e7cac2a-db25-11e4-98a8-5f0d118001ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[],"tindex":"7e7cac2b-db25-11e4-98a8-3bcd86b51d69","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[0],"tindex":"7e7cac2c-db25-11e4-98a8-c567412d038a","variableMapping":{"edgePointer":"flags","edgeEntryBytes":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[1,2,3,4],"tindex":"7e7cac2d-db25-11e4-98a8-ab72ae2d2fab","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[5,6,7],"tindex":"7e7cac2e-db25-11e4-98a8-910ed84d7204","variableMapping":{"initLeafSize":"index","maxLeafEntries":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"7e7cac2f-db25-11e4-98a8-b31bdf640939","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"7e7cac30-db25-11e4-98a8-73fe27f5789b","variableMapping":{"id":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:345","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"7e7cac31-db25-11e4-98a8-19bfd14da069","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-2},{"failures":[8,9,10],"tindex":"7e7cd342-db25-11e4-98a8-bde19cb41200","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"7e7cd343-db25-11e4-98a8-c580645787c9","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"7e7cd344-db25-11e4-98a8-4fd76999256b","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:48","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.EdgeSkipIterState) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.util.EdgeIteratorState));\n    if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n        return com.graphhopper.util.EdgeSkipIterState.getWeight();\n    \n} "},"status":-2},{"failures":[],"tindex":"7e7cd345-db25-11e4-98a8-59ebb63e9ea9","variableMapping":{"low":"importance","guess":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[11,12,13,14,15,16,17,18,19,20,21],"tindex":"7e7cd346-db25-11e4-98a8-332ea2d8d5d5","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","edgeTo":"paveType","edgeFrom":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[],"tindex":"7e7cd347-db25-11e4-98a8-1762215f1f2f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"7e7cd348-db25-11e4-98a8-c9a94dd08366","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:111","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[20],"tindex":"7e7cd349-db25-11e4-98a8-7b08de79cc16","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"7e7cd34a-db25-11e4-98a8-9fdc5366a3ee","variableMapping":{"min":"java.lang.Math.PI","dist":"baseOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"7e7cd34b-db25-11e4-98a8-b3672a977d92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"7e7cd34c-db25-11e4-98a8-ffc87f6c0794","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"7e7cd34d-db25-11e4-98a8-c36e13ec9df7","variableMapping":{"size":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"7e7cd34e-db25-11e4-98a8-1f71a8f099bd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,8,246,247,248,9,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,25,30,34,35,10,36,37,38,39,40,41,42,43,44,45,46,288,47],"tindex":"7e7cfa5f-db25-11e4-98a8-291396c25b92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[0],"tindex":"7e7cfa60-db25-11e4-98a8-95b202346bcd","variableMapping":{"factor":"eleDelta"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"7e7cfa61-db25-11e4-98a8-ab2b9beec4a1","variableMapping":{"i":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[181,183,186,289,290,291,292,293,294,295,296,297,298,299,300,301,262,263,264,265,266,268,269,272,273,274,275,277,278,279,281,282,283,284,285,27,28],"tindex":"7e7cfa62-db25-11e4-98a8-015ec65cd8d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"7e7cfa63-db25-11e4-98a8-efbb7fd2f159","variableMapping":{"nodeId":"index","mainNodes":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:340","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[8,9,10],"tindex":"7e7cfa64-db25-11e4-98a8-b58573b01e2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[302,10],"tindex":"7e7cfa65-db25-11e4-98a8-edb464f9cdcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[303,304,12,305,306,307,15,308,309,18,310,311,20,312],"tindex":"7e7cfa66-db25-11e4-98a8-0744a8376766","variableMapping":{"str":"tt","minLat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:199","type":"CtIfImpl","sourcecode":"if (int < 10)\n    java.lang.String += \"0\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"7e7cfa67-db25-11e4-98a8-d32426f1bd8e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"7e7cfa68-db25-11e4-98a8-3bc8669fe310","variableMapping":{"osmFile":"entryVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[8,9,10],"tindex":"7e7d2179-db25-11e4-98a8-a3df6c44f719","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"7e7d217a-db25-11e4-98a8-77e441cee567","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"7e7d217b-db25-11e4-98a8-9fae95d27b12","variableMapping":{"scDirMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"7e7d217c-db25-11e4-98a8-05f43b3e087a","variableMapping":{"deltaX":"resultOrientation","maxX":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"7e7d217d-db25-11e4-98a8-0574efaffda4","variableMapping":{"size":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[],"tindex":"7e7d217e-db25-11e4-98a8-8308d525f139","variableMapping":{"fromDist":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[5,7],"tindex":"7e7d217f-db25-11e4-98a8-c1e094ffc8ca","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-1},{"failures":[9,10],"tindex":"7e7d2180-db25-11e4-98a8-19e446d10c1b","variableMapping":{"cp":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[],"tindex":"7e7d2181-db25-11e4-98a8-31b2d5a7ca17","variableMapping":{"tmpNode":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:797","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"7e7d2182-db25-11e4-98a8-716860027dd5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"7e7d2183-db25-11e4-98a8-b7d3086ba2ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:86","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[313,235,238,239,243,244,245,8,247,248,9,254,314,11,304,12,315,13,1,316,317,318,258,319,14,307,15,320,16,2,321,322,17,18,19,3,323,324,311,20,21,4,325,25,26,27,28,29,30,31,32,33,34,35,10,36,37,38,39,40,41,42,43,44,45,46,288,326,47],"tindex":"7e7d2184-db25-11e4-98a8-cd2205c10ec4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"7e7d2185-db25-11e4-98a8-e571351d3d4a","variableMapping":{"deltaX":"angle","maxX":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"7e7d2186-db25-11e4-98a8-756c0dce804d","variableMapping":{"edgeCount":"from","lastEdgeIndex":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":0},{"failures":[],"tindex":"7e7d4897-db25-11e4-98a8-930c06dad948","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[232,241,327,328,329,330],"tindex":"7e7d4898-db25-11e4-98a8-2dfc4e3e1203","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"7e7d4899-db25-11e4-98a8-1bfb90b35463","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"7e7d489a-db25-11e4-98a8-c13e285f8eb5","variableMapping":{"visitedCountFrom":"minutes","visitedCountTo":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7e7d489b-db25-11e4-98a8-337592a7cf46","variableMapping":{"elem":"elem","size":"i","keys":"elem","i":"i","key":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:158","type":"CtWhileImpl","sourcecode":"while ((int * 2) <= (int)) {\n    int int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n        int = int;\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[],"tindex":"7e7d489c-db25-11e4-98a8-a948bf5d8080","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"7e7d489d-db25-11e4-98a8-f3a235fb0eb0","variableMapping":{"minLon":"lat","maxLon":"ele"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:94","type":"CtIfImpl","sourcecode":"if ((double) >= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[23,24],"tindex":"7e7d489e-db25-11e4-98a8-57ef7b7d2571","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[180,184,331,291,292,293,297,300,301,263,264,267,279,282,283,285],"tindex":"7e7d489f-db25-11e4-98a8-2d9bd02c9562","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-1},{"failures":[332,333,334,335,336,337,338,313,339],"tindex":"7e7d48a0-db25-11e4-98a8-ab8c907b1382","variableMapping":{"r":"angle","x":"r","absY":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[314,11,304,12,13,316,317,318,258,319,14,307,15,16,321,17,18,19,323,311,20,21,325,42],"tindex":"7e7d48a1-db25-11e4-98a8-87bab5e91589","variableMapping":{"nanoTime":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:508","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[],"tindex":"7e7d48a2-db25-11e4-98a8-73f075dcbb06","variableMapping":{"length":"capacity","factor":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[314,11,304,12,13,316,317,318,258,319,14,307,15,16,321,17,18,19,323,311,20,21,325],"tindex":"7e7d48a3-db25-11e4-98a8-55b86fcd1143","variableMapping":{"scDirMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[340,0,341,303,314,342,11,304,12,343,315,327,344,345,346,347,348,349,13,350,1,305,316,255,351,306,319,352,14,307,15,353,320,328,354,355,356,357,358,359,16,360,2,308,321,20],"tindex":"7e7d48a4-db25-11e4-98a8-effaea7f7e99","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[],"tindex":"7e7d48a5-db25-11e4-98a8-0761812657ac","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[0],"tindex":"7e7d6fb6-db25-11e4-98a8-7fe9e91de65c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[361,362,290,292,297,298,301,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,27,28,29,30,31,33,34],"tindex":"7e7d6fb7-db25-11e4-98a8-73d89041b9f9","variableMapping":{"initialized":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"7e7d6fb8-db25-11e4-98a8-9900cb8e46e1","variableMapping":{"midLat":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[1,2,3,4],"tindex":"7e7d6fb9-db25-11e4-98a8-e985fbeaa5be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"7e7d6fba-db25-11e4-98a8-efb123ba46d3","variableMapping":{"weight":"backSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[302,10],"tindex":"7e7d6fbb-db25-11e4-98a8-a50576f3f4ff","variableMapping":{"importance":"index","hash":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[11,12,13,14,15,16,17,19,20,21],"tindex":"7e7d6fbc-db25-11e4-98a8-636ec9cc135f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:397","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"7e7d6fbd-db25-11e4-98a8-65ee9f875b94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"7e7d6fbe-db25-11e4-98a8-85dcfa404e05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"7e7d6fbf-db25-11e4-98a8-8ffcf83dd496","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[],"tindex":"7e7d6fc0-db25-11e4-98a8-79c21f3645c4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[49,54,75,81,86,89,363,364,365,366,367,368,369,370,371,372,373,374,96,99,104,125,131,136,139,188,193,214,220,225,228,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,289,391,337,338,340,0,339,261,392,393,394,395,396,397,398,282,399,400,401,402,25,27,28,29,31,32,33,34,10,37,38,39,40,41,42,43,44,45,46,288,47],"tindex":"7e7d6fc1-db25-11e4-98a8-a74e36186846","variableMapping":{"freeIndex":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[5,7],"tindex":"7e7d6fc2-db25-11e4-98a8-73218fb325a9","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-1},{"failures":[5,6,7],"tindex":"7e7d6fc3-db25-11e4-98a8-7f3f09e7b786","variableMapping":{"numTiles":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[403,404,405,406,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,407,408,363,364,365,409,410,411,412,413,414,415,416,417,418,419,92,420,421,422,423,424,93,425,366,367,368,369,426,370,427,428,429,430,431,94,432,433,434,435,436,371,372,373,437,438,439,440,441,442,443,444,445,446,447,95,448,449,450,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,153,168,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,451,452,453,454,361,362,455,456,457,458,459,289,460,461,462,391,337,338,313,463,464,465,466,5,22,23,24,6,7,234,340,0,467,468,339,469,261,261,392,392,470,470,393,393,394,394,395,395,471,471,396,396,397,397,472,472,473,473,398,398,290,291,292,293,294,295,296,474,297,298,299,475,300,301,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,399,400,476,401,402,25,26,27,28,29,30,31,477,32,33,34,35,478,10,36,37,38,39,40,41,42,43,479,44,45,46,288,326,47,480,481,482,483,484,485],"tindex":"7e7d96d4-db25-11e4-98a8-2523475c71e3","variableMapping":{"str":"name","this":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:156","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    java.lang.String += \"_SYNC\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,311,20,21],"tindex":"7e7d96d5-db25-11e4-98a8-718cc4602be5","variableMapping":{"bytePos":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"7e7d96d6-db25-11e4-98a8-f1866f89420e","variableMapping":{"gradient":"minLatTmp","yend":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"7e7d96d7-db25-11e4-98a8-8dfa103203f8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[262],"tindex":"7e7d96d8-db25-11e4-98a8-877c1288529d","variableMapping":{"y1":"lastEdgeIndex","y2":"edgeEntryBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-1},{"failures":[302],"tindex":"7e7d96d9-db25-11e4-98a8-c7b4d52e8bdc","variableMapping":{"segmentSizeInBytes":"index","indexDivisor":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-1},{"failures":[486],"tindex":"7e7d96da-db25-11e4-98a8-e326850b97b4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:752","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"7e7d96db-db25-11e4-98a8-77621bca8b58","variableMapping":{"towerNodeDistance":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":0},{"failures":[],"tindex":"7e7d96dc-db25-11e4-98a8-254931223e10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[5,6],"tindex":"7e7d96dd-db25-11e4-98a8-37f17aa7df22","variableMapping":{"red":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:162","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"7e7d96de-db25-11e4-98a8-279e6d022edf","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[304,12,258,307,15,18,311,20],"tindex":"7e7d96df-db25-11e4-98a8-c3ff8809a22d","variableMapping":{"r":"speed","x":"speed","absY":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false)"},"status":-1},{"failures":[],"tindex":"7e7d96e0-db25-11e4-98a8-d934d1f8f3bb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[487,488,489,490,491,492,493,494,495,496],"tindex":"7e7d96e1-db25-11e4-98a8-0f08a541d459","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"7e7d96e2-db25-11e4-98a8-4b7e321ac5e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[49,412,440,96,99,188,27],"tindex":"7e7d96e3-db25-11e4-98a8-17775606beac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[1,2,3,4],"tindex":"7e7dbdf4-db25-11e4-98a8-7b9fe5042d45","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-1},{"failures":[494],"tindex":"7e7dbdf5-db25-11e4-98a8-7fe6e5a47d94","variableMapping":{"towerNodeDistance":"maxLonTmp","zeroCounter":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:740","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    (long)++;\n    double = 1.0E-4;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:185","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"7e7dbdf6-db25-11e4-98a8-811e14f0c7b8","variableMapping":{"latlon":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"7e7dbdf7-db25-11e4-98a8-4b15445051d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"7e7dbdf8-db25-11e4-98a8-bfb0d44d3855","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:104","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[232,327,328,329,330],"tindex":"7e7dbdf9-db25-11e4-98a8-2db4d146d7b1","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":-1},{"failures":[],"tindex":"7e7dbdfa-db25-11e4-98a8-5d5b313cab84","variableMapping":{"segmentsToMap":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,407,408,363,364,365,409,410,411,412,413,414,415,416,417,418,419,92,420,421,422,423,497,424,93,425,366,367,368,369,426,370,427,428,429,430,498,431,94,432,433,434,435,436,371,372,373,437,438,439,440,441,442,443,444,445,446,447,95,450,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,361,362,455,456,457,458,459,289,460,461,462,391,337,338,313,463,464,465,466,5,22,23,24,6,7,234,340,0,467,468,339,469,261,261,392,392,470,470,393,393,394,394,395,395,471,471,396,396,397,397,472,472,473,473,398,398,290,291,292,293,294,295,296,474,297,298,299,475,300,301,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,25,26,27,28,29,30,31,32,33,34,35,10,36,37,38,39,40,41,42,43,44,45,46,288,47,480,484,485],"tindex":"7e7dbdfb-db25-11e4-98a8-c7948052f5d8","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":280,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":392,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":185,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":324,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":143,"com.graphhopper.reader.OSMReaderTest.testFerry":10,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":456,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":457,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":372,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":26,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":332,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":114,"com.graphhopper.coll.CompressedArrayTest.testCompress":488,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":89,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":163,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":434,"com.graphhopper.util.AngleCalcTest.testOrientation":333,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":383,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":299,"com.graphhopper.GraphHopperTest.testPrepare":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":279,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":290,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":272,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":391,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":425,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":21,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":464,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":435,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":264,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":364,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":96,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":301,"com.graphhopper.GraphHopperTest.testLoadOSM":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":365,"com.graphhopper.reader.OSMReaderTest.testSort":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":360,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":23,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":100,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":385,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":84,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":49,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":494,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":176,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":396,"com.graphhopper.routing.DijkstraTest.initializationError":259,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":480,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":135,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":218,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":61,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":97,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":104,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":323,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":439,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":276,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":437,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":477,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":267,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":266,"com.graphhopper.coll.OSMIDMapTest.testGetLong":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":118,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":124,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":210,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":188,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":212,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":335,"com.graphhopper.coll.CompressedArrayTest.testCompress2":487,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":309,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":115,"com.graphhopper.GraphHopperAPITest.testLoad":361,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":192,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":232,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":66,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":56,"com.graphhopper.storage.LevelGraphStorageTest.testClone":197,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":302,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":7,"com.graphhopper.reader.OSMReaderTest.testBarriers":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":105,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":269,"com.graphhopper.util.GHUtilityTest.testCopy":289,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":95,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":497,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":381,"com.graphhopper.routing.PathTest.testFindInstruction":469,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":106,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":238,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":455,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":342,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":421,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":85,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":133,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":119,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":296,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":348,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":257,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":260,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":199,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":148,"com.graphhopper.util.InstructionListTest.testWayList2":338,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":415,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":90,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":14,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":319,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":340,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":353,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":157,"com.graphhopper.storage.RAMDirectoryTest.testSynched":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":116,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":366,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":268,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":40,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":384,"com.graphhopper.routing.AStarTest.initializationError":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":282,"com.graphhopper.coll.OSMIDMapTest.testGet":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":113,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":239,"com.graphhopper.routing.PathBidirRefTest.testExtract":465,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":354,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":476,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":443,"com.graphhopper.storage.RAMDataAccessTest.testCopy":376,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":328,"com.graphhopper.storage.RAMDataAccessTest.testSegments":380,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":92,"com.graphhopper.util.GHUtilityTest.testSort2":459,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":277,"com.graphhopper.reader.OSMReaderTest.testMain":37,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":189,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":355,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":2,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":444,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":173,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":204,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":208,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":229,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":205,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":394,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":303,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":211,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":288,"com.graphhopper.storage.StorablePropertiesTest.testStore":448,"com.graphhopper.storage.GraphHopperStorageTest.testClone":58,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":172,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":9,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":452,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":247,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":149,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":183,"com.graphhopper.routing.PathTest.testTime":468,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":227,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":198,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":253,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":426,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":162,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":216,"com.graphhopper.reader.OSMReaderTest.testRelation":479,"com.graphhopper.util.GHUtilityTest.testSortDirected":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":350,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":389,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":393,"com.graphhopper.GraphHopperTest.testFootOnly":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":367,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":453,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":438,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":158,"com.graphhopper.search.NameIndexTest.testCreate":406,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":379,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":261,"com.graphhopper.routing.QueryGraphTest.testOneWay":472,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":418,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":492,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":363,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":489,"com.graphhopper.reader.OSMReaderTest.testWithBounds":46,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":382,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":1,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":375,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":155,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":164,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":240,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":317,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":194,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":190,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":349,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":325,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":127,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":120,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":54,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":263,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":87,"com.graphhopper.util.InstructionListTest.testWayList":337,"com.graphhopper.routing.ch.PrepareEncoderTest.testOverwrite":331,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":320,"com.graphhopper.GraphHopperAPITest.testDisconnected179":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":150,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":493,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":145,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":346,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":485,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":359,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":29,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":60,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":475,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":351,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":274,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":298,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":225,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":102,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":213,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":446,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":321,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":48,"com.graphhopper.routing.PathTest.testWayList":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":245,"com.graphhopper.coll.OSMIDMapTest.testGet2":400,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":285,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":222,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":481,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":358,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":71,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":233,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":111,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":209,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":441,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":377,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":390,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":442,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":327,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":17,"com.graphhopper.util.GHUtilityTest.testSort":460,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":411,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":496,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":357,"com.graphhopper.search.NameIndexTest.testPut":404,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":423,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":436,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":370,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":429,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":304,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":471,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":427,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":98,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":329,"com.graphhopper.storage.MMapDirectoryTest.testSynched":454,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":482,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":283,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":5,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":168,"com.graphhopper.routing.PathTest.testFound":467,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":35,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":258,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":224,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":486,"com.graphhopper.util.AngleCalcTest.testAtan2":334,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":356,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":463,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":117,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":405,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":153,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":63,"com.graphhopper.util.InstructionListTest.testEmptyList":462,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":271,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":445,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":275,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":242,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":241,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":278,"com.graphhopper.reader.PrinctonReaderTest.testRead":484,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":86,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":373,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":152,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":402,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":490,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":142,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":344,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":374,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":314,"com.graphhopper.reader.OSMReaderTest.testFoot":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":166,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":398,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":483,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":412,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":495,"com.graphhopper.reader.OSMReaderTest.testOneWay":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":413,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":67,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":82,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":134,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":388,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":315,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":300,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":293,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":387,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":430,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":156,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":470,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":51,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":326,"com.graphhopper.routing.PathBidirRefTest.testExtract2":466,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":416,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":403,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":80,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":498,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":310,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":179,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":235,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":409,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":83,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":200,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":250,"com.graphhopper.GraphHopperTest.testFootAndCar":30,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":75,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":18,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":447,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":146,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":255,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":474,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":108,"com.graphhopper.storage.StorablePropertiesTest.testLoad":449,"com.graphhopper.GraphHopperTest.testPrepareOnly":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":281,"com.graphhopper.GraphHopperTest.testVia":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":424,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":144,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":44,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":184,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":79,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":313,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":236,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":159,"com.graphhopper.routing.AStarBidirectionTest.initializationError":231,"com.graphhopper.util.AngleCalcTest.testCombined":336,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":254,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":223,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":221,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":99}}]
