[{"failures":[],"tindex":"99fe9901-da47-11e4-bb18-db568a44a334","variableMapping":{"from":"to","end":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"99ff5c52-da47-11e4-bb18-53ed22bfdbd3","variableMapping":{"shift":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"99ff5c53-da47-11e4-bb18-c9c6cfdfae1f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[287,288,289,290,291,292,293,294,295,296,297,128,134,136,137,298,155,161,163,164,272],"tindex":"99ff5c54-da47-11e4-bb18-a38446bc2234","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"99ff5c55-da47-11e4-bb18-b9b4ae36da8a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"99ff8366-da47-11e4-bb18-73e7f299b5ae","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"99ff8367-da47-11e4-bb18-69499c21b2e8","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[8,9,17,19,20,21,22,23,24,25,26,27,28,29,30,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,39,41,62,67,72,78,80,82,103,108,113,130,132,145,146,147,148,157,159,174,176,197,202,207,215,216,217,219,221,222,233,238,241,242,244,245,248,283],"tindex":"99ff8368-da47-11e4-bb18-2bc34b98d5f8","variableMapping":{"factor":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-1},{"failures":[],"tindex":"99ff8369-da47-11e4-bb18-5bc5e0b3aea9","variableMapping":{"segmentSizeInBytes":"usedBits","indexDivisor":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":0},{"failures":[24,320,321,322,323],"tindex":"99ff836a-da47-11e4-bb18-694610672314","variableMapping":{"foundIndex":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"99ff836b-da47-11e4-bb18-eb64928f0a00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[324],"tindex":"99ff836c-da47-11e4-bb18-219684d86e42","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:520","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"->\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[],"tindex":"99ff836d-da47-11e4-bb18-096b20ade87a","variableMapping":{"incEleSum":"fwdIncline","incDist2DSum":"fwdIncline"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:198","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:208","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[287,288,289,290,325,291,292,295,296,297],"tindex":"99ff836e-da47-11e4-bb18-69ef5a66cefd","variableMapping":{"midLat":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[326],"tindex":"99ff836f-da47-11e4-bb18-97c7cebe839d","variableMapping":{"minStr":"str","index":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"99ff8370-da47-11e4-bb18-811f69ee02c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"99ff8371-da47-11e4-bb18-4b1125373bc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"99ff8372-da47-11e4-bb18-cf56aa20a945","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"99ff8373-da47-11e4-bb18-e50b5667a79e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"99ffaa84-da47-11e4-bb18-a53eea8a38f6","variableMapping":{"freeIndex":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":0},{"failures":[],"tindex":"99ffaa85-da47-11e4-bb18-c700a80d4e9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[287,288,290,291,292,294,296,297,128,134,136,137,298,155,161,163,164],"tindex":"99ffaa86-da47-11e4-bb18-21abd7da1f33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"99ffaa87-da47-11e4-bb18-a7072ae0a244","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":0},{"failures":[],"tindex":"99ffaa88-da47-11e4-bb18-654ef8617207","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"99ffaa89-da47-11e4-bb18-930160b01a7b","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[327],"tindex":"99ffaa8a-da47-11e4-bb18-715fd3cfc4ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:155","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    java.lang.Integer = java.lang.Integer;\n"},"status":-1},{"failures":[33,250,251,257,261,282],"tindex":"99ffaa8b-da47-11e4-bb18-8d69acba77ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,328,26,27,28,29,30,34,329,330,224,331,332,333,334,335,336,337,338,327,339,340,341,342,343,344,345,346,347,320,348,349,350,351,321,352,353,227,354,355,356,357,358,359,360,361,322,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,231,232,390,391,392,393,394,395,396,323,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,263,273],"tindex":"99ffaa8c-da47-11e4-bb18-cf3c9e1cffb1","variableMapping":{"from":"shift","hash":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"99ffaa8d-da47-11e4-bb18-81e34bca106c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[],"tindex":"99ffaa8e-da47-11e4-bb18-83f0b03f9322","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-2},{"failures":[],"tindex":"99ffaa8f-da47-11e4-bb18-d932cfab3ffa","variableMapping":{"str":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[427],"tindex":"99ffd1a0-da47-11e4-bb18-479efcf3b11c","variableMapping":{"bytePos":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[225,229],"tindex":"99ffd1a1-da47-11e4-bb18-5b96bc696e68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[],"tindex":"99ffd1a2-da47-11e4-bb18-7f3077878ad3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"99ffd1a3-da47-11e4-bb18-158d10d81e70","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[428,429,430,431,432,257,261],"tindex":"99ffd1a4-da47-11e4-bb18-35a22bfcf1d9","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[0,1,2,3,4,5,6,433,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,434,435,31,436,437,438,439,440,441,442,32,33,443,34,35,36,444,37,38,39,445,446,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,447,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,448,449,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,450,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,451,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,452,453,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,454,201,202,203,204,205,206,207,455,208,209,210,211,212,213,214,456,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,457,426,233,234,235,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"99ffd1a5-da47-11e4-bb18-df6746b3bdbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"99ffd1a6-da47-11e4-bb18-8f4d2957daa1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[458,459,444,39,78,80,174,214,219,220,221,223],"tindex":"9a006de7-da47-11e4-bb18-5182b92b39b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-1},{"failures":[],"tindex":"9a006de8-da47-11e4-bb18-eb726dfbaa95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[],"tindex":"9a006de9-da47-11e4-bb18-27c3aac7f12c","variableMapping":{"res":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"9a006dea-da47-11e4-bb18-4b78d2950154","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"9a0094fb-da47-11e4-bb18-9ffce68ed855","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[],"tindex":"9a0094fc-da47-11e4-bb18-b9f52c229b70","variableMapping":{"map":"map","key":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:58","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.remove(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[],"tindex":"9a0094fd-da47-11e4-bb18-d3328873ad48","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"9a0094fe-da47-11e4-bb18-fb19b8f38074","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"9a0094ff-da47-11e4-bb18-7b4d1382a4c1","variableMapping":{"currentEntry":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"9a009500-da47-11e4-bb18-e973505a44fc","variableMapping":{"maxBits":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[],"tindex":"9a009501-da47-11e4-bb18-49a714ede49c","variableMapping":{"store":"closed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"9a009502-da47-11e4-bb18-2f005465dd10","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"9a009503-da47-11e4-bb18-e3362b114acb","variableMapping":{"cap":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-2},{"failures":[356,359,361,370,386,391,394,396,405,411,412,421],"tindex":"9a009504-da47-11e4-bb18-ad297ee675d6","variableMapping":{"segmentSizeInBytes":"speed","index":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"9a009505-da47-11e4-bb18-ed7cdc214c8e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[33,443,34,35,36,444,37,38,39,445,446,40,460,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,447,66,67,68,69,70,71,72,73,74,75,76,77,78,461,79,80,448,449,81,462,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,450,107,108,109,110,111,112,113,114,115,116,117,118,124,143,154,170,463,464,465,466,467,468,469,470,471,472,473,171,474,475,476,477,478,479,480,481,482,483,484,485,486,487,172,488,489,490,491,492,493,494,495,496,497,498,173,174,452,453,175,499,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,454,201,202,203,204,205,206,207,455,208,209,210,211,218,222,329,330,224,331,332,333,334,335,336,337,338,327,339,340,341,342,343,344,345,346,347,320,348,349,350,353,354,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"9a00bc16-da47-11e4-bb18-a11c82a22022","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"9a00bc17-da47-11e4-bb18-9be438500adb","variableMapping":{"numTiles":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[],"tindex":"9a00bc18-da47-11e4-bb18-0528a5525496","variableMapping":{"file":"osmValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:234","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[],"tindex":"9a00bc19-da47-11e4-bb18-cfed414b1d99","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"9a00bc1a-da47-11e4-bb18-730d645b7fa7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[359,361,370,378,386,394,396,405,412,413,421],"tindex":"9a00bc1b-da47-11e4-bb18-170a8e05db3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"9a00bc1c-da47-11e4-bb18-8b0d68cd1113","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[33,443,34,35,36,444,37,38,39,445,446,40,460,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,447,66,67,68,69,70,71,72,73,74,75,76,77,78,461,79,80,448,449,81,462,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,450,107,108,109,110,111,112,113,114,115,116,117,118,124,143,154,170,463,464,465,466,467,468,469,470,471,472,473,171,474,475,476,477,478,479,480,481,482,483,484,485,486,487,172,488,489,490,491,492,493,494,495,496,497,498,173,174,452,453,175,499,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,454,201,202,203,204,205,206,207,455,208,209,210,211,218,329,330,224,331,332,333,334,335,336,337,338,327,339,340,341,342,343,344,345,346,347,320,348,349,350,500,353,354,375,376,377,378,379,410,411,412,413,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"9a00bc1d-da47-11e4-bb18-5f0e525b120b","variableMapping":{"encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[21,22,26,501,329,337,340,363,380,398,414],"tindex":"9a00bc1e-da47-11e4-bb18-0fe236c4d495","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[21,26,329,337,363,380,398,414],"tindex":"9a00bc1f-da47-11e4-bb18-3fc089899fe0","variableMapping":{"possibleToAdd":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:85","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPlace method.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[326],"tindex":"9a00bc20-da47-11e4-bb18-fb2861ab7ab2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[],"tindex":"9a00e331-da47-11e4-bb18-ebe419de721c","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1138","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getRemovedNodes().getCardinality()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"9a00e332-da47-11e4-bb18-bdbdfde006bf","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":0},{"failures":[],"tindex":"9a00e333-da47-11e4-bb18-19a4c2e70841","variableMapping":{"resultOrientation":"angle","orientation":"angle","java.lang.Math.PI":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[440,51,92],"tindex":"9a00e334-da47-11e4-bb18-ed551abd031b","variableMapping":{"width":"segmentSizeInBytes","i":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:149","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[],"tindex":"9a00e335-da47-11e4-bb18-4138dacee5df","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"9a00e336-da47-11e4-bb18-8ba05f753ed2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:61","type":"CtReturnImpl","sourcecode":"return \"PREPARE+\" + (com.graphhopper.routing.util.Weighting.toString())"},"status":-2},{"failures":[33,443,34,35,36,444,37,38,39,445,446,40,460,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,447,66,67,68,69,70,71,72,73,74,75,76,77,78,461,79,80,448,449,81,462,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,450,107,108,109,110,111,112,113,114,115,116,117,118,124,143,154,170,463,464,465,466,467,468,469,470,471,472,473,171,474,475,476,477,478,479,480,481,482,483,484,485,486,487,172,488,489,490,491,492,493,494,495,496,497,498,173,174,452,453,175,499,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,454,201,202,203,204,205,206,207,455,208,209,210,211,218,222,329,330,224,331,332,333,334,335,336,350,502,353,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"9a00e337-da47-11e4-bb18-4796693d8ae0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1063","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[],"tindex":"9a00e338-da47-11e4-bb18-0ffd6f256f24","variableMapping":{"byteCount":"internalFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"9a00e339-da47-11e4-bb18-c921b0b4691a","variableMapping":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[503],"tindex":"9a00e33a-da47-11e4-bb18-e1e5c98ec607","variableMapping":{"size":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[30,440,227,228],"tindex":"9a00e33b-da47-11e4-bb18-9dacd92f2717","variableMapping":{"edgePointer":"capacity","edgeEntryBytes":"segmentSizeInBytes","nextEdge":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[],"tindex":"9a00e33c-da47-11e4-bb18-49c84dc99899","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,30,214,215,216,217,218,219,220,221,222,223,227],"tindex":"9a00e33d-da47-11e4-bb18-7f3e4248d8fb","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"9a010a4e-da47-11e4-bb18-23bb5567eea3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"9a010a4f-da47-11e4-bb18-85196afd43ec","variableMapping":{"len":"segmentSizePower","start":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"9a010a50-da47-11e4-bb18-850e194ee67a","variableMapping":{"res":"lastTime","value":"lastTime"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[33,257,261],"tindex":"9a010a51-da47-11e4-bb18-43d1e467472f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[2,4,13,35,36,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,59,60,61,62,63,65,66,67,68,69,70,71,72,74,75,76,77,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,214,456,215,216,219,220,222,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"9a010a52-da47-11e4-bb18-375ebc253c4e","variableMapping":{"maxLeafEntries":"edgeCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"9a010a53-da47-11e4-bb18-f9c5f0c3f8cd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"9a010a54-da47-11e4-bb18-91a4b35d0e96","variableMapping":{"weightLong":"nodeBitMask","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[335,327,345,356,361,372,376,378,388,391,396,407,423],"tindex":"9a010a55-da47-11e4-bb18-8567aea3adf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:188","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-1},{"failures":[24,320,321,322,323],"tindex":"9a010a56-da47-11e4-bb18-7911952b859a","variableMapping":{"scDirMask":"turnRestrictionBit","flags":"turnRestrictionBit","dir":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[215,216,219,222,249,251,257,258,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,278,279,280,282,283,284,285,286],"tindex":"9a010a57-da47-11e4-bb18-437405460538","variableMapping":{"edge":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[287,288,290,325,291,292,295,296,297],"tindex":"9a010a58-da47-11e4-bb18-956551b336bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9a010a59-da47-11e4-bb18-39311afe83e4","variableMapping":{"systemProperty":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:60","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[],"tindex":"9a010a5a-da47-11e4-bb18-a3bb6918a883","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder> java.util.List<com.graphhopper.routing.util.FlagEncoder> = new java.util.ArrayList<com.graphhopper.routing.util.FlagEncoder>()"},"status":-2},{"failures":[356,360,361,373,376,378,379,391,395,396,408,411,413,424],"tindex":"9a010a5b-da47-11e4-bb18-b52d3c59942f","variableMapping":{"workerThreads":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:346","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n        int = java.lang.Integer;\n    else\n        int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n    \n} "},"status":-1},{"failures":[],"tindex":"9a010a5c-da47-11e4-bb18-4fee404faadb","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[287,288,289,290,325,291,292,295,296,297,129,156],"tindex":"9a010a5d-da47-11e4-bb18-abc405a82c53","variableMapping":{"r":"lat","x":"lat","absY":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"9a01316e-da47-11e4-bb18-d39d2d79b71a","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"9a01316f-da47-11e4-bb18-070c22c91d40","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"9a013170-da47-11e4-bb18-838deba24b41","variableMapping":{"time":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[225,230],"tindex":"9a013171-da47-11e4-bb18-31a5807529bb","variableMapping":{"turnCostIndex":"i","nextTurnCostIndex":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:195","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[232],"tindex":"9a013172-da47-11e4-bb18-d7e4cba6b08e","variableMapping":{"fwdFaster":"incDist2DSum","incDist2DSum":"incDist2DSum","fwdSlower":"incDist2DSum","fullDist2D":"incDist2DSum","restDist2D":"fullDist2D","speed":"fullDist2D","decDist2DSum":"fullDist2D"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"9a013173-da47-11e4-bb18-89fbfab62e8f","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","speed":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":66,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":281,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":427,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":444,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":464,"com.graphhopper.reader.OSMReaderTest.testFerry":17,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":11,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":360,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":131,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":456,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":405,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":92,"com.graphhopper.coll.CompressedArrayTest.testCompress":297,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":385,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":209,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":483,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":187,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":127,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":259,"com.graphhopper.GraphHopperTest.testPrepare":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":494,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":249,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":432,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":358,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":273,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":451,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":386,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":1,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":40,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":128,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":229,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":378,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":356,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":435,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":265,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":271,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":158,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":78,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":293,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":41,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":262,"com.graphhopper.GraphHopperTest.testLoadOSM":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":165,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":437,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":159,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":500,"com.graphhopper.reader.OSMReaderTest.testSort":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":371,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":227,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":448,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":205,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":174,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":495,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":244,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":112,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":447,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":183,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":461,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":394,"com.graphhopper.reader.OSMNodeTest.testSetTags":501,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":82,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":425,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":422,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":135,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":472,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":268,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":267,"com.graphhopper.coll.OSMIDMapTest.testGetLong":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":96,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":102,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":58,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":39,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":60,"com.graphhopper.coll.CompressedArrayTest.testCompress2":296,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":411,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":93,"com.graphhopper.GraphHopperAPITest.testLoad":212,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":460,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":436,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":329,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":188,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":178,"com.graphhopper.storage.LevelGraphStorageTest.testClone":45,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":503,"com.graphhopper.reader.OSMReaderTest.testBarriers":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":323,"com.graphhopper.util.GHUtilityTest.testCopy":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":468,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":143,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":419,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":388,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":318,"com.graphhopper.routing.PathTest.testFindInstruction":234,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":382,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":84,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":428,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":13,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":334,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":73,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":393,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":206,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":192,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":110,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":403,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":502,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":47,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":469,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":32,"com.graphhopper.util.InstructionListTest.testWayList2":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":490,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":166,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":210,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":359,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":231,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":452,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":322,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":94,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":144,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":269,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":22,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":283,"com.graphhopper.coll.OSMIDMapTest.testGet":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":91,"com.graphhopper.routing.PathBidirRefTest.testExtract":235,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":335,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":364,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":139,"com.graphhopper.storage.RAMDataAccessTest.testCopy":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":118,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":488,"com.graphhopper.storage.RAMDataAccessTest.testSegments":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":363,"com.graphhopper.util.GHUtilityTest.testSort2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":278,"com.graphhopper.reader.OSMReaderTest.testMain":19,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":445,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":365,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":372,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":65,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":449,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":492,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":52,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":56,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":76,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":53,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":241,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":106,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":31,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":391,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":59,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":29,"com.graphhopper.storage.StorablePropertiesTest.testStore":458,"com.graphhopper.storage.GraphHopperStorageTest.testClone":180,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":491,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":345,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":343,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":423,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":470,"com.graphhopper.routing.PathTest.testTime":426,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":418,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":74,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":46,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":349,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":168,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":64,"com.graphhopper.reader.OSMReaderTest.testRelation":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":482,"com.graphhopper.util.GHUtilityTest.testSortDirected":6,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":406,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":310,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":240,"com.graphhopper.GraphHopperTest.testFootOnly":222,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":377,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":341,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":134,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":266,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":250,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":390,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":478,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":316,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":237,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":439,"com.graphhopper.routing.QueryGraphTest.testOneWay":246,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":381,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":157,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":287,"com.graphhopper.reader.OSMReaderTest.testWithBounds":28,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":319,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":226,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":475,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":484,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":351,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":42,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":446,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":404,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":389,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":105,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":493,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":98,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":176,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":264,"com.graphhopper.util.InstructionListTest.testWayList":8,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":455,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":362,"com.graphhopper.GraphHopperAPITest.testDisconnected179":213,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":471,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":401,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":228,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":481,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":497,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":217,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":182,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":260,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":355,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":258,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":346,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":415,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":370,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":285,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":499,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":438,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":374,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":173,"com.graphhopper.routing.PathTest.testWayList":233,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":496,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":474,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":326,"com.graphhopper.coll.OSMIDMapTest.testGet2":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":286,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":104,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":368,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":193,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":89,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":181,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":57,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":136,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":137,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":314,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":311,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":398,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":429,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":412,"com.graphhopper.util.GHUtilityTest.testSort":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":487,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":367,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":117,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":462,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":122,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":129,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":151,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":395,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":243,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":79,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":221,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":414,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":284,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":225,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":442,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":172,"com.graphhopper.routing.PathTest.testFound":457,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":223,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":353,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":71,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":324,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":366,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":95,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":171,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":185,"com.graphhopper.util.InstructionListTest.testEmptyList":433,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":420,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":276,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":348,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":338,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":337,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":387,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":279,"com.graphhopper.reader.PrinctonReaderTest.testRead":14,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":207,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":132,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":90,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":288,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":463,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":100,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":399,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":303,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":392,"com.graphhopper.reader.OSMReaderTest.testFoot":18,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":486,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":163,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":292,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":375,"com.graphhopper.reader.OSMReaderTest.testOneWay":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":164,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":189,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":203,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":383,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":309,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":397,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":480,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":254,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":261,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":344,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":252,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":308,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":476,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":239,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":453,"com.graphhopper.routing.PathBidirRefTest.testExtract2":236,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":440,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":263,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":421,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":424,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":24,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":498,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":160,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":204,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":347,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":197,"com.graphhopper.GraphHopperTest.testFootAndCar":218,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":54,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":413,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":142,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":315,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":467,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":86,"com.graphhopper.GraphHopperTest.testPrepareOnly":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":282,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":123,"com.graphhopper.GraphHopperTest.testVia":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":465,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":26,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":36,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":10,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":454,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":332,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":479,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":354,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":70,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":68,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":80}}]
