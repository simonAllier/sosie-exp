[{"failures":[0,1,2,3],"tindex":"5e5a139c-dc0b-11e4-ab53-1bcd342fecbf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[4,5,6,7,8,9,10,11],"tindex":"5e5b732d-dc0b-11e4-ab53-c9b0700f1d60","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"5e5b732e-dc0b-11e4-ab53-812513ca02e6","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.FOOT","key":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"5e5b732f-dc0b-11e4-ab53-a96df7b1428b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"5e5b7330-dc0b-11e4-ab53-699b60c511ac","variableMapping":{"item":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:256","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"5e5b7331-dc0b-11e4-ab53-911807bc1b33","variableMapping":{"calcPoints":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:127","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[4,5,6,7,8,9,10,11],"tindex":"5e5b7332-dc0b-11e4-ab53-7d1c2b1e2fb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"5e5b7333-dc0b-11e4-ab53-c9d64c56dc03","variableMapping":{"low":"shift","guess":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"5e5b7334-dc0b-11e4-ab53-d939a62ca8e6","variableMapping":{"bits":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-2},{"failures":[12,13,14,15,16,17,18],"tindex":"5e5b7335-dc0b-11e4-ab53-673b1a36b5cd","variableMapping":{"endIndexPlusOne":"size","frontIndex":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-1},{"failures":[19,20,21,22],"tindex":"5e5b7336-dc0b-11e4-ab53-199ae1b5455a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[23,24],"tindex":"5e5b9a47-dc0b-11e4-ab53-916c0c87b244","variableMapping":{"version":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:82","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:392","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"km\")"},"status":-1},{"failures":[25,26,27,28,29],"tindex":"5e5b9a48-dc0b-11e4-ab53-0f5528ef06da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"5e5b9a49-dc0b-11e4-ab53-fd241297b0f8","variableMapping":{"estimatedDist":"shortTripsSpeed","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:364","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":0},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"5e5b9a4a-dc0b-11e4-ab53-01ce6caec3d7","variableMapping":{"mKeys":"mValues","nkeys":"mValues"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[71],"tindex":"5e5b9a4b-dc0b-11e4-ab53-43a420428378","variableMapping":{"oldValueIndex":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"5e5b9a4c-dc0b-11e4-ab53-a38ed73f0450","variableMapping":{"start":"subNetworks","delta":"subNetworks"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[72,21],"tindex":"5e5b9a4d-dc0b-11e4-ab53-5dd46ef50bb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"5e5b9a4e-dc0b-11e4-ab53-3d94181348ff","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"5e5b9a4f-dc0b-11e4-ab53-09001533411e","variableMapping":{"high":"acceptBit","len":"acceptBit","start":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[71],"tindex":"5e5b9a50-dc0b-11e4-ab53-75036d661778","variableMapping":{"delta_lat":"fwdDecline","r_lat":"fwdDecline","a_lat":"fwdDecline","delta_lon":"fwdDecline","r_lon":"fwdDecline","a_lon":"fwdDecline","norm":"fwdDecline"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-1},{"failures":[],"tindex":"5e5b9a51-dc0b-11e4-ab53-db5b99faa352","variableMapping":{"factor":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"5e5b9a52-dc0b-11e4-ab53-b9073d073cb0","variableMapping":{"key":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":0},{"failures":[],"tindex":"5e5b9a53-dc0b-11e4-ab53-d5c99c07ad8a","variableMapping":{"value":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[26,73,74,75,76,77,78,79,80,2,81,27,82,28,83,13,16,17,18,29],"tindex":"5e5b9a54-dc0b-11e4-ab53-6dd0077013c1","variableMapping":{"dx":"prevOrNextEdgeId","dy":"prevOrNextEdgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-1},{"failures":[84,4,85,86,87,88,89,90,5,6,7,91,92,93,94,95,96,97,8,98,99,100,101,102,103,9,104,10,105,106,107,108,109,110,11],"tindex":"5e5bc165-dc0b-11e4-ab53-475b26912377","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[76],"tindex":"5e5bc166-dc0b-11e4-ab53-f9e222dc4e12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-1},{"failures":[111,112,0,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,23,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,72,147,148,149,150,151,30,152,71,153,31,154,32,33,155,156,157,158,159,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,174,25,26,73,74,175,75,176,177,178,179,76,180,77,78,1,79,80,2,181,81,27,82,182,28,183,184,12,83,13,14,15,185,16,186,17,187,18,29,188,189,190,191,192,193,194,34,195,196,197,198,199,200,201,35,202,36,37,203,38,204,205,206,39,40,207,208,209,210,211,212,41,42,213,214,215,216,217,218,219,220,221,3,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,43,281,282,283,284,285,286,287,44,288,45,46,289,47,290,291,292,48,49,293,294,295,296,297,298,50,51,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,52,317,318,319,320,321,322,323,53,324,54,55,325,56,326,327,328,57,58,329,330,331,332,333,334,59,60,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,61,350,351,352,353,354,355,356,62,357,358,359,360,361,362,363,63,364,64,65,365,66,366,367,368,67,68,369,370,371,372,373,374,69,70,375,376,377,378,379,380,381,382,383],"tindex":"5e5bc167-dc0b-11e4-ab53-358908e06937","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"5e5bc168-dc0b-11e4-ab53-9d135853d40f","variableMapping":{"intLow":"code","intHigh":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":0},{"failures":[140,141,142,143,145,146,147,150,151,30,4,384,385,85,88,6,7,386,387,92,95,388,99,102,10,389,390,105,108],"tindex":"5e5bc169-dc0b-11e4-ab53-b133e43a22e9","variableMapping":{"versionHint":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"5e5bc16a-dc0b-11e4-ab53-0d953ca0a72d","variableMapping":{"high":"relBitMask","guess":"relBitMask","low":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"5e5bc16b-dc0b-11e4-ab53-a7e5dee8a111","variableMapping":{"baseUrl":"str","name":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:162","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"5e5be87c-dc0b-11e4-ab53-1304b3a06ffa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:566","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return com.graphhopper.routing.util.EncodedValue.setValue(long, long);\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setLong(long, int, long);\n}"},"status":-2},{"failures":[24],"tindex":"5e5be87d-dc0b-11e4-ab53-239c0f37f3f4","variableMapping":{"param":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:66","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-1},{"failures":[0,113,114,116,118,119,127,128,132,140,142,143,144,145,146,72,147,148,149,150,151,30,391,392,393,394,159,162,166,169,172,27,189,193,207,41,216,219,228,250,251,252,254,266,395,396,397,398,399,400,401,402,308,311,315,329,59,338,341,351,355,369,69,378,381,403,404,405,406,407,408,409,410,411],"tindex":"5e5be87e-dc0b-11e4-ab53-bf288a3769b2","variableMapping":{"length":"index","factor":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-1},{"failures":[0,113,114,115,116,118,119,121,122,142,143,144,179,78,1,2,412,413,3,222,224,226,227,228,229,231,232,233,234,235,236,237,239,240,262,264,265,266,267,269,270,271,272,273,274,275,277,278],"tindex":"5e5be87f-dc0b-11e4-ab53-257f2f919af5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"5e5be880-dc0b-11e4-ab53-7dffcdbd104a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:37","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"5e5be881-dc0b-11e4-ab53-07bb960a197b","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:613","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) == null)\n    throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":0},{"failures":[],"tindex":"5e5be882-dc0b-11e4-ab53-17cb8ca985c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"5e5be883-dc0b-11e4-ab53-e38328770bc7","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[31,156],"tindex":"5e5be884-dc0b-11e4-ab53-87d90e74e5de","variableMapping":{"initLeafSize":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"5e5be885-dc0b-11e4-ab53-45d1f8a94202","variableMapping":{"acceptBit":"acceptBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"5e5be886-dc0b-11e4-ab53-f740f2cc9e91","variableMapping":{"shift":"shift","preferWayEncoder":"wayTypeEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[],"tindex":"5e5be887-dc0b-11e4-ab53-e13b1f1201be","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[],"tindex":"5e5be888-dc0b-11e4-ab53-0508039cc490","variableMapping":{"cap":"dLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:141","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[31,155,156],"tindex":"5e5be889-dc0b-11e4-ab53-97beff64a8e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[],"tindex":"5e5be88a-dc0b-11e4-ab53-ff40e9ba8416","variableMapping":{"len":"shift","start":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":0},{"failures":[],"tindex":"5e5be88b-dc0b-11e4-ab53-8b8ef5d60246","variableMapping":{"err":"y2","dLat":"y1","tmpErr":"x2","x1":"y1","sLon":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[386],"tindex":"5e5c0f9c-dc0b-11e4-ab53-4b7294669c45","variableMapping":{"forwardBit":"forwardBit","way":"way","encoded":"directionBitMask","backwardBit":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:589","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[111,0,113,116,117,119,129,130,132,25,26,73,74,175,75,176,177,178,179,76,180,77,78,1,79,80,2,181,81,27,82,182,28,183,184,12,83,13,14,15,185,16,186,17,187,18,29,3,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,344,346,347,348,350,351,354,355,356,62,357,358,359,360,361,362,363,64,65,365,66,366,367,368,67,68,369,370,371,372,374,69,70,375,376,377,378,379,380,381,382,383],"tindex":"5e5c0f9d-dc0b-11e4-ab53-1dca71813bb1","variableMapping":{"segmentSizeInBytes":"edgeId","index":"edgeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":-1},{"failures":[],"tindex":"5e5c0f9e-dc0b-11e4-ab53-c5c79f176a6a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"5e5c0f9f-dc0b-11e4-ab53-998109aff366","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"5e5c0fa0-dc0b-11e4-ab53-0f2dd4399cbc","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"usedBits","sign":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"5e5c0fa1-dc0b-11e4-ab53-8944555940a8","variableMapping":{"newUniqueOsmId":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:200","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[414,415,416,417],"tindex":"5e5c0fa2-dc0b-11e4-ab53-3556acc4251b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[418],"tindex":"5e5c0fa3-dc0b-11e4-ab53-037f662b3ee2","variableMapping":{"osmFile":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[31,33,34,37,39,41,42,43,46,48,50,51,52,55,57,59,60,62,65,67,69,70],"tindex":"5e5c0fa4-dc0b-11e4-ab53-2b861472f132","variableMapping":{"initLeafSize":"high","maxLeafEntries":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-1},{"failures":[],"tindex":"5e5c0fa5-dc0b-11e4-ab53-23e1ec3e80c8","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"5e5c0fa6-dc0b-11e4-ab53-031a709e78c6","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"5e5c0fa7-dc0b-11e4-ab53-79dd7e963457","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"shift","entityType":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:194","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[111,112,0,113,114,115,116,117,118,119,120,23,140,141,142,143,144,145,146,72,147,148,149,150,151,30,6,7,386],"tindex":"5e5c0fa8-dc0b-11e4-ab53-dfd75edcc5c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:276","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[],"tindex":"5e5c0fa9-dc0b-11e4-ab53-8d4523d74d33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:154","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"5e5c0faa-dc0b-11e4-ab53-55ffca6f74d2","variableMapping":{"len":"bytes","start":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[],"tindex":"5e5c36bb-dc0b-11e4-ab53-ffb9834e8018","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-2},{"failures":[111,112,0,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,23,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,72,147,148,149,150,151,30,152,71,153,31,154,32,33,155,156,157,158,159,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,174,25,26,73,74,175,75,176,177,178,179,76,180,77,78,1,79,80,2,181,81,27,82,182,28,183,184,12,83,13,14,15,185,16,186,17,187,18,29,188,189,190,191,192,193,194,34,195,196,197,198,199,200,201,35,202,36,37,203,38,204,205,206,39,40,207,208,209,210,211,212,41,42,213,214,215,216,217,218,219,220,221,3,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,43,281,282,283,284,285,286,287,44,288,45,46,289,47,290,291,292,48,49,293,294,295,296,297,298,50,51,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,52,317,318,319,320,321,322,323,53,324,54,55,325,56,326,327,328,57,58,329,330,331,332,333,334,59,60,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,61,350,351,352,353,354,355,356,62,357,358,359,360,361,362,363,63,364,64,65,365,66,366,367,368,67,68,369,370,371,372,373,374,69,70,375,376,377,378,379,380,381,382,383],"tindex":"5e5c36bc-dc0b-11e4-ab53-697dc13b308b","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"5e5c36bd-dc0b-11e4-ab53-d5ca78d55d5b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"5e5c36be-dc0b-11e4-ab53-4d97a2a003df","variableMapping":{"bLen":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:94","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[72,385,419,414,420,415,416,390,421,417],"tindex":"5e5c36bf-dc0b-11e4-ab53-4b542a9d5da5","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[422,423,424,425,426,427,428,429,430,413,224,230,232,233,262,268,270,271],"tindex":"5e5c36c0-dc0b-11e4-ab53-dd2749896a1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"5e5c36c1-dc0b-11e4-ab53-0f868a1e1541","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"i","speed":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[119,431],"tindex":"5e5c36c2-dc0b-11e4-ab53-75cc991f6c30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"5e5c36c3-dc0b-11e4-ab53-f1b3afae3c83","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"5e5c36c4-dc0b-11e4-ab53-d3c1b8145330","variableMapping":{"mKeys":"mKeys","nkeys":"mKeys"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:361","type":"CtAssignmentImpl","sourcecode":"int[] = int[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[432],"tindex":"5e5c5dd5-dc0b-11e4-ab53-759dd0cb9b69","variableMapping":{"str":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:434","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\\t\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[4,6,7,10],"tindex":"5e5c5dd6-dc0b-11e4-ab53-a1aa2655c45e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[31,155,156],"tindex":"5e5c5dd7-dc0b-11e4-ab53-890e6b6b0200","variableMapping":{"allBits":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[111,115,119,120,140,141,146,151,30],"tindex":"5e5c5dd8-dc0b-11e4-ab53-cf4517790ac8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[111,112,0,113,116,117,119,433,26,73,74,175,75,176,177,178,179,76,180,78,1,79,80,2,181,81,82,182,28,12,13,16,17,187,18,29],"tindex":"5e5c5dd9-dc0b-11e4-ab53-dbdc3c11435a","variableMapping":{"edgeTo":"int1","edgeFrom":"int0"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-1},{"failures":[71],"tindex":"5e5c5dda-dc0b-11e4-ab53-3f86300f41cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"5e5c5ddb-dc0b-11e4-ab53-e119fed90f3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"5e5c5ddc-dc0b-11e4-ab53-c98396b9f64d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[84,91,104],"tindex":"5e5c5ddd-dc0b-11e4-ab53-490fa3246e61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:638","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[111,115,119,120,140,141,146,151,30],"tindex":"5e5c5dde-dc0b-11e4-ab53-ef41c8b43ad5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"5e5c5ddf-dc0b-11e4-ab53-5980329e230a","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"mSize","edgeTo":"mSize","edgeFrom":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"5e5c5de0-dc0b-11e4-ab53-735fead48261","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"status":-2},{"failures":[384,85,88,387,92,95,99,102,389,105,108],"tindex":"5e5c5de1-dc0b-11e4-ab53-09a88544a491","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int))\n    int = 1;\n"},"status":-1},{"failures":[141,30,6,386],"tindex":"5e5c5de2-dc0b-11e4-ab53-cdf72ca57c87","variableMapping":{"value":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"5e5c5de3-dc0b-11e4-ab53-11a544f570eb","variableMapping":{"resultOrientation":"java.lang.Double.MAX_VALUE","orientation":"java.lang.Double.MAX_VALUE","java.lang.Math.PI":"minEle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:48","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"5e5c5de4-dc0b-11e4-ab53-1508c85b8cd6","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1043","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"5e5c5de5-dc0b-11e4-ab53-8bf00c323144","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":0},{"failures":[],"tindex":"5e5c84f6-dc0b-11e4-ab53-6fe9551cd845","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"5e5c84f7-dc0b-11e4-ab53-4bd5e657e625","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[],"tindex":"5e5c84f8-dc0b-11e4-ab53-51ae08bcc945","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:219","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[111,112,0,113,114,115,116,117,118,119,120,126,127,128,23,132,434,435,436,437,438,439,440,140,141,142,143,144,145,146,72,147,148,149,150,151,30,391,392,441,393,394,152,71,159,160,161,162,164,165,166,167,168,169,171,172,27,189,190,193,207,41,216,219,226,227,228,264,265,266,298,396,397,442,400,308,311,312,315,329,59,338,341,443,349,351,352,355,369,69,378,381,404,405,444,408,445],"tindex":"5e5c84f9-dc0b-11e4-ab53-cb2188d15a50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[111,112,0,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,23,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,72,147,148,149,150,151,30,152,71,153,31,154,32,33,155,156,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,25,26,73,74,175,75,176,177,178,179,76,180,77,78,1,79,80,2,181,81,27,82,182,28,183,184,12,83,13,14,15,185,16,186,17,187,18,29,188,189,190,191,192,193,194,34,195,196,197,198,199,200,201,35,202,36,37,203,38,204,205,206,39,40,207,208,209,210,211,212,41,42,213,214,215,216,217,218,219,220,221,3,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,246,247,249,250,251,252,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,288,298,308,310,311,312,313,314,315,316,52,317,318,319,320,321,322,323,53,324,54,55,325,56,326,327,328,57,58,329,330,331,332,333,334,59,60,335,336,337,338,339,340,341,342,343,446,447,448,449,450,451,452,453,454,455,456,344,345,346,347,348,349,61,350,351,352,353,354,355,356,62,357,358,359,360,361,362,363,63,364,64,65,365,66,366,367,368,67,68,369,370,371,372,373,374,69,70,375,376,377,378,379,380,381,382,383],"tindex":"5e5c84fa-dc0b-11e4-ab53-59f524be6596","variableMapping":{"size":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-1},{"failures":[],"tindex":"5e5c84fb-dc0b-11e4-ab53-119dc3f42968","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"5e5c84fc-dc0b-11e4-ab53-c5039a7f8433","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:130","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"5e5c84fd-dc0b-11e4-ab53-d70120323a12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":374,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":181,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":349,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":280,"com.graphhopper.reader.OSMReaderTest.testFerry":140,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":135,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":136,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":390,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":100,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":227,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":112,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":383,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":53,"com.graphhopper.coll.CompressedArrayTest.testCompress":423,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":13,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":293,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":202,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":223,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":403,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":442,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":17,"com.graphhopper.GraphHopperTest.testPrepare":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":183,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":76,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":126,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":248,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":102,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":124,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":354,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":224,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":155,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":104,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":73,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":178,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":265,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":308,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":429,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":29,"com.graphhopper.GraphHopperTest.testLoadOSM":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":272,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":266,"com.graphhopper.reader.OSMReaderTest.testSort":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":109,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":32,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":312,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":405,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":214,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":189,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":304,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":168,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":337,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":445,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":373,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":199,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":309,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":384,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":315,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":96,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":231,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":1,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":222,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":75,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":175,"com.graphhopper.coll.OSMIDMapTest.testGetLong":393,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":317,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":367,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":433,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":351,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":67,"com.graphhopper.coll.CompressedArrayTest.testCompress2":422,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":91,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":324,"com.graphhopper.GraphHopperAPITest.testLoad":121,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":449,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":36,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":34,"com.graphhopper.storage.LevelGraphStorageTest.testClone":358,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":432,"com.graphhopper.reader.OSMReaderTest.testBarriers":144,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":20,"com.graphhopper.util.GHUtilityTest.testCopy":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":283,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":240,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":245,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":416,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":401,"com.graphhopper.routing.PathTest.testFindInstruction":160,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":52,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":129,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":431,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":379,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":242,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":215,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":204,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":335,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":56,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":350,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":360,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":284,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":456,"com.graphhopper.util.InstructionListTest.testWayList2":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":273,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":320,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":389,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":152,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":190,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":362,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":22,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":54,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":176,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":194,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":145,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":27,"com.graphhopper.coll.OSMIDMapTest.testGet":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":323,"com.graphhopper.routing.PathBidirRefTest.testExtract":173,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":106,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":369,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":441,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":235,"com.graphhopper.storage.RAMDataAccessTest.testCopy":396,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":388,"com.graphhopper.storage.RAMDataAccessTest.testSegments":400,"com.graphhopper.util.GHUtilityTest.testSort2":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":79,"com.graphhopper.reader.OSMReaderTest.testMain":142,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":57,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":417,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":372,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":313,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":364,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":66,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":382,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":64,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":332,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":84,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":448,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":368,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":151,"com.graphhopper.storage.StorablePropertiesTest.testStore":443,"com.graphhopper.storage.GraphHopperStorageTest.testClone":196,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":300,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":203,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":344,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":285,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":347,"com.graphhopper.routing.PathTest.testTime":158,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":380,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":359,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":49,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":371,"com.graphhopper.util.GHUtilityTest.testSortDirected":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":89,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":409,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":164,"com.graphhopper.GraphHopperTest.testFootOnly":119,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":98,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":230,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":74,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":290,"com.graphhopper.search.NameIndexTest.testCreate":437,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":399,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":161,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":452,"com.graphhopper.routing.QueryGraphTest.testOneWay":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":276,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":426,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":264,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":424,"com.graphhopper.reader.OSMReaderTest.testWithBounds":150,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":402,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":395,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":46,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":154,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":294,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":6,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":356,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":353,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":420,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":9,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":331,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":326,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":193,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":26,"com.graphhopper.util.InstructionListTest.testWayList":127,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":421,"com.graphhopper.GraphHopperAPITest.testDisconnected179":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":286,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":87,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":139,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":48,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":306,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":114,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":187,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":210,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":186,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":378,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":108,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":238,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":451,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":11,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":188,"com.graphhopper.routing.PathTest.testWayList":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":45,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":24,"com.graphhopper.coll.OSMIDMapTest.testGet2":392,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":28,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":375,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":330,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":205,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":321,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":232,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":233,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":397,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":387,"com.graphhopper.util.GHUtilityTest.testSort":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":297,"com.graphhopper.search.NameIndexTest.testPut":435,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":225,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":254,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":257,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":454,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":385,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":71,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":255,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":310,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":327,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":31,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":455,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":365,"com.graphhopper.routing.PathTest.testFound":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":298,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":120,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":386,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":377,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":107,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":55,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":436,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":288,"com.graphhopper.util.InstructionListTest.testEmptyList":125,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":103,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":80,"com.graphhopper.reader.PrinctonReaderTest.testRead":138,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":216,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":228,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":44,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":394,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":279,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":357,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":328,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":411,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":4,"com.graphhopper.reader.OSMReaderTest.testFoot":141,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":296,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":440,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":270,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":381,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":428,"com.graphhopper.reader.OSMReaderTest.testOneWay":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":271,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":37,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":42,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":336,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":408,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":419,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":14,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":83,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":258,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":407,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":153,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":289,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":163,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":191,"com.graphhopper.routing.PathBidirRefTest.testExtract2":174,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":453,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":95,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":274,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":434,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":212,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":97,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":307,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":267,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":213,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":361,"com.graphhopper.GraphHopperTest.testFootAndCar":115,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":207,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":65,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":92,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":239,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":282,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":81,"com.graphhopper.GraphHopperTest.testPrepareOnly":111,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":43,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":148,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":348,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":23,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":211,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":291,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":376,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":70,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":311}}]
