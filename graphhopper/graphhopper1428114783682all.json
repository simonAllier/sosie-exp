[{"failures":[0],"tindex":"edf76d87-da72-11e4-8362-e59a7b427b8f","variableMapping":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"edf857e8-da72-11e4-8362-131c14ca659e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:151","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[1,2,3,4,5,6,7,8],"tindex":"edf87ef9-da72-11e4-8362-5bfff15b4a39","variableMapping":{"sacScale":"res"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"edf87efa-da72-11e4-8362-7b739967371c","variableMapping":{"tmp":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"edf87efb-da72-11e4-8362-83985f1cb92c","variableMapping":{"silent":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[9,10,11,12,13,14,15,16,17,18,19],"tindex":"edf87efc-da72-11e4-8362-8d085de02be3","variableMapping":{"noNumberValue":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:75","type":"CtIfImpl","sourcecode":"if (long == (int)) {\n    throw new java.lang.IllegalArgumentException((\"Illegal key \" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[],"tindex":"edf87efd-da72-11e4-8362-735cfc631b6b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[20,21,22,23,24],"tindex":"edf87efe-da72-11e4-8362-87b21cc2d813","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"edf87eff-da72-11e4-8362-1903d852b422","variableMapping":{"elem":"elem","i":"i","element":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"edf87f00-da72-11e4-8362-11d2a11810b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:143","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"edf87f01-da72-11e4-8362-0360ccd87e19","variableMapping":{"lat":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[25,26,27,28,29,21,30,31,32,33,34,35,36,37,38,23],"tindex":"edf87f02-da72-11e4-8362-538eb1e89955","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:153","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"edf87f03-da72-11e4-8362-7f4720d527ec","variableMapping":{"noNumberValue":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:332","type":"CtReturnImpl","sourcecode":"return int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:139","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-2},{"failures":[],"tindex":"edf87f04-da72-11e4-8362-f1d873d8cff2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[39,40],"tindex":"edf87f05-da72-11e4-8362-5d9ed9c8b2c4","variableMapping":{"graph":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1043","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[41,42,43,44,45,46],"tindex":"edf87f06-da72-11e4-8362-ed39921abba5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-1},{"failures":[47],"tindex":"edf8a617-da72-11e4-8362-5376ee9291bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"edf8a618-da72-11e4-8362-4582f4270231","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[27,48,49,50,29,51,52,53,54,55,56,57,58,59,60,61,62,33,34,36,23,63],"tindex":"edf8a619-da72-11e4-8362-29d1310a65c3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19],"tindex":"edf8a61a-da72-11e4-8362-b530f22cf757","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-1},{"failures":[],"tindex":"edf8a61b-da72-11e4-8362-f74ff953bf5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":0},{"failures":[64,65,47,66],"tindex":"edf8a61c-da72-11e4-8362-3b3e5ff465f9","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:244","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[67,29],"tindex":"edf8a61d-da72-11e4-8362-9775e674d171","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:387","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-1},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,41,83,84,85,86,87,88,89,90,91,92,93,42,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,67,133,134,135,136,137,26,138,27,28,48,49,139,140,50,29,141,142,143,144,145,64,146,147,1,148,149,150,151,2,152,153,154,65,51,52,53,54,55,56,57,58,155,60,156,157,158,159,22,160,161,162,163,164],"tindex":"edf8a61e-da72-11e4-8362-abb4c377cc2c","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"edf8a61f-da72-11e4-8362-594116e639bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[159],"tindex":"edf8a620-da72-11e4-8362-8bd4ae5a5cc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"edf8a621-da72-11e4-8362-f97c84c783a7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"edf8a622-da72-11e4-8362-e32ce9a49268","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[165,166,167],"tindex":"edf8a623-da72-11e4-8362-ddc7c4cabf02","variableMapping":{"nameIndexRef":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[38],"tindex":"edf8cd34-da72-11e4-8362-47bbadfcbbc9","variableMapping":{"value":"skippedEdge2","numberOfBits":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"edf8cd35-da72-11e4-8362-e7a751e24557","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[27,28,139,29,20,21,30,168,169,170,31,61,171,62,32,172,33,34,35,173,36,37,22,38,174,23,175,176,177,178,24],"tindex":"edf8cd36-da72-11e4-8362-7fa6349378e2","variableMapping":{"edge":"mainEdgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"tindex":"edf8cd37-da72-11e4-8362-f9448e1112fe","variableMapping":{"nameIndexRef":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:619","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-1},{"failures":[198],"tindex":"edf8cd38-da72-11e4-8362-2d358cb9bd09","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-1},{"failures":[199,200,201,202,203,204,31,62,37,38,176,177,205,206],"tindex":"edf8cd39-da72-11e4-8362-7fd6cf10ec3b","variableMapping":{"i":"size","to":"size","lonSize":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[207,208,209,210,211,212,213,214,95,215,216,96,97,217,218,219,98,220,221,222,223,224,225,226,227,228,229,43,230,231,232,233,234,235,236,237,238,99,239,240,241,242,243,100,244,245,246,247,101,248,102,103,249,250,104,251,252,105,106,253,254,255,107,256,257,258,259,260,261,262,263,264,265,44,266,267,268,269,270,271,272,273,274,108,275,276,277,278,279,109,280,281,282,283,110,284,111,112,285,286,287,288,289,290,291,292,293,179,294,113,114,115,295,180,296,181,182,297,298,299,300,301,302,303,304,305,306,184,307,116,117,118,308,185,309,186,187,310,311,312,313,314,315,316,119,120,121,122,317,123,318,319,320,321,322,323,324,325,125,126,326,327,328,127,329,330,331,332,333,334,335,336,337,338,45,339,340,341,342,343,344,345,346,347,128,348,349,350,351,352,129,353,354,355,356,130,357,131,132,358,359,360,361,362,363,364,365,366,367,368,369,370,46,371,372,373,374,375,376,377,378,379,380,381,382,383,384,67,385,386,387,388,389,390,391,392,393,394,395,26,138,27,28,48,49,139,396,140,50,29,141,397,398,399,145,64,146,147,1,148,149,150,151,165,2,152,153,154,65,51,52,400,53,54,55,56,57,58,59,155,60,401,402,403,404,405,406,407,408,156,157,409,410,411,412,413,39,414,415,416,417,40,418,419,420,9,421,3,422,423,424,425,426,10,427,428,429,430,158,159,431,432,433,434,11,435,12,436,437,4,438,439,440,441,442,443,13,444,445,446,447,5,448,449,47,0,450,451,452,453,66,454,455,456,457,458,6,459,460,461,462,463,464,198,465,466,467,14,15,7,468,469,470,471,472,473,16,474,475,476,477,478,479,480,481,17,482,18,483,484,8,485,486,487,488,489,490,19,491,492,493,494,495,20,21,30,168,169,170,31,61,171,62,32,496,172,33,34,35,173,36,497,37,22,38,174,23,175,498,499,176,500,501,502,503,504,177,178,205,505,206,24,506,507,508,509,160,161,162,163,510,511,512,513,164,514,515,516],"tindex":"edf8f44a-da72-11e4-8362-8f3037b0fb6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[416],"tindex":"edf8f44b-da72-11e4-8362-e3436be4e61a","variableMapping":{"minResolutionInMeter":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"edf8f44c-da72-11e4-8362-6d4412d989bc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[150,517,436,456,483],"tindex":"edf8f44d-da72-11e4-8362-8b8ca71b51d4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-1},{"failures":[],"tindex":"edf8f44e-da72-11e4-8362-11b383b14fec","variableMapping":{"size":"length","i":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-2},{"failures":[207,208,68,69,70,71,72,74,75,76,78,79,81,82,41,83,85,86,87,89,90,92,93,42,94,518,210,211,212,213,214,95,215,216,96,97,217,218,98,220,221,222,223,224,225,226,227,228,229,43,230,231,232,233,234,235,236,237,238,99,239,240,241,242,243,100,244,245,246,247,101,248,102,103,249,250,104,252,105,106,253,254,107,256,257,258,259,260,261,262,263,264,265,44,266,267,268,269,270,271,272,273,274,108,275,276,277,278,279,109,280,281,282,283,110,284,111,112,285,286,287,288,289,290,292,293,179,294,113,114,115,295,180,296,181,182,297,298,299,300,302,303,304,305,306,184,307,116,117,118,308,185,309,186,187,310,311,312,313,315,316,519,119,120,121,122,123,318,319,320,321,323,324,124,325,125,126,326,327,127,329,330,331,332,333,334,335,336,337,338,45,339,340,341,342,343,344,345,346,347,128,348,349,350,351,352,129,353,354,355,356,130,357,131,132,358,359,46,67,133,134,135,136,137,26,138,27,28,48,49,139,140,50,29,141,520,142,143,144,398,399,145,64,146,147,1,148,149,150,151,165,2,152,153,154,521,65,51,51,52,52,400,400,53,53,54,54,55,55,56,56,57,57,58,58,59,59,155,155,60,60,402,403,407,408,156,157,39,414,415,416,417,40,158,159,460,20,21,30,168,169,170,31,61,171,62,32,496,172,33,34,35,173,36,497,37,22,38,174,23,175,498,176,500,501,502,503,504,177,178,205,505,206,24,506,507,508,509,160,161,162,163,510,511,512,513,164,514,516],"tindex":"edf91b5f-da72-11e4-8362-4d73a8baaaad","variableMapping":{"id":"segmentsToCreate"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"edf91b60-da72-11e4-8362-034e2541131b","variableMapping":{"high":"flags","len":"forwardBit","start":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"tindex":"edf91b61-da72-11e4-8362-b362496941c7","variableMapping":{"resultOrientation":"maxLonTmp","orientation":"maxLonTmp","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[39,417,40],"tindex":"edf91b62-da72-11e4-8362-cb1a1bc6fbc9","variableMapping":{"tmpEntries":"component"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(4)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:117","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[],"tindex":"edf91b63-da72-11e4-8362-39e694a066bb","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"angle","speed":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":0},{"failures":[207,208,209,210,211,212,213,214,95,215,216,96,97,217,218,219,98,220,221,222,223,224,225,226,227,228,229,43,230,231,232,233,234,235,236,237,238,99,239,240,241,242,243,100,244,245,246,247,101,248,102,103,249,250,104,251,252,105,106,253,254,255,107,256,257,258,259,260,261,262,263,264,265,44,266,267,268,269,270,271,272,273,274,108,275,276,277,278,279,109,280,281,282,283,110,284,111,112,285,286,287,288,289,290,291,292,293,179,294,113,114,115,295,180,296,181,182,297,298,299,300,301,302,303,304,305,306,184,307,116,117,118,308,185,309,186,187,310,311,312,313,314,315,316,119,120,121,122,317,123,318,319,320,321,322,323,324,325,125,126,326,327,328,127,329,330,331,332,333,334,335,336,337,338,45,339,340,341,342,343,344,345,346,347,128,348,349,350,351,352,129,353,354,355,356,130,357,131,132,358,359,360,361,362,363,364,365,366,367,368,369,370,46,371,372,373,374,375,376,377,378,379,380,381,382,383,384,67,385,386,387,388,389,390,391,392,393,394,395,26,138,27,28,48,49,139,396,140,50,29,141,397,398,399,145,64,146,147,1,148,149,150,151,2,152,153,154,65,51,52,400,53,54,55,56,57,58,59,155,60,401,402,403,404,405,406,407,408,156,157,409,410,412,413,39,414,415,416,417,40,418,419,420,9,421,3,422,423,424,425,426,10,427,428,429,430,158,159,431,432,433,434,11,435,12,436,437,4,438,439,440,441,442,443,13,444,445,446,447,5,448,449,47,0,450,451,452,453,66,454,455,456,457,458,6,459,460,461,462,463,464,198,465,466,467,14,15,7,468,469,470,471,472,473,16,474,475,476,477,478,479,480,481,17,482,18,483,484,8,485,486,487,488,489,490,19,491,492,493,494,495,20,21,30,168,169,170,31,61,171,62,32,496,172,33,34,35,173,36,497,37,22,38,174,23,175,498,499,176,500,501,502,503,504,177,178,205,505,206,24,506,507,508,509,160,161,162,163,510,511,512,513,164,514,515,516],"tindex":"edf91b64-da72-11e4-8362-074aade02eaa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[119,120,121,123,415,416,506,507,510,511,513,514],"tindex":"edf94275-da72-11e4-8362-7f763046a86d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:44","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[138,27,28,139,140,21,30,168,169,170,31,61,171,62,32,496,172,33,34,35,173,36,497,37,22,38,174,23,498,176,500,501,502,503,504,177,205,505,206,24],"tindex":"edf94276-da72-11e4-8362-6be479b6130a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-1},{"failures":[421,432,446,467,476,479,493],"tindex":"edf94277-da72-11e4-8362-892e40f7e825","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"edf94278-da72-11e4-8362-c5c2aa160cb5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[207,96,98,220,221,228,43,241,245,101,249,104,105,107,256,257,264,44,277,281,110,285,125,127,329,330,337,45,350,354,130,358,360,361,362,369,46,383,387,390,394,398,399,64,65,54,57,39,417,40,457,20,21,170,171,496,33,34,23,175,176,500,177,178,205,24,508,510],"tindex":"edf94279-da72-11e4-8362-e549bebffd8b","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[156,157,522,523,524,161,162,163,525],"tindex":"edf9427a-da72-11e4-8362-45e9d37c5b1d","variableMapping":{"val":"lat1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-1},{"failures":[],"tindex":"edf9427b-da72-11e4-8362-df485786fe04","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:52","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeSkipIterState.getFlags()"},"status":-2},{"failures":[165,166,167],"tindex":"edf9427c-da72-11e4-8362-e98b80916e37","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[210,212,213,96,218,98,220,221,222,223,224,225,226,227,228,230,231,233,234,236,237,238,99,241,243,100,244,245,247,101,102,249,250,304,305,184,116,117,118,308,309,186,187,310,311,312,313,315,316,26,138,27,28,139,140,29,20,21,30,168,169,170,31,61,171,62,32,496,172,33,34,35,173,36,497,37,22,38,174,23,175,498,176,500,501,502,503,177,178,205,505,206,24,508,164],"tindex":"edf9427d-da72-11e4-8362-bf13c806882a","variableMapping":{"segmentSizeInBytes":"I_SKIP_EDGE1","indexDivisor":"I_SKIP_EDGE1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[145,64,146,147,148,149,150,151,153,154,65,166,167,411,419,420,9,421,422,424,10,427,429,432,433,434,11,435,12,438,440,441,13,444,446,447,467,14,15,468,470,471,16,474,476,477,479,480,481,17,482,18,485,487,488,19,491,493,494],"tindex":"edf9427e-da72-11e4-8362-39b3f6078236","variableMapping":{"numTiles":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[27,21,168,172,173,37,22,38,23,176,177,206],"tindex":"edf9698f-da72-11e4-8362-f78aa263e299","variableMapping":{"segmentSizeInBytes":"tmpPrevEdge","indexDivisor":"tmpPrevEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"edf96990-da72-11e4-8362-31e5c88afbd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[39,40],"tindex":"edf96991-da72-11e4-8362-29de014935d1","variableMapping":{"foundIndex":"removed","this":"component","value":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1017","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.insert(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"edf96992-da72-11e4-8362-e34f9cb28b21","variableMapping":{"deltaX":"minLon","tmp":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[428,445,475,492],"tindex":"edf96993-da72-11e4-8362-6913a8138faa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"edf96994-da72-11e4-8362-8db327e727d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:153","type":"CtIfImpl","sourcecode":"if ((java.util.Map<java.lang.Integer, java.lang.Integer>.size()) < 2)\n    return ;\n"},"status":0},{"failures":[],"tindex":"edf96995-da72-11e4-8362-4d60c3e0a506","variableMapping":{"osmFile":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"edf96996-da72-11e4-8362-c91c1c281eaa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"edf96997-da72-11e4-8362-27627fcb952d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[424,427,432,434,440,441,444,467,470,471,474,479,481,487,488,491],"tindex":"edf96998-da72-11e4-8362-bf9bd03e1014","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[43,44,526,45,46],"tindex":"edf96999-da72-11e4-8362-85464569859b","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[],"tindex":"edf9699a-da72-11e4-8362-356cbc1b6f53","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[150,411,419,9,435,12,15,482,18],"tindex":"edf9699b-da72-11e4-8362-c153fb1726bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19],"tindex":"edf9699c-da72-11e4-8362-dd2f42a24e77","variableMapping":{"dir":"pavementName","tr":"tr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:263","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"slight_right\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[159,527],"tindex":"edf9699d-da72-11e4-8362-b7672cd01540","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[95,96,104,105,528,125,26,139,140,50,141],"tindex":"edf9699e-da72-11e4-8362-f38925750aee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[221,230,231,237,100,244,257,266,267,273,109,280,330,339,340,346,129,353,362,371,372,378,385,386,39,416],"tindex":"edf990af-da72-11e4-8362-1fc108ba9759","variableMapping":{"numTiles":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:111","type":"CtIfImpl","sourcecode":"if ((int % 2) == 1)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"edf990b0-da72-11e4-8362-65bb8f5bcc00","variableMapping":{"high":"relBitMask","guess":"relBitMask","low":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[215,221,229,230,231,233,237,238,100,244,257,265,266,267,269,273,274,109,280,330,338,339,340,342,346,347,129,353,362,370,371,372,374,378,379,385,386,39,416],"tindex":"edf990b1-da72-11e4-8362-a3a36b0c3bbb","variableMapping":{"wayIndex":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:263","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-1},{"failures":[],"tindex":"edf990b2-da72-11e4-8362-e75013f29719","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:144","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"edf990b3-da72-11e4-8362-a9422534bcf1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"edfac934-da72-11e4-8362-b3dec008a407","variableMapping":{"len":"index","start":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[],"tindex":"edfac935-da72-11e4-8362-7f12b70f68dd","variableMapping":{"flags":"lastTime","mask":"nanoTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[517],"tindex":"edfac936-da72-11e4-8362-f5195537dd79","variableMapping":{"bytePointer":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:80","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[],"tindex":"edfac937-da72-11e4-8362-8dc92b4f7961","variableMapping":{"weightToPrioMap":"weightToPrioMap","highway":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[165,166,167,423,12,439,469,18,486],"tindex":"edfac938-da72-11e4-8362-6d8858dcd56d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PriorityCode:45","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[95,96,104,105,528,125,26,139,140,50,141],"tindex":"edfac939-da72-11e4-8362-e31eb8271b0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"edfaf04a-da72-11e4-8362-c14c4ab7f397","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[432,479],"tindex":"edfaf04b-da72-11e4-8362-6b9f62a367b6","variableMapping":{"size":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"edfaf04c-da72-11e4-8362-bf49dfcea07c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:161","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"edfaf04d-da72-11e4-8362-85a3d9134f3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"edfaf04e-da72-11e4-8362-535131b1ef4e","variableMapping":{"initializedCounter":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":0},{"failures":[],"tindex":"edfaf04f-da72-11e4-8362-eb5fbcd2714f","variableMapping":{"len":"bits","start":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"edfaf050-da72-11e4-8362-e7e00cd9a3d9","variableMapping":{"gridCellWidth":"y","this":"this","x1":"y","x2":"y"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / java.lang.Math.(java.lang.Math.abs((double - double)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[],"tindex":"edfaf051-da72-11e4-8362-4fc940d722b8","variableMapping":{"edgeId":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":0},{"failures":[9,10,11,12,13,14,15,16,17,18,19],"tindex":"edfaf052-da72-11e4-8362-b760e4cf2f33","variableMapping":{"segmentSizeInBytes":"paveType","indexDivisor":"paveType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"edfaf053-da72-11e4-8362-b50be70b91d0","variableMapping":{"com.graphhopper.reader.pbf.PbfFieldDecoder.COORDINATE_SCALING_FACTOR":"java.lang.Double.POSITIVE_INFINITY","coordLatitudeOffset":"flags","rawLatitude":"flags","coordGranularity":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfFieldDecoder:51","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.pbf.PbfFieldDecoder.double) * ((long) + ((int) * long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"edfaf054-da72-11e4-8362-5df2cd9f0388","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"err","speed":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"edfaf055-da72-11e4-8362-d96abbe37631","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[179,181,182,184,186,187,189,190,191,192,194,196,197],"tindex":"edfaf056-da72-11e4-8362-51c9a6167111","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"edfaf057-da72-11e4-8362-2783527f3fc5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"edfaf058-da72-11e4-8362-27e259c09725","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"edfaf059-da72-11e4-8362-8f77c33b7f6f","variableMapping":{"bs":"bs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":0},{"failures":[],"tindex":"edfaf05a-da72-11e4-8362-61698b6dcdf2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":243,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":497,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":95,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":527,"com.graphhopper.GraphHopperAPITest.testNoLoad":209,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":361,"com.graphhopper.reader.OSMReaderTest.testFerry":145,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":510,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":511,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":482,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":117,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":138,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":525,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":250,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":265,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":83,"com.graphhopper.coll.CompressedArrayTest.testCompress":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":426,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":132,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":501,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":380,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":45,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":306,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":84,"com.graphhopper.util.AngleCalcTest.testOrientation":522,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":205,"com.graphhopper.GraphHopperTest.testPrepare":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":391,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":175,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":345,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":204,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":481,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":32,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":160,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":519,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":507,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":218,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":184,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":417,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":171,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":114,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":18,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":104,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":193,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":98,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":24,"com.graphhopper.GraphHopperTest.testLoadOSM":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":297,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":115,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":410,"com.graphhopper.reader.OSMReaderTest.testSort":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":491,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":152,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":415,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":106,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":355,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":125,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":392,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":57,"com.graphhopper.storage.RAMDataAccessTest.testHeader":79,"com.graphhopper.routing.DijkstraTest.initializationError":401,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":520,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":283,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":242,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":335,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":251,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":107,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":477,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":474,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":309,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":34,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":305,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":308,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":170,"com.graphhopper.coll.OSMIDMapTest.testGetLong":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":169,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":221,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":274,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":235,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":25,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":96,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":237,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":523,"com.graphhopper.coll.CompressedArrayTest.testCompress2":196,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":347,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":467,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":44,"com.graphhopper.GraphHopperAPITest.testLoad":207,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":219,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":6,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":339,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":330,"com.graphhopper.storage.LevelGraphStorageTest.testClone":223,"com.graphhopper.reader.OSMReaderTest.testBarriers":1,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":436,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":61,"com.graphhopper.util.GHUtilityTest.testCopy":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":365,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":316,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":472,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":291,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":428,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":82,"com.graphhopper.routing.PathTest.testFindInstruction":157,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":423,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":239,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":257,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":464,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":508,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":248,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":434,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":356,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":281,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":512,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":503,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":442,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":406,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":225,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":366,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":526,"com.graphhopper.util.InstructionListTest.testWayList2":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":387,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":298,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":17,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":528,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":111,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":412,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":480,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":126,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":158,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":227,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":483,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":63,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":266,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":31,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":329,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":148,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":86,"com.graphhopper.routing.AStarTest.initializationError":495,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":22,"com.graphhopper.coll.OSMIDMapTest.testGet":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":264,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":198,"com.graphhopper.routing.PathBidirRefTest.testExtract":402,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":99,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":485,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":311,"com.graphhopper.storage.RAMDataAccessTest.testCopy":75,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":385,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":8,"com.graphhopper.storage.RAMDataAccessTest.testSegments":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":303,"com.graphhopper.util.GHUtilityTest.testSort2":513,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":35,"com.graphhopper.reader.OSMReaderTest.testMain":146,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":486,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":312,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":492,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":241,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":389,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":43,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":233,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":249,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":54,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":432,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":236,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":154,"com.graphhopper.storage.StorablePropertiesTest.testStore":124,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":74,"com.graphhopper.storage.GraphHopperStorageTest.testClone":332,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":388,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":66,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":341,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":452,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":210,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":475,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":367,"com.graphhopper.routing.PathTest.testTime":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":471,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":102,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":224,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":458,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":300,"com.graphhopper.reader.OSMReaderTest.testRelation":165,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":379,"com.graphhopper.util.GHUtilityTest.testSortDirected":516,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":444,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":93,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":53,"com.graphhopper.GraphHopperTest.testFootOnly":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":420,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":450,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":518,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":185,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":498,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":375,"com.graphhopper.search.NameIndexTest.testCreate":71,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":80,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":51,"com.graphhopper.routing.QueryGraphTest.testOneWay":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":301,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":422,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":113,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":188,"com.graphhopper.reader.OSMReaderTest.testWithBounds":153,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":41,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":73,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":445,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":372,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":381,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":465,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":166,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":220,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":443,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":429,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":276,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":324,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":270,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":127,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":21,"com.graphhopper.util.InstructionListTest.testWayList":161,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":357,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":484,"com.graphhopper.GraphHopperAPITest.testDisconnected179":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":368,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":363,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":440,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":399,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":394,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":490,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":48,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":334,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":505,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":350,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":478,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":172,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":178,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":101,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":454,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":468,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":19,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":174,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":494,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":325,"com.graphhopper.routing.PathTest.testWayList":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":393,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":469,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":371,"com.graphhopper.coll.OSMIDMapTest.testGet2":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":23,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":90,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":245,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":275,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":489,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":344,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":262,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":186,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":234,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":187,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":76,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":42,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":310,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":4,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":14,"com.graphhopper.util.GHUtilityTest.testSort":514,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":384,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":488,"com.graphhopper.search.NameIndexTest.testPut":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":285,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":331,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":307,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":123,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":435,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":318,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":252,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":7,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":143,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":463,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":271,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":39,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":67,"com.graphhopper.routing.PathTest.testFound":407,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":141,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":411,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":247,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":487,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":267,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":200,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":70,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":46,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":72,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":337,"com.graphhopper.util.InstructionListTest.testEmptyList":509,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":473,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":33,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":457,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":448,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":427,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":173,"com.graphhopper.reader.PrinctonReaderTest.testRead":398,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":130,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":118,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":263,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":137,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":360,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":272,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":438,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":517,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":470,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":433,"com.graphhopper.reader.OSMReaderTest.testFoot":64,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":60,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":383,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":181,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":418,"com.graphhopper.reader.OSMReaderTest.testOneWay":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":182,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":340,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":353,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":282,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":424,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":92,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":437,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":502,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":206,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":453,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":500,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":460,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":373,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":400,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":326,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":521,"com.graphhopper.routing.PathBidirRefTest.testExtract2":403,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":20,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":299,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":68,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":352,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":476,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":395,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":461,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":323,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":441,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":295,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":354,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":515,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":455,"com.graphhopper.GraphHopperTest.testFootAndCar":49,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":128,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":315,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":364,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":409,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":456,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":504,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":259,"com.graphhopper.GraphHopperTest.testPrepareOnly":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":37,"com.graphhopper.GraphHopperTest.testVia":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":493,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":362,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":2,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":214,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":163,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":351,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":462,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":376,"com.graphhopper.routing.AStarBidirectionTest.initializationError":404,"com.graphhopper.util.AngleCalcTest.testCombined":524,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":430,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":246,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":244,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":105}}]
