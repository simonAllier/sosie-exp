[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"61d488a3-da98-11e4-9b20-c1fa61b8277a","variableMapping":{"size":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:237","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"61d4afb4-da98-11e4-9b20-a105f9f61359","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[10],"tindex":"61d4afb5-da98-11e4-9b20-f3c9d4b88904","variableMapping":{"flags":"encoded","nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"61d4afb6-da98-11e4-9b20-d50ce552237b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"61d4afb7-da98-11e4-9b20-c7d39d090077","variableMapping":{"shift":"bits","preferWayEncoder":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"61d4afb8-da98-11e4-9b20-61a26df899c7","variableMapping":{"i":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"61d4afb9-da98-11e4-9b20-0de265149540","variableMapping":{"bytePos":"capacity","indexDivisor":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:311","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[11,12,13,14,15],"tindex":"61d4afba-da98-11e4-9b20-39b99805db9a","variableMapping":{"shift":"flags","tmpValue":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"61d4afbb-da98-11e4-9b20-514202535ee5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[16],"tindex":"61d4afbc-da98-11e4-9b20-3fdd7320de50","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"61d4afbd-da98-11e4-9b20-75399aadf10b","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"61d4afbe-da98-11e4-9b20-4fca369d35ba","variableMapping":{"nodeB":"key","edgeId":"key","nodeA":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-1},{"failures":[],"tindex":"61d4afbf-da98-11e4-9b20-e9c5cd7b1186","variableMapping":{"val":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","java.lang.Integer.MAX_VALUE":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:244","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"61d4afc0-da98-11e4-9b20-a5427a4c1e3a","variableMapping":{"minLon":"lon","maxLat":"lat","minLat":"lon","maxLon":"lon","lon":"lon","lat":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:158","type":"CtReturnImpl","sourcecode":"return (((double < (double)) && (double >= (double))) && (double < (double))) && (double >= (double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[0,1,2,3,5,7,8],"tindex":"61d4afc1-da98-11e4-9b20-bff2bfba8758","variableMapping":{"x1":"midLat","x2":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[47,10,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"61d4d6d2-da98-11e4-9b20-1fc090817e24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[64],"tindex":"61d4d6d3-da98-11e4-9b20-7f4d6e1b91d0","variableMapping":{"ghLocation":"trackType","osmFile":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[65,63],"tindex":"61d4d6d4-da98-11e4-9b20-7dd0f927ec0c","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[66,67,68,69,70,71,22,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,29,87,88,89,90,91,92,43,93,94,95,96,97,98,99,47,100,101,102,103,104,105,106,107,108,109,110,111,112,113,49,53,114,54,115,116,56,117,118],"tindex":"61d4fde5-da98-11e4-9b20-b5d41cbd4b79","variableMapping":{"nodeThis":"index","nextEdgeOther":"index","nodeOther":"length","nextEdge":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[119,120,121,122,11,12,123,124,125,126,127,108,128,15],"tindex":"61d4fde6-da98-11e4-9b20-4bc42aaf74dd","variableMapping":{"edgeCount":"skippedEdge1","lastEdgeIndex":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"61d4fde7-da98-11e4-9b20-f101b3cddee9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"61d4fde8-da98-11e4-9b20-f3c5eb367777","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[129,48],"tindex":"61d4fde9-da98-11e4-9b20-1f205c8b0020","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\")))) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[16,48,130],"tindex":"61d4fdea-da98-11e4-9b20-ed6ce0a16c9b","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-1},{"failures":[131,132,120,122,12,123,133,134,124,125,135,136,13,137,138,139,140,126,127,108,128,141,15,50,51,52,53,54],"tindex":"61d4fdeb-da98-11e4-9b20-597a95535a6b","variableMapping":{"mGarbage":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[],"tindex":"61d4fdec-da98-11e4-9b20-279c60c2070b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"61d524fd-da98-11e4-9b20-31299362ee51","variableMapping":{"otherEncoder":"speedEncoder","flags":"encoded","this":"speedEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:86","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":0},{"failures":[],"tindex":"61d54c0e-da98-11e4-9b20-1d96c59e99bf","variableMapping":{"shift":"flags","tmpValue":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:61","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"61d54c0f-da98-11e4-9b20-a561c55c3d33","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >> 16))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":0},{"failures":[],"tindex":"61d54c10-da98-11e4-9b20-8db5adcd4719","variableMapping":{"neighborUpdates":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":0},{"failures":[],"tindex":"61d54c11-da98-11e4-9b20-615d4b0fb86a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[142,143],"tindex":"61d54c12-da98-11e4-9b20-d321bec777d6","variableMapping":{"counter":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"61d54c13-da98-11e4-9b20-cb67f7cba316","variableMapping":{"high":"high","guess":"high","low":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[144,145,146,147,58,148],"tindex":"61d57224-da98-11e4-9b20-23752a0d85f0","variableMapping":{"retBucket":"maxTurnCosts","storedKey":"turnRestrictionBit","bucketSize":"maxTurnCosts","key":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:107","type":"CtIfImpl","sourcecode":"if (long == long) {\n    return int * (int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"61d57225-da98-11e4-9b20-7b2314c3eb7b","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"61d57226-da98-11e4-9b20-cb5a2be1f453","variableMapping":{"nodesContracted":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"61d57227-da98-11e4-9b20-51b069d6e6af","variableMapping":{"java.lang.Double.MAX_VALUE":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"61d57228-da98-11e4-9b20-1db42009d65c","variableMapping":{"elem":"mKeys","keys":"mKeys","i":"i","key":"i","child":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:165","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    int[][int] = int[][int];\n    int[][int] = int[][int];\n    int = int;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[],"tindex":"61d57229-da98-11e4-9b20-336626bc8e2a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"61d5722a-da98-11e4-9b20-afcce6967c0a","variableMapping":{"maxLeafEntries":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"61d5722b-da98-11e4-9b20-fb7cb913e36b","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"61d5722c-da98-11e4-9b20-9b0b6c760544","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[],"tindex":"61d5722d-da98-11e4-9b20-2de282f50e1c","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":0},{"failures":[],"tindex":"61d5722e-da98-11e4-9b20-3ffc096cc511","variableMapping":{"ghLocation":"entryVal"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"61d5722f-da98-11e4-9b20-2bf0782efb3d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[149,69,150,70,151,17,152,153,154,155,156,157,158,159,160,18,161,19,162,163,164,20,21,71,165,166,167,168,22,23,169,170,171,72,172,73,173,174,175,176,177,74,178,75,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,76,77,78,79,197,198,199,200,201,202,203,204,205,206,207,80,208,81,209,210,211,212,213,214,215,216,217,218,219,83,220,84,221,85,222,24,223,224,225,226,227,228,229,230,231,232,25,233,26,234,235,236,27,28,86,237,238,239,240,29,30,241,242,243,87,244,88,245,246,247,248,249,250,251,252,253,254,255,256,257,258,90,259,91,260,38,261,262,263,264,265,266,267,268,269,270,39,271,40,272,273,274,41,42,92,275,276,277,278,43,44,279,280,281,93,282,94,283,284,285,131,286,287,288,289,290,291,292,293,294,97,98,99,47,295,296,297,298,45,299,65,46,300,301,302,303,304,100,101,305,102,306,307,103,104,308,105,106,309,310,107,119,311,132,312,313,314,315,316,120,121,317,318,319,122,11,12,123,133,134,124,125,135,136,320,13,321,14,137,138,139,140,126,322,127,108,128,141,15,113,49,50,51,52,53,114,54,115,116,130,55,56,323,57,117,118,58,59,60,61,62,324,63,148,325,326],"tindex":"61d5c050-da98-11e4-9b20-71d1efabfb62","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"segmentSizeInBytes","speed":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"61d5c051-da98-11e4-9b20-3135a9e4130f","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[16,327],"tindex":"61d5c052-da98-11e4-9b20-31d827b1bfb2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[328,329],"tindex":"61d5c053-da98-11e4-9b20-eff5b7965ca8","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-1},{"failures":[],"tindex":"61d5c054-da98-11e4-9b20-33b76899f9f4","variableMapping":{"pointer":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:125","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((\"pointer cannot be negative:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":0},{"failures":[330,331],"tindex":"61d5c055-da98-11e4-9b20-692baade261e","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[332,333,334,335,336,337,338,339,340,64,341],"tindex":"61d5c056-da98-11e4-9b20-ef596dfff8ab","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:170","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"61d5c057-da98-11e4-9b20-19955a445230","variableMapping":{"maxTurnCosts":"maxTurnCosts","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","cost":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[122,11,12,108,128,15],"tindex":"61d5c058-da98-11e4-9b20-27614dffc26e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true)"},"status":-1},{"failures":[69,70,151,17,158,159,167,169,72,174,83,84,85,222,24,229,231,239,241,87,246,342,343,31,344,248,345,346,347,348,90,91,260,38,267,269,277,279,93,284,131,287,288,45,300,301,349,103,105,119,132,312,120,121,317,122,11,12,124,136,321,137,138,15,55,63,325,326],"tindex":"61d5c059-da98-11e4-9b20-99db5923eb9e","variableMapping":{"cap":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[],"tindex":"61d5c05a-da98-11e4-9b20-87f4efcc4ff0","variableMapping":{"area":"this","raFile":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:199","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.write(byte[])"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"61d5c05b-da98-11e4-9b20-6d9e61f80da4","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"61d5c05c-da98-11e4-9b20-c16626918635","variableMapping":{"todoBytes":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"61d5e76d-da98-11e4-9b20-e14603671ea7","variableMapping":{"store":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"61d5e76e-da98-11e4-9b20-f7c070a56bd6","variableMapping":{"entry":"name"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-2},{"failures":[],"tindex":"61d5e76f-da98-11e4-9b20-93201d65198c","variableMapping":{"i":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[119,132,120,121,122,11,12,123,133,134,124,125,135,136,320,13,14,137,138,139,140,126,127,108,128,141,15,49,50,53,115],"tindex":"61d5e770-da98-11e4-9b20-c9e6b9ea7f74","variableMapping":{"pointIndex":"tmpEdge","index":"tmpEdge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int))), false)"},"status":-1},{"failures":[],"tindex":"61d5e771-da98-11e4-9b20-b36ac77ad191","variableMapping":{"defaultUTurnCost":"java.lang.Double.POSITIVE_INFINITY","turnCosts":"java.lang.Double.POSITIVE_INFINITY","edgeId":"maxTurnCosts","prevOrNextEdgeId":"maxTurnCosts","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[0,1,2,3,5,6,7,8,9],"tindex":"61d5e772-da98-11e4-9b20-ff26a5db51f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"61d5e773-da98-11e4-9b20-cfd6e1e57460","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[149,69,350,351,150,70,151,17,152,153,154,155,156,157,158,352,159,160,18,161,19,162,163,164,20,21,71,165,166,167,353,168,22,23,169,170,171,72,172,73,173,174,175,176,177,74,178,75,179,180,181,182,183,184,185,186,187,354,188,189,190,191,192,193,355,194,195,356,196,76,77,78,357,79,197,198,199,200,358,201,202,203,204,205,206,207,80,208,81,209,210,211,212,213,214,215,216,217,359,218,219,83,360,220,84,361,362,221,85,222,24,223,224,225,226,227,228,229,230,231,232,25,233,26,234,235,236,27,28,86,237,238,239,363,240,29,30,241,242,243,87,244,88,245,246,247,342,343,31,364,365,366,367,368,369,344,370,248,371,32,372,33,373,374,375,34,35,376,377,378,345,379,249,36,37,346,380,381,347,382,383,384,348,385,252,253,254,255,256,89,257,258,90,386,387,259,91,260,38,261,262,263,264,265,266,267,268,269,270,39,271,40,272,273,274,41,42,92,275,276,277,388,278,43,44,279,280,281,93,282,94,283,284,285,131,286,287,288,289,290,291,292,293,294,389,97,98,99,47,295,296,297,298,45,299,65,46,300,301,302,303,304,390,391,100,101,305,305,102,102,306,306,307,307,103,103,104,104,308,308,105,105,106,106,309,309,310,310,107,107,119,311,132,312,313,314,315,316,120,121,317,318,319,122,11,12,123,133,134,124,125,135,136,320,13,321,14,137,138,139,140,126,322,127,108,128,141,15,113,392,49,50,51,52,53,114,54,115,116,130,55,56,323,57,117,118,58,59,60,61,62,324,63,148,325,326],"tindex":"61d5e774-da98-11e4-9b20-b73df7ae2967","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"61d5e775-da98-11e4-9b20-7d87b4abd6bd","variableMapping":{"high":"flags","highKey":"scDirMask","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[176,180,182,183,393,206,210,212,213,0,1,2,3,5,7,8,394,395,9],"tindex":"61d5e776-da98-11e4-9b20-392c8a94f3c8","variableMapping":{"factor":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"61d60e87-da98-11e4-9b20-d1f1bafc1073","variableMapping":{"max":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[144,145,146,147,58,148],"tindex":"61d60e88-da98-11e4-9b20-8bae0057beb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[176,74,178,75,179,181,183,184,185,186,187,188,189,196,76,77,78,79,203,204,206,80,208,81,209,211,213,214,215,216,217,218,219,131,286,396,397,295,296,299,65,46,320,137,138,126,113,392,49,50,51,52,53,114,54,115,116,55,56,323,57,117,118,58,59,60,61,62,63],"tindex":"61d60e89-da98-11e4-9b20-8942f75e7fe4","variableMapping":{"segmentSizeInBytes":"frontIndex","indexDivisor":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[65,46,63],"tindex":"61d60e8a-da98-11e4-9b20-45e540f550d1","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"biggestStart","edgeTo":"maxCount","edgeFrom":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[16],"tindex":"61d60e8b-da98-11e4-9b20-c772dd2c94bc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[47,398],"tindex":"61d60e8c-da98-11e4-9b20-f38edafe4ee4","variableMapping":{"lazyUpdates":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[399],"tindex":"61d60e8d-da98-11e4-9b20-fd40b526c2a9","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[132,313,120,317,319,400],"tindex":"61d60e8e-da98-11e4-9b20-4de93b2b59b6","variableMapping":{"workerThreads":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[177,207,0,1,2,3,4,5,6,7,8,9],"tindex":"61d60e8f-da98-11e4-9b20-871d99a681e2","variableMapping":{"towerNodeDistance":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[45,300,301],"tindex":"61d60e90-da98-11e4-9b20-bb1b0ea07fb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"61d60e91-da98-11e4-9b20-95e3f0ce8c19","variableMapping":{"initLeafSize":"nextWayBit","maxLeafEntries":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":0},{"failures":[18,23,25,30,32,37,39,44,45,46],"tindex":"61d60e92-da98-11e4-9b20-691060c0f1ea","variableMapping":{"elem":"mValues","size":"mSize","keys":"mKeys","i":"mSize","child":"mSize","lastPrio":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:111","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[149,69,350,351,150,70,151,17,152,153,154,155,156,157,158,352,159,160,18,161,19,162,163,164,20,21,71,165,166,167,353,168,22,23,169,170,171,72,172,73,173,174,175,176,177,74,178,75,179,180,181,182,183,184,185,186,187,354,188,189,190,191,192,193,194,195,356,196,76,77,78,79,197,198,199,200,201,202,203,204,205,206,207,80,208,81,209,210,211,212,213,214,215,216,217,359,218,219,83,220,84,361,362,221,85,222,24,223,224,225,226,227,228,229,230,231,232,25,233,26,234,235,236,27,28,86,237,238,239,363,240,29,30,241,242,243,87,244,88,245,246,247,248,249,401,402,250,403,404,405,406,407,408,409,251,252,253,254,255,256,89,257,258,90,386,387,259,91,260,38,261,262,263,264,265,266,267,268,269,270,39,271,40,272,273,274,41,42,92,275,276,277,388,278,43,44,279,280,281,93,282,94,283,284,285,131,286,287,288,289,290,291,292,293,294,389,97,98,99,47,295,296,297,298,45,299,65,46,300,301,302,303,304,390,391,100,101,305,305,102,102,306,306,307,307,103,103,104,104,308,308,105,105,106,106,309,309,310,310,107,107,119,311,132,312,313,314,315,316,120,121,317,318,319,122,11,12,123,133,134,124,125,135,136,320,13,321,14,137,138,139,140,126,322,127,108,128,141,15,113,392,49,50,51,52,53,114,54,115,116,130,55,56,323,57,117,118,58,59,60,61,62,324,63,148,325,326],"tindex":"61d635a3-da98-11e4-9b20-49ea9724b950","variableMapping":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[176,74,178,75,179,181,182,183,184,185,186,187,188,189,410,411,412,413,393,414,415,203,204,206,80,208,81,209,211,212,213,214,215,216,217,218,219,131,286,320,137,138,126,49,50,51,52,53,54,115,56,323,57],"tindex":"61d635a4-da98-11e4-9b20-b5adb61ce6fd","variableMapping":{"minResolutionInMeter":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[122,11,12,108,128,15],"tindex":"61d635a5-da98-11e4-9b20-f18e7d58fb63","variableMapping":{"allBits":"skippedEdge1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:78","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"61d635a6-da98-11e4-9b20-5ba6fcca9f2d","variableMapping":{"allSegments":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[159,231,248,269,47,416,417,333,418,419,420,421,336,422,391,100,11,12,137,15,130,55,63],"tindex":"61d635a7-da98-11e4-9b20-d5633176f488","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"shift","speed":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"61d635a8-da98-11e4-9b20-f3250c354bbf","variableMapping":{"res":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":0},{"failures":[69,70,151,17,153,154,157,158,159,162,164,167,168,169,171,72,174,83,84,85,222,24,224,225,228,229,231,234,236,239,240,241,243,87,246,342,343,31,365,366,369,344,248,373,375,345,249,346,381,347,348,252,256,90,91,260,38,262,263,266,267,269,272,274,277,278,279,281,93,284,131,287,288,289,292,97,98,99,47,297,298,45,299,46,300,302,416,10,423,48,424,349,304,420,391,100,101,103,105,119,311,132,312,313,314,315,120,121,317,318,319,122,11,12,123,133,134,124,125,135,136,320,13,321,14,137,138,139,140,126,322,127,108,128,141,15,113,392,49,50,51,52,53,114,54,115,55,56,57,58,59,60,61,62,63,325,326],"tindex":"61d635a9-da98-11e4-9b20-2d8b537929b1","variableMapping":{"value":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"61d635aa-da98-11e4-9b20-6faf10a81dce","variableMapping":{"mGarbage":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"61d635ab-da98-11e4-9b20-9d40b61ba694","variableMapping":{"maxMCSpeed":"midLat","speed":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:174","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"61d65cbc-da98-11e4-9b20-43338908b91c","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"61d65cbd-da98-11e4-9b20-3309ed02ab80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"61d65cbe-da98-11e4-9b20-a38a9d06b841","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[425],"tindex":"61d65cbf-da98-11e4-9b20-21fe3344326d","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-1},{"failures":[],"tindex":"61d65cc0-da98-11e4-9b20-9f18299513d9","variableMapping":{"this":"this","unknownSpeed":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"61d65cc1-da98-11e4-9b20-93abbd12a731","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"61d65cc2-da98-11e4-9b20-e9a34ca8419f","variableMapping":{"item":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"61d65cc3-da98-11e4-9b20-83ef27217f55","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[2,6],"tindex":"61d65cc4-da98-11e4-9b20-95f438d0536f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[203,204,206,80,208,81,209,211,212,213,214,215,216,217,218,219,252,254,255,90,259,91,260,38,261,262,263,264,265,266,267,270,39,40,272,274,41,42,92,277,278,43,44,279,281,93,94,284,285,287,292,119,311,132,312,313,314,315,316,120,121,317,319,122,11,12,123,133,134,124,125,135,136,320,13,321,14,137,138,139,140,126,322,127,108,128,141,15,113,392,49,50,53,114,115],"tindex":"61d683d5-da98-11e4-9b20-a7d76cfb3bff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":278,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":322,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":89,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":422,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":343,"com.graphhopper.reader.OSMReaderTest.testFerry":130,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":288,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":289,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":208,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":392,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":230,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":173,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":376,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":159,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":317,"com.graphhopper.GraphHopperTest.testPrepare":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":382,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":119,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":164,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":13,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":97,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":356,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":341,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":296,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":206,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":300,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":64,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":136,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":178,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":245,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":83,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":394,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":91,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":330,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":122,"com.graphhopper.GraphHopperTest.testLoadOSM":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":184,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":404,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":75,"com.graphhopper.reader.OSMReaderTest.testSort":323,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":361,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":170,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":69,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":383,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":105,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":243,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":388,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":410,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":156,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":360,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":85,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":268,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":211,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":204,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":124,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":38,"com.graphhopper.coll.OSMIDMapTest.testGetLong":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":233,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":223,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":273,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":90,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":41,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":231,"com.graphhopper.GraphHopperAPITest.testLoad":131,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":403,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":160,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":17,"com.graphhopper.storage.LevelGraphStorageTest.testClone":262,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":327,"com.graphhopper.reader.OSMReaderTest.testBarriers":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":203,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":135,"com.graphhopper.util.GHUtilityTest.testCopy":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":366,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":219,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":355,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":411,"com.graphhopper.routing.PathTest.testFindInstruction":101,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":24,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":287,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":282,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":191,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":171,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":241,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":26,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":315,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":420,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":264,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":367,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":251,"com.graphhopper.util.InstructionListTest.testWayList2":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":185,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":174,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":226,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":143,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":303,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":350,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":414,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":266,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":33,"com.graphhopper.storage.RAMDirectoryTest.testSynched":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":232,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":125,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":151,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":108,"com.graphhopper.coll.OSMIDMapTest.testGet":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":229,"com.graphhopper.routing.PathBidirRefTest.testExtract":297,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":425,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":92,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":189,"com.graphhopper.util.GHUtilityTest.testSort2":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":139,"com.graphhopper.reader.OSMReaderTest.testMain":56,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":27,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":216,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":381,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":269,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":40,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":396,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":284,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":103,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":239,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":250,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":274,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":324,"com.graphhopper.storage.StorablePropertiesTest.testStore":82,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":95,"com.graphhopper.storage.GraphHopperStorageTest.testClone":153,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":48,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":161,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":252,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":368,"com.graphhopper.routing.PathTest.testTime":391,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":94,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":35,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":276,"com.graphhopper.util.GHUtilityTest.testSortDirected":294,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":307,"com.graphhopper.GraphHopperTest.testFootOnly":115,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":415,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":76,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":133,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":412,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":373,"com.graphhopper.search.NameIndexTest.testCreate":68,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":305,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":406,"com.graphhopper.routing.QueryGraphTest.testOneWay":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":354,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":74,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":2,"com.graphhopper.reader.OSMReaderTest.testWithBounds":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":32,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":377,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":260,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":387,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":238,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":202,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":234,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":70,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":12,"com.graphhopper.util.InstructionListTest.testWayList":98,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":172,"com.graphhopper.GraphHopperAPITest.testDisconnected179":286,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":369,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":363,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":364,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":326,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":34,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":348,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":51,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":155,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":318,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":167,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":121,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":337,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":141,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":359,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":405,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":149,"com.graphhopper.routing.PathTest.testWayList":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":384,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":371,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":398,"com.graphhopper.coll.OSMIDMapTest.testGet2":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":15,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":237,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":163,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":227,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":212,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":272,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":213,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":214,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":338,"com.graphhopper.util.GHUtilityTest.testSort":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":379,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":9,"com.graphhopper.search.NameIndexTest.testPut":66,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":246,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":207,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":79,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":199,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":408,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":308,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":197,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":304,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":220,"com.graphhopper.storage.MMapDirectoryTest.testSynched":329,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":235,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":45,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":409,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":249,"com.graphhopper.routing.PathTest.testFound":390,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":116,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":421,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":281,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":254,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":25,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":400,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":67,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":248,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":158,"com.graphhopper.util.InstructionListTest.testEmptyList":389,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":137,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":349,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":140,"com.graphhopper.reader.PrinctonReaderTest.testRead":325,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":72,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":81,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":228,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":3,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":342,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":236,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":146,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":142,"com.graphhopper.reader.OSMReaderTest.testFoot":55,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":345,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":182,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":283,"com.graphhopper.reader.OSMReaderTest.testOneWay":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":183,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":18,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":23,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":242,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":165,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":375,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":314,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":319,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":417,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":312,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":302,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":372,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":306,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":351,"com.graphhopper.routing.PathBidirRefTest.testExtract2":298,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":407,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":186,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":195,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":340,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":168,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":358,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":385,"com.graphhopper.util.SimpleIntDequeTest.testPush":397,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":179,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":169,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":424,"com.graphhopper.GraphHopperTest.testFootAndCar":52,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":71,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":339,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":365,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":399,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":224,"com.graphhopper.GraphHopperTest.testPrepareOnly":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":127,"com.graphhopper.GraphHopperTest.testVia":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":31,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":60,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":256,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":47,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":416,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":374,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":280,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":44,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":84}}]
