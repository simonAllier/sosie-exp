[{"failures":[],"tindex":"848cbca4-da97-11e4-b58d-c93434bffa43","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[0,1],"tindex":"848ce3b5-da97-11e4-b58d-eb61283c5040","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[],"tindex":"848ce3b6-da97-11e4-b58d-419ccf5133b4","variableMapping":{"osmFile":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[],"tindex":"848ce3b7-da97-11e4-b58d-2951304480d0","variableMapping":{"intVal":"size","degree":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"848ce3b8-da97-11e4-b58d-67e0a008cb70","variableMapping":{"orientation":"fwdSpeed","resultOrientation":"maxSpeed","baseOrientation":"fwdSpeed","java.lang.Math.PI":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"848ce3b9-da97-11e4-b58d-b90f7f64b3f0","variableMapping":{"com.graphhopper.util.Constants.VERSION":"message","tmp":"message"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"848ce3ba-da97-11e4-b58d-c3f6c64da6ca","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[36,37,38,39],"tindex":"848ce3bb-da97-11e4-b58d-afd047c1acf5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"848ce3bc-da97-11e4-b58d-55d2b093be6e","variableMapping":{"edgeId":"speed","nextEdge":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":0},{"failures":[],"tindex":"848ce3bd-da97-11e4-b58d-3fb4981b0025","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"848ce3be-da97-11e4-b58d-27cbc0039a33","variableMapping":{"algo":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":0},{"failures":[],"tindex":"848ce3bf-da97-11e4-b58d-f1ef061a24de","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[2,3,6,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"848d0ad0-da97-11e4-b58d-ff0e76f4893f","variableMapping":{"includeWay":"millis"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:347","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"848d0ad1-da97-11e4-b58d-cdc77d8fd045","variableMapping":{"segmentSizeInBytes":"allBits","capacity":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:413","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"848d0ad2-da97-11e4-b58d-e7ba768645ca","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[],"tindex":"848d0ad3-da97-11e4-b58d-3bbd7335fbc2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"848d0ad4-da97-11e4-b58d-4bca155a1a56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":0},{"failures":[5,40,83,84,85],"tindex":"848d0ad5-da97-11e4-b58d-5f3d788230c6","variableMapping":{"scDirMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"848d0ad6-da97-11e4-b58d-039302a5f32d","variableMapping":{"file":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:234","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[72,75],"tindex":"848d31e7-da97-11e4-b58d-19b6b53ff406","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":-1},{"failures":[86,87,2,3,4,5,6,88,7,40,89,90,91,92,83,93,94,95,96,97,98,99,100,101,102,8,103,104,105,106,107,108,109,110,111,112,113,114,115,116,9,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,70,178,179,180,181,182,183,184,71,72,185,186,187,188,189,190,191,192,193,194,73,195,196,197,198,199,200,201,74,75,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,41,42,43,44,45,46,47,48,49,50,51,364,52,53,54,55,56,57,365,58,59,60,61,62,63,366,64,367,368,369,370,371,65,66,372,373,374,67,375,375,376,376,377,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386],"tindex":"848d8008-da97-11e4-b58d-c7d72d2b0b81","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"848d8009-da97-11e4-b58d-951f6c12d0e1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[86,87,2,3,4,5,6,88,7,40,89,92,83,93,94,95,96,97,98,99,100,101,102,8,103,387,388,389,390,391,392,393,394,110,114,115,116,9,395,396,397,398,145,399,400,401,402,403,404,405,406,407,408,409,410,172,173,174,175,177,179,180,181,196,197,198,411,412,413,414,415,416,417,418,419,420,421,422,214,217,218,221,242,248,253,255,256,260,261,264,285,291,296,298,299,302,305,306,309,330,336,341,343,344,423,424,356,357,362,363,59,375,376,378,379,380,381,382,383,385,386],"tindex":"848d800a-da97-11e4-b58d-9d755dc1c96b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1},{"failures":[216,217,222,233,234,235,237,241,245,251,64,368,369,370,65,372,374,67],"tindex":"848d800b-da97-11e4-b58d-73637f8ebd37","variableMapping":{"segmentSizeInBytes":"a","length":"a"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"848d800c-da97-11e4-b58d-6f73536d66da","variableMapping":{"flags":"oldRelationFlags","scDirMask":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"848d800d-da97-11e4-b58d-bfd950c6637c","variableMapping":{"acceptedRailways":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[92,425],"tindex":"848d800e-da97-11e4-b58d-ed2a551d1ed8","variableMapping":{"str":"motorcarTag"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:420","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:173","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-1},{"failures":[85],"tindex":"848d800f-da97-11e4-b58d-a5769db8f18e","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[5,89,92,83,93,94,95,96,97,98,99,100,101,102,8,103,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,163,170,191,208,209,210,211,212,213,214,215,216,217,218,219,220,426,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,427,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,428,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,429,430,431,349,84,432,433,434,85,435,352,10,436,11,12,437,438,439,440,13,14,425,441,442,443,444,445,446,447,448,15,449,450,451,452,453,454,16,455,17,36,456,457,458,19,459,20,460,461,462,463,464,465,21,466,22,37,467,468,23,24,469,470,25,26,471,472,473,474,475,476,477,478,27,479,28,38,480,481,356,357,482,29,30,483,484,31,32,485,486,487,488,489,490,491,492,33,493,34,39,494,495,496,35,497,41,42,43,44,45,46,47,48,49,50,51,364,52,53,54,55,56,57,365,58,59,60,61,62,498,375,499,500],"tindex":"848dce30-da97-11e4-b58d-759b4e2bc387","variableMapping":{"line":"encoderList"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:135","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1},{"failures":[68,69,76,77,78,501,79,80,82],"tindex":"848dce31-da97-11e4-b58d-87f03ca67349","variableMapping":{"factor":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[85,438,439,425,454,36,465,37,478,38,492,39],"tindex":"848dce32-da97-11e4-b58d-01463e4ca9b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:148","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) == 0)\n    return true;\n"},"status":-1},{"failures":[],"tindex":"848dce33-da97-11e4-b58d-994ff769a329","variableMapping":{"originalEdgesCount":"com.graphhopper.coll.SparseIntIntArray.DELETED","edgeDifference":"com.graphhopper.coll.SparseIntIntArray.DELETED","contractedNeighbors":"valueIfKeyNotFound"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[121,131,132,138,146,147,223,233,234,240,248,249,266,276,277,283,291,292,311,321,322,328,336,337,350,353],"tindex":"848df544-da97-11e4-b58d-f3a29e9471e7","variableMapping":{"err":"i","dLat":"mSize","tmpErr":"mSize","x1":"i","sLon":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[],"tindex":"848df545-da97-11e4-b58d-bda67388f9a8","variableMapping":{"flags":"relationFlags","mask":"relationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:310","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":0},{"failures":[68,69,76,77,502,78,501,79,80,82],"tindex":"848df546-da97-11e4-b58d-ef3fcfff5b67","variableMapping":{"r":"lon","angle":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[121,129,131,132,146,147,215,223,231,233,234,248,249,266,274,276,277,291,292,311,319,321,322,336,337,353],"tindex":"848df547-da97-11e4-b58d-cf3117f0a938","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"848df548-da97-11e4-b58d-7fddf81d5033","variableMapping":{"size":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"status":-2},{"failures":[],"tindex":"848df549-da97-11e4-b58d-33bdd1d2b573","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:95","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl = new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[86,87,2,3,4,5,6,88,7,40,89,90,91,92,83,93,94,95,96,97,98,99,100,101,102,8,103,104,105,106,107,108,109,110,111,112,113,114,115,116,9,117,118,130,145,157,158,159,160,162,163,164,165,166,167,169,170,172,173,174,175,177,70,178,179,180,181,182,183,184,71,72,185,186,187,188,190,191,192,193,194,73,195,196,197,198,199,200,201,74,75,202,203,204,205,207,208,503,504,505,506,507,508,509,209,210,211,212,213,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,41,42,43,44,45,46,47,48,49,50,51,364,52,53,54,55,56,57,365,58,59,60,61,62,63,366,64,367,368,369,370,371,65,66,372,373,374,67,375,376,377,378,379,380,381,382,383,384,385,386],"tindex":"848df54a-da97-11e4-b58d-a7d83ae4ba09","variableMapping":{"nextTowerId":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"848df54b-da97-11e4-b58d-299d98c68e5b","variableMapping":{"strLen":"shift","res":"nodeBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:192","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[210,215],"tindex":"848df54c-da97-11e4-b58d-7d99952f1db6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[145],"tindex":"848df54d-da97-11e4-b58d-e1da672e9d78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"848df54e-da97-11e4-b58d-b7b79540df8e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"848e1c5f-da97-11e4-b58d-2bed0dfc24ba","variableMapping":{"strLen":"index","bLen":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":0},{"failures":[],"tindex":"848e1c60-da97-11e4-b58d-c17b9e39e0fe","variableMapping":{"edgePointer":"ferryBit","maxEdges":"internalFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"848e1c61-da97-11e4-b58d-8ba8a2a10cc9","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"848e1c62-da97-11e4-b58d-cb8a27cd02b7","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"848e1c63-da97-11e4-b58d-0b4dc09436f5","variableMapping":{"mask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-2},{"failures":[],"tindex":"848e1c64-da97-11e4-b58d-e5d44954e90d","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"848e1c65-da97-11e4-b58d-598a13ec987c","variableMapping":{"intLen":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:264","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"848e1c66-da97-11e4-b58d-935b8c7fa21a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:95","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl = new com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[],"tindex":"848e1c67-da97-11e4-b58d-9d1407843bdf","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[],"tindex":"848e1c68-da97-11e4-b58d-b1eddefb66c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"848e1c69-da97-11e4-b58d-01f786e15918","variableMapping":{"edgeId":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[2,3,4,5,6,7,92,8,9,130,232,275,320,431,432,10,12,439,13,14,445,447,15,17,18,510,19,20,22,23,25,26,28,357,29,31,32,34,35,361,362,41,42,51,52,53],"tindex":"848e1c6a-da97-11e4-b58d-8ddffc308010","variableMapping":{"r":"speed","com.graphhopper.util.AngleCalc.PI_4":"speed","x":"speed","angle":"speed","absY":"speed","com.graphhopper.util.AngleCalc.PI3_4":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[86,87,2,3,6,88,40,105,110,192,193,73,196,197,198,199,201,74,75,202,203,204,205,207,208,209,211,212,217,220,221,222,223,224,225,226,227,228,229,230,233,234,236,237,239,240,241,242,245,247,248,249,250,252,253,255,257,258,41,42,43,44,45,46,47,48,49,50,51,364,52,53,54,55,56,57,365,58,59,60,61,62,63,366,64,367,368,369,370,371,65,66,372,374,67],"tindex":"848e1c6b-da97-11e4-b58d-3bf5d9ae67d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:55","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"848e1c6c-da97-11e4-b58d-a7c99e343de8","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[],"tindex":"848e1c6d-da97-11e4-b58d-39a66ad7ca5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[511,512,513],"tindex":"848e427e-da97-11e4-b58d-9fbd3050c8b6","variableMapping":{"compressionLevel":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"848e427f-da97-11e4-b58d-f9b560c62fef","variableMapping":{"obtained":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[514,0,1],"tindex":"848e4280-da97-11e4-b58d-1501b41c9113","variableMapping":{"lastKey":"oldRelationFlags","key":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"848e4281-da97-11e4-b58d-5b224f4b0236","variableMapping":{"edge":"tmpPrevEdge","updatedB":"edgeEntryBytes","updatedA":"edgeEntryBytes","linkA":"edgeEntryBytes","this":"this","linkB":"tmpPrevEdge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.writeEdge(int, int, int, int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[],"tindex":"848e4282-da97-11e4-b58d-a9ef0d7870ba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"848e4283-da97-11e4-b58d-f1e9d8c984ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"848e4284-da97-11e4-b58d-b3bb48301347","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[],"tindex":"848e4285-da97-11e4-b58d-9df5a5bc5e8c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"848e4286-da97-11e4-b58d-d19887e401bb","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[85],"tindex":"848e4287-da97-11e4-b58d-b574870ab934","variableMapping":{"size":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[98,104,443,471,485,515],"tindex":"848e4288-da97-11e4-b58d-dfd096351ba8","variableMapping":{"eof":"restricted"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[],"tindex":"848e4289-da97-11e4-b58d-b54fecbe8fed","variableMapping":{"scDirMask":"encoded","flags":"encoded","dir":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"848e428a-da97-11e4-b58d-c352bd529bcd","variableMapping":{"nodeThis":"allBits","nextEdgeOther":"i","nodeOther":"allBits","nextEdge":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"848e428b-da97-11e4-b58d-a5c977786ef0","variableMapping":{"possibleToAdd":"forward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:85","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPlace method.\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":0},{"failures":[],"tindex":"848e428c-da97-11e4-b58d-379f59b1dd7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 5))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 5), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[5,89,92,83,93,94,95,96,97,98,99,514,100,101,102,8,103,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,163,170,191,208,209,210,211,212,213,214,215,216,217,218,219,220,426,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,427,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,428,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,429,430,431,349,84,432,433,434,85,435,352,10,436,11,12,437,438,439,440,13,14,425,441,442,443,444,445,446,447,448,15,449,450,451,452,453,454,16,455,17,36,456,457,458,19,459,20,460,461,462,463,464,465,21,466,22,37,467,468,23,24,469,470,25,26,471,472,473,474,475,476,477,478,27,479,28,38,480,481,356,357,482,29,30,483,484,31,32,485,486,487,488,489,490,491,492,33,493,34,39,494,495,496,0,515,516,1,35,497,41,42,43,44,45,46,47,48,49,50,51,364,52,53,54,55,56,57,365,58,59,60,61,62,498,375,499,500],"tindex":"848e699d-da97-11e4-b58d-79899db827d0","variableMapping":{"ret":"usedBits","retBucket":"usedBits","i":"usedBits","bucketSize":"encoderCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[86,87,2,3,6,88,40,105,108,110,192,193,194,73,195,196,197,198,199,200,201,74,75,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,41,42,43,44,45,46,47,48,49,50,51,364,52,53,54,55,56,57,365,58,59,60,61,62,63,366,64,367,368,369,370,371,65,66,372,373,374,67],"tindex":"848e699e-da97-11e4-b58d-2d843c995e13","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.loadNodesHeader()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[447,23,29,35],"tindex":"848e699f-da97-11e4-b58d-4fd9665eda37","variableMapping":{"bytePos":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-1},{"failures":[121,129,131,132,134,138,139,146,147,215,223,231,233,234,236,240,241,248,249,266,274,276,277,279,283,284,291,292,311,319,321,322,324,328,329,336,337,350,353],"tindex":"848e69a0-da97-11e4-b58d-bb6c412396a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:158","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    int[][int] = int;\n} else {\n    int = ~int;\n    if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n        int[][int] = int;\n        int[][int] = int;\n        return int;\n    } \n    if ((boolean) && ((int) >= (int[].int))) {\n        com.graphhopper.coll.SparseIntIntArray.gc();\n        int = ~com.graphhopper.coll.SparseIntIntArray.(com.graphhopper.coll.SparseIntIntArray.binarySearch(int[], 0, int, int));\n    } \n    if ((int) >= (int[].int)) {\n        int int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(((int) + 1));\n        int[] int[] = new int[int];\n        int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, int[].int);\n        int[] = int[];\n        int[] = int[];\n    } \n    if (((int) - int) != 0) {\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n        java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    } \n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n}"},"status":-1},{"failures":[],"tindex":"848e69a1-da97-11e4-b58d-6f75b648bbb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:312","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString())"},"status":0},{"failures":[350,354],"tindex":"848e69a2-da97-11e4-b58d-dbded1bb6b12","variableMapping":{"this":"g","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1330","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.getAllEdges()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-1},{"failures":[],"tindex":"848e69a3-da97-11e4-b58d-ab6ae3ee00bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[40,68,69,181,182,185,186,187,188,190,191,198,199,202,203,204,205,207,208,348,57,76,77,502,78,501,79,80],"tindex":"848e69a4-da97-11e4-b58d-af16a353b85c","variableMapping":{"bm":"spatialKey"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"848e69a5-da97-11e4-b58d-77bf75c7377b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"status":-2},{"failures":[],"tindex":"848e69a6-da97-11e4-b58d-69c2ca2a9ed3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"848e69a7-da97-11e4-b58d-8f8d7f4ba3a4","variableMapping":{"intVal":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN","degree":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"848e69a8-da97-11e4-b58d-93601af6794d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[24,30],"tindex":"848e69a9-da97-11e4-b58d-c5da89739cf9","variableMapping":{"systemProperty":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[447,23,29],"tindex":"848e69aa-da97-11e4-b58d-fb67b21f8122","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:638","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[68,69,70,71,72,517,73,74,75,76,77,78,79,80,518,81],"tindex":"848e69ab-da97-11e4-b58d-0b3691b1870c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"848e90bc-da97-11e4-b58d-3f61909840fc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"848e90bd-da97-11e4-b58d-0f48fabc9372","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"848e90be-da97-11e4-b58d-a3db6fe3c295","variableMapping":{"latSimilar":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[448,15,455,20,466,470,26,479,484,32,493],"tindex":"848e90bf-da97-11e4-b58d-5516ab84aa58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"848e90c0-da97-11e4-b58d-6fcaf2004e6c","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"intendedValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":0},{"failures":[],"tindex":"848e90c1-da97-11e4-b58d-6f208efa0f5a","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"848e90c2-da97-11e4-b58d-9fc58232895c","variableMapping":{"lockFile":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SimpleFSLockFactory:99","type":"CtReturnImpl","sourcecode":"return java.io.File.createNewFile()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[86,87,2,3,4,5,6,88,7,40,89,90,91,92,83,93,94,95,96,97,98,99,514,100,101,102,8,519,103,104,520,521,387,388,389,390,391,392,393,394,105,106,107,108,109,110,111,112,113,114,115,116,9,117,118,395,396,397,398,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,399,400,401,522,402,403,523,404,405,406,407,408,409,410,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,70,178,179,180,181,182,183,184,71,72,185,186,187,188,189,190,191,192,193,194,73,195,196,197,198,199,200,201,74,75,202,203,204,205,206,207,208,524,525,526,503,504,527,505,528,529,506,507,508,509,530,531,411,412,413,532,414,415,533,416,417,418,419,420,421,422,534,535,536,537,538,539,540,541,542,543,544,545,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,423,546,547,548,549,550,551,552,553,554,555,556,557,558,559,424,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,41,42,43,44,45,46,47,48,49,50,51,364,52,53,54,55,56,57,365,58,59,60,61,62,63,366,64,367,368,369,370,371,65,66,372,373,374,67,375,375,376,376,377,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386],"tindex":"848e90c3-da97-11e4-b58d-f7e144aadbcd","variableMapping":{"currentEntry":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-1},{"failures":[],"tindex":"848e90c4-da97-11e4-b58d-4f77b5111fdd","variableMapping":{"encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"848e90c5-da97-11e4-b58d-bfed4286b2d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[13],"tindex":"848eb7d6-da97-11e4-b58d-85c54513a264","variableMapping":{"resultOrientation":"fwdSpeed","orientation":"maxSpeed","java.lang.Math.PI":"fwdSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[5,40,83,84,434,35],"tindex":"848eb7d7-da97-11e4-b58d-417bbcc8c76e","variableMapping":{"nodeId":"encoded","nodeIdOffset":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":365,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":376,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":18,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":214,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":120,"com.graphhopper.reader.OSMReaderTest.testFerry":92,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":106,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":107,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":460,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":197,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":87,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":493,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":495,"com.graphhopper.storage.MMapDataAccessTest.testSegments":557,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":319,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":399,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":521,"com.graphhopper.coll.CompressedArrayTest.testCompress":69,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":21,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":299,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":140,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":275,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":194,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":400,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":417,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":372,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":63,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":282,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":513,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":469,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":51,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":171,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":466,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":118,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":220,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":73,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":354,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":23,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":525,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":49,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":274,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":552,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":180,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":302,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":518,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":553,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":221,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":512,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":67,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":185,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":505,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":181,"com.graphhopper.reader.OSMReaderTest.testSort":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":28,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":306,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":403,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":294,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":260,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":153,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":382,"com.graphhopper.storage.RAMDataAccessTest.testHeader":418,"com.graphhopper.routing.DijkstraTest.initializationError":499,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":104,"com.graphhopper.storage.MMapDataAccessTest.testHeader":555,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":340,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":423,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":554,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":246,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":541,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":527,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":271,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":303,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":484,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":309,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":457,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":17,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":201,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":199,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":45,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":223,"com.graphhopper.coll.OSMIDMapTest.testGetLong":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":323,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":329,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":238,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":217,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":240,"com.graphhopper.coll.CompressedArrayTest.testCompress2":68,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":284,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":447,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":320,"com.graphhopper.GraphHopperAPITest.testLoad":347,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":426,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":504,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":430,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":276,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":266,"com.graphhopper.storage.LevelGraphStorageTest.testClone":225,"com.graphhopper.reader.OSMReaderTest.testBarriers":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":310,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":355,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":543,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":192,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":485,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":48,"com.graphhopper.util.GHUtilityTest.testCopy":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":124,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":523,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":208,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":37,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":168,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":421,"com.graphhopper.routing.PathTest.testFindInstruction":363,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":463,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":311,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":511,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":105,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":434,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":254,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":483,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":295,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":280,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":532,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":338,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":492,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":516,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":498,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":125,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":263,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":556,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":509,"com.graphhopper.util.InstructionListTest.testWayList2":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":494,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":186,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":300,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":343,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":510,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":356,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":229,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":533,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":471,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":321,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":47,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":265,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":96,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":402,"com.graphhopper.routing.AStarTest.initializationError":429,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":59,"com.graphhopper.coll.OSMIDMapTest.testGet":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":318,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":537,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":85,"com.graphhopper.routing.PathBidirRefTest.testExtract":358,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":242,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":392,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":474,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":538,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":203,"com.graphhopper.storage.RAMDataAccessTest.testCopy":414,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":405,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":346,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":146,"com.graphhopper.storage.RAMDataAccessTest.testSegments":420,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":473,"com.graphhopper.util.GHUtilityTest.testSort2":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":55,"com.graphhopper.reader.OSMReaderTest.testMain":93,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":218,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":328,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":475,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":38,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":204,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":12,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":307,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":232,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":236,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":257,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":233,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":29,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":503,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":239,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":8,"com.graphhopper.storage.StorablePropertiesTest.testStore":424,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":413,"com.graphhopper.storage.GraphHopperStorageTest.testClone":268,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":425,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":13,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":278,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":209,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":126,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":212,"com.graphhopper.routing.PathTest.testTime":361,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":453,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":255,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":445,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":139,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":244,"com.graphhopper.reader.OSMReaderTest.testRelation":514,"com.graphhopper.util.GHUtilityTest.testSortDirected":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":34,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":409,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":378,"com.graphhopper.GraphHopperTest.testFootOnly":40,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":459,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":173,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":439,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":531,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":200,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":1,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":550,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":482,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":135,"com.graphhopper.search.NameIndexTest.testCreate":398,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":419,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":375,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":529,"com.graphhopper.routing.QueryGraphTest.testOneWay":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":189,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":462,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":520,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":179,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":76,"com.graphhopper.reader.OSMReaderTest.testWithBounds":102,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":422,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":536,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":39,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":351,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":141,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":435,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":0,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":222,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":446,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":33,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":467,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":332,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":163,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":325,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":264,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":42,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":545,"com.graphhopper.util.InstructionListTest.testWayList":115,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":297,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":547,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":472,"com.graphhopper.GraphHopperAPITest.testDisconnected179":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":127,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":501,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":70,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":558,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":490,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":138,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":524,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":155,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":270,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":336,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":373,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":468,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":52,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":500,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":66,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":441,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":450,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":479,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":61,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":206,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":526,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":528,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":481,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":259,"com.graphhopper.routing.PathTest.testWayList":362,"com.graphhopper.storage.MMapDataAccessTest.testCopy":551,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":154,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":438,"com.graphhopper.coll.OSMIDMapTest.testGet2":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":62,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":406,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":250,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":387,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":331,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":478,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":281,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":431,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":74,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":237,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":75,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":415,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":487,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":448,"com.graphhopper.util.GHUtilityTest.testSort":111,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":549,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":184,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":82,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":461,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":477,"com.graphhopper.search.NameIndexTest.testPut":396,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":428,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":195,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":177,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":159,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":507,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":31,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":381,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":357,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":304,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":449,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":388,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":433,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":326,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":540,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":350,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":508,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":145,"com.graphhopper.routing.PathTest.testFound":360,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":35,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":89,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":252,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":522,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":211,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":476,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":322,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":397,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":535,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":130,"com.graphhopper.util.InstructionListTest.testEmptyList":113,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":273,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":444,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":436,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":56,"com.graphhopper.reader.PrinctonReaderTest.testRead":90,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":296,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":559,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":198,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":317,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":129,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":119,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":327,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":465,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":488,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":546,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":515,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":30,"com.graphhopper.reader.OSMReaderTest.testFoot":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":143,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":386,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":389,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":71,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":80,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":256,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":458,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":72,"com.graphhopper.reader.OSMReaderTest.testOneWay":103,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":277,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":292,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":464,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":408,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":486,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":137,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":369,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":517,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":544,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":374,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":367,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":407,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":349,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":542,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":133,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":377,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":262,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":519,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":530,"com.graphhopper.routing.PathBidirRefTest.testExtract2":359,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":506,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":41,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":187,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":455,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":534,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":395,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":456,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":98,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":156,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":491,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":182,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":293,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":442,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":285,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":234,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":207,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":123,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":496,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":548,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":443,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":364,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":539,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":58,"com.graphhopper.GraphHopperTest.testPrepareOnly":86,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":480,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":121,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":100,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":213,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":9,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":289,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":432,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":136,"com.graphhopper.routing.AStarBidirectionTest.initializationError":497,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":10,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":251,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":249,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":305}}]
