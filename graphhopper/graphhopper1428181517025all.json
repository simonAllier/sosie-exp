[{"failures":[],"tindex":"4c6fade6-db0e-11e4-a505-29d7151ba8ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355],"tindex":"4c741ab7-db0e-11e4-a505-af381b33f435","variableMapping":{"lastKey":"tmpValue","key":"tmpValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-1},{"failures":[44,89,90],"tindex":"4c7468d8-db0e-11e4-a505-ebbb771a2324","variableMapping":{"edgeCount":"maxCount","lastEdgeIndex":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:84","type":"CtIfImpl","sourcecode":"if (((int) + 1) < (int))\n    throw new java.lang.IllegalStateException(\"Cannot create after shortcut was created\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[2,3,4,5,6,8,9,11,18,19,22,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,356,357,45,46,358,47,48,49,50,51,359,360,361,52,53,54,362,363,364,70,71,72,73,365,74,366,75,87,91,92,110,113,120,121,122,123,125,127,128,130,132,133,134,136,139,141,142,143,144,145,146,147,152,153,154,156,157,159,161,162,163,170,171,176,182,186,189,192,245,246,247,254,255,260,266,270,273,276,278,281,283,284,285,292,293,298,304,308,311,314,316,321,323,324,325,332,333,338,344,348,351,354],"tindex":"4c7664a9-db0e-11e4-a505-ff17156805ad","variableMapping":{"unpavedBit":"forwardBit","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"4c7664aa-db0e-11e4-a505-fbd3988c50e5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"4c7664ab-db0e-11e4-a505-fd0bf6ae72ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[44,89,90,163,367,172,173,179,184,185,285,368,294,295,301,306,307,369,370,325,371,334,335,341,346,347],"tindex":"4c7664ac-db0e-11e4-a505-d5d8924d1784","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"4c768bbd-db0e-11e4-a505-d76baf261dc9","variableMapping":{"adjNode":"maxTurnCosts","edge":"maxTurnCosts","weight":"speedFactor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.Edge:50","type":"CtReturnImpl","sourcecode":"return ((((int) + \" (\") + (int)) + \") weight: \") + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:774","type":"CtReturnImpl","sourcecode":"return ((((\"speedFactor=\" + (double)) + \"|speedBits=\") + (int)) + \"|turnCosts=\") + ((int) > 0)"},"status":-2},{"failures":[60,66,67,68,81,86,94,100],"tindex":"4c768bbe-db0e-11e4-a505-a54e74656b39","variableMapping":{"initialBits":"encoded","allBits":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[],"tindex":"4c768bbf-db0e-11e4-a505-111956937da2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[372],"tindex":"4c768bc0-db0e-11e4-a505-81089b13c619","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[0,2,3,4,5,6,7,8,9,10,15,16,17,18,22,373,374,375,32,33,34,35,36,376,377,378,379,380,57,58,105,106,107,108,109,110,111,113,114,117,140,159,161,381,184,189,190,191,198,199,200,231,232,233,267,382,278,281,283,383,306,311,312,313,384,385,321,323,386,346,351,352,353,387],"tindex":"4c768bc1-db0e-11e4-a505-db02b9e00eb9","variableMapping":{"size":"indexDivisor","i":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:228","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"4c768bc2-db0e-11e4-a505-572bd41ae9df","variableMapping":{"nodes":"length","adj":"segmentSizeIntsPower","base":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,388,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,57,58,71,87,88,89,90,91,92,389,104,105,106,107,107,108,108,390,390,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,391,392,160,161,162,163,164,165,166,167,168,169,170,367,171,172,173,174,175,176,177,178,179,180,381,393,181,182,394,183,184,185,186,187,188,189,395,190,191,192,193,194,195,396,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,397,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,255,267,278,280,281,398,399,282,283,284,285,286,287,288,289,290,291,292,368,293,294,295,296,297,298,299,300,301,302,383,400,303,304,401,305,306,307,308,309,310,311,402,312,313,314,315,403,404,405,406,407,408,409,369,410,411,412,316,413,317,318,319,385,370,320,321,414,415,322,323,324,325,326,327,328,329,330,331,332,371,333,334,335,336,337,338,339,340,341,342,386,416,343,344,417,345,346,347,348,349,350,351,418,352,353,354,355],"tindex":"4c768bc3-db0e-11e4-a505-898b2f066854","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"4c768bc4-db0e-11e4-a505-39bbc9b511dc","variableMapping":{"high":"flags","highKey":"dir","key":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[30,47],"tindex":"4c768bc5-db0e-11e4-a505-9fc6a922e2d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[121,126,127,129,133,135,136,138,139,140,141,142,143,152,156],"tindex":"4c76b2d6-db0e-11e4-a505-05122fcec9c5","variableMapping":{"segmentSizeInBytes":"i","length":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"4c76b2d7-db0e-11e4-a505-5f0cc673d65b","variableMapping":{"segmentSizeInBytes":"com.graphhopper.routing.util.PriorityWeighting.KEY","allSegments":"priorityFromRelation","capacity":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:97","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-2},{"failures":[419,76,77,78,420,421,422,423,424,425,426,79,80,427,428,81],"tindex":"4c76b2d8-db0e-11e4-a505-2d61779640f8","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"4c76b2d9-db0e-11e4-a505-03e0818a66cb","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:613","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) == null)\n    throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":0},{"failures":[],"tindex":"4c76b2da-db0e-11e4-a505-579f384c69e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:485","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,388,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,57,58,71,87,88,89,90,91,92,389,104,105,106,107,107,108,108,390,390,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,391,392,160,161,162,163,164,165,166,167,168,169,170,367,171,172,173,174,175,176,177,178,179,180,381,393,181,182,394,183,184,185,186,187,188,189,395,190,191,192,193,194,195,396,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,397,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,255,267,278,280,281,398,399,282,283,284,285,286,287,288,289,290,291,292,368,293,294,295,296,297,298,299,300,301,302,383,400,303,304,401,305,306,307,308,309,310,311,402,312,313,314,315,404,405,406,407,408,369,410,316,413,317,318,319,385,370,320,321,414,415,322,323,324,325,326,327,328,329,330,331,332,371,333,334,335,336,337,338,339,340,341,342,386,416,343,344,417,345,346,347,348,349,350,351,418,352,353,354,355],"tindex":"4c76b2db-db0e-11e4-a505-b3f9e509cdba","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[],"tindex":"4c76b2dc-db0e-11e4-a505-49f1602e9a6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[37],"tindex":"4c76b2dd-db0e-11e4-a505-d51f92ef67ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"4c7b6dce-db0e-11e4-a505-337a95263bc2","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[5,9,31,37,60,61,62,63,64,66,67,68,69,72,74,77,78,79,81,82,83,84,86,94,95,96,97,98,100],"tindex":"4c7b6dcf-db0e-11e4-a505-bd2c2f3a6ed1","variableMapping":{"newUniqueOsmId":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[152,429],"tindex":"4c7b6dd0-db0e-11e4-a505-0b525337cddc","variableMapping":{"acceptBit":"flags2","internalFlags":"flags1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-1},{"failures":[87,90,163,173,175,179,180,184,185,247,257,259,263,264,268,269,285,295,297,301,302,306,307,325,335,337,341,342,346,347],"tindex":"4c7b6dd1-db0e-11e4-a505-7503111635a6","variableMapping":{"i":"high","child":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-1},{"failures":[171,255,293,333],"tindex":"4c7b6dd2-db0e-11e4-a505-4b9f6a13208f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[47,51,430,366,427,431,432],"tindex":"4c7b6dd3-db0e-11e4-a505-a37e07c94045","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"4c7b6dd4-db0e-11e4-a505-ebb389e38e9e","variableMapping":{"distance":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"4c7b6dd5-db0e-11e4-a505-db7b9685d3b5","variableMapping":{"weightLong":"backwardBit","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":0},{"failures":[],"tindex":"4c7b6dd6-db0e-11e4-a505-9b52ec6d593e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[69],"tindex":"4c7b94e7-db0e-11e4-a505-e1b1797a0faa","variableMapping":{"factor":"speed","value":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[0,0,1,2,2,3,3,4,4,5,5,6,433,433,7,8,9,9,10,10,434,434,11,12,13,14,388,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,57,58,71,87,88,89,90,91,92,389,104,105,106,107,107,108,108,390,390,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,391,391,392,160,435,161,162,163,164,165,166,167,168,169,170,367,171,172,173,174,175,176,177,178,179,180,381,393,181,182,394,183,184,185,186,187,188,189,395,190,191,192,193,194,195,396,196,197,198,199,200,201,202,203,204,205,206,207,208,209,436,210,211,212,213,214,215,216,217,397,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,437,243,244,255,267,278,280,281,398,398,399,282,438,283,284,285,286,287,288,289,290,291,292,368,293,294,295,296,297,298,299,300,301,302,383,400,303,304,401,305,306,307,308,309,310,311,402,312,313,314,315,316,413,317,318,319,385,370,320,321,414,414,415,322,439,323,324,325,326,327,328,329,330,331,332,371,333,334,335,336,337,338,339,340,341,342,386,416,343,344,417,345,346,347,348,349,350,351,418,352,353,354,355],"tindex":"4c7b94e8-db0e-11e4-a505-af6ab7cbbe0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[440],"tindex":"4c7b94e9-db0e-11e4-a505-b786b33bf899","variableMapping":{"baseUrl":"s","fileDetails":"s","zippedURL":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:274","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[87,91,92],"tindex":"4c7b94ea-db0e-11e4-a505-cdf8c28c6d33","variableMapping":{"keyIndex":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[],"tindex":"4c7b94eb-db0e-11e4-a505-1f184a81f898","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:104","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"4c7b94ec-db0e-11e4-a505-fdb7b2db9d20","variableMapping":{"d":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-2},{"failures":[],"tindex":"4c7b94ed-db0e-11e4-a505-9f90f1ada537","variableMapping":{"high":"forwardBit","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[120,121,140,141,143,157],"tindex":"4c7b94ee-db0e-11e4-a505-f9820d86b57d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:81","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-1},{"failures":[31,37,44,58,60,66,67,441,68,69,94,100,104],"tindex":"4c7b94ef-db0e-11e4-a505-e37a353c6558","variableMapping":{"err":"shift","dLat":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"4c7b94f0-db0e-11e4-a505-f50b9aaeb7d9","variableMapping":{"gradient":"maxLat","yend":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"4c7b94f1-db0e-11e4-a505-2b328a17bfc7","variableMapping":{"byteCount":"internalFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"4c7bbc02-db0e-11e4-a505-0d29546b3a3d","variableMapping":{"this":"this","unknownSpeed":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":0},{"failures":[],"tindex":"4c7bbc03-db0e-11e4-a505-176157700e4e","variableMapping":{"size":"start","newSize":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":0},{"failures":[121],"tindex":"4c7bbc04-db0e-11e4-a505-5d22d2fc43a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[30,31,32,33,35,36,37,38,41,42,44,59,60,442,61,62,63,443,444,445,64,65,446,66,67,68,69,76,77,78,421,423,424,79,80,428,81,82,447,83,448,449,450,84,85,86,93,94,451,95,96,97,452,453,454,98,99,455,100],"tindex":"4c7bbc05-db0e-11e4-a505-93e5ad35ef21","variableMapping":{"edgeId":"priorityFromRelation","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"priorityFromRelation","nodeA":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"4c7bbc06-db0e-11e4-a505-b7d89d7e9260","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:476","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[],"tindex":"4c7bbc07-db0e-11e4-a505-8f6c126dde6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[87,90,163,367,172,173,175,179,180,184,185,247,456,256,257,259,263,264,268,269,285,368,294,295,297,301,302,306,307,370,325,371,334,335,337,341,342,346,347],"tindex":"4c7bbc08-db0e-11e4-a505-936236785f44","variableMapping":{"initLeafSize":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[],"tindex":"4c7bbc09-db0e-11e4-a505-4f0eacfe269a","variableMapping":{"intIndex":"shift","len":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"4c7bbc0a-db0e-11e4-a505-473c971cd781","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"4c7bbc0b-db0e-11e4-a505-5f86aa6486a6","variableMapping":{"foundNext":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:809","type":"CtIfImpl","sourcecode":"if (boolean)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[87,91,92],"tindex":"4c7bbc0c-db0e-11e4-a505-35f69cceb5af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1},{"failures":[457],"tindex":"4c7bbc0d-db0e-11e4-a505-4deb2c676297","variableMapping":{"parentNodes":"elem","endNode":"lastElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"4c7bbc0e-db0e-11e4-a505-77d469148aef","variableMapping":{"initLeafSize":"frontIndex","maxLeafEntries":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"4c7bbc0f-db0e-11e4-a505-ffb43cb5f150","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"4c7bbc10-db0e-11e4-a505-0fa31e7ea9e9","variableMapping":{"y":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV","angle":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"4c7bbc11-db0e-11e4-a505-051b2c77578d","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"nodeA","id":"nodeA"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":0},{"failures":[2,18,42,45,49,50,62,96,101],"tindex":"4c7be322-db0e-11e4-a505-b781916c12e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"4c7be323-db0e-11e4-a505-77bffbd7ace9","variableMapping":{"elem":"elem","size":"i","keys":"elem","i":"i","key":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:158","type":"CtWhileImpl","sourcecode":"while ((int * 2) <= (int)) {\n    int int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n        int = int;\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"4c7be324-db0e-11e4-a505-b5edbb73e80a","variableMapping":{"i":"unvisitedDeadEnds","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"del"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:85","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((((((\"optimize to remove subnetworks (\" + (java.util.Map<java.lang.Integer, java.lang.Integer>.size())) + \"), zero-degree-nodes (\") + int) + \"), \") + \"unvisited-dead-end-nodes(\") + int) + \"), \") + \"maxEdges/node (\") + (java.util.concurrent.atomic.AtomicInteger.get())) + \")\"))"},"status":0},{"failures":[458,146,148,152,154,156],"tindex":"4c7be325-db0e-11e4-a505-3562c1e53659","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[44,87,89,90,163,367,172,173,175,179,180,184,185,247,456,256,257,259,263,264,268,269,285,368,294,295,297,301,302,306,307,370,325,371,334,335,337,341,342,346,347],"tindex":"4c7be326-db0e-11e4-a505-51a61bca611c","variableMapping":{"minResolutionInMeter":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"4c7be327-db0e-11e4-a505-3964b53ce9e9","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"low","tmpNode":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[92],"tindex":"4c7be328-db0e-11e4-a505-997baa6869e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"4c7be329-db0e-11e4-a505-f9ae65549a34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:307","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"status":0},{"failures":[],"tindex":"4c7be32a-db0e-11e4-a505-5ff304ff1d6d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:628","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"4c7be32b-db0e-11e4-a505-7578257b523d","variableMapping":{"r":"orientation","angle":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[459],"tindex":"4c7be32c-db0e-11e4-a505-2f7e10209dbc","variableMapping":{"name":"minStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:52","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[],"tindex":"4c7be32d-db0e-11e4-a505-2febe568f26b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"4c7be32e-db0e-11e4-a505-694b43ee2adb","variableMapping":{"ret":"high","retBucket":"high","i":"guess","bucketSize":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"4c7c0a3f-db0e-11e4-a505-010e2c5063af","variableMapping":{"size":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"4c7c0a40-db0e-11e4-a505-2d184dcb7863","variableMapping":{"java.lang.Double.MAX_VALUE":"maxSpeed","existingDirectWeight":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"4c7c0a41-db0e-11e4-a505-1ba1219033ca","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[87,90,163,173,175,179,180,184,185,247,257,259,263,264,268,269,285,295,297,301,302,306,307,325,335,337,341,342,346,347],"tindex":"4c7c0a42-db0e-11e4-a505-e39c40661161","variableMapping":{"endIndexPlusOne":"com.graphhopper.coll.SparseIntIntArray.DELETED","frontIndex":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-1},{"failures":[],"tindex":"4c7c0a43-db0e-11e4-a505-9d2a21bf43c4","variableMapping":{"shift":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"4c7c0a44-db0e-11e4-a505-5931b79c137b","variableMapping":{"java.lang.Double.NaN":"decDist2DSum"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:139","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:200","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":-2},{"failures":[],"tindex":"4c7c0a45-db0e-11e4-a505-d51892ed814c","variableMapping":{"i":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":0},{"failures":[430,427,431,432],"tindex":"4c7c0a46-db0e-11e4-a505-09db2c7c71ba","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"4c7c0a47-db0e-11e4-a505-bf415e7ad3a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:747","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[],"tindex":"4c7c0a48-db0e-11e4-a505-237e10405bd9","variableMapping":{"newName":"highway","name":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[18,30,50,55,56,63,67,441,69,73,81,86,97,101,104,105,120,121,133,143,171,255,293,333],"tindex":"4c7c0a49-db0e-11e4-a505-8d265db3d7f7","variableMapping":{"bytePos":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[460,461],"tindex":"4c7c0a4a-db0e-11e4-a505-89fbea14ab2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[462,463,464,465,466,467,468,469,470],"tindex":"4c7c0a4b-db0e-11e4-a505-f1a233ba8ccc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"4c7c0a4c-db0e-11e4-a505-2db94497f9b1","variableMapping":{"from":"nextNodeBit","hash":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[366],"tindex":"4c7c0a4d-db0e-11e4-a505-df4bfb07dc9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[462,463,464,465,466,467,468,469,470],"tindex":"4c7c0a4e-db0e-11e4-a505-f93b2fadb808","variableMapping":{"min":"lon","dist":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"4c7c315f-db0e-11e4-a505-15a914361fab","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"4c7c3160-db0e-11e4-a505-cffb454ca89b","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"noOfStates","id":"noOfStates"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[61,63,64,77,78,79,83,84,95,97,98],"tindex":"4c7c3161-db0e-11e4-a505-83cbd64b6633","variableMapping":{"currentBucket":"pavementType","currentIndex":"pavementType","bucketSize":"pavementType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"4c7c3162-db0e-11e4-a505-032d5f17f292","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"4c7c3163-db0e-11e4-a505-2d4675086172","variableMapping":{"indexWithMaxDist":"com.graphhopper.util.EdgeIterator.NO_EDGE","lastIndex":"com.graphhopper.util.EdgeIterator.NO_EDGE","fromIndex":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[0,0,1,2,2,3,3,4,4,5,5,6,433,433,7,8,9,9,10,10,434,434,11,12,13,14,388,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,57,58,71,87,88,89,90,91,92,389,104,105,106,107,107,108,108,390,390,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,391,391,392,160,435,161,162,163,164,165,166,167,168,169,170,367,171,172,173,174,175,176,177,178,179,180,381,393,181,182,394,183,184,185,186,187,188,189,395,190,191,192,193,194,195,396,196,197,198,199,200,201,202,203,204,205,206,207,208,209,436,210,211,212,213,214,215,216,217,397,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,437,243,244,255,267,278,280,281,398,398,399,282,438,283,284,285,286,287,288,289,290,291,292,368,293,294,295,296,297,298,299,300,301,302,383,400,303,304,401,305,306,307,308,309,310,311,402,312,313,314,315,316,413,317,318,319,385,370,320,321,414,414,415,322,439,323,324,325,326,327,328,329,330,331,332,371,333,334,335,336,337,338,339,340,341,342,386,416,343,344,417,345,346,347,348,349,350,351,418,352,353,354,355],"tindex":"4c7c3164-db0e-11e4-a505-8d6a496e7c6e","variableMapping":{"baseUrl":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[58],"tindex":"4c7c3165-db0e-11e4-a505-adc4e2fe6dca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"4c7c3166-db0e-11e4-a505-89de190e30e9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":0},{"failures":[2,471,458,460,472,461,457,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,146,147,148,149,150,151,152,154,156,157],"tindex":"4c7c3167-db0e-11e4-a505-e39e68939b19","variableMapping":{"segmentSizeInBytes":"i","index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-1},{"failures":[],"tindex":"4c7c3168-db0e-11e4-a505-677e473ced12","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"closed","v":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":345,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":138,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":101,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":385,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":246,"com.graphhopper.reader.OSMReaderTest.testFerry":30,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":25,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":96,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":448,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":199,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":368,"com.graphhopper.coll.CompressedArrayTest.testCompress":463,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":148,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":370,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":171,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":396,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":154,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":144,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":178,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":457,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":451,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":130,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":397,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":84,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":14,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":91,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":93,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":128,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":367,"com.graphhopper.coll.BitSetImplTest.testCopy":372,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":232,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":97,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":278,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":323,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":472,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":157,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":239,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":233,"com.graphhopper.reader.OSMReaderTest.testSort":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":99,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":398,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":187,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":159,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":468,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":274,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":113,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":310,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":417,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":168,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":279,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":288,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":283,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":81,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":80,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":203,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":134,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":195,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":201,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":433,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":124,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":325,"com.graphhopper.coll.OSMIDMapTest.testGetLong":379,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":302,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":339,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":321,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":341,"com.graphhopper.coll.CompressedArrayTest.testCompress2":462,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":293,"com.graphhopper.GraphHopperAPITest.testLoad":11,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":439,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":406,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":364,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":172,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":163,"com.graphhopper.storage.LevelGraphStorageTest.testClone":327,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":459,"com.graphhopper.reader.OSMReaderTest.testBarriers":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":194,"com.graphhopper.util.GHUtilityTest.testCopy":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":250,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":211,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":425,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":431,"com.graphhopper.routing.PathTest.testFindInstruction":106,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":285,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":471,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":19,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":74,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":418,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":442,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":188,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":176,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":297,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":320,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":441,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":329,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":251,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":412,"com.graphhopper.util.InstructionListTest.testWayList2":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":446,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":240,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":289,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":95,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":57,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":391,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":331,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":387,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":294,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":126,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":162,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":140,"com.graphhopper.coll.OSMIDMapTest.testGet":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":292,"com.graphhopper.routing.PathBidirRefTest.testExtract":118,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":366,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":378,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":452,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":315,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":268,"com.graphhopper.util.GHUtilityTest.testSort2":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":135,"com.graphhopper.reader.OSMReaderTest.testMain":32,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":414,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":208,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":432,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":45,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":399,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":333,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":337,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":354,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":110,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":59,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":405,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":340,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":42,"com.graphhopper.storage.StorablePropertiesTest.testStore":384,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":382,"com.graphhopper.storage.GraphHopperStorageTest.testClone":165,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":49,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":174,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":316,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":252,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":318,"com.graphhopper.routing.PathTest.testTime":104,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":424,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":352,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":328,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":264,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":343,"com.graphhopper.util.GHUtilityTest.testSortDirected":24,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":65,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":109,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":447,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":219,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":202,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":260,"com.graphhopper.search.NameIndexTest.testCreate":375,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":107,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":409,"com.graphhopper.routing.QueryGraphTest.testOneWay":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":437,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":466,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":231,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":464,"com.graphhopper.reader.OSMReaderTest.testWithBounds":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":430,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":88,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":402,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":75,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":67,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":324,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":415,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":419,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":86,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":48,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":298,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":161,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":121,"com.graphhopper.util.InstructionListTest.testWayList":16,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":395,"com.graphhopper.routing.ch.PrepareEncoderTest.testOverwrite":429,"com.graphhopper.GraphHopperAPITest.testDisconnected179":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":253,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":467,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":401,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":248,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":444,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":263,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":276,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":167,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":155,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":182,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":153,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":351,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":359,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":421,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":282,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":142,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":435,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":436,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":100,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":158,"com.graphhopper.routing.PathTest.testWayList":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":275,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":256,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":358,"com.graphhopper.coll.OSMIDMapTest.testGet2":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":143,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":400,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":177,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":70,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":204,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":205,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":206,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":460,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":77,"com.graphhopper.util.GHUtilityTest.testSort":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":236,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":102,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":454,"com.graphhopper.search.NameIndexTest.testPut":373,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":438,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":197,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":215,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":222,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":225,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":62,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":58,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":223,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":280,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":420,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":56,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":299,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":87,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":411,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":267,"com.graphhopper.routing.PathTest.testFound":389,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":10,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":69,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":350,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":440,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":317,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":453,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":295,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":458,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":374,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":255,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":170,"com.graphhopper.util.InstructionListTest.testEmptyList":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":129,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":209,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":133,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":356,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":136,"com.graphhopper.reader.PrinctonReaderTest.testRead":28,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":200,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":291,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":456,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":465,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":245,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":443,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":423,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":60,"com.graphhopper.reader.OSMReaderTest.testFoot":31,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":237,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":353,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":469,"com.graphhopper.reader.OSMReaderTest.testOneWay":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":238,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":173,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":185,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":450,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":393,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":226,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":71,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":258,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":390,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":43,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":392,"com.graphhopper.routing.PathBidirRefTest.testExtract2":119,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":369,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":120,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":241,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":183,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":428,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":37,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":277,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":445,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":234,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":186,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":330,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":360,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":381,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":335,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":78,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":249,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":362,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":361,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":287,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":139,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":216,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":247,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":39,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":319,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":18,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":394,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":73,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":261,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":54,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":349,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":347,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":281}}]
