[{"failures":[0],"tindex":"2d7c9e86-dacd-11e4-b16e-d7e241d62301","variableMapping":{"cp":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"2d7dd707-dacd-11e4-b16e-49f5834dee73","variableMapping":{"algo":"entry"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"2d7dd708-dacd-11e4-b16e-95d92f512e69","variableMapping":{"min":"sLat","tmpSize":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[1],"tindex":"2d7dd709-dacd-11e4-b16e-1d02635011ea","variableMapping":{"str":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:420","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"2d7dfe1a-dacd-11e4-b16e-5113614aa844","variableMapping":{"edgeId":"index","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"index","nodeA":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"2d7dfe1b-dacd-11e4-b16e-2fa4657575ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"2d7dfe1c-dacd-11e4-b16e-03e5aa53a1ac","variableMapping":{"high":"flags","highKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:109","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long);\n"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"2d7dfe1d-dacd-11e4-b16e-551669ae8bcf","variableMapping":{"weight":"lat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[2,3,4,5,77,78,6,7,79,8,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,9,10,11,111,12,112,113,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192],"tindex":"2d7dfe1e-dacd-11e4-b16e-118a12c8a279","variableMapping":{"flags":"forwardBit","nodeFlags":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[106,109,193],"tindex":"2d7dfe1f-dacd-11e4-b16e-f5ea07e6facc","variableMapping":{"minResolutionInMeter":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[],"tindex":"2d7dfe20-dacd-11e4-b16e-6bcef85cbdd5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[],"tindex":"2d7dfe21-dacd-11e4-b16e-e932298c9af0","variableMapping":{"remainingSegNo":"encoderCount","segmentSizeInBytes":"encoderCount","capacity":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:418","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"2d7dfe22-dacd-11e4-b16e-7117b76545ee","variableMapping":{"capacity":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"2d7dfe23-dacd-11e4-b16e-e7bff042c6c4","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"size","speed":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"2d7e2534-dacd-11e4-b16e-6ff6815aaf15","variableMapping":{"id":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[194,195,196,197],"tindex":"2d7e2535-dacd-11e4-b16e-31128a863dd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"2d7e2536-dacd-11e4-b16e-81e7236c2744","variableMapping":{"str":"name","this":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:156","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    java.lang.String += \"_SYNC\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:109","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":0},{"failures":[],"tindex":"2d7e2537-dacd-11e4-b16e-ad052ea68a1b","variableMapping":{"this":"tr","value":"pavementName","key":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:246","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.isEmpty()))\n    com.graphhopper.util.TranslationMap.TranslationHashMap.put(java.lang.String, java.lang.String);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-2},{"failures":[],"tindex":"2d7e2538-dacd-11e4-b16e-c5abab07810f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[198,199,200],"tindex":"2d7e2539-dacd-11e4-b16e-e5eaca50b495","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"2d7e253a-dacd-11e4-b16e-0fa3d21f81e3","variableMapping":{"str":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"status":0},{"failures":[2,4,78,8,201,202,82,83,203,204,205,85,86,89,206,90,93,207,208,209,210,211,194,212,213,99,214,215,216,217,103,218,219,220,195,221,222,223,224,225,226,196,227,228,229,110,230,231,232,233,197,234,235,19,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,117,236,237,66,76,123,124,125,238,126,127,239,129,130,240,241,242,243,131,244,132,245,246,247,133,134,248,249,135,136,250,251,138,252,139,253,46,254,141,255,142,143,144,256,145,146,257,148,149,258,259,260,261,150,262,151,263,264,265,152,153,266,267,154,155,268,269,157,270,158,271,272,159,273,160,161,162,274,163,164,275,166,167,276,277,278,279,168,280,169,281,282,283,170,171,284,285,172,173,286,287,175,288,289,176,290,177,178,179,291,180,181,292,183,184,293,294,295,296,185,297,186,298,299,300,187,188,301,302,189,190,303,304,192,305],"tindex":"2d7e253b-dacd-11e4-b16e-c982dac7000e","variableMapping":{"bytePos":"tmpValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":-1},{"failures":[4,5,77,78,6,79,8,9,11,13,14,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,38,39,40,41,42,122],"tindex":"2d7e253c-dacd-11e4-b16e-5dd01a1aa3c2","variableMapping":{"initialized":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:299","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call prepareIndex only once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:67","type":"CtWhileImpl","sourcecode":"while (!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) {\n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    \n    if (!(boolean))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n}"},"status":-1},{"failures":[130,149,167,184],"tindex":"2d7e253d-dacd-11e4-b16e-e7b216c666e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[],"tindex":"2d7e253e-dacd-11e4-b16e-dde116308463","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","this":"this","segmentSizePower":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":0},{"failures":[],"tindex":"2d7e4c4f-dacd-11e4-b16e-21cf2978b18c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[306,307,308],"tindex":"2d7e4c50-dacd-11e4-b16e-e59626c944ec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:381","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-1},{"failures":[],"tindex":"2d7e4c51-dacd-11e4-b16e-df84811e0f88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":0},{"failures":[],"tindex":"2d7e4c52-dacd-11e4-b16e-a98e541961fb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[2,3,4,5,77,78,6,309,7,79,8,201,310,80,81,202,82,83,203,84,204,205,85,86,311,87,88,89,206,312,90,313,313,314,314,315,316,317,318,319,320,321,322,323,323,324,324,325,325,326,326,91,91,327,327,328,328,92,92,329,329,330,330,331,331,332,332,333,93,94,95,96,97,99,106,107,218,108,109,193,229,110,9,10,11,111,12,112,113,334,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,335,336,337,114,115,116,117,338,339,118,340,341,119,120,121,122,342,343,344,345,346,347,348,349,350,351,352,353,236,354,355,356,357,358,359,237,58,59,360,361,60,61,362,62,363,63,64,364,365,65,366,367,66,368,369,370,371,372,373,374,43,67,44,68,69,375,376,70,71,377,72,378,73,74,379,380,75,381,382,76,383,384,385,123,124,125,238,126,127,386,239,128,129,387,130,240,241,242,243,131,244,132,245,246,388,389,247,133,390,134,248,249,135,391,136,137,392,250,251,138,252,393,394,395,139,45,253,46,140,396,47,254,141,397,398,255,399,142,143,144,256,145,146,400,257,147,148,401,149,258,259,260,261,150,262,151,263,264,402,403,265,152,404,153,266,267,154,405,155,156,406,268,269,157,270,158,271,272,159,407,408,273,409,160,161,162,274,163,164,410,275,165,166,411,167,276,277,278,279,168,280,169,281,282,412,413,283,170,414,171,284,285,172,415,173,174,416,286,287,175,288,289,176,417,418,290,419,177,178,179,291,180,181,420,292,182,183,421,184,293,294,295,296,185,297,186,298,299,422,423,300,187,424,188,301,302,189,425,190,191,426,303,304,192,305,427,428,429],"tindex":"2d7e4c53-dacd-11e4-b16e-255b92a18281","variableMapping":{"str":"name","this":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:154","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    java.lang.String += \"_STORE\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[2,78,8,201,202,82,83,203,84,204,205,85,86,87,88,89,206,90,430,323,431,432,433,434,435,436,98,208,437,438,99,214,100,439,215,440,216,441,442,217,101,443,444,102,445,306,103,198,104,446,105,447,448,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,236,237,66,76,123,124,125,238,126,127,386,239,128,129,387,130,240,241,242,243,131,244,132,245,246,388,389,247,133,390,134,248,249,135,391,136,137,392,250,251,138,252,139,45,253,46,140,396,47,254,141,397,398,255,399,142,143,144,256,145,146,400,257,147,148,401,149,258,259,260,261,150,262,151,263,264,402,403,265,152,404,153,266,267,154,405,155,156,406,268,269,157,270,158,271,272,159,407,408,273,409,160,161,162,274,163,164,410,275,165,166,411,167,276,277,278,279,168,280,169,281,282,412,413,283,170,414,171,284,285,172,415,173,174,416,286,287,175,288,289,176,417,418,290,419,177,178,179,291,180,181,420,292,182,183,421,184,293,294,295,296,185,297,186,298,299,422,423,300,187,424,188,301,302,189,425,190,191,426,303,304,192,305],"tindex":"2d7e7364-dacd-11e4-b16e-aba5c7defe60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:140","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[106,109,193],"tindex":"2d7e7365-dacd-11e4-b16e-fd3f186cac7e","variableMapping":{"turnCostsCount":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"2d7e7366-dacd-11e4-b16e-1f4fd6657666","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":0},{"failures":[],"tindex":"2d7e7367-dacd-11e4-b16e-ef2f2b7c4029","variableMapping":{"tmp":"java.lang.Double.MAX_VALUE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"2d7e7368-dacd-11e4-b16e-13f70694dc23","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"2d7e7369-dacd-11e4-b16e-cd10d0b60882","variableMapping":{"high":"speed","guess":"speed","low":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":0},{"failures":[20],"tindex":"2d7e736a-dacd-11e4-b16e-d7a7af2cbfed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[210,211,194,220,195,224,226,196,231,233,197],"tindex":"2d7e736b-dacd-11e4-b16e-cfa26ae8e5ed","variableMapping":{"encoded":"unpavedBit","backwardBit":"unpavedBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[4,206,217,445,306,225,232,308,117],"tindex":"2d7e736c-dacd-11e4-b16e-35807dc4587b","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[94,95,117,449,450,451,452,453],"tindex":"2d7e736d-dacd-11e4-b16e-f7c2d0726c0c","variableMapping":{"maxSpeed":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"2d7e736e-dacd-11e4-b16e-df7267fc3d6e","variableMapping":{"intIndex":"speed","len":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:368","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"2d7e736f-dacd-11e4-b16e-9f859af15062","variableMapping":{"c":"this","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.Circle:150","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.shapes.Circle.getBounds().intersect(com.graphhopper.util.shapes.Circle.getBounds()))) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"2d7e9a80-dacd-11e4-b16e-cf0aabbb032b","variableMapping":{"shift":"usedBits","backwardBit":"wayBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:511","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[2,3,4,5,77,6,7,79,8,202,83,203,84,204,205,85,86,87,88,89,206,90,323,324,326,91,327,92,329,332,94,229,110,39,114,115,116,118,343,344,346,347,360,361,60,369,370,371,372,374,375,376,70,141,142,402,266,156,269,454,158,159,160,412,284,174,287,176,177,422,301,191,304,455,456,457,458,459,460,461,462,463,464,465,466,467,468],"tindex":"2d7e9a81-dacd-11e4-b16e-31f8d44cd570","variableMapping":{"size":"segmentSizePower","delta":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[48,49,50,51,52,53,54,469,470,55,56,57,471],"tindex":"2d7e9a82-dacd-11e4-b16e-cba77b17c953","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[110],"tindex":"2d7e9a83-dacd-11e4-b16e-8f2c7423e2e0","variableMapping":{"factor":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"2d7e9a84-dacd-11e4-b16e-db67e46b4e23","variableMapping":{"currentBucket":"biggestStart","currentIndex":"biggestStart","bucketSize":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":0},{"failures":[4,206,217,445,306,225,232,308,117],"tindex":"2d7e9a85-dacd-11e4-b16e-611670d8c433","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"2d7e9a86-dacd-11e4-b16e-23103b923b04","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[92,94,95,209,438,99,100,102,472,219,223,110,230,9,14,19,20,31,32,121,236,237,66,76,123,128,130,137,139,140,142,147,149,156,160,165,167,174,177,182,184,191],"tindex":"2d7e9a87-dacd-11e4-b16e-5fdcc5d8892c","variableMapping":{"distance":"speed","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[4,206,217,445,306,308,117],"tindex":"2d7e9a88-dacd-11e4-b16e-b38bc698d3a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"2d7e9a89-dacd-11e4-b16e-3743b460529e","variableMapping":{"val":"maxTurnCosts","com.graphhopper.storage.GraphHopperStorage.INT_DIST_FACTOR":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:247","type":"CtReturnImpl","sourcecode":"return int / (com.graphhopper.storage.GraphHopperStorage.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[11,12,13,15,17,18,473],"tindex":"2d7e9a8a-dacd-11e4-b16e-656f262cd8e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-1},{"failures":[],"tindex":"2d7e9a8b-dacd-11e4-b16e-4916a5ff7e62","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:370","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"2d7e9a8c-dacd-11e4-b16e-fb2e83ec70e3","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[9,13,14,21,24,25,36,38,40],"tindex":"2d7e9a8d-dacd-11e4-b16e-814ac23c6827","variableMapping":{"clonedG":"graph","nodeEntryBytes":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1074","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.int) != (int))\n    throw new java.lang.IllegalStateException(((((\"nodeEntryBytes cannot be different for cloned graph. \" + \"Cloned: \") + (com.graphhopper.storage.GraphHopperStorage.int)) + \" vs \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[],"tindex":"2d7ec19e-dacd-11e4-b16e-6b08098c118e","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"bytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-2},{"failures":[11,112,113,13,17,474,475,476,477,478,479],"tindex":"2d7ec19f-dacd-11e4-b16e-cfcc3be4a39e","variableMapping":{"capacity":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[],"tindex":"2d7ec1a0-dacd-11e4-b16e-1de2422bc25c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":0},{"failures":[],"tindex":"2d7ec1a1-dacd-11e4-b16e-7db459010183","variableMapping":{"weightLong":"value","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":0},{"failures":[],"tindex":"2d7ec1a2-dacd-11e4-b16e-b30a80205932","variableMapping":{"fromX":"minLat","toX":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[194,195,196,197],"tindex":"2d7ec1a3-dacd-11e4-b16e-c9d16159edbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[110],"tindex":"2d7ec1a4-dacd-11e4-b16e-a5d0102c9d87","variableMapping":{"r":"incEleSum","angle":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"2d7ec1a5-dacd-11e4-b16e-eb25a5d76da0","variableMapping":{"latSize":"usedBits","size":"usedBits","lonSize":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":0},{"failures":[369,370,371,372,374,126,134,145,163,171,180,188],"tindex":"2d7ec1a6-dacd-11e4-b16e-a77a4e28aba1","variableMapping":{"type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:178","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-1},{"failures":[480,481,482,483,195,221,222],"tindex":"2d7ec1a7-dacd-11e4-b16e-d9d877be34b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[444,103],"tindex":"2d7ec1a8-dacd-11e4-b16e-d1656c3dd6f0","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>)) && (!boolean))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"2d7ec1a9-dacd-11e4-b16e-6b31659a5bcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:88","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DAType com.graphhopper.storage.DAType = java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"2d7ec1aa-dacd-11e4-b16e-2723422f606f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"2d7ec1ab-dacd-11e4-b16e-e34d2281eb61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[220],"tindex":"2d7ec1ac-dacd-11e4-b16e-f3d7d410c3d3","variableMapping":{"ghLocation":"trackType","osmFile":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"2d7ec1ad-dacd-11e4-b16e-6b7b63a4429d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[484,477],"tindex":"2d7ec1ae-dacd-11e4-b16e-31892284875b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-1},{"failures":[],"tindex":"2d7fd31f-dacd-11e4-b16e-d3d9d0717b18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:156","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"2d7fd320-dacd-11e4-b16e-c3d656dca93c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:263","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"2d7fd321-dacd-11e4-b16e-09560f3973a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[2,3,4,5,77,78,6,7,79,8,201,82,83,203,84,204,205,86,87,89,319,320,321,322,324,91,327,92,329,332,94,95,39,114,115,116,117,343,344,346,347,360,361,60,370,371,372,374,375,376,70,134,396,141,142,402,266,156,268,269,158,159,160,412,284,174,286,287,176,177,422,301,191,303,304,485,486,427],"tindex":"2d7ffa32-dacd-11e4-b16e-1f17bc7330bc","variableMapping":{"size":"length","newSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"2d7ffa33-dacd-11e4-b16e-c152ed103ef8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:413","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId())"},"status":-2},{"failures":[],"tindex":"2d7ffa34-dacd-11e4-b16e-79ea84b0da53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"2d7ffa35-dacd-11e4-b16e-d17d6e3d1b52","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"2d7ffa36-dacd-11e4-b16e-572256fb615e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"2d7ffa37-dacd-11e4-b16e-7feed6f72eaa","variableMapping":{"i":"y2","lastIndex":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"2d7ffa38-dacd-11e4-b16e-1ba853b7a865","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:145","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[4,5,77,6,79,8,202,83,203,84,204,205,85,86,87,88,89,206,90,343,344,345,346,347,487,158,488,455,456,489,457,458,459,460,461,490,462,463,491,464,465,466,467,468],"tindex":"2d7ffa39-dacd-11e4-b16e-6fdaf75a54a4","variableMapping":{"latSize":"bufferIndex","size":"bufferIndex","lonSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:218","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-1},{"failures":[4,33,36,43],"tindex":"2d7ffa3a-dacd-11e4-b16e-11e627baff86","variableMapping":{"length":"nodeA","factor":"nodeA"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:63","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[220],"tindex":"2d7ffa3b-dacd-11e4-b16e-b30edaff6ba8","variableMapping":{"algo":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:133","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[212,445,306,221,227,234,308],"tindex":"2d7ffa3c-dacd-11e4-b16e-03b859c4ae37","variableMapping":{"eleDelta":"speed","decEleSum":"speed","fullDist2D":"speed","decDist2DSum":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[19],"tindex":"2d7ffa3d-dacd-11e4-b16e-732afa791908","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"2d7ffa3e-dacd-11e4-b16e-2f185e27f50e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[48,49,51,52,53,54,55,56,57],"tindex":"2d7ffa3f-dacd-11e4-b16e-0dbbd318aa55","variableMapping":{"y1":"midLon","x1":"lon","y2":"midLon","x2":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"2d7ffa40-dacd-11e4-b16e-55d8ea8e36e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[11,12,13,15,17,475],"tindex":"2d7ffa41-dacd-11e4-b16e-d1fd6b7843a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"2d7ffa42-dacd-11e4-b16e-01b6622f5d85","variableMapping":{"costs":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":0},{"failures":[],"tindex":"2d802153-dacd-11e4-b16e-ffcaa5261aa1","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","nodeType":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":0},{"failures":[],"tindex":"2d802154-dacd-11e4-b16e-a5f6da3658e6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"2d802155-dacd-11e4-b16e-5dca659caba8","variableMapping":{"res":"nanoTime","value":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[],"tindex":"2d802156-dacd-11e4-b16e-6954da95447a","variableMapping":{"bytePos":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"2d802157-dacd-11e4-b16e-aba33593b3eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"2d802158-dacd-11e4-b16e-533cc02346d8","variableMapping":{"precision":"java.lang.Double.MAX_VALUE","lat":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":37,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":324,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":308,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":396,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":124,"com.graphhopper.reader.OSMReaderTest.testFerry":202,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":119,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":120,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":225,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":481,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":376,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":453,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":197,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":411,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":314,"com.graphhopper.coll.CompressedArrayTest.testCompress":57,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":12,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":388,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":184,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":44,"com.graphhopper.util.AngleCalcTest.testOrientation":449,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":488,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":15,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":392,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":9,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":186,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":479,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":29,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":368,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":195,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":336,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":255,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":109,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":220,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":27,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":361,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":226,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":158,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":469,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":142,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":477,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":18,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":60,"com.graphhopper.reader.OSMReaderTest.testSort":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":227,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":88,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":407,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":456,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":425,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":176,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":250,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":92,"com.graphhopper.routing.DijkstraTest.initializationError":431,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":173,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":487,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":404,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":292,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":271,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":160,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":401,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":213,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":72,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":67,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":71,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":23,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":144,"com.graphhopper.coll.OSMIDMapTest.testGetLong":346,"com.graphhopper.coll.IntIntBinHeapTest.testSize":484,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":278,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":282,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":262,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":473,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":141,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":263,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":451,"com.graphhopper.coll.CompressedArrayTest.testCompress2":56,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":299,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":209,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":167,"com.graphhopper.GraphHopperAPITest.testLoad":122,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":399,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":437,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":293,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":179,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":1,"com.graphhopper.storage.LevelGraphStorageTest.testClone":145,"com.graphhopper.reader.OSMReaderTest.testBarriers":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":161,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":193,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":26,"com.graphhopper.util.GHUtilityTest.testCopy":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":127,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":489,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":352,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":467,"com.graphhopper.routing.PathTest.testFindInstruction":95,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":162,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":474,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":121,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":215,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":406,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":349,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":190,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":172,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":113,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":279,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":98,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":434,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":400,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":386,"com.graphhopper.util.InstructionListTest.testWayList2":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":364,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":192,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":410,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":224,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":286,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":229,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":417,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":147,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":491,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":485,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":457,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":243,"com.graphhopper.storage.RAMDirectoryTest.testSynched":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":25,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":178,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":204,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":455,"com.graphhopper.routing.AStarTest.initializationError":432,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":39,"com.graphhopper.coll.OSMIDMapTest.testGet":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":166,"com.graphhopper.routing.PathBidirRefTest.testExtract":96,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":440,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":345,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":402,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":379,"com.graphhopper.storage.RAMDataAccessTest.testCopy":462,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":288,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":248,"com.graphhopper.storage.RAMDataAccessTest.testSegments":466,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":66,"com.graphhopper.util.GHUtilityTest.testSort2":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":34,"com.graphhopper.reader.OSMReaderTest.testMain":83,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":281,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":470,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":380,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":152,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":408,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":149,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":261,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":157,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":91,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":230,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":151,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":206,"com.graphhopper.storage.StorablePropertiesTest.testStore":427,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":486,"com.graphhopper.storage.GraphHopperStorageTest.testClone":180,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":391,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":103,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":394,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":445,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":139,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":239,"com.graphhopper.routing.PathTest.testTime":93,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":268,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":146,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":447,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":246,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":265,"com.graphhopper.reader.OSMReaderTest.testRelation":311,"com.graphhopper.util.GHUtilityTest.testSortDirected":341,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":478,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":234,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":384,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":460,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":326,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":480,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":370,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":444,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":131,"com.graphhopper.search.NameIndexTest.testCreate":322,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":465,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":323,"com.graphhopper.routing.QueryGraphTest.testOneWay":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":366,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":482,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":360,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":48,"com.graphhopper.reader.OSMReaderTest.testWithBounds":89,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":468,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":490,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":241,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":416,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":389,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":207,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":143,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":398,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":222,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":283,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":168,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":177,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":20,"com.graphhopper.util.InstructionListTest.testWayList":115,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":426,"com.graphhopper.GraphHopperAPITest.testDisconnected179":342,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":128,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":238,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":138,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":77,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":420,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":16,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":199,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":31,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":430,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":14,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":196,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":41,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":419,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":381,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":228,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":289,"com.graphhopper.routing.PathTest.testWayList":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":240,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":443,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":307,"com.graphhopper.coll.OSMIDMapTest.testGet2":344,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":154,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":413,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":297,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":438,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":275,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":150,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":378,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":73,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":463,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":461,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":74,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":476,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":210,"com.graphhopper.util.GHUtilityTest.testSort":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":390,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":55,"com.graphhopper.search.NameIndexTest.testPut":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":175,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":69,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":351,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":374,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":232,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":110,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":354,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":272,"com.graphhopper.storage.MMapDirectoryTest.testSynched":383,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":316,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":280,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":106,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":134,"com.graphhopper.routing.PathTest.testFound":333,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":201,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":208,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":155,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":0,"com.graphhopper.util.AngleCalcTest.testAtan2":450,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":253,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":277,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":475,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":321,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":130,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":183,"com.graphhopper.util.InstructionListTest.testEmptyList":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":28,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":442,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":441,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":35,"com.graphhopper.reader.PrinctonReaderTest.testRead":80,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":191,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":70,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":165,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":49,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":123,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":169,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":454,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":436,"com.graphhopper.reader.OSMReaderTest.testFoot":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":133,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":317,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":332,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":54,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":363,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":63,"com.graphhopper.reader.OSMReaderTest.testOneWay":90,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":294,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":302,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":415,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":483,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":459,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":132,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":112,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":471,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":111,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":357,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":458,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":99,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":242,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":325,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":312,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":418,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":385,"com.graphhopper.routing.PathBidirRefTest.testExtract2":97,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":194,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":365,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":319,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":188,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":358,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":85,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":252,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":61,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":189,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":257,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":104,"com.graphhopper.GraphHopperTest.testFootAndCar":78,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":422,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":211,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":382,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":126,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":446,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":163,"com.graphhopper.storage.StorablePropertiesTest.testLoad":428,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":38,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":125,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":87,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":140,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":117,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":424,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":100,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":244,"com.graphhopper.routing.AStarBidirectionTest.initializationError":433,"com.graphhopper.util.AngleCalcTest.testCombined":452,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":448,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":405,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":267,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":159}}]
