[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"b61f8269-dbb1-11e4-88a8-376679340990","variableMapping":{"edgeId":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[10,11,12],"tindex":"b6228faa-dbb1-11e4-88a8-c517b0214d07","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"b6228fab-dbb1-11e4-88a8-8713b60bd583","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"b6228fac-dbb1-11e4-88a8-7d5cff0e929e","variableMapping":{"flags":"bytePos","mask":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":0},{"failures":[13],"tindex":"b6228fad-dbb1-11e4-88a8-db58dbe9fafc","variableMapping":{"start":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,10,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,13,396,397,398,399],"tindex":"b62575de-dbb1-11e4-88a8-cbb16721139b","variableMapping":{"encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:182","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"EncodingManager can only be null if you call loadExisting\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[],"tindex":"b62575df-dbb1-11e4-88a8-df1b65c318d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[245,247,256,257,261,275,277,286,287,291,296,302,303,307,320,324],"tindex":"b62575e0-dbb1-11e4-88a8-014eed28e92c","variableMapping":{"maxSpeed":"maxSpeed","fwdSpeed":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:329","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"b62575e1-dbb1-11e4-88a8-27f70c2015c3","variableMapping":{"size":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":0},{"failures":[273],"tindex":"b62575e2-dbb1-11e4-88a8-3b7a8074ed90","variableMapping":{"value":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[22,30,32,33,35,39,40,47,48,73,81,83,84,86,90,91,98,99,111,119,121,122,124,128,129,136,137,162,170,172,173,175,179,180,187,188,211,214],"tindex":"b62575e3-dbb1-11e4-88a8-bbb8289bf876","variableMapping":{"ret":"i","retBucket":"i","i":"i","bucketSize":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"b62575e4-dbb1-11e4-88a8-0757198db733","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":0},{"failures":[],"tindex":"b62575e5-dbb1-11e4-88a8-8938b2d58426","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"b6259cf6-dbb1-11e4-88a8-910d8c30530f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"b6259cf7-dbb1-11e4-88a8-29ba91541587","variableMapping":{"ghLocation":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:360","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":0},{"failures":[],"tindex":"b6259cf8-dbb1-11e4-88a8-bb0ca747b46e","variableMapping":{"err":"y1","dLat":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[224],"tindex":"b6259cf9-dbb1-11e4-88a8-c3a8a32d54ec","variableMapping":{"acceptedRailways":"restrictedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[211,215,216],"tindex":"b6259cfa-dbb1-11e4-88a8-8b8cec732007","variableMapping":{"err":"index","dLat":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"b6259cfb-dbb1-11e4-88a8-d11956330d09","variableMapping":{"red":"x1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"b6259cfc-dbb1-11e4-88a8-e5db284cacdc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[400],"tindex":"b6259cfd-dbb1-11e4-88a8-f5472df7407d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[],"tindex":"b6259cfe-dbb1-11e4-88a8-e5a850a1538f","variableMapping":{"latSize":"edgeId","size":"endNode","lonSize":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":-1},{"failures":[],"tindex":"b626ae6f-dbb1-11e4-88a8-0f525f6a127c","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"shift","speed":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:363","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"b626ae70-dbb1-11e4-88a8-6f1fc1788888","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:270","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"b626ae71-dbb1-11e4-88a8-014fb6ee9aeb","variableMapping":{"segmentSizeInBytes":"size","length":"size","index":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"b626ae72-dbb1-11e4-88a8-b94add423b00","variableMapping":{"value":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"b626ae73-dbb1-11e4-88a8-473fa8e91bfd","variableMapping":{"edge":"start","this":"iter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:770","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setEdgeId(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"b626ae74-dbb1-11e4-88a8-dd203a8e2bab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"b626ae75-dbb1-11e4-88a8-7185c223cecd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"b626ae76-dbb1-11e4-88a8-a309795338c2","variableMapping":{"byteCount":"flags1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[220,224,376,380,383],"tindex":"b626ae77-dbb1-11e4-88a8-bb8b5be74295","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[147,149,158,161,162,169,184,190,192,196,333,336,337,10,342,343,346,348,360,370,373],"tindex":"b626d588-dbb1-11e4-88a8-5b9f46df0c2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.next()"},"status":-1},{"failures":[401,402,403,15,20,41,47,52,54,404,405,406,407,408,63,66,71,92,98,103,105,152,155,160,181,187,192,194,409,410,203,205,206,207,208,329,330,411,332,412,413,367,414,415,416,417,418,371,373,377,378,379,381,384,387,388],"tindex":"b626d589-dbb1-11e4-88a8-f1fa2251b78e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:295","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"b626d58a-dbb1-11e4-88a8-9d3d4742cdc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"b626d58b-dbb1-11e4-88a8-690625731a59","variableMapping":{"arrayLength":"cap","maxGeoRef":"cap"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.com.graphhopper.util.Helper.idealIntArraySize(int)"},"status":0},{"failures":[],"tindex":"b626d58c-dbb1-11e4-88a8-61ad37024dd5","variableMapping":{"need":"offset","i":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[],"tindex":"b626d58d-dbb1-11e4-88a8-b9454693556f","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[],"tindex":"b626d58e-dbb1-11e4-88a8-5b34cac0ec5a","variableMapping":{"pos":"toSize","mSize":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[245,249,250,263,275,279,280,293,296,298,309,313,315,316],"tindex":"b626d58f-dbb1-11e4-88a8-4d3c697233d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"b626d590-dbb1-11e4-88a8-49eb2e824db7","variableMapping":{"elem":"mKeys"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[333,336,337,338,10,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,377,378,380],"tindex":"b626d591-dbb1-11e4-88a8-457c6755c087","variableMapping":{"tmp":"tmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"b626d592-dbb1-11e4-88a8-27061783ed73","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[419,420,421,422,423,424,425,426,427,0,1,2,3,5,7,8,428,429],"tindex":"b626d593-dbb1-11e4-88a8-efd1b0202cd6","variableMapping":{"min":"midLat","time":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:49","type":"CtIfImpl","sourcecode":"if (long < (double))\n    double = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"b626d594-dbb1-11e4-88a8-c142745870ad","variableMapping":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[334,336,337,338,339,340,341,10,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,430,372,373,374,377,378],"tindex":"b626fca5-dbb1-11e4-88a8-89cd59840482","variableMapping":{"currentEntry":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"b626fca6-dbb1-11e4-88a8-b3ec17059efa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:78","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.Integer, java.lang.Integer> java.util.Map<java.lang.Integer, java.lang.Integer> = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks()"},"status":-2},{"failures":[431,401,402,403,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,419,432,404,433,405,434,420,435,421,422,436,437,438,439,440,441,58,442,443,444,445,446,447,59,448,449,450,451,452,453,454,455,456,457,458,459,460,60,461,61,462,424,463,406,464,407,465,425,466,426,427,467,468,469,470,471,472,62,408,473,474,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,475,476,477,478,198,199,200,201,202,479,480,203,481,482,204,205,206,207,208,483,484,209,210,211,212,213,214,215,216,219,242,243,327,328,329,330,485,485,411,411,486,486,487,487,331,331,488,488,489,489,332,332,412,412,490,490,491,491,413,413,333,334,336,337,338,339,340,341,10,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,414,415,416,417,418,371,372,373,374,375,376,377,492,378,379,380,381,493,382,383,384,385,386,387,388,389,390,391,392,393,394,395,13,396,397,494,495,496,497,498,398,399],"tindex":"b626fca7-dbb1-11e4-88a8-85aa6992c9c6","variableMapping":{"type":"type"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:76","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    throw new java.lang.IllegalStateException(\"something went wrong as DataAccess object is already synched!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:89","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"status":-1},{"failures":[336,338,340,341,10,343,345],"tindex":"b626fca8-dbb1-11e4-88a8-d12a080a7fb4","variableMapping":{"java.lang.Integer.MAX_VALUE":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-1},{"failures":[],"tindex":"b626fca9-dbb1-11e4-88a8-e1bda08c1cde","variableMapping":{"keyIndex":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtIfImpl","sourcecode":"if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n} else {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n}"},"status":0},{"failures":[],"tindex":"b626fcaa-dbb1-11e4-88a8-35e39faf9f9a","variableMapping":{"distance":"dist"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":0},{"failures":[],"tindex":"b626fcab-dbb1-11e4-88a8-4f195e9e7401","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-2},{"failures":[243],"tindex":"b626fcac-dbb1-11e4-88a8-070845a8c41d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"b626fcad-dbb1-11e4-88a8-0102fa4b0b70","variableMapping":{"radiusInMeter":"maxLat","com.graphhopper.util.DistanceCalcEarth.C":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[223],"tindex":"b626fcae-dbb1-11e4-88a8-5312fb21af8b","variableMapping":{"edgePointer":"encoded","edgeEntryBytes":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","nextEdge":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:763","type":"CtAssignmentImpl","sourcecode":"this.long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"b62723bf-dbb1-11e4-88a8-ff9bc6e74166","variableMapping":{"weightApproximation":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"b62723c0-dbb1-11e4-88a8-db5f88a3a4f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"b62723c1-dbb1-11e4-88a8-771b77ea6f50","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"b62723c2-dbb1-11e4-88a8-af5923882517","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:154","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,10,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,391,398,399],"tindex":"b62723c3-dbb1-11e4-88a8-43d0e98562a6","variableMapping":{"encoderList":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"b62723c4-dbb1-11e4-88a8-6d8bd46aa84c","variableMapping":{"neighborUpdates":"nextWayBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"b62723c5-dbb1-11e4-88a8-150885a65952","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"b62723c6-dbb1-11e4-88a8-1bf4727cf7cd","variableMapping":{"periodicUpdates":"pavementType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:386","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":0},{"failures":[],"tindex":"b62723c7-dbb1-11e4-88a8-e31f8a97ad78","variableMapping":{"edgeId":"guess"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:401","type":"CtIfImpl","sourcecode":"if ((int[][int]) < int) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[262,292,308,325],"tindex":"b62723c8-dbb1-11e4-88a8-3badbc29a074","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"b6274ad9-dbb1-11e4-88a8-e507bb489bcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"b6274ada-dbb1-11e4-88a8-a3eecf1d8371","variableMapping":{"value":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[333,342,347,348,370],"tindex":"b6274adb-dbb1-11e4-88a8-556263606bcf","variableMapping":{"currentBucket":"from","retBucket":"from","currentIndex":"from","bucketSize":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"b6274adc-dbb1-11e4-88a8-b911a6088d60","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[273],"tindex":"b6274add-dbb1-11e4-88a8-810ee4cf3d1b","variableMapping":{"logMessages":"speed","logMessagesPercentage":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:158","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    this.double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[],"tindex":"b6274ade-dbb1-11e4-88a8-b340486ae595","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"b6274adf-dbb1-11e4-88a8-17f941e3888b","variableMapping":{"com.graphhopper.util.DistanceCalcEarth.KM_MILE":"minLonTmp","distInMeter":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:76","type":"CtLocalVariableImpl","sourcecode":"double double = (double / 1000) / (com.graphhopper.util.DistanceCalcEarth.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"b6274ae0-dbb1-11e4-88a8-479d83b57784","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"currDistToGoal","speed":"currDistToGoal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[243,246,264,268,270,271,273,276,294,328,383,389,396],"tindex":"b6279901-dbb1-11e4-88a8-254bc575d9eb","variableMapping":{"initLeafSize":"shift","maxLeafEntries":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:67","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"b6279902-dbb1-11e4-88a8-31c08927b74a","variableMapping":{"size":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:124","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"b6279903-dbb1-11e4-88a8-19926e950280","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:342","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[220,223,246,248,249,250,260,264,273,276,278,279,280,290,294,297,298,306,310,313,315,323,326,499,383],"tindex":"b6279904-dbb1-11e4-88a8-17093e5eda23","variableMapping":{"bits":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"b6279905-dbb1-11e4-88a8-0595b0508d78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"b6279906-dbb1-11e4-88a8-113a69f785e0","variableMapping":{"tmp":"fwdIncline","tmpNo":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:148","type":"CtIfImpl","sourcecode":"if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"b6279907-dbb1-11e4-88a8-2d59ce446e60","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":0},{"failures":[],"tindex":"b6279908-dbb1-11e4-88a8-e71fa4e7ee25","variableMapping":{"maxSpeed":"currDistToGoal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":0},{"failures":[],"tindex":"b627c019-dbb1-11e4-88a8-11047ecedf58","variableMapping":{"freeIndex":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":-2},{"failures":[],"tindex":"b627c01a-dbb1-11e4-88a8-75faf1a3a4bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[],"tindex":"b627c01b-dbb1-11e4-88a8-fbab3e3b5503","variableMapping":{"segmentSizeInBytes":"maxCount","indexDivisor":"maxCount"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[500,11,12],"tindex":"b627c01c-dbb1-11e4-88a8-dd3083e3016c","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"b627c01d-dbb1-11e4-88a8-bdbb746ef19d","variableMapping":{"foundIndex":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1012","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[22,33,39,47,48,73,84,90,98,99,111,122,128,136,137,162,173,179,187,188,211,214],"tindex":"b627c01e-dbb1-11e4-88a8-9ff4124aa642","variableMapping":{"importance":"guess","hash":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:399","type":"CtAssignmentImpl","sourcecode":"int = (int + int) / 2"},"status":-1},{"failures":[],"tindex":"b627c01f-dbb1-11e4-88a8-d346cf65602b","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[],"tindex":"b627c020-dbb1-11e4-88a8-6325ac484cff","variableMapping":{"byteCount":"oldRelationFlags","longSegmentSize":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:116","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"b627c021-dbb1-11e4-88a8-af4ed7774b9a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[],"tindex":"b627c022-dbb1-11e4-88a8-a9e832609356","variableMapping":{"maxBits":"nextNodeBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,419,432,404,433,405,434,420,435,421,422,436,437,438,439,441,58,442,443,444,445,447,59,449,450,451,452,454,455,456,457,458,460,60,461,61,462,424,463,406,464,407,465,425,466,426,427,467,468,469,470,472,62,63,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,135,501,502,503,504,505,506,507,508,509,510,511,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,479,480,203,481,482,204,205,206,207,208,483,484,209,210,211,212,213,214,215,216,219,242,243,329,330,485,411,486,487,331,488,489,332,412,490,491,413,333,334,336,337,338,339,340,341,10,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399],"tindex":"b627c023-dbb1-11e4-88a8-79c83dac6a3b","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"b628aa84-dbb1-11e4-88a8-677baa3622d3","variableMapping":{"tmp":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"b628aa85-dbb1-11e4-88a8-cd1d0736f895","variableMapping":{"size":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[262,292,308,325],"tindex":"b628aa86-dbb1-11e4-88a8-7db2c56352b7","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[223,376,383],"tindex":"b628aa87-dbb1-11e4-88a8-3b64ac7c8708","variableMapping":{"oldValueIndex":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"b628aa88-dbb1-11e4-88a8-b11bb0a1708c","variableMapping":{"newUniqueOsmId":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"b628aa89-dbb1-11e4-88a8-a910dae474ed","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.VERY_NICE","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.PREFER"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[208,234,311,376,381,383,388,389],"tindex":"b628aa8a-dbb1-11e4-88a8-a5abc1e76a53","variableMapping":{"cap":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[],"tindex":"b628aa8b-dbb1-11e4-88a8-61a551ef19e1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"b628aa8c-dbb1-11e4-88a8-6d352cb840e7","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"index","nodeType":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:542","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":365,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":411,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":152,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":311,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":110,"com.graphhopper.reader.OSMReaderTest.testFerry":382,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":201,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":202,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":279,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":464,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":372,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":197,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":81,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":498,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":322,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":55,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":130,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":31,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":462,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":343,"com.graphhopper.GraphHopperTest.testPrepare":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":364,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":333,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":277,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":357,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":448,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":323,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":484,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":158,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":424,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":215,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":275,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":502,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":349,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":433,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":280,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":493,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":63,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":428,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":160,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":346,"com.graphhopper.GraphHopperTest.testLoadOSM":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":436,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":505,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":405,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":272,"com.graphhopper.reader.OSMReaderTest.testSort":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":291,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":213,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":67,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":50,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":15,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":143,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":332,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":102,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":185,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":27,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":64,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":76,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":71,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":170,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":310,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":307,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":466,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":35,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":465,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":492,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":352,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":351,"com.graphhopper.coll.OSMIDMapTest.testGetLong":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":85,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":91,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":177,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":155,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":179,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":296,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":82,"com.graphhopper.GraphHopperAPITest.testLoad":198,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":159,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":504,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":217,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":32,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":22,"com.graphhopper.storage.LevelGraphStorageTest.testClone":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":72,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":216,"com.graphhopper.reader.OSMReaderTest.testBarriers":386,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":114,"com.graphhopper.util.GHUtilityTest.testCopy":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":354,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":62,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":304,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":325,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":446,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":319,"com.graphhopper.routing.PathTest.testFindInstruction":330,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":73,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":500,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":200,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":223,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":247,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":443,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":51,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":100,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":479,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":86,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":258,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":270,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":166,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":115,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":511,"com.graphhopper.util.InstructionListTest.testWayList2":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":437,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":56,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":77,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":278,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":474,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":105,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":276,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":242,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":168,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":410,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":83,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":449,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":353,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":367,"com.graphhopper.coll.OSMIDMapTest.testGet":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":80,"com.graphhopper.routing.PathBidirRefTest.testExtract":209,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":224,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":181,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":284,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":468,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":136,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":313,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":58,"com.graphhopper.util.GHUtilityTest.testSort2":480,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":362,"com.graphhopper.reader.OSMReaderTest.testMain":384,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":285,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":429,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":292,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":469,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":184,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":140,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":171,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":175,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":196,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":172,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":331,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":95,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":245,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":503,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":178,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":395,"com.graphhopper.storage.StorablePropertiesTest.testStore":408,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":409,"com.graphhopper.storage.GraphHopperStorageTest.testClone":24,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":139,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":235,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":475,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":233,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":116,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":150,"com.graphhopper.routing.PathTest.testTime":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":303,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":194,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":240,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":453,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":129,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":183,"com.graphhopper.reader.OSMReaderTest.testRelation":391,"com.graphhopper.util.GHUtilityTest.testSortDirected":482,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":261,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":477,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":487,"com.graphhopper.GraphHopperTest.testFootOnly":380,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":314,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":231,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":450,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":476,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":425,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":334,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":125,"com.graphhopper.search.NameIndexTest.testCreate":403,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":485,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":507,"com.graphhopper.routing.QueryGraphTest.testOneWay":490,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":440,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":318,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":497,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":404,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":2,"com.graphhopper.reader.OSMReaderTest.testWithBounds":394,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":212,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":488,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":131,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":225,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":268,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":161,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":157,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":295,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":259,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":326,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":94,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":60,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":87,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":20,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":348,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":53,"com.graphhopper.util.InstructionListTest.testWayList":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":282,"com.graphhopper.GraphHopperAPITest.testDisconnected179":199,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":117,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":256,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":399,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":128,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":501,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":289,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":375,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":26,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":451,"com.graphhopper.routing.util.EncodedValueTest.testSwap":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":344,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":274,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":342,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":192,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":236,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":300,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":69,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":180,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":369,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":471,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":506,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":294,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":14,"com.graphhopper.routing.PathTest.testWayList":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":144,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":121,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":230,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":400,"com.graphhopper.coll.OSMIDMapTest.testGet2":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":370,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":189,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":494,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":288,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":37,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":218,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":78,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":176,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":467,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":253,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":297,"com.graphhopper.util.GHUtilityTest.testSort":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":435,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":287,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":317,"com.graphhopper.search.NameIndexTest.testPut":401,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":107,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":445,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":463,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":454,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":457,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":509,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":249,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":243,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":65,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":299,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":266,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":495,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":368,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":211,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":510,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":135,"com.graphhopper.routing.PathTest.testFound":327,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":273,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":381,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":191,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":286,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":84,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":430,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":402,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":120,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":29,"com.graphhopper.util.InstructionListTest.testEmptyList":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":356,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":305,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":470,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":360,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":227,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":226,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":324,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":363,"com.graphhopper.reader.PrinctonReaderTest.testRead":398,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":407,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":79,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":119,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":109,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":89,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":254,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":321,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":269,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":246,"com.graphhopper.reader.OSMReaderTest.testFoot":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":133,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":413,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":496,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":8,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":421,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":312,"com.graphhopper.reader.OSMReaderTest.testOneWay":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":422,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":33,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":48,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":101,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":320,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":252,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":339,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":423,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":336,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":337,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":458,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":219,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":123,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":486,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":13,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":17,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":478,"com.graphhopper.routing.PathBidirRefTest.testExtract2":210,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":508,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":347,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":438,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":431,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":459,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":309,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":146,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":460,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":434,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":49,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":167,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":237,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":41,"com.graphhopper.GraphHopperTest.testFootAndCar":376,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":472,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":113,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":267,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":75,"com.graphhopper.storage.StorablePropertiesTest.testLoad":473,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":366,"com.graphhopper.GraphHopperTest.testPrepareOnly":371,"com.graphhopper.GraphHopperTest.testVia":373,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":447,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":111,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":392,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":151,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":45,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":208,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":221,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":126,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":241,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":190,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":188,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":66}}]
