[{"failures":[0],"tindex":"b14ba7d4-daf7-11e4-9a80-a372e8d0a8c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:161","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.EdgeIteratorState.getDistance()"},"status":-1},{"failures":[],"tindex":"b14ba7d5-daf7-11e4-9a80-014da400dfb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"b14bcee6-daf7-11e4-9a80-b309220a6ed9","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"x2","edge":"x2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,17,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,0,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,18,19,20,21,22,380,23,24,381,382,383,384],"tindex":"b14bcee7-daf7-11e4-9a80-63fde692c7d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"b14bcee8-daf7-11e4-9a80-65eb9a566898","variableMapping":{"segmentsToMap":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:115","type":"CtForImpl","sourcecode":"for (int int = int[][].int ; int < (int[][].int) ; int++) {\n    int[][][int] = new int[1 << (int)];\n}"},"status":-2},{"failures":[385],"tindex":"b14bcee9-daf7-11e4-9a80-2fd412c37793","variableMapping":{"segmentSizeInBytes":"usedBits","capacity":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:415","type":"CtAssignmentImpl","sourcecode":"long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[220,229,232,235,236,238,239,240,241,242,243,245,246,247,253,254,256,257,258,259,260,261,263,264,265,267,268,271,272,273,274,275,386,385,282,283,284,285,286,287,289,290,291,293,294,297,298,299,300,301,302,303,304,305,306,307,309,310,313,314,315,316,317,387,319,320,321,322,323,324,326,329,330,331,332,378,379,18,19,20,21,22,380,23,24,381,388,389,390,25,26,391,392,393,394,395,382,396,397,398,399,400,401,402,403],"tindex":"b14bf5fa-daf7-11e4-9a80-2db22dfbd2bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"b14bf5fb-daf7-11e4-9a80-4dea72a2ae9a","variableMapping":{"intLow":"code","intHigh":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":0},{"failures":[220,240,245,246,387,18,399],"tindex":"b14bf5fc-daf7-11e4-9a80-fd617da16e0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"b14bf5fd-daf7-11e4-9a80-7fa274ab8e05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,278,404,389,390,25,26,391,392,393,394,395,396,397,398,399,401],"tindex":"b14bf5fe-daf7-11e4-9a80-6be828dc45da","variableMapping":{"index":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"b14bf5ff-daf7-11e4-9a80-875295bb3acb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:41","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"b14bf600-daf7-11e4-9a80-a96559ddf4f9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[257,259,260,261,271,275,386,385,280,283,285,286,287,297,301,304,305,313,317,319,321,329,332,390,394,401],"tindex":"b14bf601-daf7-11e4-9a80-ef9500528b88","variableMapping":{"lastTime":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[],"tindex":"b14bf602-daf7-11e4-9a80-39c0294795ca","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"status":-2},{"failures":[],"tindex":"b14bf603-daf7-11e4-9a80-8d07a85af996","variableMapping":{"indexWithMaxDist":"guess","lastIndex":"key","fromIndex":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b14bf604-daf7-11e4-9a80-9fb5ca5c1d24","variableMapping":{"tmpNo":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[352,355,356,360,364,371,373,375,377,405,406,407,408],"tindex":"b14bf605-daf7-11e4-9a80-91d3b72375c0","variableMapping":{"nodesContracted":"lastPrio"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:169","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:123","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    int[][int] = int[][int];\n    float[][int] = float[][int];\n} else {\n    break;\n}"},"status":-1},{"failures":[232,235,236,242,243,247,260,263,273,286,289,299,302,315,331,378,21,24,390,393,394],"tindex":"b14c1d16-daf7-11e4-9a80-25cd59d4c8d2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[35,46,48,52,53,60,61,86,97,99,103,104,111,112,124,135,137,141,142,149,150,175,186,188,192,193,200,201,223,225,226,401],"tindex":"b14c1d17-daf7-11e4-9a80-77e07e2f19e9","variableMapping":{"nodeB":"key","edgeId":"key","nodeA":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-1},{"failures":[35,43,45,46,48,52,53,60,61,86,94,96,97,99,103,104,111,112,124,132,134,135,137,141,142,149,150,166,175,183,185,186,188,192,193,200,201,223,226],"tindex":"b14c1d18-daf7-11e4-9a80-f1fef7faae4e","variableMapping":{"red":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"b14c1d19-daf7-11e4-9a80-4dbf078b6e4a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":0},{"failures":[],"tindex":"b14c1d1a-daf7-11e4-9a80-17bbdc7d9d7d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[241,247,18,21,390,401],"tindex":"b14c1d1b-daf7-11e4-9a80-adf150956fe9","variableMapping":{"edgePointer":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[],"tindex":"b14c1d1c-daf7-11e4-9a80-e9f3de47e438","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[],"tindex":"b14c1d1d-daf7-11e4-9a80-f7eeaae95cab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[44,95,133,184],"tindex":"b14c1d1e-daf7-11e4-9a80-5ba2af97d313","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[409,410,411,412,413,414,415,416,417,418,419,420,74,421,422,423,424,425,426,427,428,211,17,429,430,431,224,225,226,367,368,371,18,19,21,22,381,390,391,393,394,396],"tindex":"b14c1d1f-daf7-11e4-9a80-f9af5e3afac1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[28,33,34,35,37,38,41,42,44,49,51,57,59,62,64,65,69,71,72,73,75,76,79,84,85,86,88,89,92,93,95,100,102,108,110,113,115,116,120,122,123,124,126,127,130,131,133,138,140,146,148,151,153,154,158,160,164,168,173,174,175,177,178,181,182,184,189,191,197,199,202,204,205,209,211,17,212,213,214,215,217,218,219,221,222,223,224,225,226,227,231,233,241,244,251,0,334,335,336,337,338,339,340,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,18,19,22,380,24,383,384],"tindex":"b14c1d20-daf7-11e4-9a80-31030019599a","variableMapping":{"latIndex":"flags","lonIndex":"flags","lonUnits":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:92","type":"CtReturnImpl","sourcecode":"return (long * (int)) + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:273","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, boolean), com.graphhopper.routing.util.FlagEncoder.int, boolean)"},"status":-1},{"failures":[28,37,59,432,433,76,79,88,110,126,148,434,435,436,437,165,168,177,438,439,440,441,378,22,380,23,381],"tindex":"b14c4431-daf7-11e4-9a80-b30e41f87423","variableMapping":{"capacity":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:85","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"b14c4432-daf7-11e4-9a80-554caff6bb41","variableMapping":{"equalNormedDelta":"ele","tmpNormedDist":"lon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:924","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:62","type":"CtIfImpl","sourcecode":"if (java.lang.Double.java.lang.Double.isNaN(double))\n    return com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\nelse\n    return (com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && com.graphhopper.util.NumHelper.(com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double));\n"},"status":-2},{"failures":[442],"tindex":"b14c4433-daf7-11e4-9a80-ff57f50d096d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"b14c4434-daf7-11e4-9a80-9b1a4868d295","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"b14c4435-daf7-11e4-9a80-1372ae461c89","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"b14c4436-daf7-11e4-9a80-27036d625325","variableMapping":{"factor":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[443],"tindex":"b14c4437-daf7-11e4-9a80-47903774d51e","variableMapping":{"graphHopperFolder":"hourStr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[0],"tindex":"b14c4438-daf7-11e4-9a80-bb9fa5776c03","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-1},{"failures":[444],"tindex":"b14c4439-daf7-11e4-9a80-4bccbd1f697e","variableMapping":{"str":"key","s":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:132","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \".\\n\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,1,445,409,2,410,446,447,411,3,4,412,413,414,415,416,71,448,449,450,451,452,72,453,417,418,454,419,455,456,457,458,459,73,420,74,460,13,461,421,14,422,462,463,423,15,16,424,425,426,427,428,75,76,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,133,148,464,465,436,466,467,468,437,469,470,471,472,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,17,212,213,214,473,474,215,475,476,216,217,218,219,220,430,431,221,222,223,224,225,226,227,228,231,254,0,335,336,477,478,479,480,337,481,482,338,483,484,485,486,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,18,19,20,21,22,380,23,24,381,389,390,25,26,391,392,393,394,395,396,397,398,399,401,487,383,384],"tindex":"b14c6b4a-daf7-11e4-9a80-9d5b2646fde8","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"b14c6b4b-daf7-11e4-9a80-b5590799b0b5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"b14c6b4c-daf7-11e4-9a80-ad216364ab08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:514","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.BikeCommonFlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, int, boolean);\n}"},"status":-2},{"failures":[],"tindex":"b14c6b4d-daf7-11e4-9a80-e5e9f2d65333","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[],"tindex":"b14c6b4e-daf7-11e4-9a80-65ceac6b0ff9","variableMapping":{"acceptBit":"encoded","ferryBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:598","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"b14c6b4f-daf7-11e4-9a80-f11b240d460c","variableMapping":{"pavementName":"wayTypeName","wayTypeName":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"b14c6b50-daf7-11e4-9a80-a70e5621f621","variableMapping":{"entries":"arr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:187","type":"CtLocalVariableImpl","sourcecode":"int int = int[][0]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[35,43,45,46,52,60,61,86,94,96,97,103,111,112,469,166,175,183,185,186,192,200,201,225,226,401],"tindex":"b14c6b51-daf7-11e4-9a80-ef3ebece760f","variableMapping":{"segmentCount":"remainingSegments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:163","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[int][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"b14c6b52-daf7-11e4-9a80-f51dd2b3f7ad","variableMapping":{"precision":"resultOrientation","lat":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:84","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"b14c6b53-daf7-11e4-9a80-fd7391e500b3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[303,304,305],"tindex":"b14c6b54-daf7-11e4-9a80-9d47f7cd74ba","variableMapping":{"encoderList":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"b14c6b55-daf7-11e4-9a80-235d14735fc1","variableMapping":{"max":"edgeId","tmpSize":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:172","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, int)"},"status":0},{"failures":[488,489,490,491,28,29,33,54,60,65,67,68,409,2,410,453,417,418,454,419,421,14,422,492,76,79,80,84,105,111,116,118,119,148,165,168,169,173,194,200,205,207,208,493,494,215,217,218,219,220,254,0,335,336,477,478,480,337,481,482,338,483,485,486,374,495,496,497,498,378,379,18,19,20,21,22,380,23,24,381,389,390,25,26,391,392,393,394,395,396,397,398,399,401],"tindex":"b14c6b56-daf7-11e4-9a80-c97cf291ae54","variableMapping":{"splitIndex":"indexDivisor","entrySize":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:263","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"b14c6b57-daf7-11e4-9a80-512896e61b04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[240,242,243,245,247,253,379,18,19,20,21,22,380,23,381,390,25,26,391,393,394,395,396,397,398,399,400,401],"tindex":"b14c9268-daf7-11e4-9a80-ebab819df263","variableMapping":{"nanoTime":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"b14c9269-daf7-11e4-9a80-4da35784c8a8","variableMapping":{"size":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"b14c926a-daf7-11e4-9a80-51ed02fc830d","variableMapping":{"x1":"toSize","sLon":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"b14c926b-daf7-11e4-9a80-9b1edee442af","variableMapping":{"nodeThis":"priorityFromRelation","nextEdgeOther":"priorityFromRelation","nodeOther":"priorityFromRelation","nextEdge":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":0},{"failures":[],"tindex":"b14c926c-daf7-11e4-9a80-3308848d7291","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2},{"failures":[],"tindex":"b14c926d-daf7-11e4-9a80-fff91e423ba8","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"b14e672e-daf7-11e4-9a80-5fdecc7c592b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:403","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,499,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,278,404,500,280,501,502,477,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,503,504,378,21,24,381,389,390,25,26,391,392,393,394,395,396,397,398,399,401],"tindex":"b14e8e3f-daf7-11e4-9a80-95c31e72f03a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"b14e8e40-daf7-11e4-9a80-df7d77228187","variableMapping":{"red":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[241],"tindex":"b14e8e41-daf7-11e4-9a80-356ff8013cb7","variableMapping":{"res":"roundaboutBit","value":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"b14e8e42-daf7-11e4-9a80-037c2970e1cb","variableMapping":{"todoBytes":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[],"tindex":"b14e8e43-daf7-11e4-9a80-37eb1cea997f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:431","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[],"tindex":"b14e8e44-daf7-11e4-9a80-eb0a65edd054","variableMapping":{"visitedCountFrom":"shift","visitedCountTo":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:80","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[220,232,235,236,239,240,241,242,243,245,246,247,253,256,257,258,259,260,261,263,267,268,271,272,273,274,275,386,280,282,283,284,285,286,287,289,293,294,297,298,299,300,301,302,303,304,305,309,310,313,314,315,316,317,387,319,321,322,326,329,330,331,332,378,379,18,19,20,21,22,380,23,24,381,389,390,25,26,391,392,393,394,395,382,396,397,398,399,400,401],"tindex":"b14e8e45-daf7-11e4-9a80-4f0989ed131e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-1},{"failures":[303],"tindex":"b14e8e46-daf7-11e4-9a80-97ed8fa926fc","variableMapping":{"systemProperty":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[220,240,241,245,246,247,253,387,18,19,20,21,22,380,23,381,389,390,25,26,391,392,393,394,395,396,397,398,399,400,401],"tindex":"b14e8e47-daf7-11e4-9a80-6376ce6855a2","variableMapping":{"turnCostsCount":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[],"tindex":"b14e8e48-daf7-11e4-9a80-6f748da519a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,278,404,389,390,25,26,391,392,393,394,395,396,397,398,399,401],"tindex":"b14e8e49-daf7-11e4-9a80-bf9830b70684","variableMapping":{"cap":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-1},{"failures":[44,95,133,472,184],"tindex":"b14e8e4a-daf7-11e4-9a80-c93d66c74753","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[420,74,13,421,14,422,462,423,15,16,424,425,426,427,428,75,160,162,163,168,171,173,174,175,176,177,178,179,180,181,182,185,186,188,189,191,192,193,194,197,199,200,201,202,204,205,207,209,210,212,215,339,340,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,18,19,22,380,24],"tindex":"b14eb55b-daf7-11e4-9a80-17d5a4f35833","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"b14eb55c-daf7-11e4-9a80-ed4b7a742a29","variableMapping":{"arg":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:92","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[],"tindex":"b14eb55d-daf7-11e4-9a80-37cac076d08b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[],"tindex":"b14eb55e-daf7-11e4-9a80-03b3d2d41f8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"b14eb55f-daf7-11e4-9a80-a3c26604e930","variableMapping":{"id":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[257,267,271,272,274,283,293,297,298,300,303,305,309,313,314,316,329,330],"tindex":"b14eb560-daf7-11e4-9a80-23dfd3f73ad9","variableMapping":{"ghLocation":"highway","osmFile":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:616","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"b14eb561-daf7-11e4-9a80-63c7c9698982","variableMapping":{"e":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:427","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"unable to unmap the mapped buffer\" , java.security.PrivilegedActionException)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[],"tindex":"b14eb562-daf7-11e4-9a80-01c60f287f05","variableMapping":{"flags":"ferryBit","tmpValue":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"b14eb563-daf7-11e4-9a80-05ab1a7f74a6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:63","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[505,506,507,508,509,219,220,335,336],"tindex":"b14eb564-daf7-11e4-9a80-4de073308639","variableMapping":{"r":"angle","x":"com.graphhopper.util.AngleCalc.PI3_4","absY":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-1},{"failures":[],"tindex":"b14eb565-daf7-11e4-9a80-39c7eed8d810","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-2},{"failures":[],"tindex":"b14eb566-daf7-11e4-9a80-a969a5e189e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"b14eb567-daf7-11e4-9a80-75208f83a5e9","variableMapping":{"intIndex":"index","len":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[41,92,130,181,387,510],"tindex":"b14eb568-daf7-11e4-9a80-99d3e8e409e0","variableMapping":{"res":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"b14eb569-daf7-11e4-9a80-73b6475d0c04","variableMapping":{"size":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[257,260,261,271,275,386,283,286,287,297,301],"tindex":"b14eb56a-daf7-11e4-9a80-cd6a19c860d5","variableMapping":{"shift":"encoded","flags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"b14eb56b-daf7-11e4-9a80-f73dee091217","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[259,285],"tindex":"b14eb56c-daf7-11e4-9a80-f58be13a22f1","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[223,227,228],"tindex":"b14eb56d-daf7-11e4-9a80-09b85fd7c626","variableMapping":{"size":"connectedId","newSize":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:254","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[259,261,271,285,287,297,304,305,313,321,329],"tindex":"b14edb7e-daf7-11e4-9a80-d972675012d9","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"b14edb7f-daf7-11e4-9a80-33c5ae7d2bea","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[],"tindex":"b14edb80-daf7-11e4-9a80-ed01c431ad69","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":-2},{"failures":[28,492,511,76,79,165,168,378,22,380,23,381],"tindex":"b14edb81-daf7-11e4-9a80-dbf16e9db975","variableMapping":{"_location":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:44","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-1},{"failures":[303],"tindex":"b14edb82-daf7-11e4-9a80-b5a795639eb7","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"b14edb83-daf7-11e4-9a80-f1f6bb0be839","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"b14f0294-daf7-11e4-9a80-6507f40fc2e9","variableMapping":{"bits":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-2},{"failures":[],"tindex":"b14f0295-daf7-11e4-9a80-c7aaf622c359","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[],"tindex":"b14f0296-daf7-11e4-9a80-edac500a9302","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[],"tindex":"b14f0297-daf7-11e4-9a80-3940dff60f5e","variableMapping":{"ar_y":"fromHeight","ab_y":"toHeight","ar_x":"toHeight","ab_x":"fromHeight"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":372,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":478,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":165,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":387,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":123,"com.graphhopper.reader.OSMReaderTest.testFerry":389,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":213,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":286,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":14,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":379,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":505,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":328,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":68,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":143,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":44,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":460,"com.graphhopper.util.AngleCalcTest.testOrientation":506,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":350,"com.graphhopper.GraphHopperTest.testPrepare":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":371,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":339,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":408,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":284,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":364,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":329,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":431,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":171,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":227,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":321,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":282,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":465,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":356,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":362,"com.graphhopper.coll.BitSetImplTest.testCopy":442,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":2,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":119,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":76,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":173,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":407,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":353,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":412,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":467,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":410,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":279,"com.graphhopper.reader.OSMReaderTest.testSort":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":298,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":225,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":80,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":63,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":156,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":338,"com.graphhopper.storage.RAMDataAccessTest.testHeader":439,"com.graphhopper.routing.DijkstraTest.initializationError":501,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":487,"com.graphhopper.storage.MMapDataAccessTest.testHeader":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":115,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":6,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":198,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":435,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":40,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":77,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":89,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":510,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":259,"com.graphhopper.reader.OSMNodeTest.testSetTags":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":84,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":183,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":317,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":423,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":368,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":359,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":358,"com.graphhopper.coll.OSMIDMapTest.testGetLong":497,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":98,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":104,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":190,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":168,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":192,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":508,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":303,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":95,"com.graphhopper.GraphHopperAPITest.testLoad":211,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":172,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":466,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":229,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":45,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":35,"com.graphhopper.storage.LevelGraphStorageTest.testClone":177,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":228,"com.graphhopper.reader.OSMReaderTest.testBarriers":391,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":420,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":127,"com.graphhopper.util.GHUtilityTest.testCopy":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":361,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":75,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":311,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":325,"com.graphhopper.routing.PathTest.testFindInstruction":336,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":86,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":405,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":212,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":235,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":206,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":449,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":64,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":113,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":99,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":269,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":500,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":502,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":179,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":128,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":472,"com.graphhopper.util.InstructionListTest.testWayList2":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":413,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":90,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":285,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":511,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":118,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":283,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":11,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":254,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":181,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":494,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":96,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":453,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":360,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":392,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":440,"com.graphhopper.routing.AStarTest.initializationError":504,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":374,"com.graphhopper.coll.OSMIDMapTest.testGet":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":93,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":434,"com.graphhopper.routing.PathBidirRefTest.testExtract":221,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":236,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":291,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":425,"com.graphhopper.storage.RAMDataAccessTest.testCopy":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":149,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":71,"com.graphhopper.util.GHUtilityTest.testSort2":474,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":369,"com.graphhopper.reader.OSMReaderTest.testMain":25,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":169,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":299,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":426,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":153,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":184,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":188,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":209,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":185,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":337,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":256,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":436,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":191,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":399,"com.graphhopper.storage.StorablePropertiesTest.testStore":492,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":493,"com.graphhopper.storage.GraphHopperStorageTest.testClone":37,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":152,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":247,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":47,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":245,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":160,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":129,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":163,"com.graphhopper.routing.PathTest.testTime":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":310,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":207,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":142,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":196,"com.graphhopper.reader.OSMReaderTest.testRelation":382,"com.graphhopper.util.GHUtilityTest.testSortDirected":476,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":272,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":480,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":12,"com.graphhopper.GraphHopperTest.testFootOnly":24,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":320,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":243,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":417,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":463,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":357,"com.graphhopper.reader.OSMElementTest.testSetTags":403,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":255,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":138,"com.graphhopper.search.NameIndexTest.testCreate":491,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":477,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":437,"com.graphhopper.routing.QueryGraphTest.testOneWay":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":409,"com.graphhopper.reader.OSMReaderTest.testWithBounds":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":224,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":481,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":144,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":237,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":386,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":174,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":170,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":270,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":332,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":107,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":100,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":33,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":483,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":355,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":66,"com.graphhopper.util.InstructionListTest.testWayList":218,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":289,"com.graphhopper.GraphHopperAPITest.testDisconnected179":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":130,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":267,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":384,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":141,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":158,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":296,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":20,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":351,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":281,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":366,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":503,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":349,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":205,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":248,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":307,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":82,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":193,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":376,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":468,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":301,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":27,"com.graphhopper.routing.PathTest.testWayList":335,"com.graphhopper.storage.MMapDataAccessTest.testCopy":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":157,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":242,"com.graphhopper.coll.OSMIDMapTest.testGet2":496,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":377,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":441,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":295,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":50,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":230,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":15,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":424,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":264,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":406,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":304,"com.graphhopper.util.GHUtilityTest.testSort":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":294,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":323,"com.graphhopper.search.NameIndexTest.testPut":489,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":120,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":451,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":461,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":419,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":457,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":470,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":260,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":482,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":455,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":306,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":277,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":375,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":223,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":471,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":148,"com.graphhopper.routing.PathTest.testFound":333,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":280,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":381,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":204,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":444,"com.graphhopper.util.AngleCalcTest.testAtan2":507,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":162,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":293,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":97,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":490,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":133,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":42,"com.graphhopper.util.InstructionListTest.testEmptyList":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":363,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":312,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":427,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":367,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":239,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":238,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":330,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":370,"com.graphhopper.reader.PrinctonReaderTest.testRead":383,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":422,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":132,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":122,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":265,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":327,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":404,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":257,"com.graphhopper.reader.OSMReaderTest.testFoot":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":146,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":486,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":3,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":208,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":4,"com.graphhopper.reader.OSMReaderTest.testOneWay":401,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":46,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":61,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":114,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":326,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":263,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":345,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":10,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":352,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":343,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":458,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":231,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":136,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":479,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":30,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":400,"com.graphhopper.routing.PathBidirRefTest.testExtract2":222,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":469,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":354,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":72,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":414,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":488,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":316,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":9,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":159,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":232,"com.graphhopper.util.SimpleIntDequeTest.testPush":429,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":446,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":62,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":249,"com.graphhopper.GraphHopperTest.testFootAndCar":21,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":54,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":186,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":305,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":126,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":373,"com.graphhopper.GraphHopperTest.testPrepareOnly":378,"com.graphhopper.GraphHopperTest.testVia":18,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":452,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":124,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":396,"com.graphhopper.reader.OSMElementTest.testHasTag":402,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":164,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":58,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":220,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":233,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":139,"com.graphhopper.routing.AStarBidirectionTest.initializationError":499,"com.graphhopper.util.AngleCalcTest.testCombined":509,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":253,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":203,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":201,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":79}}]
