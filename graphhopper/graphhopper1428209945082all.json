[{"failures":[0,1],"tindex":"7c2c9289-db50-11e4-8912-23d3fa5ee82d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"7c2d55da-db50-11e4-8912-110d90e73221","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"7c2d55db-db50-11e4-8912-21ee50e37a2a","variableMapping":{"elevation":"backward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:96","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean);\n}"},"status":-1},{"failures":[],"tindex":"7c2d55dc-db50-11e4-8912-8b76bbf007ed","variableMapping":{"dx":"minLat","dy":"minLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[87,88,77,89,84],"tindex":"7c2d55dd-db50-11e4-8912-1d0e5d779698","variableMapping":{"freeIndex":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"7c2d55de-db50-11e4-8912-4d7474af747f","variableMapping":{"size":"otherValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"7c2d55df-db50-11e4-8912-05143b128ee7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"7c2d55e0-db50-11e4-8912-31235d9a7258","variableMapping":{"turnCostsCount":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[],"tindex":"7c2d55e1-db50-11e4-8912-9f891d1b3ea2","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:448","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:139","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[90,91,92,93,94,2,95,96,97,98,3,4,5,99,100,101,6,102,7,103,104,105,8,106,107,9,108,109,10,110,111,112,113,11,114,115,116,117,12,118,119,120,121,122,13,14,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,15,198,199,16,200,201,202,203,17,18,19,204,205,206,20,207,21,208,209,210,22,211,212,23,213,214,24,215,216,217,218,25,219,220,221,222,26,223,224,225,226,227,27,28,228,229,29,30,31,230,231,232,32,233,33,234,235,236,34,237,238,35,239,240,36,241,242,243,244,37,245,246,247,248,38,249,250,251,252,253,39,40,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,41,288,289,290,291,42,43,44,292,293,294,45,295,46,296,297,298,47,299,300,48,301,302,49,303,304,305,306,50,307,308,309,310,51,311,312,313,314,315,52,53,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,54,347,348,55,56,57,58,59,60,61,349,350,351,352,353,354,62,355,63,64,65,356,66,67,68,357,358,359,360,361,362,363,364,364,365,365,366,366,367,367,69,69,368,368,369,369,370,370,371,371,70,70,372,372,373,373,87,71,72,73,374,375,376,377,74,88,75,378,379,76,77,89,380,381,78,79,382,383,80,384,81,82,385,386,83,387,388,389,390,391,392,393,394,84,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,85,86],"tindex":"7c2d7cf2-db50-11e4-8912-7511e8321eee","variableMapping":{"i":"segmentSizePower","child":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[282,356,433,434,357,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,358,359,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,361,77,81,411,412,413,414,415,416,417,418,419,420,421,422,423,424,426],"tindex":"7c2d7cf3-db50-11e4-8912-57923134c24c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:623","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[536,537],"tindex":"7c2d7cf4-db50-11e4-8912-9d71323de874","variableMapping":{"incEleSum":"midLon","eleDelta":"midLat","incDist2DSum":"midLon","decEleSum":"midLat","fullDist2D":"lat","decDist2DSum":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:163","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"7c2da405-db50-11e4-8912-2d9c58d571cc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:120","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"7c2da406-db50-11e4-8912-410a853c9017","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"maxSpeed","java.lang.Double.POSITIVE_INFINITY":"maxSpeed","weight":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[4,103,105,8,10,116,117,18,208,210,22,24,221,222,276,286,43,296,298,47,49,309,310,356,66,426],"tindex":"7c2da407-db50-11e4-8912-395509da2bd9","variableMapping":{"segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"7c2da408-db50-11e4-8912-f73c51848eb6","variableMapping":{"weightLong":"hash","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":0},{"failures":[538,539,402],"tindex":"7c2da409-db50-11e4-8912-8186ea680569","variableMapping":{"lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"7c2da40a-db50-11e4-8912-5de0e1286823","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:308","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"status":0},{"failures":[54,540,350,351,352,362,402],"tindex":"7c2da40b-db50-11e4-8912-77cd09c0b5c7","variableMapping":{"radiusInMeter":"resultOrientation","lon":"orientation","lat":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"7c2da40c-db50-11e4-8912-f739531460d8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:115","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[458,485,524],"tindex":"7c2da40d-db50-11e4-8912-85e8bfcf217d","variableMapping":{"err":"speed","tmpErr":"speed","y1":"speed","dLon":"speed","sLat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"7c2da40e-db50-11e4-8912-efdff750ed70","variableMapping":{"i":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:243","type":"CtReturnImpl","sourcecode":"return int[][][int][int]"},"status":-2},{"failures":[2,98,3,4,99,100,102,7,104,9,109,11,115,12,119,120,14,15,16,203,17,18,204,205,207,21,209,23,214,25,220,26,224,225,28,229,29,30,230,231,233,33,235,35,240,37,246,38,250,251,40,280,284,41,291,42,43,292,293,295,46,297,48,302,50,308,51,312,313,53,54,348,55,56,350,351,352,353,355,63,64,67,357,436,444,447,450,454,359,361,362,363,69,370,87,71,72,73,374,375,376,74,88,75,379,76,77,89,380,381,78,79,382,383,80,384,81,385,386,83,387,388,389,391,392,393,394,84,402,403,404,405,406,408,409,412,413,415,418,419,421,422,423,426,85,86],"tindex":"7c2da40f-db50-11e4-8912-116d3080fd78","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[94,2,95,96,97,541,98,3,4,5,99,100,101,6,102,7,103,104,105,8,106,107,9,108,109,10,110,111,112,113,11,114,115,116,117,12,118,119,120,121,122,13,14,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,15,198,199,16,200,201,202,542,203,17,18,19,204,205,206,20,207,21,208,209,210,22,211,212,23,213,214,24,215,216,217,218,25,219,220,221,222,26,223,224,225,226,227,27,28,228,229,29,30,31,230,231,232,32,233,33,234,235,236,34,237,238,35,239,240,36,241,242,243,244,37,245,246,247,248,38,249,250,251,252,253,39,40,254,280,281,282,283,284,285,286,287,41,288,289,290,543,291,42,43,44,292,293,294,45,295,46,296,297,298,47,299,300,48,301,302,49,303,304,305,306,50,307,308,309,310,51,311,312,313,314,315,52,53,316,54,347,544,348,55,56,57,58,59,60,545,61,349,350,351,352,353,354,62,355,63,546,64,65,356,66,67,68,433,434,357,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,358,359,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,538,539,478,547,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,548,360,361,362,363,549,364,365,366,367,69,368,369,370,371,70,372,373,87,71,550,72,73,374,375,376,377,74,88,75,378,379,76,77,89,380,381,78,79,382,383,80,384,81,82,385,386,83,387,388,389,390,391,392,393,394,84,551,552,400,401,402,403,404,405,406,553,407,408,409,410,554,411,412,413,414,415,416,417,418,419,420,421,422,423,424,426,85,86],"tindex":"7c2dcb20-db50-11e4-8912-d99a5b57229e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[483],"tindex":"7c2dcb21-db50-11e4-8912-3f88f0147ad5","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"7c2dcb22-db50-11e4-8912-1916394386df","variableMapping":{"dataAccess":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:163","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":0},{"failures":[459,461,462,463,473,477,479,482,483,486,488,489,490,500,504,507,508,516,520,522,524,532,535],"tindex":"7c2dcb23-db50-11e4-8912-f7e3c7c55ea5","variableMapping":{"high":"allowed","highKey":"allowed","key":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"7c2dcb24-db50-11e4-8912-01949329c83e","variableMapping":{"g":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":0},{"failures":[483],"tindex":"7c2dcb25-db50-11e4-8912-b7e76e0d2b8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[],"tindex":"7c2dcb26-db50-11e4-8912-2946b2599135","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[435,438,483,409],"tindex":"7c2df237-db50-11e4-8912-095d94730e85","variableMapping":{"size":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"7c2df238-db50-11e4-8912-c1c4994a11d7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:205","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"7c2df239-db50-11e4-8912-d3f28d45d9e7","variableMapping":{"a_lon_deg":"minLon","factor":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"7c2fc6fa-db50-11e4-8912-9f4c08c65fb5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[71,72,73,374,375,376,377,74,75,378,379,76,89,380,381,78,79,382,383,80,384,81,82,385,386,83,387,388,389,390,391,392,393,394,84,401,402,403,406,407],"tindex":"7c2fc6fb-db50-11e4-8912-f19a6012211e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-1},{"failures":[433,445,466,493,509,526,402,403,404,405,409,410,411,412,413,415,416,417,419,421,422,423,426],"tindex":"7c2fc6fc-db50-11e4-8912-a3f00b8f7888","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[90,91,92,93,2,95,98,111,116,120,13,126,127,128,167,168,169,182,183,15,16,200,203,216,221,225,27,246,285,41,288,291,304,309,313,52,321,322,325,328,335,336,339,342,59,350,351,352,353,358,359,362,363,364,365,367,69,368,369,370,371,372,373,392,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,421,422,423,424,426,428,429,430],"tindex":"7c2fee0d-db50-11e4-8912-8dc9f79a173e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[347,72,74,76,89,380,381,78,79,383,80,81,82,385,386,83,387,388,389,392,394,84,402,403,406],"tindex":"7c2fee0e-db50-11e4-8912-073bc522bb7f","variableMapping":{"closed":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:72","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n"},"status":-1},{"failures":[],"tindex":"7c2fee0f-db50-11e4-8912-b5b2702687bc","variableMapping":{"key":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":0},{"failures":[],"tindex":"7c2fee10-db50-11e4-8912-69b759adb576","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"7c2fee11-db50-11e4-8912-21a3b8744b71","variableMapping":{"newUniqueOsmId":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:226","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"7c2fee12-db50-11e4-8912-5175e3ef3dbf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[446,555,411],"tindex":"7c2fee13-db50-11e4-8912-c5a0549780f7","variableMapping":{"high":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"7c2fee14-db50-11e4-8912-0521ec127323","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"7c2fee15-db50-11e4-8912-2f9b319fefb6","variableMapping":{"pointIndex":"start","index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-2},{"failures":[],"tindex":"7c2fee16-db50-11e4-8912-89e454999aa0","variableMapping":{"err":"start","dLat":"index","tmpErr":"index","x1":"index","sLon":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"7c2fee17-db50-11e4-8912-0904de15ddcd","variableMapping":{"dX":"java.lang.Double.POSITIVE_INFINITY","dY":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:58","type":"CtReturnImpl","sourcecode":"return (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[2,98,111,116,120,126,128,150,151,152,154,167,169,184,15,16,203,216,221,225,229,242,246,247,251,271,277,278,279,41,291,304,309,313,321,322,324,327,328,329,330,335,336,338,341,342,343,344,556,557,558,559,351,352,362,365,69,368,370,371,373,392,395,396,397,398,399,400,402,403,404,406,408,409,411,413,414,415,416,417,418,419,421,422,423,424,426],"tindex":"7c2fee18-db50-11e4-8912-d966ea2e2903","variableMapping":{"endIndexPlusOne":"offset","frontIndex":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-1},{"failures":[],"tindex":"7c2fee19-db50-11e4-8912-71f0cbc12a08","variableMapping":{"acceptBit":"encoded","ferryBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"7c2fee1a-db50-11e4-8912-7386f05c3c37","variableMapping":{"finishedTo":"storing","finishedFrom":"storing"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[475,502,518,534,411],"tindex":"7c30152b-db50-11e4-8912-15933f10ef3f","variableMapping":{"high":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"7c30152c-db50-11e4-8912-7d3ebe782078","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"7c30152d-db50-11e4-8912-1b645d403ecd","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[186,187,188,194,195,198,256,257,263,264,268,269,276,277,318,319,320,327,328,332,333,334,341,342],"tindex":"7c30152e-db50-11e4-8912-b39be646d17b","variableMapping":{"edgeId":"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN","nextEdge":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[481],"tindex":"7c30152f-db50-11e4-8912-c17220fcfa84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":-1},{"failures":[459,461,462,463,473,477,479,482,483,486,488,489,490,500,504,507,508,516,520,522,524,532,535],"tindex":"7c301530-db50-11e4-8912-cfd4f1c3d090","variableMapping":{"scDirMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[446,411],"tindex":"7c301531-db50-11e4-8912-c98e473713af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"7c301532-db50-11e4-8912-4b031c734b71","variableMapping":{"r":"fwdFaster","angle":"fwdFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:207","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"7c301533-db50-11e4-8912-b5a165e21f0f","variableMapping":{"newAdjIndex":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED","newBaseIndex":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:273","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"status":-2},{"failures":[],"tindex":"7c301534-db50-11e4-8912-0f924474bada","variableMapping":{"scDirMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"7c301535-db50-11e4-8912-694cab6cf252","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"7c301536-db50-11e4-8912-378908211e8a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.EdgeFilter com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true)"},"status":-2},{"failures":[],"tindex":"7c301537-db50-11e4-8912-c9a183f6c4f6","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[461,463,473,488,490,500,507,516,524,532],"tindex":"7c301538-db50-11e4-8912-c9a845e885bb","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:153","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[453,459,461,463,464,468,473,477,479,480,482,486,488,490,491,495,500,504,507,508,511,516,520,524,528,532,535,560,418,420],"tindex":"7c301539-db50-11e4-8912-c91ffb0afc37","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR":"factor","weight":"factor","weightLong":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[356,66],"tindex":"7c30153a-db50-11e4-8912-a306faa1a5f4","variableMapping":{"i":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:159","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> java.util.Map.Entry<java.lang.Integer, java.lang.Integer> : java.util.Map<java.lang.Integer, java.lang.Integer>.entrySet()) {\n    if (int < 0) {\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n        continue;\n    } \n    if (int < (java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue())) {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl);\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n        int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    } else {\n        com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl);\n    }\n}"},"status":-1},{"failures":[],"tindex":"7c30153b-db50-11e4-8912-2de1db8d8184","variableMapping":{"bitsForEdgeFlags":"capacity"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:127","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[94,3,4,103,8,107,9,109,10,11,115,116,117,118,120,14,123,199,17,18,208,22,212,23,214,24,25,220,221,222,223,225,28,228,268,270,273,276,277,280,281,283,286,287,291,42,43,296,47,300,48,302,49,50,308,309,310,51,311,313,53,316],"tindex":"7c303c4c-db50-11e4-8912-594759f34225","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[442,443,448,462,474,489,501,517,561,533,402,424],"tindex":"7c303c4d-db50-11e4-8912-5135f37ae9f6","variableMapping":{"red":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[],"tindex":"7c303c4e-db50-11e4-8912-e16a8ba242d3","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"7c303c4f-db50-11e4-8912-d92086ba8c80","variableMapping":{"val":"str","defaultD":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception java.lang.Exception) {\n    return -1;\n}"},"status":-2},{"failures":[],"tindex":"7c303c50-db50-11e4-8912-e3da3fc2aec9","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-2},{"failures":[54,72,74,76,89,380,381,78,79,382,383,80,81,386,83,387,388,389,391,392,393,394,84,403,404,405,406,408],"tindex":"7c303c51-db50-11e4-8912-91ec17485e4a","variableMapping":{"empty":"finishedTo"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[67],"tindex":"7c303c52-db50-11e4-8912-55a6faed3e48","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"prevConnectedId","n":"start","edgeIds":"nodeLowLink"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[],"tindex":"7c303c53-db50-11e4-8912-fb41984f8249","variableMapping":{"max":"factor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-2},{"failures":[458,460,467,469,470,473,474,476,477,485,487,494,496,497,500,501,503,504,506,508,510,512,513,516,517,519,520,523,524,525,527,529,532,533,535],"tindex":"7c303c54-db50-11e4-8912-6d7ca7e39f22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:434","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"7c303c55-db50-11e4-8912-b7f4b2dc3e06","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"offset","id":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-2},{"failures":[],"tindex":"7c303c56-db50-11e4-8912-0b23da18581f","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"7c303c57-db50-11e4-8912-87eecfefb2c1","variableMapping":{"endIndexPlusOne":"shift","frontIndex":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7c303c58-db50-11e4-8912-8fda3a4faa69","variableMapping":{"weightApproximation":"resultOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[353,561],"tindex":"7c303c59-db50-11e4-8912-f9cf0e8d5ab8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"7c303c5a-db50-11e4-8912-bde5d1d15679","variableMapping":{"low":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:692","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[64,67,68],"tindex":"7c303c5b-db50-11e4-8912-f31787cb3bf4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[444],"tindex":"7c303c5c-db50-11e4-8912-4f5856b3da50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[458,460,469,470,473,474,476,477,485,487,496,497,500,501,503,504,506,508,512,513,516,517,519,520,529,532,533,535],"tindex":"7c303c5d-db50-11e4-8912-6f9ac6f11bb5","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[280,71,72,74,379,391],"tindex":"7c303c5e-db50-11e4-8912-9b33572451c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"7c30636f-db50-11e4-8912-790ea35705cd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDirectory().find(\"tempIndexCopy\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:98","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.get(java.lang.String)"},"status":-2},{"failures":[94,2,97,98,3,4,5,99,100,101,6,102,7,103,104,105,8,106,107,9,108,109,10,110,111,112,113,11,115,116,117,12,118,119,120,121,122,13,14,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,146,147,149,150,151,152,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,15,199,16,202,203,17,18,19,204,205,206,20,207,21,208,209,210,22,211,212,23,213,214,24,215,216,217,218,25,220,221,222,26,223,224,225,226,227,27,28,228,235,246,270,271,273,276,277,278,279,280,281,282,283,284,286,287,41,290,291,42,43,44,292,293,294,45,295,46,296,297,298,47,299,300,48,301,302,49,303,304,305,306,50,308,309,310,51,311,312,313,314,315,52,53,316,54,347,348,55,56,57,58,59,60,61,350,351,352,353,354,62,355,63,64,65,356,66,67,68,357,358,359,362,363,364,365,366,367,69,368,369,370,371,70,372,373,87,71,72,73,374,375,376,377,74,88,75,378,379,76,77,89,380,381,78,79,382,383,80,384,81,82,385,386,83,387,388,389,390,391,392,393,394,84,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,421,422,423,424,426,427,85,86],"tindex":"7c306370-db50-11e4-8912-8fbe5c954d60","variableMapping":{"high":"bytePos","guess":"bytePos","low":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:107","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"7c306371-db50-11e4-8912-0de7be281a17","variableMapping":{"nextTowerId":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:612","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[],"tindex":"7c306372-db50-11e4-8912-2b7c56d14ce4","variableMapping":{"r":"resultOrientation","angle":"java.lang.Math.PI"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[444],"tindex":"7c306373-db50-11e4-8912-c10a44fb67e3","variableMapping":{"shift":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","backwardBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[77],"tindex":"7c306374-db50-11e4-8912-41e8effc8d94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeFlagEncoder.reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"7c306375-db50-11e4-8912-cbc8c259155c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"7c306376-db50-11e4-8912-1f5b472a0411","variableMapping":{"latlon":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"7c306377-db50-11e4-8912-4bf65df08bde","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[356,66,426],"tindex":"7c306378-db50-11e4-8912-3984d27ab962","variableMapping":{"preparation":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[104,209,235,297,353,434,436,443,446,448,449,455,456,458,462,463,474,538,483,485,489,490,501,506,508,517,562,522,524,533,361,362,77,89,81,385,386,402,403,404,405,406,408,411,424],"tindex":"7c306379-db50-11e4-8912-9bd6c57f5e0b","variableMapping":{"factor":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:205","type":"CtIfImpl","sourcecode":"if (double > 1)\n    double = 1;\nelse if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[555],"tindex":"7c30637a-db50-11e4-8912-890de44eb2fc","variableMapping":{"counter":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[435,438,439,400,405,409,412],"tindex":"7c308a8b-db50-11e4-8912-b16cef04133c","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[3,4,7,104,11,12,120,14,17,18,21,209,25,26,225,28,29,30,33,235,37,38,251,40,42,43,46,297,50,51,313,53,59,65,66,440,454,69,370,87,72,73,74,88,75,76,77,89,386,83,84,402,405,412,426,85,86],"tindex":"7c308a8c-db50-11e4-8912-63e16a72482c","variableMapping":{"high":"directionBitMask","highKey":"dir","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":308,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":390,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":285,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":562,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":143,"com.graphhopper.GraphHopperAPITest.testNoLoad":544,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":29,"com.graphhopper.reader.OSMReaderTest.testFerry":411,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":55,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":489,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":525,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":168,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":401,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":473,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":477,"com.graphhopper.storage.MMapDataAccessTest.testSegments":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":208,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":331,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":432,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":531,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":13,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":242,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":104,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":164,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":332,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":75,"com.graphhopper.GraphHopperTest.testPrepare":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":389,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":87,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":487,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":81,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":350,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":148,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":532,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":62,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":290,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":165,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":67,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":524,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":485,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":80,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":103,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":127,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":490,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":554,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":15,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":191,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":76,"com.graphhopper.GraphHopperTest.testLoadOSM":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":134,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":273,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":128,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":547,"com.graphhopper.reader.OSMReaderTest.testSort":414,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":501,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":356,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":200,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":336,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":118,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":253,"com.graphhopper.storage.RAMDataAccessTest.testHeader":326,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":370,"com.graphhopper.routing.DijkstraTest.initializationError":548,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":427,"com.graphhopper.storage.MMapDataAccessTest.testHeader":193,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":224,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":192,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":307,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":262,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":272,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":6,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":550,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":198,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":205,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":203,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":520,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":517,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":172,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":83,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":163,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":170,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":553,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":463,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":79,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":78,"com.graphhopper.coll.OSMIDMapTest.testGetLong":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":211,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":215,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":301,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":41,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":49,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":506,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":209,"com.graphhopper.GraphHopperAPITest.testLoad":54,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":543,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":271,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":433,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":105,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":4,"com.graphhopper.storage.LevelGraphStorageTest.testClone":292,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":555,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":68,"com.graphhopper.reader.OSMReaderTest.testBarriers":415,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":264,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":464,"com.graphhopper.util.GHUtilityTest.testCopy":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":383,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":514,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":145,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":534,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":329,"com.graphhopper.routing.PathTest.testFindInstruction":363,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":528,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":18,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":348,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":438,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":314,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":142,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":460,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":119,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":9,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":26,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":212,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":376,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":471,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":481,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":549,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":294,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":232,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":194,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":279,"com.graphhopper.util.InstructionListTest.testWayList2":352,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":540,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":476,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":135,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":227,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":486,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":538,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":95,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":358,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":295,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":323,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":491,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":210,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":149,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":382,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":416,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":335,"com.graphhopper.routing.AStarTest.initializationError":552,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":392,"com.graphhopper.coll.OSMIDMapTest.testGet":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":21,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":258,"com.graphhopper.routing.PathBidirRefTest.testExtract":355,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":439,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":304,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":397,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":494,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":259,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":176,"com.graphhopper.storage.RAMDataAccessTest.testCopy":321,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":247,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":522,"com.graphhopper.storage.RAMDataAccessTest.testSegments":328,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":493,"com.graphhopper.util.GHUtilityTest.testSort2":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":387,"com.graphhopper.reader.OSMReaderTest.testMain":413,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":288,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":495,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":177,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":502,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":250,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":297,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":300,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":53,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":560,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":69,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":298,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":25,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":458,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":302,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":424,"com.graphhopper.storage.StorablePropertiesTest.testStore":182,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":319,"com.graphhopper.storage.GraphHopperStorageTest.testClone":99,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":249,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":450,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":448,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":280,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":518,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":32,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":283,"com.graphhopper.routing.PathTest.testTime":361,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":513,"com.graphhopper.util.BitUtilLittleTest.testToFloat":556,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":315,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":293,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":455,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":241,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":306,"com.graphhopper.reader.OSMReaderTest.testRelation":420,"com.graphhopper.util.GHUtilityTest.testSortDirected":61,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":474,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":343,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":367,"com.graphhopper.GraphHopperTest.testFootOnly":409,"com.graphhopper.util.BitUtilLittleTest.testToInt":558,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":523,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":446,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":345,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":171,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":188,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":482,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":381,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":35,"com.graphhopper.search.NameIndexTest.testCreate":93,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":327,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":364,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":275,"com.graphhopper.routing.QueryGraphTest.testOneWay":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":138,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":527,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":431,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":126,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":536,"com.graphhopper.reader.OSMReaderTest.testWithBounds":423,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":330,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":257,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":226,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":243,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":440,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":479,"com.graphhopper.util.BitUtilLittleTest.testToDouble":557,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":42,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":289,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":505,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":472,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":535,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":218,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":23,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":98,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":89,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":266,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":121,"com.graphhopper.util.InstructionListTest.testWayList":351,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":185,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":492,"com.graphhopper.GraphHopperAPITest.testDisconnected179":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":233,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":537,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":124,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":31,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":469,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":36,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":499,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":404,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":101,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":378,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":484,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":385,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":551,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":88,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":313,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":451,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":510,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":202,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":394,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":541,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":179,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":269,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":274,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":504,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":94,"com.graphhopper.storage.MMapDataAccessTest.testCopy":189,"com.graphhopper.routing.PathTest.testWayList":362,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":511,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":445,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":561,"com.graphhopper.coll.OSMIDMapTest.testGet2":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":84,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":340,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":51,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":498,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":108,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":20,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":100,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":48,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":173,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":174,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":322,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":466,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":507,"com.graphhopper.util.GHUtilityTest.testSort":60,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":245,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":497,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":526,"com.graphhopper.search.NameIndexTest.testPut":91,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":542,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":144,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":166,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":154,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":157,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":462,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":369,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":199,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":509,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":429,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":539,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":437,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":393,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":261,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":64,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":278,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":246,"com.graphhopper.routing.PathTest.testFound":360,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":410,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":483,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":312,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":334,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":496,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":22,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":92,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":256,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":235,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":7,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":317,"com.graphhopper.util.InstructionListTest.testEmptyList":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":384,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":515,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":454,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":442,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":441,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":533,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":388,"com.graphhopper.reader.PrinctonReaderTest.testRead":85,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":120,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":197,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":169,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":234,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":229,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":467,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":530,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":184,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":480,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":512,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":459,"com.graphhopper.reader.OSMReaderTest.testFoot":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":37,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":373,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":430,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":132,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":521,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":133,"com.graphhopper.reader.OSMReaderTest.testOneWay":426,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":8,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":117,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":223,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":529,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":342,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":465,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":375,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":379,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":449,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":158,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":341,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":357,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":237,"com.graphhopper.util.BitUtilLittleTest.testToLong":559,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":366,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":96,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":425,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":346,"com.graphhopper.routing.PathBidirRefTest.testExtract2":63,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":136,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":516,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":255,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":90,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":159,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":519,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":254,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":435,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":470,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":129,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":12,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":545,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":45,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":452,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":111,"com.graphhopper.GraphHopperTest.testFootAndCar":405,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":508,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":180,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":230,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":478,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":186,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":453,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":82,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":391,"com.graphhopper.GraphHopperTest.testPrepareOnly":400,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":146,"com.graphhopper.GraphHopperTest.testVia":402,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":503,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":30,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":421,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":284,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":114,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":353,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":436,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":239,"com.graphhopper.routing.AStarBidirectionTest.initializationError":546,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":456,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":311,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":310,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":16}}]
