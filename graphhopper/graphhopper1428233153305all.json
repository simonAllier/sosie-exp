[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"86afb461-db86-11e4-866e-aff48dd3b182","variableMapping":{"this":"this","edgeState":"mainEdgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-1},{"failures":[],"tindex":"86afdb72-db86-11e4-866e-3dbb1930a4ce","variableMapping":{"time":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:215","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"86afdb73-db86-11e4-866e-577cf42b2703","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:90","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.String.length()) / 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,5,85,86,87,88,6,89,11,12,15,19,20,23,25,26,27,28,30],"tindex":"86afdb74-db86-11e4-866e-adb1ac412058","variableMapping":{"directionBitMask":"flags","blockByDefault":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"86afdb75-db86-11e4-866e-9bfc03bc572e","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"closed","v":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"86afdb76-db86-11e4-866e-57cdb673ff8b","variableMapping":{"newAdjIndex":"toSize","newBaseIndex":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-2},{"failures":[],"tindex":"86afdb77-db86-11e4-866e-5925f9cb1280","variableMapping":{"value":"nextRelBit","numberOfBits":"nextRelBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-2},{"failures":[90],"tindex":"86afdb78-db86-11e4-866e-2fe5a9be91ce","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"86afdb79-db86-11e4-866e-0fec54c3ff6b","variableMapping":{"freeIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"86afdb7a-db86-11e4-866e-abf481b74643","variableMapping":{"value":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","numberOfBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[],"tindex":"86b0028b-db86-11e4-866e-4f3bfdc0fe87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:52","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(5, 5, 0)"},"status":-2},{"failures":[],"tindex":"86b0028c-db86-11e4-866e-598de7429009","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"86b0028d-db86-11e4-866e-89b062ebfcae","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:420","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[],"tindex":"86b0028e-db86-11e4-866e-5da9c2e406e1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[91],"tindex":"86b0028f-db86-11e4-866e-ef7b521ed41e","variableMapping":{"str":"hourStr","edge":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:448","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"86b00290-db86-11e4-866e-33259acf20ba","variableMapping":{"intLow":"segmentSizeInBytes","intHigh":"segmentSizeInBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:310","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMDataAccess.((long)(getSegments())) * (int)"},"status":-2},{"failures":[],"tindex":"86b00291-db86-11e4-866e-2f31ca04a1c3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[92],"tindex":"86b00292-db86-11e4-866e-1fbe0d850208","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-1},{"failures":[93,94,95,96],"tindex":"86b00293-db86-11e4-866e-195f7df0c5ef","variableMapping":{"high":"speed","guess":"speed","low":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-1},{"failures":[],"tindex":"86b00294-db86-11e4-866e-0d0e8d6fd575","variableMapping":{"segmentSizeInBytes":"segmentSizeIntsPower","length":"segmentSizeIntsPower","index":"segmentSizeIntsPower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[97,98],"tindex":"86b00295-db86-11e4-866e-4f0929d87320","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} else {\n    int = java.lang.String.indexOf(\"kph\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } \n}"},"status":-1},{"failures":[],"tindex":"86b00296-db86-11e4-866e-037515ee09c7","variableMapping":{"this":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:283","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[],"tindex":"86b00297-db86-11e4-866e-d3a15b7934f4","variableMapping":{"distance":"otherValue","speed":"otherValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"86b00298-db86-11e4-866e-dd88845a7961","variableMapping":{"acceptBit":"ferryBit","way":"way","sidewalks":"ferries"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":0},{"failures":[],"tindex":"86b00299-db86-11e4-866e-29dc61b66907","variableMapping":{"importance":"subNetworks","hash":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"86b0029a-db86-11e4-866e-c1c4e1d96c59","variableMapping":{"origEdgeId":"segmentSizePower","mainEdges":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:394","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"86b029ab-db86-11e4-866e-9bf8b9489b4b","variableMapping":{"edgeId":"child","nextEdge":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":0},{"failures":[],"tindex":"86b029ac-db86-11e4-866e-2987b454ae5e","variableMapping":{"size":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:346","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":0},{"failures":[],"tindex":"86b029ad-db86-11e4-866e-677c72886dbc","variableMapping":{"store":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"86b029ae-db86-11e4-866e-e34006b332bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[99,100,101],"tindex":"86b029af-db86-11e4-866e-93f5040957f6","variableMapping":{"workerThreads":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:249","type":"CtAssignmentImpl","sourcecode":"int = 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[102,103,104,105,106,107,108,109,110,111,112],"tindex":"86b029b0-db86-11e4-866e-03c70a8cf492","variableMapping":{"str":"pavementName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:424","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[],"tindex":"86b029b1-db86-11e4-866e-9fb82a133615","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[113,114,115,116,117],"tindex":"86b029b2-db86-11e4-866e-9177648e2a60","variableMapping":{"fromNode":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:107","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((double >= (int)) || boolean)\n    double = int;\n"},"status":-1},{"failures":[102,103,104,105,106,107,108,109,110,111,112],"tindex":"86b029b3-db86-11e4-866e-d5c7ba351aa4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[77],"tindex":"86b029b4-db86-11e4-866e-b3f42198eda1","variableMapping":{"turnRestrictionBit":"flags","restricted":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:615","type":"CtReturnImpl","sourcecode":"return boolean ? long : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"86b029b5-db86-11e4-866e-d511aa28e848","variableMapping":{"width":"indexDivisor","latSimilar":"indexDivisor","lonSimilar":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:100","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * ((int * (int)) + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"86b4e4a6-db86-11e4-866e-01a9da8b6f8b","variableMapping":{"index":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[102,103,104,105,106,107,108,109,110,111,112],"tindex":"86b4e4a7-db86-11e4-866e-338c62e6cf6c","variableMapping":{"cp":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"86b4e4a8-db86-11e4-866e-797fe70205c6","variableMapping":{"size":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:56","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[],"tindex":"86b4e4a9-db86-11e4-866e-a3f2ac30eecd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"86b4e4aa-db86-11e4-866e-8f01b13d6f86","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"86b4e4ab-db86-11e4-866e-bdfc53d00a37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"86b4e4ac-db86-11e4-866e-4fc1be12df99","variableMapping":{"i":"x1","com.graphhopper.storage.GraphHopperStorage.MAX_EDGES":"y2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:813","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(\"something went wrong: no end of edge-list found\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"86b4e4ad-db86-11e4-866e-3d3865e86308","variableMapping":{"len":"bufferIndex","dim":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:968","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[((int * int) * 4) + 4]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"86b4e4ae-db86-11e4-866e-83a9507526c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:274","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"86b50bbf-db86-11e4-866e-494cfd026dba","variableMapping":{"tmpNo":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"86b50bc0-db86-11e4-866e-35c47792083e","variableMapping":{"acceptBit":"flags","ferryBit":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:336","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[118,119],"tindex":"86b50bc1-db86-11e4-866e-ffe3785e4802","variableMapping":{"size":"i","keys":"elem","child":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:114","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"86b50bc2-db86-11e4-866e-03c42a4b7f0f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[80,81,120],"tindex":"86b50bc3-db86-11e4-866e-d9c2ce427053","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:72","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[121,122,123,124,125,126,113,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,47,159,0,1,160,2,161,162,3],"tindex":"86b50bc4-db86-11e4-866e-bd2816c1b3eb","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.NODE":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:323","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[163],"tindex":"86b50bc5-db86-11e4-866e-213545caf5c5","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"86b50bc6-db86-11e4-866e-77c414aa9f4d","variableMapping":{"midLat":"maxLat","lat":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"86b50bc7-db86-11e4-866e-0b51e032bdf2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[164],"tindex":"86b50bc8-db86-11e4-866e-d56e9d31fed2","variableMapping":{"segmentSizeInBytes":"shift","allSegments":"shift","capacity":"relBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:97","type":"CtAssignmentImpl","sourcecode":"long = int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:523","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[],"tindex":"86b50bc9-db86-11e4-866e-2362b44ed009","variableMapping":{"high":"flags","low":"flags","guess":"flags","guessedKey":"flags","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:111","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"86b50bca-db86-11e4-866e-13d9e36d8237","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":0},{"failures":[],"tindex":"86b50bcb-db86-11e4-866e-9b6f7a478a21","variableMapping":{"sortedNodes":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:307","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHTreeMapComposed.isEmpty())\n    throw new java.lang.IllegalStateException(\"Cannot prepare as no unprepared nodes where found. Called preparation twice?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[165,164,166,167,168,169,170,171],"tindex":"86b50bcc-db86-11e4-866e-89bf0ded35bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:305","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[31,32,33,34,97,121,172,122,123,124,125,126,113,127,128,129,130,131,132,133,134,136,137,173,174,175,176,38,177,178,179,180,181,182,183,47,48,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,61,65,202,203,204,205,206,207,208,209,210,211,212,159,213,0,1,160,214,2,161,162,3,215,216,82,84,217,218,219,220,221,222,223,224,225,226,227,27],"tindex":"86b50bcd-db86-11e4-866e-75bbf0b5eeff","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"length","edgeTo":"index","edgeFrom":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:274","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"86b532de-db86-11e4-866e-8fe3acf510ec","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"86b532df-db86-11e4-866e-ef684d1aa175","variableMapping":{"bytePos":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[228,229],"tindex":"86b532e0-db86-11e4-866e-917e1c321d7f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:255","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-1},{"failures":[],"tindex":"86b532e1-db86-11e4-866e-b9e9f33d95c8","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[230,231,232,233,234,235,236],"tindex":"86b532e2-db86-11e4-866e-bd716782e15d","variableMapping":{"maxLeafEntries":"endIndexPlusOne"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[237],"tindex":"86b532e3-db86-11e4-866e-d7688d6df997","variableMapping":{"cp":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:744","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"86b532e4-db86-11e4-866e-d70788806cb9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[31,238,92,239,240,241,242,5,85,86,87,88,6,243,89,8,15,19,26,28,30],"tindex":"86b532e5-db86-11e4-866e-2b8feedb8be5","variableMapping":{"inner":"nodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:129","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getSegmentSize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:72","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[230,231,244,245,31,246,247,248,249,32,33,34,97,250,251,35,252,253,121,172,122,123,124,125,126,113,127,254,128,129,130,131,132,36,238,255,92,37,176,239,256,38,177,257,258,259,178,260,261,262,263,39,264,265,266,267,268,40,269,270,271,272,41,273,42,274,275,179,276,277,278,279,43,180,280,44,281,45,181,282,182,183,46,283,47,284,285,48,184,286,287,288,185,289,290,291,292,49,293,294,295,296,297,50,298,299,300,301,51,302,52,303,304,186,305,306,307,308,53,187,309,54,310,55,188,311,189,190,56,312,313,314,315,316,317,318,319,240,320,241,321,322,191,192,193,323,324,325,326,327,328,329,330,331,332,333,334,194,195,196,197,335,198,336,337,338,339,340,341,342,343,344,199,200,201,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,57,362,363,364,365,366,58,367,368,369,370,59,371,60,372,373,374,375,376,377,378,61,379,380,62,381,63,382,383,384,385,64,386,387,65,202,388,389,390,203,391,392,393,394,66,395,396,397,398,399,67,400,401,402,403,68,404,69,405,406,204,407,408,409,410,70,205,411,71,412,72,206,413,207,208,73,414,74,415,416,159,213,0,1,160,214,2,417,161,162,3,215,418,419,420,75,421,76,422,423,90,424,425,426,427,77,428,429,78,430,431,432,433,228,114,79,434,435,436,437,80,234,235,236,81,120,438,439,99,166,440,102,441,103,116,442,443,444,445,446,447,448,449,104,450,451,93,167,452,453,454,105,94,455,456,457,458,459,460,106,461,462,168,216,82,463,100,169,464,107,465,108,117,466,467,468,469,470,471,472,473,109,474,475,95,170,476,101,110,111,477,478,479,480,481,482,483,112,484,485,96,171,486,487,488,489,490,491,492,83,84,217,493,494,218,219,495,220,221,222,223,224,225,496,226,227,497,4,242,498,5,85,86,87,88,499,6,7,243,500,89,8,9,10,11,12,13,14,15,16,17,18,19,501,20,21,22,23,24,25,502,26,27,28,29,30],"tindex":"86b559f6-db86-11e4-866e-fb601a025623","variableMapping":{"acceptBit":"defaultL","ferryBit":"defaultL","footTag":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[],"tindex":"86b559f7-db86-11e4-866e-23b38c374029","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"86b559f8-db86-11e4-866e-83fe97eab6d3","variableMapping":{"prepareAlgo":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[432],"tindex":"86b559f9-db86-11e4-866e-497e03f3a472","variableMapping":{"high":"acceptBit","highKey":"ferryBit","key":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"86b559fa-db86-11e4-866e-a5574daac595","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:217","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"86b559fb-db86-11e4-866e-8f8c29547170","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"86b559fc-db86-11e4-866e-fb47150e51cf","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"86b559fd-db86-11e4-866e-0184ddeefcee","variableMapping":{"y":"delta","angle":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(((double * double) + (double * double)))"},"status":-2},{"failures":[],"tindex":"86b559fe-db86-11e4-866e-91d078264dee","variableMapping":{"width":"locs","lonSimilar":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    if (!(com.graphhopper.util.EdgeIterator.next())) {\n        int++;\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"86b559ff-db86-11e4-866e-ff2743fa1232","variableMapping":{"name":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"86b55a00-db86-11e4-866e-013c15b0dcbe","variableMapping":{"flags":"acceptBit","tmpValue":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"86b55a01-db86-11e4-866e-9f56b7ebcb8a","variableMapping":{"min":"backSpeed","dist":"backSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:333","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":0},{"failures":[],"tindex":"86b55a02-db86-11e4-866e-0547f52c8840","variableMapping":{"maxLeafEntries":"dLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"86b55a03-db86-11e4-866e-b1d344ddbf4b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"status":-2},{"failures":[],"tindex":"86b55a04-db86-11e4-866e-a3ca4427e9bf","variableMapping":{"name":"s","this":"this","refName":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:444","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        java.lang.String = java.lang.String;\n    else\n        java.lang.String += \", \" + java.lang.String;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"86b55a05-db86-11e4-866e-c1f14ff1fc89","variableMapping":{"i":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:316","type":"CtReturnImpl","sourcecode":"return byte[][].int"},"status":-2},{"failures":[],"tindex":"86b55a06-db86-11e4-866e-ab008c97df2a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"86b55a07-db86-11e4-866e-bbbaedf53af2","variableMapping":{"time":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:274","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[503,504,505,506,507,508,509,510,511,512,513,321,322,193,323,324,325,326,327,328,331,334,514,343,344,201,345,346,347,348,349,350,353,356],"tindex":"86b58118-db86-11e4-866e-f1cac5ac21db","variableMapping":{"weight":"minLonTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"86b58119-db86-11e4-866e-37a08ecc0d10","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"maxTurnCosts","flags":"flags","roundaboutBit":"turnRestrictionBit","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"maxTurnCosts","forwardBit":"turnRestrictionBit","key":"maxTurnCosts","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"maxTurnCosts","backwardBit":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[4,6,7,8,9,10,11,14,15,25,26,27,28,30],"tindex":"86b5811a-db86-11e4-866e-0fe8ecf628e2","variableMapping":{"edgeId":"skippedEdge1","nextEdge":"skippedEdge2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:903","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[423],"tindex":"86b5811b-db86-11e4-866e-c1191f99d6d5","variableMapping":{"tt":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"86b5811c-db86-11e4-866e-7db301e765b5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-2},{"failures":[],"tindex":"86b5811d-db86-11e4-866e-1b4b84989b0b","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"86b5811e-db86-11e4-866e-e3a5f9a09e7c","variableMapping":{"store":"defaultB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:734","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return boolean;\n"},"status":0},{"failures":[],"tindex":"86b5811f-db86-11e4-866e-9f1d171878c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:145","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[230,231,244,245,31,246,248,32,33,34,97,250,251,35,252,253,515,121,172,122,123,124,125,126,113,127,128,129,130,131,132,516,517,518,519,520,521,522,36,238,255,92,37,239,256,38,258,178,260,261,262,263,39,264,265,266,267,268,40,269,270,271,272,41,273,42,274,275,179,276,277,278,43,180,280,44,281,45,181,282,182,183,46,283,47,285,48,287,185,289,290,291,292,49,293,294,295,296,297,50,298,299,300,301,51,302,52,303,304,186,305,306,307,53,187,309,54,310,55,188,311,189,190,56,312,313,314,315,316,318,319,240,320,241,321,322,191,192,193,323,324,325,326,327,328,329,330,331,333,334,194,195,196,197,198,336,337,338,339,341,342,343,344,199,200,201,345,346,347,348,349,350,351,352,353,355,356,58,61,387,65,389,203,391,392,393,394,66,395,396,397,398,399,67,400,401,402,403,68,404,69,405,406,204,407,408,409,70,205,411,71,412,72,206,413,207,208,73,414,74,415,159,213,0,1,160,214,2,161,162,3,215,75,80,234,235,236,81,120,216,82,84,217,493,494,218,219,495,220,221,222,223,224,225,496,226,227,4,242,5,85,86,87,88,499,6,7,243,500,89,8,9,10,11,12,13,14,15,16,17,18,19,501,20,21,22,23,24,25,502,26,27,28,29,30],"tindex":"86b58120-db86-11e4-866e-b9133a3e9513","variableMapping":{"bytePos":"bytePos","indexDivisor":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:311","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"86b58121-db86-11e4-866e-63ed350933e1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[80,120],"tindex":"86b58122-db86-11e4-866e-7df74238fc3c","variableMapping":{"i":"removed","child":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[239,261,268,269,270,272,274,275,180,280,290,297,298,299,301,303,304,187,309,359,366,367,368,370,372,373,379,380,392,399,400,401,403,405,406,205,411,80,236],"tindex":"86b58123-db86-11e4-866e-9d1fde76790d","variableMapping":{"tmpNo":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":43,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":502,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":176,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":315,"com.graphhopper.GraphHopperAPITest.testNoLoad":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":358,"com.graphhopper.reader.OSMReaderTest.testFerry":121,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":250,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":251,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":441,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":94,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":192,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":213,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":283,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":297,"com.graphhopper.coll.CompressedArrayTest.testCompress":513,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":460,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":86,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":374,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":67,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":241,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":139,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":243,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":383,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":4,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":19,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":32,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":106,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":231,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":321,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":81,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":99,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":516,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":17,"com.graphhopper.coll.BitSetImplTest.testCopy":163,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":200,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":190,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":103,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":418,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":47,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":509,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":8,"com.graphhopper.GraphHopperTest.testLoadOSM":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":350,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":519,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":201,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":436,"com.graphhopper.reader.OSMReaderTest.testSort":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":450,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":129,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":235,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":184,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":412,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":507,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":384,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":224,"com.graphhopper.routing.DijkstraTest.initializationError":491,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":515,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":55,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":138,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":279,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":396,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":284,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":185,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":268,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":171,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":484,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":325,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":403,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":22,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":323,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":13,"com.graphhopper.coll.OSMIDMapTest.testGetLong":136,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":261,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":304,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":273,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":38,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":274,"com.graphhopper.coll.CompressedArrayTest.testCompress2":512,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":406,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":101,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":50,"com.graphhopper.GraphHopperAPITest.testLoad":74,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":259,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":518,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":419,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":400,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":392,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":91,"com.graphhopper.storage.LevelGraphStorageTest.testClone":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":120,"com.graphhopper.reader.OSMReaderTest.testBarriers":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":289,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":240,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":16,"com.graphhopper.util.GHUtilityTest.testCopy":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":57,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":142,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":482,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":317,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":462,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":157,"com.graphhopper.routing.PathTest.testFindInstruction":217,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":457,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":290,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":35,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":423,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":282,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":464,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":72,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":54,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":88,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":301,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":472,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":229,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":490,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":362,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":389,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":522,"com.graphhopper.util.InstructionListTest.testWayList2":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":351,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":73,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":505,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":102,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":189,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":486,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":216,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":266,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":152,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":116,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":298,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":15,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":391,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":125,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":140,"com.graphhopper.routing.AStarTest.initializationError":489,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":27,"com.graphhopper.coll.OSMIDMapTest.testGet":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":296,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":90,"com.graphhopper.routing.PathBidirRefTest.testExtract":493,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":135,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":444,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":329,"com.graphhopper.storage.RAMDataAccessTest.testCopy":150,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":379,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":453,"com.graphhopper.storage.RAMDataAccessTest.testSegments":156,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":443,"com.graphhopper.util.GHUtilityTest.testSort2":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":23,"com.graphhopper.reader.OSMReaderTest.testMain":122,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":177,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":303,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":445,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":510,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":451,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":286,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":40,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":232,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":272,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":46,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":221,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":469,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":100,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":517,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":42,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":131,"com.graphhopper.storage.StorablePropertiesTest.testStore":173,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":175,"com.graphhopper.storage.GraphHopperStorageTest.testClone":394,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":381,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":432,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":402,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":430,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":36,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":485,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":363,"com.graphhopper.routing.PathTest.testTime":83,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":481,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":182,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":434,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":353,"com.graphhopper.reader.OSMReaderTest.testRelation":254,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":373,"com.graphhopper.util.GHUtilityTest.testSortDirected":248,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":474,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":147,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":220,"com.graphhopper.GraphHopperTest.testFootOnly":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":454,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":429,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":324,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":242,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":463,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":59,"com.graphhopper.search.NameIndexTest.testCreate":212,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":155,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":218,"com.graphhopper.routing.QueryGraphTest.testOneWay":496,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":354,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":506,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":456,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":199,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":503,"com.graphhopper.reader.OSMReaderTest.testWithBounds":130,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":158,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":475,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":375,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":424,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":165,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":260,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":257,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":476,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":473,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":168,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":78,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":51,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":203,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":10,"com.graphhopper.util.InstructionListTest.testWayList":33,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":442,"com.graphhopper.GraphHopperAPITest.testDisconnected179":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":364,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":470,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":449,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":160,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":395,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":500,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":439,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":408,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":20,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":488,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":7,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":181,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":433,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":478,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":104,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":29,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":390,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":167,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":387,"com.graphhopper.routing.PathTest.testWayList":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":385,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":367,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":428,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":98,"com.graphhopper.coll.OSMIDMapTest.testGet2":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":30,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":448,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":404,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":420,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":294,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":326,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":327,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":151,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":467,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":118,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":110,"com.graphhopper.util.GHUtilityTest.testSort":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":378,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":511,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":447,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":455,"com.graphhopper.search.NameIndexTest.testPut":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":288,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":393,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":316,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":322,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":198,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":338,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":521,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":465,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":336,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":477,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":487,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":422,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":302,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":80,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":61,"com.graphhopper.routing.PathTest.testFound":492,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":215,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":437,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":45,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":237,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":446,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":299,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":211,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":58,"com.graphhopper.util.InstructionListTest.testEmptyList":249,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":483,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":21,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":426,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":425,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":461,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":24,"com.graphhopper.reader.PrinctonReaderTest.testRead":252,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":206,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":193,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":295,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":366,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":504,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":357,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":52,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":468,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":115,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":480,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":169,"com.graphhopper.reader.OSMReaderTest.testFoot":172,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":377,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":183,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":348,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":508,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":452,"com.graphhopper.reader.OSMReaderTest.testOneWay":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":349,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":401,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":411,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":310,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":458,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":146,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":407,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":60,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":397,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":87,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":514,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":89,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":431,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":85,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":145,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":339,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":75,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":369,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":495,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":388,"com.graphhopper.routing.PathBidirRefTest.testExtract2":494,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":520,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":9,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":112,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":352,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":209,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":340,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":96,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":386,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":421,"com.graphhopper.util.SimpleIntDequeTest.testPush":233,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":345,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":71,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":247,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":228,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":204,"com.graphhopper.GraphHopperTest.testFootAndCar":214,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":270,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":111,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":333,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":361,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":499,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":26,"com.graphhopper.GraphHopperTest.testPrepareOnly":159,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":359,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":128,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":37,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":97,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":410,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":76,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":371,"com.graphhopper.routing.AStarBidirectionTest.initializationError":497,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":438,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":281,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":280,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":48}}]
