[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"d4cc8e01-da58-11e4-bc5a-47557132f097","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:334","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,16,119,120,43,121,122,44,45,123,46,47,124,125,126,48,127,128,129,130,49,50,131,132,133,134,51,52,135,136,53,137,54,138,139,140,55,141,142,143,60,144,145,72,73,74,75,76,146,77,147,78,148,79,80,81,149,82,83,84,85,86,87,88,89,90,150,151,152,91,92,93,94,153,95,96,97,98,99,154,155,156,157,158,159,160],"tindex":"d4cc8e02-da58-11e4-bc5a-b7cfc00f941b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:87","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"d4cc8e03-da58-11e4-bc5a-fb818943eeaf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[154,161,162],"tindex":"d4cc8e04-da58-11e4-bc5a-c3a1b97f0e3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"d4ccb515-da58-11e4-bc5a-33f5eaae8d6d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"d4ccb516-da58-11e4-bc5a-f952490ba3c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"status":-2},{"failures":[],"tindex":"d4ccb517-da58-11e4-bc5a-330dd8b31446","variableMapping":{"high":"flags","len":"directionBitMask","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-2},{"failures":[],"tindex":"d4ccb518-da58-11e4-bc5a-c34cdb5affd2","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"d4ccb519-da58-11e4-bc5a-2b3d8eef682c","variableMapping":{"high":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"d4ccb51a-da58-11e4-bc5a-9b9613c345da","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":0},{"failures":[163],"tindex":"d4ccb51b-da58-11e4-bc5a-a1ba6cdd63e3","variableMapping":{"r":"fullDist2D","x":"incDist2DSum","absY":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[164,165,166,167,168,104,110,112,113,169,170,171,172,173,174,175,176,177,178],"tindex":"d4ccb51c-da58-11e4-bc5a-d31a2a8bb973","variableMapping":{"orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"d4ccb51d-da58-11e4-bc5a-3ff492fc3298","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:398","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.LevelGraphStorage.double))\n    long = com.graphhopper.storage.LevelGraphStorage.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"d4ccb51e-da58-11e4-bc5a-db96546bf055","variableMapping":{"intLow":"code","intHigh":"code"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:280","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-2},{"failures":[],"tindex":"d4ccb51f-da58-11e4-bc5a-894caf99ea5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d4ccb520-da58-11e4-bc5a-4fee88166715","variableMapping":{"acceptBit":"directionBitMask","ferryBit":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:236","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[179,180,181,182,183,184,185,186],"tindex":"d4ccb521-da58-11e4-bc5a-ad0188f15739","variableMapping":{"closed":"partOfCycleRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:181","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[77,79,187,188,189,190,191],"tindex":"d4ccb522-da58-11e4-bc5a-b3037b740d69","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[179,183],"tindex":"d4ccb523-da58-11e4-bc5a-65fe3022c3b5","variableMapping":{"osmFile":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:634","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"d4ccdc34-da58-11e4-bc5a-5b94aa43de7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:393","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[192],"tindex":"d4ccdc35-da58-11e4-bc5a-ddbedffb2b94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"d4ccdc36-da58-11e4-bc5a-7fca5028f3dc","variableMapping":{"d":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:131","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[187,189,191],"tindex":"d4ccdc37-da58-11e4-bc5a-2b37ffa4e89b","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"d4ccdc38-da58-11e4-bc5a-b57a480866d1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:244","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"d4ccdc39-da58-11e4-bc5a-bb2bc37dffc5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"d4ccdc3a-da58-11e4-bc5a-893e2a4553e6","variableMapping":{"factor":"minLon","delta_lon":"minLon","a_lon":"minLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:212","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:218","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[193,105,169,170,171,172,194,173,195,174,175,178],"tindex":"d4ccdc3b-da58-11e4-bc5a-976020e985e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"d4ccdc3c-da58-11e4-bc5a-77074d3c9415","variableMapping":{"bytesForFlags":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"d4ccdc3d-da58-11e4-bc5a-7d57897e5386","variableMapping":{"obtained":"uTurnSupport"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[196,197,198,199,200,201,202,203,155,156,157,204,205,158,159,206,161,207,208,162,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"d4ccdc3e-da58-11e4-bc5a-edb44463e3fd","variableMapping":{"eleDelta":"speed","decEleSum":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"d4ccdc3f-da58-11e4-bc5a-f5346d21ddb2","variableMapping":{"lazyUpdates":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":0},{"failures":[],"tindex":"d4ccdc40-da58-11e4-bc5a-4b280de7e031","variableMapping":{"size":"dLat","i":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[221,72,77,78,79,149,86,90,152,91,95,97,99],"tindex":"d4ccdc41-da58-11e4-bc5a-ef40a01d2742","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[],"tindex":"d4cd0352-da58-11e4-bc5a-19d37ec6f603","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer> java.util.TreeMap<java.lang.Double, java.lang.Integer> = new java.util.TreeMap<java.lang.Double, java.lang.Integer>()"},"status":-2},{"failures":[222,223,224,225,226,227,210,215],"tindex":"d4cd0353-da58-11e4-bc5a-098e0a3fc28b","variableMapping":{"sacScale":"res"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"d4cd0354-da58-11e4-bc5a-1737abcc8850","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-2},{"failures":[],"tindex":"d4cd0355-da58-11e4-bc5a-1590c643f928","variableMapping":{"item":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:256","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)"},"status":-2},{"failures":[2,228,229,230,231,232,233,234,20,235,236,237,238,239,240,241,32,242,243,244,245,246,247,248,45,127,128,130,131,132,135,136,66,69],"tindex":"d4cd0356-da58-11e4-bc5a-df5a28bb8766","variableMapping":{"index":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"d4cd0357-da58-11e4-bc5a-d75e14b3c9cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"d4cd0358-da58-11e4-bc5a-a108edf3b212","variableMapping":{"distInMeter":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:47","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"d4cd0359-da58-11e4-bc5a-f3716fe16922","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-2},{"failures":[249,250,251,252,0,253,254,255,233,256,257,258,259,260,261,262,263,264,265,266,106,107,108,267,17,18,268,269,270,240,271,272,273,39,274,43,275,122,133,135,138,139,140,276,277,60,61,62,63,196,278,163,279,280,281,282,283,71,284,285,286,287,288,289,96,290,291,292,293,154,155,156,157,204,205,158,159,206,160,161,207,208,162,209,210,211,212,213,214,215,216,217,218,220],"tindex":"d4cd035a-da58-11e4-bc5a-e3049b281b95","variableMapping":{"start":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"d4cd035b-da58-11e4-bc5a-c31c88defc53","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"d4cd035c-da58-11e4-bc5a-ad164132d1c0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"d4cd035d-da58-11e4-bc5a-6f1623934e7c","variableMapping":{"com.graphhopper.reader.OSMRelation.Member.WAY":"bufferIndex","entityType":"bufferIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:326","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":0},{"failures":[],"tindex":"d4cd035e-da58-11e4-bc5a-5916ad0ce4f1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"d4cd2a6f-da58-11e4-bc5a-3914a6edf8b0","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d4cd2a70-da58-11e4-bc5a-d770cf4e816c","variableMapping":{"importance":"y1","hash":"y1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:142","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"d4cd2a71-da58-11e4-bc5a-7d714ba623d7","variableMapping":{"file":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:221","type":"CtReturnImpl","sourcecode":"return java.io.File.delete()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-2},{"failures":[],"tindex":"d4cd2a72-da58-11e4-bc5a-81043462e460","variableMapping":{"maxMCSpeed":"longTripsSpeed","speed":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":0},{"failures":[],"tindex":"d4cd2a73-da58-11e4-bc5a-378ac5980e90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"d4cd2a74-da58-11e4-bc5a-53fd9675c662","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"d4cd2a75-da58-11e4-bc5a-07cea79bea11","variableMapping":{"currentBucket":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","currentIndex":"speed","bucketSize":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-2},{"failures":[],"tindex":"d4cd2a76-da58-11e4-bc5a-9ffcb5659bdb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[77],"tindex":"d4cd2a77-da58-11e4-bc5a-7bc3868a6fec","variableMapping":{"compressionLevel":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"d4cd2a78-da58-11e4-bc5a-3be0d73b79d8","variableMapping":{"acceptBit":"ferryBit","ferryBit":"ferryBit","ferries":"ferries","highwayValue":"highwayValue","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[0,254,1,2,5,294,6,8,10,256,12,13,14,15,16,17,18,269,19,20,23,295,24,26,28,271,30,296,31,32,35,297,36,38,40,298,42,43,122,44,45,48,299,49,51,53,138,55,56,142,58,66,68,70,300,279,71,286,72,73,77,78,79,80,81,149,82,83,87,90,151,152,91,93,95,97,98,99,157,205,158,207,208,162,210,213,214,215,217,220,100,101],"tindex":"d4cd2a79-da58-11e4-bc5a-0bb86d278482","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:350","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[301,0,253,302,303,254,1,2,304,3,4,305,306,307,5,308,294,228,229,309,230,6,310,7,231,232,255,311,312,8,313,9,233,234,10,314,11,256,315,257,258,12,316,164,193,259,260,261,317,165,318,166,167,319,320,321,322,323,324,13,325,326,327,328,329,330,14,331,262,263,264,265,332,266,333,334,335,336,337,338,15,102,103,339,104,105,106,107,108,109,110,111,112,113,114,115,116,117,340,118,16,341,17,342,343,18,268,344,345,269,19,20,346,21,22,347,348,349,23,350,295,235,236,351,237,24,352,25,238,239,270,353,354,26,355,27,240,241,28,356,29,271,357,272,273,30,358,296,31,32,359,33,34,360,361,362,35,363,297,242,243,364,244,36,365,37,245,246,366,367,368,38,369,39,247,248,40,370,41,298,371,372,373,42,374,375,376,221,119,120,274,377,378,43,275,379,121,122,44,45,123,46,47,124,125,126,48,380,299,127,128,129,130,49,381,50,131,132,133,134,382,51,383,52,135,136,53,137,54,138,384,139,140,55,141,56,57,142,58,59,143,385,60,386,387,388,61,62,63,196,389,390,64,65,66,67,68,69,70,300,391,278,163,392,393,279,280,281,281,282,282,394,394,283,283,71,71,284,284,285,285,286,286,287,287,395,395,288,288,289,289,144,145,72,73,74,75,76,146,77,147,78,148,79,80,81,149,82,83,84,85,86,87,88,89,90,150,151,152,91,92,93,94,153,95,96,97,98,99,154,155,156,157,204,205,158,159,206,160,161,207,208,162,209,210,211,212,213,214,215,216,217,218,220,396,100,101],"tindex":"d4cd508a-da58-11e4-bc5a-1104385ef373","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"d4cd508b-da58-11e4-bc5a-6bdbd17df0c9","variableMapping":{"midLat":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"d4cd508c-da58-11e4-bc5a-99c0b43957f0","variableMapping":{"size":"guess","keys":"a","child":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:114","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"d4cd508d-da58-11e4-bc5a-cdec4e9e4dfe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.abs((double - double))"},"status":-2},{"failures":[221,120,72,77,79,80,149,82,85,90,151,94,96,97,99],"tindex":"d4cd508e-da58-11e4-bc5a-f795b8c5ddf7","variableMapping":{"java.lang.Double.MAX_VALUE":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-1},{"failures":[397,398,399,186],"tindex":"d4cd508f-da58-11e4-bc5a-5d186b1e213c","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-1},{"failures":[],"tindex":"d4cd5090-da58-11e4-bc5a-a7a1aab83f9a","variableMapping":{"intIndex":"high","len":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:521","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[66,70,300],"tindex":"d4cd5091-da58-11e4-bc5a-81ef602e97f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-1},{"failures":[400,401,402],"tindex":"d4cd5092-da58-11e4-bc5a-83c27869b264","variableMapping":{"strLen":"speed","bLen":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"d4cd5093-da58-11e4-bc5a-73a583682c8b","variableMapping":{"shift":"shift","preferWayEncoder":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[397,180,403,398,184,404,399,185,405,186,406],"tindex":"d4cd5094-da58-11e4-bc5a-af4c6f5dbf34","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:953","type":"CtReturnImpl","sourcecode":"return \"PREPARE|CH|dijkstrabi\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[397,180,403,398,184,404,399,185,405,186,406],"tindex":"d4cd5095-da58-11e4-bc5a-ff07d622e7bd","variableMapping":{"importance":"paveType","hash":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[301,0,253,253,302,303,407,254,1,2,304,3,4,305,306,307,5,308,294,228,229,309,230,6,310,7,231,232,255,311,312,8,313,9,233,234,10,314,11,256,315,257,258,12,316,164,193,259,260,261,317,165,318,166,167,319,320,321,322,323,324,13,325,326,327,328,330,14,331,262,263,264,265,266,333,334,335,336,338,15,102,103,339,104,105,106,107,108,109,110,111,112,113,114,115,116,117,340,118,16,17,343,18,268,268,344,345,408,269,19,20,346,21,22,347,348,349,23,350,295,235,236,351,237,24,352,25,238,239,270,353,354,26,355,27,240,241,28,356,29,271,357,272,273,30,358,297,39,375,376,221,119,120,274,377,378,43,275,275,379,121,409,122,44,45,123,46,47,124,125,126,48,380,299,127,128,129,130,49,381,50,131,132,133,134,382,51,383,52,135,136,53,137,54,138,384,139,140,55,141,56,57,142,58,59,143,385,60,386,387,388,61,62,63,196,389,390,64,65,66,67,68,69,70,300,391,278,163,392,393,279,280,281,281,282,282,394,394,283,283,71,71,284,284,285,285,286,286,287,287,395,395,288,288,289,289,144,145,72,73,74,75,76,146,77,147,78,148,79,80,81,149,82,83,84,85,86,87,88,89,90,150,151,152,91,92,93,94,153,95,96,97,98,99,154,154,155,156,156,157,157,204,204,205,205,158,410,410,159,206,160,160,161,161,411,411,207,208,162,209,210,211,212,213,214,215,216,217,218,220,396,100,101],"tindex":"d4cd77a6-da58-11e4-bc5a-4b667cefa341","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"d4cd77a7-da58-11e4-bc5a-fd15673f67ca","variableMapping":{"size":"segmentsToCreate"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":0},{"failures":[],"tindex":"d4cd77a8-da58-11e4-bc5a-a720b6c478c6","variableMapping":{"a":"blockFords","approx":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"d4cd77a9-da58-11e4-bc5a-2b6174414e0c","variableMapping":{"weightApproximation":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[201,207,218,220],"tindex":"d4cd77aa-da58-11e4-bc5a-33019540bb28","variableMapping":{"scDirMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"d4cd77ab-da58-11e4-bc5a-85dd808dd1ea","variableMapping":{"dist":"prio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtReturnImpl","sourcecode":"return double / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[164,193,259,260,261,317,318,167,319,320,321,322,324,13,102,103,104,105,106,107,108,109,111,113,114,115,116,117,118,16,56,57,89,152,91,94,169,170,156,157,204,205,158,206,160,171,172,194,173,195,174,175,178,162,209,210],"tindex":"d4cd77ac-da58-11e4-bc5a-5999c076466d","variableMapping":{"lastKey":"bits","key":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[],"tindex":"d4cd77ad-da58-11e4-bc5a-83fb1ca3b083","variableMapping":{"com.graphhopper.reader.OSMReader.EMPTY":"index","tmpNode":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:634","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"d4cd77ae-da58-11e4-bc5a-35e003f46e3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[0,254,255,233,256,259,261,106,108,412,17,18,269,270,240,271,296,366,39,247,298,413,414,415,416,43,122,133,135,138,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,62,63,279,282,71,284,286,287,289,96,290,291,434,292,293,154,157,204,158,206,160,207,162,209,210,211,212,213,214,215,216,217,218,220],"tindex":"d4cd77af-da58-11e4-bc5a-5f07ff284842","variableMapping":{"offset":"value","bytes":"bytes","value":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"d4cd77b0-da58-11e4-bc5a-fbc0ad36750c","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"d4cd77b1-da58-11e4-bc5a-ebf12c77aac8","variableMapping":{"turnCostsCount":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"d4cd77b2-da58-11e4-bc5a-153344202c71","variableMapping":{"java.lang.Integer.MAX_VALUE":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-2},{"failures":[2,308,228,229,231,233,234,20,350,235,236,238,240,241,32,363,242,243,245,247,248,45,380,127,128,131,135,136,66,69,220],"tindex":"d4cd9ec3-da58-11e4-bc5a-05bd974f33f9","variableMapping":{"java.lang.Integer.MAX_VALUE":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"d4cd9ec4-da58-11e4-bc5a-a1e1683b2bcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"d4cd9ec5-da58-11e4-bc5a-79a473749d57","variableMapping":{"str":"highway","destination":"highway","counter":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:268","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n    if (java.lang.String.trim().isEmpty())\n        continue;\n    \n    if (int > 0)\n        java.lang.String += \", \";\n    \n    java.lang.String += java.lang.String.trim();\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[435,436,437,154,205,160,208],"tindex":"d4cd9ec6-da58-11e4-bc5a-e714f2ee4a2e","variableMapping":{"nanoTime":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[301,0,253,302,303,407,254,1,2,304,3,4,305,306,307,5,308,294,228,229,309,230,6,310,7,231,232,255,311,312,8,313,9,233,234,10,314,11,256,315,257,258,12,316,13,14,15,16,17,342,343,18,268,344,345,408,269,19,20,346,21,22,347,348,349,23,350,295,235,236,351,237,24,352,25,238,239,270,353,354,26,355,27,240,241,28,356,29,271,357,272,273,30,358,296,31,32,359,33,34,360,361,362,35,363,297,242,243,364,244,36,365,37,245,246,366,367,368,38,369,39,247,248,40,370,41,298,371,372,373,42,374,375,376,221,119,120,274,377,378,43,275,379,121,409,122,44,45,123,46,47,124,125,126,48,380,299,127,128,129,130,49,381,50,131,132,133,134,382,51,383,52,135,136,53,137,54,138,384,139,140,55,141,438,222,439,391,435,440,441,436,442,443,223,444,197,198,445,446,447,199,200,201,448,449,450,451,452,202,453,454,455,437,456,457,281,81,149,82,83,84,85,86,87,88,89,90,150,151,152,91,92,93,94,153,95,96,97,98,99,458,459,154,205,160,161,207,208,162,209,210,211,212,213,214,215,216,217,218,220],"tindex":"d4cd9ec7-da58-11e4-bc5a-1b1f63d8df8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , com.graphhopper.routing.util.FootFlagEncoder.int , com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"d4cd9ec8-da58-11e4-bc5a-7dde22b385da","variableMapping":{"ret":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","retBucket":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","i":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","storedKey":"flags","bucketSize":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtIfImpl","sourcecode":"if (long == long) {\n    int = (int * (int)) + int;\n    break;\n} else if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bridge\", \"yes\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))) {\n} else {\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = 0;\n    double double = com.graphhopper.util.PointList.getElevation(0);\n    double double = 0;\n    double = com.graphhopper.util.EdgeIteratorState.getDistance();\n    double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double;\n    if (double > 0.1) {\n        double = double;\n        double = double;\n    } else if (double < (-0.1)) {\n        double = -double;\n        double = double;\n    } \n    double double = double > 1 ? double / double : 0;\n    double double = double > 1 ? double / double : 0;\n    double double = (double - double) - double;\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\");\n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n    if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n        double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n        double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n        double = double * double;\n        double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n    } \n}"},"status":-2},{"failures":[],"tindex":"d4cd9ec9-da58-11e4-bc5a-3912591a6e33","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"d4cd9eca-da58-11e4-bc5a-212a5dacb6a2","variableMapping":{"mainEdgeState":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"d4cd9ecb-da58-11e4-bc5a-09e3bf32f798","variableMapping":{"equalNormedDelta":"d1","currNormedDist":"d1"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:883","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[163],"tindex":"d4cd9ecc-da58-11e4-bc5a-8d9e9bd16354","variableMapping":{"allIter":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:385","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:140","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-1},{"failures":[],"tindex":"d4cd9ecd-da58-11e4-bc5a-c319c29e5102","variableMapping":{"retBucket":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"d4cd9ece-da58-11e4-bc5a-b3f853ef072b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"d4cd9ecf-da58-11e4-bc5a-6b30a15d8807","variableMapping":{"index":"sLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[144,77,147,80,81,149,82,85,86,94,95,96,97,99],"tindex":"d4cd9ed0-da58-11e4-bc5a-b9792a40cf57","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"d4cdc5e1-da58-11e4-bc5a-334d96219811","variableMapping":{"oldValueIndex":"flags","lastKey":"flags","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[207],"tindex":"d4cdc5e2-da58-11e4-bc5a-fb5b089ff9db","variableMapping":{"this":"this","unknownSpeed":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":153,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":282,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":203,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":274,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":31,"com.graphhopper.reader.OSMReaderTest.testFerry":207,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":58,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":59,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":107,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":155,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":141,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":350,"com.graphhopper.coll.CompressedArrayTest.testCompress":170,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":74,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":366,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":339,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":78,"com.graphhopper.GraphHopperTest.testPrepare":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":371,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":144,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":191,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":406,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":390,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":121,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":70,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":186,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":88,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":260,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":273,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":184,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":17,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":176,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":122,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":80,"com.graphhopper.GraphHopperTest.testLoadOSM":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":261,"com.graphhopper.reader.OSMReaderTest.testSort":209,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":68,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":268,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":425,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":314,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":0,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":372,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":286,"com.graphhopper.routing.DijkstraTest.initializationError":456,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":29,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":412,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":383,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":306,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":342,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":269,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":111,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":91,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":103,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":109,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":85,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":84,"com.graphhopper.coll.OSMIDMapTest.testGetLong":292,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":346,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":381,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":43,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":131,"com.graphhopper.coll.CompressedArrayTest.testCompress2":169,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":232,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":402,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":295,"com.graphhopper.GraphHopperAPITest.testLoad":56,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":409,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":222,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":228,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":2,"com.graphhopper.storage.LevelGraphStorageTest.testClone":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":19,"com.graphhopper.reader.OSMReaderTest.testBarriers":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":300,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":34,"com.graphhopper.util.GHUtilityTest.testCopy":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":87,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":16,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":329,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":422,"com.graphhopper.routing.PathTest.testFindInstruction":280,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":20,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":187,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":142,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":436,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":384,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":326,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":11,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":28,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":237,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":378,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":455,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":457,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":124,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":360,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":416,"com.graphhopper.util.InstructionListTest.testWayList2":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":320,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":12,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":347,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":398,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":272,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":278,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":126,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":277,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":235,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":262,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":86,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":211,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":424,"com.graphhopper.routing.AStarTest.initializationError":459,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":96,"com.graphhopper.coll.OSMIDMapTest.testGet":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":23,"com.graphhopper.routing.PathBidirRefTest.testExtract":64,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":442,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":133,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":434,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":115,"com.graphhopper.storage.RAMDataAccessTest.testCopy":417,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":247,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":225,"com.graphhopper.storage.RAMDataAccessTest.testSegments":421,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":13,"com.graphhopper.util.GHUtilityTest.testSort2":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":92,"com.graphhopper.reader.OSMReaderTest.testMain":162,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":275,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":238,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":177,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":116,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":344,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":299,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":130,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":55,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":71,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":400,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":50,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":218,"com.graphhopper.storage.StorablePropertiesTest.testStore":267,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":276,"com.graphhopper.storage.GraphHopperStorageTest.testClone":3,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":370,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":201,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":199,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":309,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":375,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":361,"com.graphhopper.routing.PathTest.testTime":393,"com.graphhopper.util.BitUtilLittleTest.testToFloat":432,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":139,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":47,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":452,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":246,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":382,"com.graphhopper.util.GHUtilityTest.testSortDirected":387,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":190,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":429,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":283,"com.graphhopper.GraphHopperTest.testFootOnly":160,"com.graphhopper.util.BitUtilLittleTest.testToInt":433,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":263,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":446,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":110,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":36,"com.graphhopper.search.NameIndexTest.testCreate":252,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":420,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":281,"com.graphhopper.routing.QueryGraphTest.testOneWay":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":323,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":259,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":171,"com.graphhopper.reader.OSMReaderTest.testWithBounds":217,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":423,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":243,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":367,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":443,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":181,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":44,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":379,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":354,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":15,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":24,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":254,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":149,"com.graphhopper.util.BitUtilLittleTest.testToBitString":431,"com.graphhopper.util.InstructionListTest.testWayList":62,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":315,"com.graphhopper.GraphHopperAPITest.testDisconnected179":57,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":362,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":359,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":42,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":204,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":305,"com.graphhopper.routing.util.EncodedValueTest.testSwap":192,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":148,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":8,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":151,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":458,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":147,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":448,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":404,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":98,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":407,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":340,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":301,"com.graphhopper.routing.PathTest.testWayList":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":242,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":445,"com.graphhopper.coll.OSMIDMapTest.testGet2":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":99,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":353,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":310,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":439,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":348,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":49,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":112,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":113,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":418,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":224,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":399,"com.graphhopper.util.GHUtilityTest.testSort":386,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":369,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":178,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":227,"com.graphhopper.search.NameIndexTest.testPut":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":30,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":408,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":105,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":266,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":335,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":414,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":163,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":333,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":343,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":226,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":441,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":352,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":66,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":415,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":39,"com.graphhopper.routing.PathTest.testFound":392,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":161,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":437,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":54,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":221,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":236,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":251,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":297,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":5,"com.graphhopper.util.InstructionListTest.testEmptyList":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":89,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":152,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":451,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":444,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":223,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":93,"com.graphhopper.reader.PrinctonReaderTest.testRead":100,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":256,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":108,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":349,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":172,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":296,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":25,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":454,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":179,"com.graphhopper.reader.OSMReaderTest.testFoot":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":38,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":289,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":166,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":167,"com.graphhopper.reader.OSMReaderTest.testOneWay":220,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":229,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":234,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":356,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":428,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":37,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":75,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":336,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":427,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":391,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":364,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":394,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":219,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":302,"com.graphhopper.routing.PathBidirRefTest.testExtract2":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":81,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":405,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":249,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":9,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":337,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":374,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":435,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":317,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":10,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":125,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":449,"com.graphhopper.GraphHopperTest.testFootAndCar":205,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":255,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":128,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":185,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":118,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":33,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":453,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":450,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":95,"com.graphhopper.GraphHopperTest.testPrepareOnly":154,"com.graphhopper.GraphHopperTest.testVia":156,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":32,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":215,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":120,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":196,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":313,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":440,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":365,"com.graphhopper.routing.AStarBidirectionTest.initializationError":438,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":202,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":137,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":136,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":18}}]
