[{"failures":[],"tindex":"882cc87f-da81-11e4-8e4c-cf872f86b0d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"882cc880-da81-11e4-8e4c-a747adb25b86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"882cc881-da81-11e4-8e4c-394b21ffd84e","variableMapping":{"graph":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1042","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphStorage) != null)\n    com.graphhopper.storage.GraphStorage.close();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.optimize()"},"status":-1},{"failures":[17,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"882cef92-da81-11e4-8e4c-130cef08b0f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:192","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"882cef93-da81-11e4-8e4c-6d1341713ade","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"882cef94-da81-11e4-8e4c-d12445fbb0e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"882cef95-da81-11e4-8e4c-153607fe0e72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-2},{"failures":[62,26,63,64,28,65,66,30,67,32,68,69,34,70,36,71,37,40,72,73,43,74,75,45,76,47,50,77,78,53,79,80,55,56,57],"tindex":"882cef96-da81-11e4-8e4c-5db545779f77","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,81,82,83,11,12,13,14,15,16,17,18,19,20,21,84,22,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,23,341,342,343,344,46,345,346,347,59,348,349,60,350,351,352,353,354,355,356,357,358,61,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,386,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,396,396,397,397],"tindex":"882d16a7-da81-11e4-8e4c-49c3f3bb4c87","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nodes.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"882d16a8-da81-11e4-8e4c-d1697221a595","variableMapping":{"initLeafSize":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[22,23],"tindex":"882d16a9-da81-11e4-8e4c-f325758d3a16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:164","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":-1},{"failures":[352],"tindex":"882d16aa-da81-11e4-8e4c-01ecc8c22059","variableMapping":{"numTiles":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"882d16ab-da81-11e4-8e4c-1d578cff31fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:481","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[22,103,111,113,114,120,128,129,211,219,221,222,228,236,237,254,262,264,265,271,279,280,299,307,309,310,316,324,325,339,23,341],"tindex":"882d16ac-da81-11e4-8e4c-4d2bca789840","variableMapping":{"size":"mSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"882d16ad-da81-11e4-8e4c-5994dc9a62b7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,83,11,12,13,14,15,16,17,18,19,20,21,84,22,98,56,57,58],"tindex":"882d16ae-da81-11e4-8e4c-4913782ef5d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[],"tindex":"882d16af-da81-11e4-8e4c-079062f63059","variableMapping":{"flags":"shift","nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"882d16b0-da81-11e4-8e4c-5f9c24d0bde6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[],"tindex":"882d16b1-da81-11e4-8e4c-198d784c96f3","variableMapping":{"baseUrl":"key","name":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:162","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".zip\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[5,9,11,398,399,58],"tindex":"882d16b2-da81-11e4-8e4c-e5b6e93323e2","variableMapping":{"time":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"882d16b3-da81-11e4-8e4c-972102d8ca34","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"882d16b4-da81-11e4-8e4c-efdc20dc0fd6","variableMapping":{"distInMeter":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":0},{"failures":[],"tindex":"882d3dc5-da81-11e4-8e4c-77b0b00a695f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[83,400,401],"tindex":"882d3dc6-da81-11e4-8e4c-1d0713aeb0aa","variableMapping":{"id":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[14,19,402,403,27,33,42,52],"tindex":"882d3dc7-da81-11e4-8e4c-876955fdb971","variableMapping":{"sacScale":"res"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"882d3dc8-da81-11e4-8e4c-13b4a50f9d16","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"882d3dc9-da81-11e4-8e4c-bb8d89970435","variableMapping":{"line":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"882d3dca-da81-11e4-8e4c-7512fa7d6d00","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":0},{"failures":[197,380,384],"tindex":"882d3dcb-da81-11e4-8e4c-1366aa2dbadb","variableMapping":{"mGarbage":"found"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:281","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[404],"tindex":"882d3dcc-da81-11e4-8e4c-452d5e012ded","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:195","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"882d3dcd-da81-11e4-8e4c-2335dc4b7d7b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"882d3dce-da81-11e4-8e4c-3bc8b09ad7ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[405,406],"tindex":"882d3dcf-da81-11e4-8e4c-6d240ad4aa7f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"882d3dd0-da81-11e4-8e4c-c7b8d3d01d14","variableMapping":{"high":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"882d3dd1-da81-11e4-8e4c-91815f29d83f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"882d3dd2-da81-11e4-8e4c-6badd26823f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":0},{"failures":[407,408,409,154,155,156,159],"tindex":"882d3dd3-da81-11e4-8e4c-03d2a7c32787","variableMapping":{"type":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:198","type":"CtReturnImpl","sourcecode":"return (this.int) == int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:50","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.contains(int)"},"status":-1},{"failures":[],"tindex":"882d64e4-da81-11e4-8e4c-a3a8e4744985","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1506","type":"CtReturnImpl","sourcecode":"return 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-2},{"failures":[339,342,343],"tindex":"882d64e5-da81-11e4-8e4c-cb39e222a916","variableMapping":{"minResolutionInMeter":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[],"tindex":"882d64e6-da81-11e4-8e4c-114831c31987","variableMapping":{"bestPath":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:166","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:60","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[62,64,410,65,66,68,411,70,71,412,73,413,74,75,76,414,78,415,79,80],"tindex":"882d64e7-da81-11e4-8e4c-f9d707cebd37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:462","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"882d64e8-da81-11e4-8e4c-eb9bcad79006","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"882d64e9-da81-11e4-8e4c-9f8bdc36b8bc","variableMapping":{"red":"mSize","green":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:157","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":0},{"failures":[62,71,76],"tindex":"882d64ea-da81-11e4-8e4c-31805c9dff67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:638","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[339,342,343],"tindex":"882d64eb-da81-11e4-8e4c-e95c2b671c5a","variableMapping":{"iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:112","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getEdge()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-1},{"failures":[],"tindex":"882d64ec-da81-11e4-8e4c-5f0c9e592588","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:388","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[22,103,111,113,114,116,120,121,128,129,203,211,219,221,222,224,228,229,236,237,254,262,264,265,267,271,272,279,280,299,307,309,310,312,316,317,324,325,339,23,341],"tindex":"882d64ed-da81-11e4-8e4c-05789e05ea6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:48","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"882d64ee-da81-11e4-8e4c-2bd9e5948e34","variableMapping":{"d":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:343","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null) {\n        if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n} "},"status":-2},{"failures":[0,1,2,3,6,7,9,416,350,351,352,353,354,355,356,357,358,61,359,360,361,362,363,364,365,366,367,368,369,370,371,374,376,380,382,383,384,385],"tindex":"882d64ef-da81-11e4-8e4c-19f328587a70","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:88","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-1},{"failures":[],"tindex":"882d64f0-da81-11e4-8e4c-e3f55639d549","variableMapping":{"red":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":0},{"failures":[],"tindex":"882d64f1-da81-11e4-8e4c-0b24500ad9ad","variableMapping":{"newUniqueOsmId":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"882d64f2-da81-11e4-8e4c-fd81c287cf76","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"com.graphhopper.routing.util.FastestWeighting.SPEED_CONV","speed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:56","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState.getDistance()) / (double * (com.graphhopper.routing.util.FastestWeighting.double))"},"status":-2},{"failures":[],"tindex":"882d8c03-da81-11e4-8e4c-51a83cd99f53","variableMapping":{"nodeFlags":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-2},{"failures":[5,83,11,12,14,17,18,19,20,21,22,109,145,152,176,196,217,260,305,417,338,398,418,399,419,56,420,57,58],"tindex":"882d8c04-da81-11e4-8e4c-991ab1fc8e26","variableMapping":{"id":"nextWayBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"882d8c05-da81-11e4-8e4c-bf3c7277bb42","variableMapping":{"index":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"882d8c06-da81-11e4-8e4c-351335b383a2","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"882d8c07-da81-11e4-8e4c-d1f53ccb4a94","variableMapping":{"heap":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[],"tindex":"882d8c08-da81-11e4-8e4c-d1e99f4f60c9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:754","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[421,422],"tindex":"882d8c09-da81-11e4-8e4c-eb9241943d57","variableMapping":{"freeIndex":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[0,1,2,3,4,5,6,423,7,8,9,10,424,81,82,83,11,12,13,14,15,16,17,18,19,20,21,84,22,86,87,88,89,90,91,92,425,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,426,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,427,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,428,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,429,430,402,417,338,398,418,405,399,404,419,339,340,23,341,342,343,431,403,432,433,434,435,400,436,437,438,439,440,441,442,443,444,24,62,25,26,27,63,445,64,410,446,447,28,65,29,66,30,448,449,450,31,67,32,68,33,69,451,411,452,453,34,70,35,36,454,71,37,412,38,39,40,455,41,42,72,456,73,413,457,458,43,74,44,75,45,344,46,459,76,47,414,48,49,50,460,51,52,77,461,78,415,462,463,53,79,54,80,55,464,465,345,346,347,59,348,349,466,60,350,351,352,353,354,355,356,357,358,61,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,467,374,375,376,377,378,379,380,381,382,383,384,385,468,386,387,388,389,390,391,392,393,394,395,396,397,469,470],"tindex":"882d8c0a-da81-11e4-8e4c-5bcb0996d761","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[400],"tindex":"882db31b-da81-11e4-8e4c-cf5622b741e1","variableMapping":{"acceptedRailways":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"882db31c-da81-11e4-8e4c-8f6552ba2672","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[],"tindex":"882db31d-da81-11e4-8e4c-7d087a279364","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"882db31e-da81-11e4-8e4c-67e8c27b06ae","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[17],"tindex":"882db31f-da81-11e4-8e4c-a5443be34737","variableMapping":{"tmpDegreeCounter":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":-1},{"failures":[],"tindex":"882db320-da81-11e4-8e4c-f354b144dc1e","variableMapping":{"sacScale":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[17,85,442,455,460,406],"tindex":"882db321-da81-11e4-8e4c-b3ed719b7b4b","variableMapping":{"intVal":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:181","type":"CtReturnImpl","sourcecode":"return int - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[],"tindex":"882db322-da81-11e4-8e4c-d58bcd098cea","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1397","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:376","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,81,82,83,11,12,13,14,15,16,17,18,19,20,21,84,22,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,23,341,342,343,344,46,345,346,347,59,348,349,60,350,351,352,353,354,355,356,357,358,61,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,386,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,396,396,397,397],"tindex":"882db323-da81-11e4-8e4c-8be7e905453f","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"882db324-da81-11e4-8e4c-e1a8a5a1ec7b","variableMapping":{"flags":"maxValue","tmpValue":"maxValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"882db325-da81-11e4-8e4c-656924040f46","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[29,35,44,54],"tindex":"882db326-da81-11e4-8e4c-f3c3f276679f","variableMapping":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"882dda37-da81-11e4-8e4c-1bf138ab1c74","variableMapping":{"calcMean":"empty","eleCalcMean":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:75","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[404,433,439,29,31,32,35,71,40,44,76,50,54],"tindex":"882dda38-da81-11e4-8e4c-abaa40d9d71f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:188","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-1},{"failures":[],"tindex":"882dda39-da81-11e4-8e4c-59a4f7bb3461","variableMapping":{"scDirMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"882dda3a-da81-11e4-8e4c-3b22b30118e7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:87","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[],"tindex":"882dda3b-da81-11e4-8e4c-03870233cefc","variableMapping":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"blockFords","v":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[339,343],"tindex":"882dda3c-da81-11e4-8e4c-0ffc387b90ec","variableMapping":{"size":"removed","capacity":"minOnewayNetworkSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,83,11,12,13,14,15,16,17,18,19,20,21,84,22,202,205,206,248,249,290,293,294,471],"tindex":"882dda3d-da81-11e4-8e4c-1bdc343e1f97","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[472],"tindex":"882dda3e-da81-11e4-8e4c-1bc40429e89b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[],"tindex":"882dda3f-da81-11e4-8e4c-c5a06338a204","variableMapping":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"shift","id":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:473","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:57","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[83,401],"tindex":"882dda40-da81-11e4-8e4c-edb54b63ea98","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[2,3,6,199,205,229,238,243,60,350,351,352,353,354,355,356,357,61,360,361,362,363,364,365,367,368,369,370,371,372,374,377,378,380,381,385],"tindex":"882dda41-da81-11e4-8e4c-89a7fa7eb8cf","variableMapping":{"edgeId":"edge","nodeId":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-1},{"failures":[],"tindex":"882dda42-da81-11e4-8e4c-5144f5f9ae25","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"882dda43-da81-11e4-8e4c-ab76d210748a","variableMapping":{"compressionLevel":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:161","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"882dda44-da81-11e4-8e4c-11d687ac5662","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:143","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"},"status":-2},{"failures":[17,473,442,25,26,445,28,30,32,451,34,36,474,37,38,40,455,456,43,45,47,48,50,460,461,53,55,56,406,57],"tindex":"882e0155-da81-11e4-8e4c-2fab2f368ce7","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[],"tindex":"882e0156-da81-11e4-8e4c-df9edb60df4a","variableMapping":{"cap":"nodes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":0},{"failures":[],"tindex":"882e0157-da81-11e4-8e4c-6bdb508f1670","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:583","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"882e0158-da81-11e4-8e4c-7103e12c4871","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[46],"tindex":"882e0159-da81-11e4-8e4c-712d2c2f7058","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[],"tindex":"882e015a-da81-11e4-8e4c-f5b2c92b1b3b","variableMapping":{"nanoTime":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"882e015b-da81-11e4-8e4c-bd9b17ce5fe3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"882e015c-da81-11e4-8e4c-23d41812465a","variableMapping":{"index":"biggestStart"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"},"status":0},{"failures":[],"tindex":"882e015d-da81-11e4-8e4c-6b5e0acec6b2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:416","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"882e015e-da81-11e4-8e4c-076a9182f870","variableMapping":{"edge":"this","adjNode":"hash","nodeB":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:671","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.SingleEdge.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:344","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":0},{"failures":[449],"tindex":"882e015f-da81-11e4-8e4c-833fb65518c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[83,11,12,13,15,16,17,18,21,84,22,25,26,28,30,31,32,34,36,37,38,39,40,43,45,47,48,49,50,53,55,58],"tindex":"882e0160-da81-11e4-8e4c-79d2858aaf2c","variableMapping":{"allowWrites":"partOfCycleRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1085","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,81,82,83,11,12,13,14,15,16,17,18,19,20,21,84,22,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,112,127,139,140,141,142,144,145,146,147,148,149,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,475,421,476,477,478,479,480,422,481,482,483,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,23,341,342,343,344,46,345,346,347,59,348,349,60,350,351,352,353,354,355,356,357,358,61,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,386,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,396,396,397,397],"tindex":"882e2871-da81-11e4-8e4c-fb59f7dae299","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":366,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":387,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":202,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":148,"com.graphhopper.GraphHopperAPITest.testNoLoad":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":102,"com.graphhopper.reader.OSMReaderTest.testFerry":83,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":87,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":68,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":183,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":307,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":453,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":287,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":122,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":263,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":382,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":365,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":372,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":95,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":153,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":34,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":100,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":342,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":71,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":351,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":163,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":40,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":290,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":385,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":170,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":164,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":465,"com.graphhopper.reader.OSMReaderTest.testSort":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":74,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":294,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":282,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":135,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":393,"com.graphhopper.routing.DijkstraTest.initializationError":469,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":328,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":234,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":259,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":291,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":48,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":30,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":65,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":187,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":267,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":362,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":185,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":423,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":354,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":311,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":317,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":226,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":416,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":205,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":228,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":272,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":62,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":308,"com.graphhopper.GraphHopperAPITest.testLoad":336,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":426,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":477,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":402,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":264,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":254,"com.graphhopper.storage.LevelGraphStorageTest.testClone":213,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":401,"com.graphhopper.reader.OSMReaderTest.testBarriers":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":298,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":343,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":460,"com.graphhopper.util.GHUtilityTest.testCopy":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":356,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":446,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":150,"com.graphhopper.routing.PathTest.testFindInstruction":349,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":451,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":299,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":86,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":399,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":242,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":414,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":283,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":268,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":326,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":312,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":378,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":462,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":420,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":468,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":107,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":251,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":483,"com.graphhopper.util.InstructionListTest.testWayList2":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":171,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":303,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":38,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":335,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":331,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":448,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":344,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":309,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":154,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":355,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":15,"com.graphhopper.routing.AStarTest.initializationError":430,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":306,"com.graphhopper.routing.PathBidirRefTest.testExtract":345,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":72,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":230,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":128,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":42,"com.graphhopper.util.GHUtilityTest.testSort2":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":363,"com.graphhopper.reader.OSMReaderTest.testMain":12,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":206,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":316,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":456,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":44,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":192,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":433,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":295,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":220,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":224,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":245,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":474,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":221,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":390,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":76,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":476,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":227,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":84,"com.graphhopper.storage.StorablePropertiesTest.testStore":471,"com.graphhopper.storage.GraphHopperStorageTest.testClone":256,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":439,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":266,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":437,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":197,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":108,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":200,"com.graphhopper.routing.PathTest.testTime":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":410,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":243,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":444,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":121,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":232,"com.graphhopper.reader.OSMReaderTest.testRelation":473,"com.graphhopper.util.GHUtilityTest.testSortDirected":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":79,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":389,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":67,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":155,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":400,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":186,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":459,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":117,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":386,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":480,"com.graphhopper.routing.QueryGraphTest.testOneWay":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":174,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":162,"com.graphhopper.reader.OSMReaderTest.testWithBounds":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":330,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":340,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":123,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":419,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":56,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":210,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":207,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":24,"com.graphhopper.coll.GHTBitSetTest.testEnsureCapacity":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":463,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":36,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":320,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":145,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":313,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":252,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":394,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":350,"com.graphhopper.util.InstructionListTest.testWayList":96,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":41,"com.graphhopper.GraphHopperAPITest.testDisconnected179":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":109,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":322,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":78,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":82,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":120,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":137,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":458,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":258,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":383,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":454,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":360,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":470,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":381,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":241,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":440,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":43,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":370,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":194,"com.graphhopper.coll.GHTBitSetTest.testClear":407,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":479,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":45,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":247,"com.graphhopper.routing.PathTest.testWayList":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":136,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":445,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":435,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":472,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":371,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":457,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":269,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":417,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":304,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":188,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":189,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":25,"com.graphhopper.util.GHUtilityTest.testSort":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":167,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":413,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":428,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":149,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":181,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":141,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":481,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":49,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":139,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":27,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":449,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":405,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":369,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":339,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":482,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":127,"com.graphhopper.routing.PathTest.testFound":347,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":10,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":58,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":240,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":199,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":73,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":310,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":112,"com.graphhopper.util.InstructionListTest.testEmptyList":94,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":447,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":361,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":443,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":432,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":403,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":364,"com.graphhopper.reader.PrinctonReaderTest.testRead":81,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":284,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":184,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":101,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":212,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":315,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":452,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":406,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":47,"com.graphhopper.reader.OSMReaderTest.testFoot":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":125,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":168,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":244,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":450,"com.graphhopper.reader.OSMReaderTest.testOneWay":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":169,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":265,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":280,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":327,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":411,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":119,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":374,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":384,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":438,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":375,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":115,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":388,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":250,"com.graphhopper.routing.PathBidirRefTest.testExtract2":346,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":422,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":172,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":278,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":143,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":66,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":138,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":398,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":415,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":165,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":281,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":425,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":216,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":441,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":273,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":26,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":105,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":464,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":442,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":301,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":367,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":103,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":19,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":201,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":98,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":277,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":418,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":118,"com.graphhopper.routing.AStarBidirectionTest.initializationError":466,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":431,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":239,"com.graphhopper.coll.GHTBitSetTest.testCopy":408,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":237,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":293}}]
