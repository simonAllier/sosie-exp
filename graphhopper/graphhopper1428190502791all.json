[{"failures":[],"tindex":"37ff3df2-db23-11e4-9579-f162612b83d8","variableMapping":{"version":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:82","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"38002853-db23-11e4-9579-4fdd89b59f06","variableMapping":{"mGarbage":"finishedFrom"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"38002854-db23-11e4-9579-5d4ccdab4cec","variableMapping":{"counts":"maxTurnCosts","counter":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-2},{"failures":[0],"tindex":"38002855-db23-11e4-9579-edf6a7270d24","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"38004f66-db23-11e4-9579-17f163661cab","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[],"tindex":"38004f67-db23-11e4-9579-c70f9587c728","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[311,312,19,20,21,22,23,24,25,26,27,28,29,30,31,32,313,314,315,316,49,52,53,94,317,96,97,318,319,163,164,165,166,320,167,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,191,348,349,350,351,352,353,354,355,356,357,358,193,194,359,360,237,238,239,240,241,242,243,361,244,245,246,247,362],"tindex":"38004f68-db23-11e4-9579-6d7f5f544839","variableMapping":{"newName":"location","inner":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:45","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.rename(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[],"tindex":"38004f69-db23-11e4-9579-6726f50cc330","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:405","type":"CtLocalVariableImpl","sourcecode":"gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = new gnu.trove.map.hash.TLongObjectHashMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>()"},"status":-2},{"failures":[363,364,0,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"tindex":"38004f6a-db23-11e4-9579-41dbde3f79ed","variableMapping":{"scDirMask":"allowed","flags":"allowed","dir":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:294","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"38004f6b-db23-11e4-9579-07898be635d4","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[363,364,365,385,370,386,374,375,387,380,388,384],"tindex":"3800767c-db23-11e4-9579-6d664f1d2491","variableMapping":{"nanoTime":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[19,20,21,23,24,25,27,28,29,30,32,239,240,241,242,246,247,389,390,391,392,393,394,395],"tindex":"3800767d-db23-11e4-9579-655d0a218e79","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[5,9,10,11,12,396,397,398,19,20,21,22,23,24,25,26,27,28,29,30,31,32,399,400,401,402,403,404,315,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,49,52,53,56,77,83,88,90,91,94,96,97,100,121,127,132,134,135,149,150,151,163,164,165,166,167,176,177,178,191,193,194,197,218,224,229,231,232,429,430,431,432,237,238,239,240,241,242,243,244,245,246,247,255,256,257,258,261,262,264,265,266,267,268,269,271,272,307],"tindex":"3800767e-db23-11e4-9579-3fd8aaf7d02c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"3800767f-db23-11e4-9579-35e7527ce1d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[0],"tindex":"38007680-db23-11e4-9579-55f4bb63c95a","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"38007681-db23-11e4-9579-8b2922c34033","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"38007682-db23-11e4-9579-272fe4db8f78","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"38007683-db23-11e4-9579-e9ec098cfbd4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"38007684-db23-11e4-9579-1bfee874325c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:141","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,44,45,46,47,48,49,50,51,52,53,54,55,433,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,317,95,96,97,98,99,434,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,143,162,173,189,323,324,325,326,327,328,329,330,331,332,333,190,334,335,336,337,338,339,340,341,342,343,344,345,346,347,191,348,349,350,351,352,353,354,355,356,357,358,192,193,194,195,196,435,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,237,242,246,247,389,436,248,437,438,439,440,441,442,390,443,444,445,391,446,447,448,449,450,451,452,453,454,455,456,457,458,0,459,460,461,462,463,261,464,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"38009d95-db23-11e4-9579-0d241ddf0972","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:129","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , com.graphhopper.routing.util.FootFlagEncoder.int , com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[],"tindex":"38009d96-db23-11e4-9579-518a36eb2bba","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[465],"tindex":"38009d97-db23-11e4-9579-29f445080892","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"38009d98-db23-11e4-9579-f1b61fa4f12a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"38009d99-db23-11e4-9579-a36c76b4d29f","variableMapping":{"length":"start","factor":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:412","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[9,10,11,12,466,239,240,241,242,243,245,258],"tindex":"38009d9a-db23-11e4-9579-456934452e81","variableMapping":{"weight":"orientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-1},{"failures":[467],"tindex":"38009d9b-db23-11e4-9579-c5cdabba8e5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"38009d9c-db23-11e4-9579-d3de10818b72","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"38009d9d-db23-11e4-9579-294b88cd692b","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"38009d9e-db23-11e4-9579-a53662220be8","variableMapping":{"defaultUTurnCost":"java.lang.Double.POSITIVE_INFINITY","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"38009d9f-db23-11e4-9579-d168ab996c41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"38009da0-db23-11e4-9579-db9f40bf3b8a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"38009da1-db23-11e4-9579-3199ccd96581","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"38009da2-db23-11e4-9579-c7f0385d6f35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:187","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[],"tindex":"38009da3-db23-11e4-9579-5735d9d04979","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[468,469],"tindex":"3800c3b4-db23-11e4-9579-fbedf085e0a5","variableMapping":{"latSize":"size","size":"size","lonSize":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:147","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[12,15,19,20,21,22,23,24,25,26,27,28,29,30,31,470,32,44,46,48,56,62,64,67,86,88,100,106,108,111,130,132,143,145,162,173,189,323,329,331,190,351,353,197,203,205,208,227,229,238,239,240,241,242,243,244,245,247,436,248,438,444,445,446,447,448,449,450,455,363,364,0,459,471,365,366,367,368,369,472,370,371,372,373,473,374,255,256,474,375,376,377,378,379,475,380,476,381,382,383,477,384,478,479,480,467,481,257,258,268,273,282,287,288,297,299,300],"tindex":"3800c3b5-db23-11e4-9579-fdbc9e3c0b77","variableMapping":{"len":"maxValue","start":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[9,10,11,466,235,239,257],"tindex":"3800c3b6-db23-11e4-9579-5ffbd73137ba","variableMapping":{"costs":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-1},{"failures":[256],"tindex":"3800c3b7-db23-11e4-9579-cb3509e2d3dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[],"tindex":"3800c3b8-db23-11e4-9579-4ff67786ff60","variableMapping":{"latSimilar":"guess"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:397","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) / 2;\n    if ((int[][int]) < int) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"3800c3b9-db23-11e4-9579-519524a4a734","variableMapping":{"cap":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[],"tindex":"3800c3ba-db23-11e4-9579-b7269f87362e","variableMapping":{"size":"b","delta":"b"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[],"tindex":"3800c3bb-db23-11e4-9579-c319efc712b3","variableMapping":{"size":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:225","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:284","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[287],"tindex":"3800c3bc-db23-11e4-9579-77db8e613bcc","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"3800c3bd-db23-11e4-9579-f3d965870156","variableMapping":{"res":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0},{"failures":[450],"tindex":"3800c3be-db23-11e4-9579-47c327040d90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[3,5,15,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,319,161,162,237,239,240,243,244,246,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"3800eacf-db23-11e4-9579-57af5da7ae09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.create(long)"},"status":-1},{"failures":[249,254],"tindex":"3800ead0-db23-11e4-9579-39ac74438a84","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"3800ead1-db23-11e4-9579-0ba8516e2972","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-2},{"failures":[],"tindex":"3800ead2-db23-11e4-9579-c5923f54a99a","variableMapping":{"clonedG":"g","edgeEntryBytes":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1070","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.int) != (int))\n    throw new java.lang.IllegalStateException(((((\"edgeEntryBytes cannot be different for cloned graph. \" + \"Cloned: \") + (com.graphhopper.storage.GraphHopperStorage.int)) + \" vs \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:250","type":"CtIfImpl","sourcecode":"if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n    for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n        com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n        int++;\n    }\n} "},"status":0},{"failures":[12,20,25,26,242,247,449,478],"tindex":"3800ead3-db23-11e4-9579-2b51efa3c3da","variableMapping":{"initLeafSize":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[364,366,368,369,371,372,373,376,378,379,381,382,383],"tindex":"3800ead4-db23-11e4-9579-f7663b6a57be","variableMapping":{"lastTime":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[471,482,483,484,369,472,485,370,486,373,473,374,474,487,488,489,379,475,490,380,476,382,491,492,383,477,493,384],"tindex":"38016005-db23-11e4-9579-d37346560008","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:447","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[26,363,364,365,367,368,370,371,372,374,375,377,378,380,382,384],"tindex":"38016006-db23-11e4-9579-9f9b4f543f39","variableMapping":{"i":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[494,495,496,497,498,499,500,501,502,503],"tindex":"38016007-db23-11e4-9579-5bdc4c304b64","variableMapping":{"logSize":"initialBits","java.lang.Integer.MAX_VALUE":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:259","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"38016008-db23-11e4-9579-473c03dd8b52","variableMapping":{"factor":"resultOrientation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"38016009-db23-11e4-9579-4ba299aee157","variableMapping":{"periodicUpdates":"toSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":0},{"failures":[],"tindex":"3801871a-db23-11e4-9579-a9620772a857","variableMapping":{"intVal":"toSize","degree":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[34,504,35,37,40,41,44,45,47,50,51,56,57,58,66,69,71,72,74,75,80,82,83,84,85,86,88,92,93,95,101,102,110,113,115,116,118,119,124,126,127,128,130,132,136,137,156,183,192,198,199,207,210,212,213,215,216,221,223,224,225,227,229,233,234],"tindex":"3801871b-db23-11e4-9579-bb180f473799","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"indexDivisor","speed":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:365","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-1},{"failures":[],"tindex":"3801871c-db23-11e4-9579-75bb8fff2dad","variableMapping":{"weightToPrioMap":"weightToPrioMap","avoidHighwayTags":"preferHighwayTags","intendedValues":"intendedValues","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.PREFER","maxSpeed":"maxSpeed","highway":"highway","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.PREFER","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[505,363,365,368,372,375,378],"tindex":"3801871d-db23-11e4-9579-cdd2ad3663c9","variableMapping":{"id":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"3801871e-db23-11e4-9579-11b75263a36a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.CarFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 5))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 5), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[445],"tindex":"3801871f-db23-11e4-9579-11b6adbe4472","variableMapping":{"turnRestrictionBit":"encoded","shift":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:556","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:237","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[32,50,58,66,68,69,71,75,76,83,84,102,110,112,113,115,119,120,127,128,325,333,334,335,337,341,342,348,349,199,207,209,210,212,216,217,224,225,249,251,252],"tindex":"38018720-db23-11e4-9579-3d4681a182ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[],"tindex":"38018721-db23-11e4-9579-3b85a4b899dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":-2},{"failures":[],"tindex":"38018722-db23-11e4-9579-5f5d71357e7e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:480","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"surface\")"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,396,397,398,19,20,21,22,23,24,25,26,27,505,28,29,30,31,470,32,399,400,401,402,403,506,507,316,508,44,45,46,47,48,50,51,54,55,433,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,98,99,434,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,509,163,164,165,166,320,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,435,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,510,511,429,430,431,432,235,236,240,241,242,361,246,248,249,250,251,252,253,254,255,256,512,481,257,258,259,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"3801ae33-db23-11e4-9579-dd3919d67fc0","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[513],"tindex":"3801ae34-db23-11e4-9579-2db4788239db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[0],"tindex":"3801ae35-db23-11e4-9579-dfd5daabe6f1","variableMapping":{"speedVal":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[12,514,515,19,20,21,22,23,24,25,26,27,505,28,29,30,31,470,32,516,237,238,239,240,241,242,243,244,245,246,247,389,437,440,441,390,443,444,445,391,446,448,449,450,363,364,459,471,365,482,366,367,368,517,392,518,483,484,369,472,519,485,370,371,520,372,521,393,522,486,373,473,523,374,255,474,375,487,376,377,378,524,394,525,488,489,379,475,526,490,380,527,476,381,382,395,528,491,492,383,477,529,493,384,478],"tindex":"3801ae36-db23-11e4-9579-6b188a595e75","variableMapping":{"name":"name","properties":"properties"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:183","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.remove(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"3801ae37-db23-11e4-9579-7d65c14b6ec4","variableMapping":{"latlon":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:155","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[249,253,254],"tindex":"3801ae38-db23-11e4-9579-9704f69d784f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:99","type":"CtContinueImpl","sourcecode":"continue nextState"},"status":-1},{"failures":[32,251],"tindex":"3801ae39-db23-11e4-9579-256fa7c0cb78","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey(), java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue(), com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"3801ae3a-db23-11e4-9579-f545b74f8b8e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:172","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"3801ae3b-db23-11e4-9579-b7391dc8800f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:98","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[],"tindex":"3801ae3c-db23-11e4-9579-9318089f4737","variableMapping":{"annotation":"com.graphhopper.util.InstructionAnnotation.EMPTY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:244","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionAnnotation.com.graphhopper.util.InstructionAnnotation"},"status":-2},{"failures":[],"tindex":"3801ae3d-db23-11e4-9579-4746fb4fc6a3","variableMapping":{"nextNodeBit":"usedBits","usedBits":"usedBits","encoder":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":0},{"failures":[],"tindex":"3801ae3e-db23-11e4-9579-ef11a29ff365","variableMapping":{"retBucket":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[494,495,496,497,499,500,530,531,501,21,22,23,502,503,147,148,150,153,155,156,532,174,175,177,180,182,183,235,236,239,240,241,242,243,245,246,304],"tindex":"3801ae3f-db23-11e4-9579-dfca9a7b4b75","variableMapping":{"size":"i","index":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"3801ae40-db23-11e4-9579-d7a16dc84bcb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[494,495,496,497,499,500,530,531,502,503,147,153,155,156,532,174,180,182,183],"tindex":"3801ae41-db23-11e4-9579-139ca19c396e","variableMapping":{"oldValueIndex":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"3801d552-db23-11e4-9579-b72e40656b50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[505,363,364,365,482,368,372,375,487,378,382],"tindex":"3801d553-db23-11e4-9579-2f165ceb4cf2","variableMapping":{"minResolutionInMeter":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:275","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"bicycle\")) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(com.graphhopper.reader.OSMRelation.getTag(\"network\"));\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else if (com.graphhopper.reader.OSMRelation.hasTag(\"route\", \"ferry\")) {\n    int = com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue();\n} "},"status":-1},{"failures":[533,468,534,535,275,277,278,279,281,283,285,288,290,293,294,296,300,303,305,306,308,309,310],"tindex":"3801d554-db23-11e4-9579-e38be0f174b7","variableMapping":{"size":"size","hash":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[235,236,238,239,241,242,243,244,245],"tindex":"3801d555-db23-11e4-9579-67746565255d","variableMapping":{"nodes":"maxTurnCosts","adj":"maxTurnCosts","base":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:45","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:780","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[],"tindex":"3801d556-db23-11e4-9579-f72cdb9934e1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[494,495,497,499,500,530,531,501,502,503,147,155,156,532,174,182,183],"tindex":"3801d557-db23-11e4-9579-b3cd6797afd1","variableMapping":{"ar_y":"maxLatTmp","ab_y":"minLatTmp","ar_x":"maxLatTmp","ab_x":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[441],"tindex":"3801d558-db23-11e4-9579-53726f762754","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[249,253,254],"tindex":"3801d559-db23-11e4-9579-2d7bafccc20e","variableMapping":{"minResolutionInMeter":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:262","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:107","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[],"tindex":"3801d55a-db23-11e4-9579-e585e436089a","variableMapping":{"res":"mask","value":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"3801d55b-db23-11e4-9579-d7f47748316f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,505,28,29,30,31,32,46,389,436,248,437,438,439,440,441,442,390,443,444,445,391,446,447,448,449,450,451,452,453,454,455,456,363,457,458,364,0,251,459,536,471,365,482,366,367,368,537,517,392,518,385,483,484,538,539,369,472,519,485,370,540,371,520,372,521,393,522,386,486,541,542,373,473,523,374,255,256,543,474,375,487,376,377,378,544,524,394,525,387,488,489,545,546,379,475,526,490,380,527,476,381,382,395,528,388,491,492,547,548,383,477,529,493,384,481,287,297],"tindex":"3801d55c-db23-11e4-9579-e514cfc52002","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"3801d55d-db23-11e4-9579-b356193f4791","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[273,281,282,286,287,288,289,292,293,304,306,307,308,310],"tindex":"3801d55e-db23-11e4-9579-03fbb3d48057","variableMapping":{"store":"reverse"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:48","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut())) {\n    double double = com.graphhopper.util.EdgeSkipIterState.getDistance();\n    double += double;\n    long long = com.graphhopper.util.EdgeSkipIterState.getFlags();\n    long += com.graphhopper.routing.Path.calcMillis(double, long, boolean);\n    com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge());\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"3803830f-db23-11e4-9579-9d5efa42aa1b","variableMapping":{"size":"edgeEntryBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,509,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,512,481,257,258,259,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"38038310-db23-11e4-9579-c9edd413d190","variableMapping":{"lastKey":"bytePos","key":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[],"tindex":"38038311-db23-11e4-9579-6bbfa0d8cfa6","variableMapping":{"originalEdgesCount":"shift","edgeDifference":"shift","contractedNeighbors":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[249,253],"tindex":"38038312-db23-11e4-9579-6be73c01a760","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[32,50,58,66,68,69,71,75,76,83,84,102,110,112,113,115,119,120,127,128,325,333,334,335,337,341,342,348,349,199,207,209,210,212,216,217,224,225,249,251,252],"tindex":"38038313-db23-11e4-9579-6975c7991d72","variableMapping":{"i":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"38038314-db23-11e4-9579-1b28626ec987","variableMapping":{"index":"bytePos","entriesPerSegment":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":82,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":305,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":49,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":478,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":324,"com.graphhopper.reader.OSMReaderTest.testFerry":19,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":14,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":367,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":521,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":150,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":238,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":379,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":110,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":312,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":405,"com.graphhopper.coll.CompressedArrayTest.testCompress":503,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":542,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":232,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":343,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":208,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":146,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":406,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":423,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":283,"com.graphhopper.GraphHopperTest.testPrepare":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":354,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":273,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":535,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":482,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":297,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":509,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":373,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":2,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":55,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":253,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":372,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":471,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":289,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":295,"com.graphhopper.coll.BitSetImplTest.testCopy":465,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":177,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":135,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":368,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":94,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":530,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":56,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":534,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":286,"com.graphhopper.GraphHopperTest.testLoadOSM":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":184,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":178,"com.graphhopper.reader.OSMReaderTest.testSort":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":472,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":97,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":409,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":227,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":193,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":499,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":355,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":268,"com.graphhopper.storage.RAMDataAccessTest.testHeader":424,"com.graphhopper.routing.DijkstraTest.initializationError":463,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":131,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":404,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":81,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":204,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":317,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":105,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":479,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":376,"com.graphhopper.reader.OSMNodeTest.testSetTags":516,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":100,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":384,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":477,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":154,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":212,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":301,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":152,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":292,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":291,"com.graphhopper.coll.OSMIDMapTest.testGetLong":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":114,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":120,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":73,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":52,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":75,"com.graphhopper.coll.CompressedArrayTest.testCompress2":502,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":476,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":111,"com.graphhopper.GraphHopperAPITest.testLoad":235,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":433,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":36,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":389,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":209,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":199,"com.graphhopper.storage.LevelGraphStorageTest.testClone":60,"com.graphhopper.reader.OSMReaderTest.testBarriers":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":254,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":544,"com.graphhopper.util.GHUtilityTest.testCopy":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":547,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":318,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":523,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":427,"com.graphhopper.routing.PathTest.testFindInstruction":258,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":386,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":102,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":533,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":15,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":440,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":89,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":487,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":228,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":213,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":129,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":545,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":458,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":462,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":62,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":329,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":43,"com.graphhopper.util.InstructionListTest.testWayList2":11,"com.graphhopper.util.AngleCalcTest.testAlignOrientation":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":490,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":185,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":233,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":366,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":508,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":365,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":480,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":255,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":64,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":407,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":537,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":337,"com.graphhopper.storage.RAMDirectoryTest.testSynched":506,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":112,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":163,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":293,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":24,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":408,"com.graphhopper.routing.AStarTest.initializationError":461,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":307,"com.graphhopper.coll.OSMIDMapTest.testGet":399,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":109,"com.graphhopper.routing.PathBidirRefTest.testExtract":259,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":441,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":77,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":401,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":518,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":158,"com.graphhopper.storage.RAMDataAccessTest.testCopy":420,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":411,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":348,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":371,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":392,"com.graphhopper.storage.RAMDataAccessTest.testSegments":426,"com.graphhopper.util.GHUtilityTest.testSort2":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":302,"com.graphhopper.reader.OSMReaderTest.testMain":21,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":119,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":385,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":531,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":519,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":444,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":352,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":67,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":71,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":92,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":68,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":124,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":474,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":74,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":31,"com.graphhopper.storage.StorablePropertiesTest.testStore":315,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":419,"com.graphhopper.storage.GraphHopperStorageTest.testClone":201,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":351,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":450,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":313,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":211,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":448,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":44,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":529,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":330,"com.graphhopper.routing.PathTest.testTime":481,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":492,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":90,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":455,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":187,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":342,"com.graphhopper.reader.OSMReaderTest.testRelation":505,"com.graphhopper.util.GHUtilityTest.testSortDirected":7,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":469,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":475,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":415,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":264,"com.graphhopper.GraphHopperTest.testFootOnly":246,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":520,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":164,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":446,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":153,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":290,"com.graphhopper.reader.OSMElementTest.testSetTags":515,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":543,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":338,"com.graphhopper.search.NameIndexTest.testCreate":432,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":425,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":261,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":39,"com.graphhopper.routing.QueryGraphTest.testOneWay":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":322,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":497,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":522,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":176,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":494,"com.graphhopper.reader.OSMReaderTest.testWithBounds":30,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":428,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":526,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":250,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":344,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":442,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":363,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":57,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":54,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":527,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":546,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":374,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":123,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":173,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":116,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":197,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":288,"com.graphhopper.util.InstructionListTest.testWayList":10,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":230,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":517,"com.graphhopper.GraphHopperAPITest.testDisconnected179":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":331,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":498,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":326,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":511,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":488,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":252,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":357,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":539,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":241,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":203,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":284,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":221,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":536,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":299,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":460,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":282,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":451,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":528,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":369,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":309,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":435,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":319,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":38,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":504,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":370,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":192,"com.graphhopper.routing.PathTest.testWayList":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":356,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":388,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":334,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":391,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":513,"com.graphhopper.coll.OSMIDMapTest.testGet2":400,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":310,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":412,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":85,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":122,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":538,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":214,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":107,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":202,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":72,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":156,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":421,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":394,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":468,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":381,"com.graphhopper.util.GHUtilityTest.testSort":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":347,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":501,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":393,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":484,"com.graphhopper.search.NameIndexTest.testPut":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":136,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":434,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":141,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":148,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":167,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":170,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":377,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":267,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":95,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":395,"com.graphhopper.storage.MMapDirectoryTest.testSynched":510,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":397,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":467,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":308,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":249,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":42,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":191,"com.graphhopper.routing.PathTest.testFound":512,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":0,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":247,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":87,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":483,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":113,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":431,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":190,"com.graphhopper.util.InstructionListTest.testEmptyList":8,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":206,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":417,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":296,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":548,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":300,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":454,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":443,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":390,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":473,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":303,"com.graphhopper.reader.PrinctonReaderTest.testRead":16,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":229,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":151,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":333,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":403,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":323,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":525,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":541,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":457,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":507,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":491,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":375,"com.graphhopper.reader.OSMReaderTest.testFoot":20,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":346,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":398,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":182,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":500,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":540,"com.graphhopper.reader.OSMReaderTest.testOneWay":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":183,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":210,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":225,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":130,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":486,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":414,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":524,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":278,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":532,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":449,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":276,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":413,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":248,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":336,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":263,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":195,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":470,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":360,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":40,"com.graphhopper.routing.PathBidirRefTest.testExtract2":260,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":287,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":186,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":383,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":429,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":223,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":321,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":493,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":358,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":437,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":489,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":179,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":226,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":452,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":218,"com.graphhopper.GraphHopperTest.testFootAndCar":242,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":69,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":382,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":161,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":327,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":456,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":453,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":104,"com.graphhopper.storage.StorablePropertiesTest.testLoad":316,"com.graphhopper.GraphHopperTest.testPrepareOnly":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":306,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":142,"com.graphhopper.GraphHopperTest.testVia":239,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":485,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":325,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":28,"com.graphhopper.reader.OSMElementTest.testHasTag":514,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":48,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":12,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":222,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":438,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":339,"com.graphhopper.routing.AStarBidirectionTest.initializationError":464,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":459,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":86,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":84,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":96}}]
