[{"failures":[],"tindex":"018a2690-db5d-11e4-a36c-d56e51c33e27","variableMapping":{"edgePointer":"internalFlags","maxEdges":"internalFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"018b3801-db5d-11e4-a36c-8daf5548fbdf","variableMapping":{"newName":"location","this":"da","location":"name"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:235","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.(isStoring()) && (new java.io.File(((java.lang.String) + java.lang.String)).exists()))\n    throw new java.lang.IllegalArgumentException(\"file newName already exists!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[],"tindex":"018b3802-db5d-11e4-a36c-95deea0ad380","variableMapping":{"compressionLevel":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"018b3803-db5d-11e4-a36c-6d56a1d82b9e","variableMapping":{"tmpDegreeCounter":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-2},{"failures":[],"tindex":"018b3804-db5d-11e4-a36c-dd1b51de0373","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:418","type":"CtReturnImpl","sourcecode":"return ~int"},"status":-2},{"failures":[],"tindex":"018b3805-db5d-11e4-a36c-533650fe7660","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"018b3806-db5d-11e4-a36c-ad03920b0262","variableMapping":{"gradient":"maxLat","yend":"maxLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[105,111,113,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"018b5f17-db5d-11e4-a36c-9fa4b144a88e","variableMapping":{"i":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"018b5f18-db5d-11e4-a36c-1139c97d69d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,7,9,167,12,32,36,41,43,44,47,49,50,53,74,80,85,87,88,107,108,109,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238],"tindex":"018b5f19-db5d-11e4-a36c-c9d618a60834","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"018b5f1a-db5d-11e4-a36c-e703391b12bc","variableMapping":{"prepareAlgo":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[14,24,25,26,30,31,36,37,55,65,66,68,72,73,80,81,239,240,241,242,243,244,181,245,246,247,248,249,250,251,252,253,254,255],"tindex":"018b5f1b-db5d-11e4-a36c-95fa0f16a2a9","variableMapping":{"len":"high","start":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[],"tindex":"018b5f1c-db5d-11e4-a36c-1f1562960fb9","variableMapping":{"time":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:267","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(long, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"018b5f1d-db5d-11e4-a36c-bd729a3d505e","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[254,256],"tindex":"018b5f1e-db5d-11e4-a36c-8fdb3cd9d37c","variableMapping":{"lat":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtAssignmentImpl","sourcecode":"int = -int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"018b5f1f-db5d-11e4-a36c-c53e057c0ef4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[257],"tindex":"018b5f20-db5d-11e4-a36c-c14ba8ccb235","variableMapping":{"key":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"018b5f21-db5d-11e4-a36c-2d29950b7269","variableMapping":{"this":"g","toNodeId":"i","newEdgeId":"i","fromNodeId":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:352","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.storage.GraphHopperStorage.connectNewEdge(int, int);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-2},{"failures":[],"tindex":"018b8632-db5d-11e4-a36c-7528972a9c8b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"018b8633-db5d-11e4-a36c-e9516305c2d4","variableMapping":{"id":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,258,9,167,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,259,26,27,28,29,30,31,32,260,33,34,261,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,262,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,263,264,265,122,266,168,169,170,267,123,268,124,125,269,270,271,272,273,274,275,171,172,173,174,175,276,277,278,279,280,281,282,177,178,283,284,179,285,239,286,287,288,289,290,291,292,293,294,240,241,295,242,296,297,298,243,244,180,299,300,301,302,303,181,245,304,305,306,182,307,183,184,308,309,310,185,191,192,193,194,195,196,197,198,199,200,201,311,312,313,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,219,220,220,314,314,221,221,222,222,223,223,224,224,225,225,226,226,315,315,227,227,228,228,316,317,318,319,229,230,254,320,321,255,256,322,231,232,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,233,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,234,235,236,237,365,366,367,368,238,369,370],"tindex":"018b8634-db5d-11e4-a36c-15032afecb69","variableMapping":{"currentBucket":"segmentSizeIntsPower","retBucket":"segmentSizeIntsPower","currentIndex":"segmentSizeIntsPower","bucketSize":"segmentSizeIntsPower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"018b8635-db5d-11e4-a36c-e77ef20ef4e1","variableMapping":{"heights":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:77","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.DataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":0},{"failures":[371,191,192,193,194,197,198,200,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,349,351,355,357,358,359,360],"tindex":"018b8636-db5d-11e4-a36c-bfbd35b70921","variableMapping":{"edgeTo":"int0","edgeFrom":"int1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:63","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"status":-1},{"failures":[],"tindex":"018b8637-db5d-11e4-a36c-af0f01350db5","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"status":-2},{"failures":[257,372,373,374,375,376,377,378,379,380,381],"tindex":"018b8638-db5d-11e4-a36c-c1d4c13ec71e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"018b8639-db5d-11e4-a36c-2169d7c63e34","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"018bad4a-db5d-11e4-a36c-b3dfa67c7764","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:359","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"018bad4b-db5d-11e4-a36c-b587e47af32d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:159","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"018bad4c-db5d-11e4-a36c-0f229f5fd3a2","variableMapping":{"edgeId":"edge","nodeId":"nodeId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-2},{"failures":[],"tindex":"018bad4d-db5d-11e4-a36c-d33ee0a4b20f","variableMapping":{"bytePointer":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"018bad4e-db5d-11e4-a36c-a34a1bfe8ede","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"018bad4f-db5d-11e4-a36c-6d284ff320fd","variableMapping":{"currentBucket":"encoderCount","currentIndex":"encoderCount","bucketSize":"encoderCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:62","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:408","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"018bad50-db5d-11e4-a36c-878eabfb4cb8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"018bad51-db5d-11e4-a36c-c145a370fa00","variableMapping":{"edgeId":"speed","nextEdge":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":0},{"failures":[],"tindex":"018bad52-db5d-11e4-a36c-0bddec01e000","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[382,257,383,384,374,385,386,387,388,389,390,380,391],"tindex":"018bad53-db5d-11e4-a36c-2b6c570e4f09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:188","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"status":-1},{"failures":[],"tindex":"018bad54-db5d-11e4-a36c-3398c5588f9f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"018bad55-db5d-11e4-a36c-25e70b293024","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:378","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[193,194,197,200,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,233,344,345,346,347,349,355,356,360],"tindex":"018bad56-db5d-11e4-a36c-ff91f3def693","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"018bad57-db5d-11e4-a36c-aff74a9e1870","variableMapping":{"segmentSizeInBytes":"segmentSizePower","length":"segmentSizePower","index":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[392],"tindex":"018bad58-db5d-11e4-a36c-7d841a3e5864","variableMapping":{"empty":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"018bad59-db5d-11e4-a36c-7f05522c2a2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[393,394,395],"tindex":"018bd46a-db5d-11e4-a36c-6f2717d79b64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[396,397,398,399,400,355,359],"tindex":"018bd46b-db5d-11e4-a36c-99a4a3590f23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"018bd46c-db5d-11e4-a36c-a1a6603dde77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:59","type":"CtLocalVariableImpl","sourcecode":"final java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState> = new java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>()"},"status":-2},{"failures":[401,402,403,404,405,406],"tindex":"018bd46d-db5d-11e4-a36c-d1426d764aa8","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:225","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"018bd46e-db5d-11e4-a36c-119c626fcc2e","variableMapping":{"todoBytes":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":0},{"failures":[],"tindex":"018bd46f-db5d-11e4-a36c-99bc1e77a832","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.Arrays.java.util.Arrays.asList(com.graphhopper.routing.util.FlagEncoder[]))"},"status":-2},{"failures":[],"tindex":"018bd470-db5d-11e4-a36c-d71a66ecac4d","variableMapping":{"bit":"maxCount"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue()"},"status":0},{"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,407,7,9,167,12,16,32,36,41,43,44,47,49,50,53,57,74,79,80,85,87,88,107,108,109,168,169,170,171,172,173,174,175,176,177,178,179,287,180,303,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238],"tindex":"018bd471-db5d-11e4-a36c-dd8c718ad1f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"018bd472-db5d-11e4-a36c-631a1d44e334","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:383","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"018bd473-db5d-11e4-a36c-cb6c4a8a65e0","variableMapping":{"tmp":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[185],"tindex":"018bd474-db5d-11e4-a36c-dd70e57c2b36","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:475","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"018bd475-db5d-11e4-a36c-9ba8c31c1922","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[145,149,157,161,408,409,7,9,16,410,411,47,49,57,79,92,412,177,287,303,413,185,191,197,198,199,201],"tindex":"018bd476-db5d-11e4-a36c-e1bcfb20ba31","variableMapping":{"bytesForFlags":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:84","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"status":-1},{"failures":[],"tindex":"018bfb87-db5d-11e4-a36c-35acd01761d5","variableMapping":{"tmpDegreeCounter":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:593","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":0},{"failures":[8,14,22,24,25,26,30,31,36,37,55,63,65,66,68,72,73,80,81,239,293,240,241,242,243,244,181,245,246,414,247,248,249,250,251,252,253,254,255],"tindex":"018bfb88-db5d-11e4-a36c-6f8f3fc9c37c","variableMapping":{"allBits":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[205,415],"tindex":"018bfb89-db5d-11e4-a36c-e7a3d6a40b7d","variableMapping":{"minutes":"minutes","dayStr":"hourStr","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[],"tindex":"018bfb8a-db5d-11e4-a36c-a1edb2843816","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"018bfb8b-db5d-11e4-a36c-59cd9a756186","variableMapping":{"compressionLevel":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"018bfb8c-db5d-11e4-a36c-b74f16408e19","variableMapping":{"i":"dLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"018bfb8d-db5d-11e4-a36c-176f7f4c9110","variableMapping":{"lastIndex":"i","fromIndex":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:128","type":"CtIfImpl","sourcecode":"if ((int - int) < 2) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"018bfb8e-db5d-11e4-a36c-c94d5d93b582","variableMapping":{"time":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[205,217,218,387],"tindex":"018bfb8f-db5d-11e4-a36c-93acb584ae6b","variableMapping":{"flags":"ferryBit","mask":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"018bfb90-db5d-11e4-a36c-bdb9fe3cb3ec","variableMapping":{"turnRelation":"this","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[232],"tindex":"018bfb91-db5d-11e4-a36c-1ddcb03279e7","variableMapping":{"logMessagesPercentage":"restDist2D","logMessages":"incDist2DSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:159","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[416],"tindex":"018bfb92-db5d-11e4-a36c-89856e09bd48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[],"tindex":"018bfb93-db5d-11e4-a36c-5942019660dc","variableMapping":{"distance":"otherValue","speed":"otherValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"018bfb94-db5d-11e4-a36c-c79c51b12282","variableMapping":{"com.graphhopper.util.Constants.SNAPSHOT":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:295","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[417,418,419],"tindex":"018bfb95-db5d-11e4-a36c-bbd6424ddfc7","variableMapping":{"shift":"oldRelationFlags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[255],"tindex":"018bfb96-db5d-11e4-a36c-5d6fcb8ddf1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:171","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int, int, com.graphhopper.coll.GHBitSetImpl)"},"status":-1},{"failures":[],"tindex":"018bfb97-db5d-11e4-a36c-8b5cfeb001db","variableMapping":{"counter":"minNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"018bfb98-db5d-11e4-a36c-0b59a8749ed9","variableMapping":{"gradient":"maxLonTmp","yend":"minLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[257,372,373,374,375,376,377,378,379,380,381],"tindex":"018bfb99-db5d-11e4-a36c-b1367d30087f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[105,114,420,421,422,423,122,125],"tindex":"018c22aa-db5d-11e4-a36c-2d7527c601bd","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:273","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-1},{"failures":[],"tindex":"018c22ab-db5d-11e4-a36c-7b8e5b62fd93","variableMapping":{"index":"bytePos","entriesPerSegment":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:100","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[388],"tindex":"018d5b2c-db5d-11e4-a36c-53a1144b4c00","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[401,402,403,404,405,406],"tindex":"018d5b2d-db5d-11e4-a36c-aba077e5c8f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"018d5b2e-db5d-11e4-a36c-bbdbbcedfb6c","variableMapping":{"node":"node","directionBitMask":"directionBitMask","absoluteBarriers":"restrictedValues"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:220","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n        return 0;\n    \n    if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n        return long;\n    \n}"},"status":0},{"failures":[],"tindex":"018d5b2f-db5d-11e4-a36c-410723d67844","variableMapping":{"index":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","entrySize":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:294","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"018d5b30-db5d-11e4-a36c-45bcbebb4954","variableMapping":{"speed":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[254,256,322],"tindex":"018d5b31-db5d-11e4-a36c-ef8d2c913c8a","variableMapping":{"segmentsToMap":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:123","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":-1},{"failures":[9,13,14,21,23,34,38,45,47,49,54,55,62,64,77,82,89,177,285,239,292,294,301,304,308,424,246,425,310,426,427,428,196,206,429,324,325,329,332,335,337,338,346],"tindex":"018d5b32-db5d-11e4-a36c-d12dc9f4d4e6","variableMapping":{"high":"flags","highKey":"directionBitMask","key":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"018d5b33-db5d-11e4-a36c-7342b19deb5e","variableMapping":{"turnCostsCount":"length"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:109","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"018d5b34-db5d-11e4-a36c-35c6bd93a579","variableMapping":{"silent":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"018d5b35-db5d-11e4-a36c-a1a63b3d2077","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,2,6,9,13,14,17,23,27,29,34,35,38,40,41,45,47,49,54,55,58,64,69,71,77,79,82,84,85,89,177,285,239,288,294,296,298,301,303,304,306,182,308,424,246,430,310,431,432,426,185,427,433,434,428,193,194,195,199,206,207,212,218,222,225,319,229,254,320,255,256,232,435,436,387,437,323,438,324,326,327,330,334,336,339,341,343,233,344,346,347,348,349,350,351,352,353,355,356,357,359,360,363,234,235,236,238],"tindex":"018d8246-db5d-11e4-a36c-6356face8463","variableMapping":{"encoded":"backwardBit","backwardBit":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[388],"tindex":"018d8247-db5d-11e4-a36c-0946b9255dd2","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":-1},{"failures":[439],"tindex":"018d8248-db5d-11e4-a36c-fd5264b057c9","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[9,12,13,14,21,23,34,38,41,45,47,49,53,54,55,62,64,77,82,85,89,177,179,285,239,292,294,301,304,182,308,440,424,246,425,310,426,427,434,428,193,312,313,206,218,222,225,254,256,322,437,429,324,325,335,337,338,346,349,350,355,357,360,363,365,238],"tindex":"018d8249-db5d-11e4-a36c-6ddc66ef7deb","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"018d824a-db5d-11e4-a36c-d1dcffbc23a4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"018d824b-db5d-11e4-a36c-31beca9b6efb","variableMapping":{"relationCodeEncoder":"preferWayEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"018d824c-db5d-11e4-a36c-3598b3b7fc22","variableMapping":{"index":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"018d824d-db5d-11e4-a36c-65aec446b4b4","variableMapping":{"tmp":"high","initializedCounter":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"018d824e-db5d-11e4-a36c-650a0708430d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[393,394,395],"tindex":"018d824f-db5d-11e4-a36c-9b7a50269d34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[212,383,441,385,389,442,391],"tindex":"018d8250-db5d-11e4-a36c-475828256f50","variableMapping":{"sacScale":"sacScale","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:257","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"018d8251-db5d-11e4-a36c-c3a15626c96e","variableMapping":{"flags":"flags","scDirMask":"roundaboutBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"018d8252-db5d-11e4-a36c-23d26f5b570d","variableMapping":{"area":"y1","node":"y2","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:424","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.max(0, (int - (int / 2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.java.lang.Math.abs((int - int))"},"status":-2},{"failures":[],"tindex":"018d8253-db5d-11e4-a36c-7900b5e71ca4","variableMapping":{"silent":"empty"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":35,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":342,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":424,"com.graphhopper.reader.OSMReaderTest.testFerry":205,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":365,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":442,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":169,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":192,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":63,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":154,"com.graphhopper.coll.CompressedArrayTest.testCompress":137,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":184,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":351,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":265,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":155,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":357,"com.graphhopper.GraphHopperTest.testPrepare":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":341,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":347,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":400,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":334,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":275,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":372,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":362,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":11,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":256,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":390,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":326,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":108,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":47,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":133,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":12,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":398,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":360,"com.graphhopper.GraphHopperTest.testLoadOSM":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":115,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":109,"com.graphhopper.reader.OSMReaderTest.testSort":208,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":215,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":50,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":158,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":305,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":177,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":131,"com.graphhopper.storage.RAMDataAccessTest.testHeader":149,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":225,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":311,"com.graphhopper.storage.MMapDataAccessTest.testHeader":409,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":84,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":166,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":261,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":411,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":290,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":3,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":373,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":53,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":268,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":242,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":329,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":14,"com.graphhopper.coll.OSMIDMapTest.testGetLong":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":67,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":73,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":28,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":371,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":9,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":30,"com.graphhopper.coll.CompressedArrayTest.testCompress2":136,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":244,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":64,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":93,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":404,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":240,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":239,"com.graphhopper.storage.LevelGraphStorageTest.testClone":16,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":54,"com.graphhopper.reader.OSMReaderTest.testBarriers":209,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":393,"com.graphhopper.util.GHUtilityTest.testCopy":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":430,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":274,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":383,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":152,"com.graphhopper.routing.PathTest.testFindInstruction":230,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":55,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":396,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":363,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":42,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":100,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":306,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":82,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":68,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":353,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":18,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":284,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":98,"com.graphhopper.util.InstructionListTest.testWayList2":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":116,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":308,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":87,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":178,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":231,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":422,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":20,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":156,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":395,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":171,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":330,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":210,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":233,"com.graphhopper.coll.OSMIDMapTest.testGet":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":62,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":410,"com.graphhopper.routing.PathBidirRefTest.testExtract":316,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":388,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":32,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":188,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":270,"com.graphhopper.storage.RAMDataAccessTest.testCopy":145,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":252,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":382,"com.graphhopper.storage.RAMDataAccessTest.testSegments":151,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":120,"com.graphhopper.util.GHUtilityTest.testSort2":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":339,"com.graphhopper.reader.OSMReaderTest.testMain":207,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":167,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":72,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":134,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":391,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":34,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":433,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":23,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":26,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":45,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":24,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":77,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":384,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":29,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":217,"com.graphhopper.storage.StorablePropertiesTest.testStore":176,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":144,"com.graphhopper.storage.GraphHopperStorageTest.testClone":287,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":309,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":387,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":295,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":389,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":5,"com.graphhopper.routing.PathTest.testTime":319,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":43,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":118,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":251,"com.graphhopper.reader.OSMReaderTest.testRelation":417,"com.graphhopper.util.GHUtilityTest.testSortDirected":370,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":399,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":164,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":221,"com.graphhopper.GraphHopperTest.testFootOnly":200,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":423,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":172,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":407,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":123,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":431,"com.graphhopper.search.NameIndexTest.testCreate":141,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":150,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":219,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":412,"com.graphhopper.routing.QueryGraphTest.testOneWay":315,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":107,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":126,"com.graphhopper.reader.OSMReaderTest.testWithBounds":216,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":153,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":86,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":248,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":320,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":429,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":418,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":13,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":10,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":76,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":281,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":69,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":179,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":325,"com.graphhopper.util.InstructionListTest.testWayList":235,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":307,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":130,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":105,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":313,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":428,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":195,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":289,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":358,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":301,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":336,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":356,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":381,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":345,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":262,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":282,"com.graphhopper.routing.PathTest.testWayList":229,"com.graphhopper.storage.MMapDataAccessTest.testCopy":408,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":247,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":392,"com.graphhopper.coll.OSMIDMapTest.testGet2":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":346,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":161,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":38,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":75,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":60,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":288,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":27,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":124,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":125,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":146,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":165,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":402,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":397,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":376,"com.graphhopper.util.GHUtilityTest.testSort":369,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":112,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":401,"com.graphhopper.search.NameIndexTest.testPut":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":89,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":286,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":102,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":266,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":175,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":278,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":441,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":232,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":48,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":199,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":405,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":344,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":254,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":97,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":185,"com.graphhopper.routing.PathTest.testFound":318,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":201,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":416,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":40,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":439,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":4,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":66,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":140,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":310,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":142,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":292,"com.graphhopper.util.InstructionListTest.testEmptyList":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":337,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":437,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":403,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":340,"com.graphhopper.reader.PrinctonReaderTest.testRead":312,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":182,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":170,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":61,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":127,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":440,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":71,"com.graphhopper.reader.OSMReaderTest.testFoot":206,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":204,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":426,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":113,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":114,"com.graphhopper.reader.OSMReaderTest.testOneWay":218,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":241,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":245,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":83,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":163,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":299,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":432,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":352,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":359,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":162,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":350,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":420,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":323,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":168,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":314,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":283,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":95,"com.graphhopper.routing.PathBidirRefTest.testExtract2":317,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":324,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":117,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":378,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":138,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":303,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":212,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":421,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":355,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":110,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":304,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":19,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":180,"com.graphhopper.GraphHopperTest.testFootAndCar":196,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":377,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":273,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":413,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":57,"com.graphhopper.GraphHopperTest.testPrepareOnly":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":343,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":103,"com.graphhopper.GraphHopperTest.testVia":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":246,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":214,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":6,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":237,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":302,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":438,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":213,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":39,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":37,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":49}}]
