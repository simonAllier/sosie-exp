[{"failures":[],"tindex":"55d8c2ee-da2d-11e4-893d-232eb235f67f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[0],"tindex":"55d8e9ff-da2d-11e4-893d-4bfa008a24ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[1,2,3,4,5,6,7,8],"tindex":"55d8ea00-da2d-11e4-893d-35bb0f1faf90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"55d8ea01-da2d-11e4-893d-91b257e48456","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[],"tindex":"55d8ea02-da2d-11e4-893d-737e411ca668","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:311","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"|\")"},"status":0},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,2,3,94,95,96,97,98,99,100,101,102,103,104,105,106,7,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,36,137,37,138,139],"tindex":"55d8ea03-da2d-11e4-893d-c3fd8dc0e5b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[140,19,20,141],"tindex":"55d8ea04-da2d-11e4-893d-3d898d400a3b","variableMapping":{"bytesForFlags":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:339","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[38,142,143,144,39,145,146,147,40,148,149,150,151,152,41,42,153,154,43,155,156,157,158,159,44,160,161,162,163,45,164,46,165,166,167,168,169,47,170,48,171,172,49,173,50,51,174,175,176,52,177,178,179,180,181,182,53,54,183,184,55,185,186,187,188,189,56,190,191,192,193,57,194,58,195,196,197,198,199,59,200,60,201,202,61,203,62,63,204,205,206,64,207,208,65,209,210,211,212,213,66,67,214,215,68,216,217,218,219,220,69,221,222,223,224,70,225,71,226,227,228,229,230,72,231,73,232,233,74,234,75,76,235,236,237,77,238,78,239,240,79,241,242,243,244,245,80,81,246,247,82,248,249,250,251,252,83,253,254,255,256,84,257,85,258,259,260,261,262,86,263,87,264,265,88,266,89,90,267,268,269,91,270,271,272,273,274,99,275,276,100,277,278,101,279,280,281,102,282,283,284,103,23,104,285,24,286,287,288,33,119,289,120,121,290,291,122,292,293,294,123,295,124,296,297,125,298,126,299,127,128,129,300,130,34,35],"tindex":"55d91115-da2d-11e4-893d-2faced44cf30","variableMapping":{"entry":"entry","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"entry","entryVal":"com.graphhopper.routing.util.EncodingManager.FOOT","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:170","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[301,9,11,12,14,16,18,19,20,22,105,25,27,28,30,31,32,33,106,119,123],"tindex":"55d91116-da2d-11e4-893d-95e2b38a9f82","variableMapping":{"i":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"55d91117-da2d-11e4-893d-9778b540b41c","variableMapping":{"tmpNo":"nextNodeBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"55d91118-da2d-11e4-893d-05f5b184665a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:68","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"55d91119-da2d-11e4-893d-c97af1ffe851","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:281","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"55d9111a-da2d-11e4-893d-092f7a10f57e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-2},{"failures":[23,24,33,302,34,35,303,304,36,137,305,306,307,308,309,310,138],"tindex":"55d9111b-da2d-11e4-893d-2119d143b71c","variableMapping":{"lastKey":"encoded","key":"allowed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:56","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"55d9111c-da2d-11e4-893d-7d53cdd11779","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:312","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString())"},"status":0},{"failures":[],"tindex":"55d9111d-da2d-11e4-893d-b7357baa1b33","variableMapping":{"str":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"55d9382e-da2d-11e4-893d-97e6a004779f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"55d9382f-da2d-11e4-893d-753c617579d3","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:204","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[33],"tindex":"55d93830-da2d-11e4-893d-aba12871db4c","variableMapping":{"radiusInMeter":"speed","lon":"speed","lat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:105","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:82","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long |= long;\n        long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n    } else {\n        long |= long;\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    }\n} else {\n    long |= long;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n}"},"status":-1},{"failures":[302,34,35,303,304,36,307,310,138],"tindex":"55d93831-da2d-11e4-893d-f53aa0303004","variableMapping":{"pointIndex":"priorityFromRelation","index":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"55d93832-da2d-11e4-893d-779127d2514a","variableMapping":{"i":"mask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-2},{"failures":[],"tindex":"55d93833-da2d-11e4-893d-c55c1d0c4023","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"java.lang.Double.POSITIVE_INFINITY","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","weight":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:591","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[311,276],"tindex":"55d93834-da2d-11e4-893d-839582375934","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"55d93835-da2d-11e4-893d-fbac8025eb30","variableMapping":{"weight":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:394","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative! but was \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.java.lang.Math.round((long * (double))))"},"status":0},{"failures":[],"tindex":"55d93836-da2d-11e4-893d-f30d49ea922b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"55d93837-da2d-11e4-893d-6f454e6ca36d","variableMapping":{"defaultUTurnCost":"currDistToGoal","weight":"currDistToGoal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"55d93838-da2d-11e4-893d-97526cd79b7d","variableMapping":{"algo":"motorcarTag"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":0},{"failures":[133,134,135,34,312,136],"tindex":"55d93839-da2d-11e4-893d-a7650952efad","variableMapping":{"lat":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[],"tindex":"55d9383a-da2d-11e4-893d-c1ceb036eab6","variableMapping":{"store":"store"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:184","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:192","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"55d9383b-da2d-11e4-893d-adea95ac58b4","variableMapping":{"edgeId":"segmentSizePower","com.graphhopper.storage.GraphHopperStorage.NO_NODE":"length","nodeA":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:662","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" is invalid - already removed!\"));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[38,142,143,144,39,145,146,147,40,148,149,150,151,152,41,42,153,154,43,155,156,157,158,159,44,160,161,162,163,45,164,46,165,166,167,168,169,47,170,48,171,172,49,173,50,51,174,175,176,52,177,313,178,179,180,181,182,53,54,183,184,55,185,186,187,188,189,56,190,191,192,193,57,194,58,195,196,197,198,199,59,200,60,201,202,61,203,62,63,204,205,206,64,207,208,65,209,210,211,212,213,66,67,214,215,68,216,217,218,219,220,69,221,222,223,224,70,225,71,226,227,228,229,230,72,231,73,232,233,74,234,75,76,235,236,237,77,238,78,239,240,79,241,242,243,244,245,80,81,246,247,82,248,249,250,251,252,83,253,254,255,256,84,257,85,258,259,260,261,262,86,263,87,264,265,88,266,89,90,267,268,269,91,270,94,314,315,316,317,271,272,273,274,99,275,276,100,277,278,101,279,280,281,102,282,104,288,318,319,106,7,8,107,108,320,109,110,111,112,113,321,114,115,116,322,117,118,119,289,120,121,290,291,122,292,293,294,123,295,124,296,297,125,298,126,299,127,128,129,300,130,323,324,131,34,325,326],"tindex":"55d95f4c-da2d-11e4-893d-e9eae699ea56","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-1},{"failures":[],"tindex":"55d95f4d-da2d-11e4-893d-4197354214a8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"55d95f4e-da2d-11e4-893d-93b2031afda4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:72","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.EdgeSkipIterState == null"},"status":-2},{"failures":[327,301,271,274,99,277,278,101,310],"tindex":"55d95f4f-da2d-11e4-893d-d7dcf6ddd715","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR":"speed","weight":"speed","weightLong":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[286],"tindex":"55d95f50-da2d-11e4-893d-f37cd55d4169","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"55d95f51-da2d-11e4-893d-fdec3422e55c","variableMapping":{"endIndexPlusOne":"shift","frontIndex":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"55d95f52-da2d-11e4-893d-3589b764dfab","variableMapping":{"bit":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[1,2,3,4,5,6,7,8],"tindex":"55d95f53-da2d-11e4-893d-275a7bb638df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"55d95f54-da2d-11e4-893d-4d419468ebc9","variableMapping":{"store":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[38,142,143,144,39,145,146,147,40,148,149,150,151,152,41,42,153,154,43,155,156,157,158,159,44,160,161,162,163,45,164,46,165,166,167,168,169,47,170,48,171,172,49,173,50,51,174,175,176,52,177,178,179,180,181,182,53,54,183,184,55,185,186,187,188,189,56,190,191,192,193,57,194,58,195,196,197,198,199,59,200,60,201,202,61,203,62,63,204,205,206,64,207,208,65,209,210,211,212,213,66,67,214,215,68,216,217,218,219,220,69,221,222,223,224,70,225,71,226,227,228,229,230,72,231,73,232,233,74,234,75,76,235,236,237,77,238,78,239,240,79,241,242,243,244,245,80,81,246,247,82,248,249,250,251,252,83,253,254,255,256,84,257,85,258,259,260,261,262,86,263,87,264,265,88,266,89,90,267,268,269,91,270,283,284,103,23,104,285,24,286,287,288,0,33,119,289,120,121,290,291,122,292,293,294,123,295,124,296,297,125,298,126,299,127,128,129,300,130,34,35],"tindex":"55d95f55-da2d-11e4-893d-f3a5b3039844","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1063","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-1},{"failures":[328,329,330,331],"tindex":"55d95f56-da2d-11e4-893d-b551d3467ece","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"55d95f57-da2d-11e4-893d-876f9e147c6a","variableMapping":{"version":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"55d98668-da2d-11e4-893d-336fc9020b6b","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"55d98669-da2d-11e4-893d-239651577d3e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[9,12,20,25,28,31,332],"tindex":"55d9866a-da2d-11e4-893d-c70789b8b484","variableMapping":{"strLen":"code","bLen":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:278","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"55d9866b-da2d-11e4-893d-5316c0b7707c","variableMapping":{"bytePos":"nodeEntryBytes","inner":"nodes","value":"I_LEVEL"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:87","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(int, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":0},{"failures":[],"tindex":"55d9866c-da2d-11e4-893d-5111fc7f714d","variableMapping":{"res":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:534","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[333,137],"tindex":"55d9866d-da2d-11e4-893d-9ff0e50e38cd","variableMapping":{"name":"str","location":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:66","type":"CtReturnImpl","sourcecode":"return (java.lang.String) + (java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:465","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"status":-1},{"failures":[334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,239,352,353,354,355,356],"tindex":"55d9866e-da2d-11e4-893d-eff24b3d0f0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"status":-1},{"failures":[38,39,40,152,41,42,154,43,157,158,44,45,46,47,48,49,50,51,52,182,53,54,184,55,187,188,56,57,58,59,60,61,62,63,64,65,213,66,67,215,68,218,219,69,70,71,72,73,74,75,76,77,78,79,245,80,81,247,82,250,251,83,84,85,86,87,88,89,90,91,92,93,2,3,327,94,314,315,95,96,97,98,99,100,101,280,102,103,104,105,0,106,7,8,107,108,109,110,111,112,113,114,115,116,322,117,118,119,289,120,121,290,291,122,292,293,294,123,295,124,296,297,125,298,126,299,127,128,129,300,130,323,324,131,132,302,357,133,134,135,34,312,358,136,35,36,137,359,37,308,360,361,309,138,325,326,139],"tindex":"55d9866f-da2d-11e4-893d-1fb7737320dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"55d98670-da2d-11e4-893d-5b41f52bbad4","variableMapping":{"weight":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"status":-2},{"failures":[40,152,167,171,51,176,362,363,364,365,366,367,368,369,370,371,372,373,342,374,375,182,197,60,201,63,65,213,228,232,76,237,376,377,378,346,347,379,380,78,79,245,260,264,90,269,381,382,383,355,356,384,385,92,93,2,3,386,387,388,389,390,391,392,393,394,395,105,7,128,396,397,398,131,399,132,400,401,302,133,134,135,312,136,35,304,137,305,359,306,307,37,308,360,361,309,310,138],"tindex":"55d98671-da2d-11e4-893d-c72c3984a1fc","variableMapping":{"len":"offset","start":"offset"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:40","type":"CtReturnImpl","sourcecode":"return (((((byte[][(int + 3)]) & 255) << 24) | (((byte[][(int + 2)]) & 255) << 16)) | (((byte[][(int + 1)]) & 255) << 8)) | ((byte[][int]) & 255)"},"status":-1},{"failures":[],"tindex":"55d98672-da2d-11e4-893d-ed85d6eb0fea","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"55d9ad83-da2d-11e4-893d-8ddb98b4414a","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:601","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"55d9ad84-da2d-11e4-893d-c34873edc7fa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[10,12,13,15,16,17,20,21,26,28,29],"tindex":"55d9ad85-da2d-11e4-893d-25d7f6a256dc","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"55d9ad86-da2d-11e4-893d-8543f5e464cc","variableMapping":{"flags":"encoded","tmpValue":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[9,10,11,12,13,14,15,16,17,18,20,21,22,25,26,27,28,29,30,31,32,304,36,137,305,306,307,37,308,309,310,138],"tindex":"55d9ad87-da2d-11e4-893d-036423158eef","variableMapping":{"synched":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:74","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:487","type":"CtIfImpl","sourcecode":"if ((boolean && (!boolean)) || (\"steps\".equals(java.lang.String)))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417],"tindex":"55d9ad88-da2d-11e4-893d-8107a785e72b","variableMapping":{"resultOrientation":"maxLonTmp","orientation":"midLon","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:82","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[44,56,69,83,327,301,418,140,11,12,419,420,16,421,19,20,422,274,276,277,278,284,104,105,141,27,28,423,106,7,119,289,123,124,304,310],"tindex":"55d9ad89-da2d-11e4-893d-b33bdff2fc6e","variableMapping":{"size":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[1,2,3,327,4,6,424,7,8],"tindex":"55d9ad8a-da2d-11e4-893d-919414c41d20","variableMapping":{"dist":"lat1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-1},{"failures":[],"tindex":"55d9ad8b-da2d-11e4-893d-17bb51d1fa17","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"55d9ad8c-da2d-11e4-893d-d13d7e3fd0fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"55d9ad8d-da2d-11e4-893d-6b9c407cba83","variableMapping":{"orientation":"key","resultOrientation":"key","baseOrientation":"key","java.lang.Math.PI":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:74","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":0},{"failures":[42,163,171,172,54,193,201,202,67,224,232,233,81,256,264,265,425,97,138],"tindex":"55d9ad8e-da2d-11e4-893d-a1a352973c08","variableMapping":{"tmp":"key","initializedCounter":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.SparseIntIntArray.get(int, -1)"},"status":-1},{"failures":[13,17,19,20,21,29],"tindex":"55d9ad8f-da2d-11e4-893d-f3e403269dcc","variableMapping":{"eof":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"55d9ad90-da2d-11e4-893d-83840769885f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:59","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.java.lang.Math.round((double / (double)))"},"status":-2},{"failures":[426,281,427,428,37],"tindex":"55d9ad91-da2d-11e4-893d-2b930fa924ad","variableMapping":{"directionBitMask":"turnRestrictionBit","blockByDefault":"restricted"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"55d9ad92-da2d-11e4-893d-7705ec14d7b9","variableMapping":{"res":"backwardBit","value":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":0},{"failures":[271,274,275,276,277,101,357,133,134,135,34,312,358,136,303,36,137,305,359,307,37,308,360,361,309,310,429,138],"tindex":"55d9ad93-da2d-11e4-893d-9141b8541cb9","variableMapping":{"sacScale":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[311,276,304],"tindex":"55d9d4a4-da2d-11e4-893d-b3fae58c9600","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[38,142,143,144,39,146,147,40,150,152,41,42,153,154,43,155,156,157,158,159,44,160,161,162,163,45,164,46,165,166,167,168,169,47,48,171,172,49,173,50,51,174,175,176,52,177,430,362,363,364,365,431,313,432,433,434,366,367,368,435,402,436,403,404,437,438,439,440,441,178,442,443,369,370,371,444,405,445,406,407,446,447,448,449,450,179,451,452,453,454,455,180,456,457,458,459,460,181,461,373,462,341,342,374,375,56,60,208,65,211,213,66,67,214,215,68,216,217,218,219,220,69,221,222,223,224,70,225,71,226,227,228,229,230,72,73,232,233,74,234,75,76,235,236,237,77,238,78,240,79,243,245,80,81,246,247,82,248,249,250,251,252,83,253,254,255,256,84,257,85,258,259,260,261,262,86,87,264,265,88,266,89,90,267,268,269,91,270,463,464,92,465,466,93,2,3,327,94,467,468,314,315,95,96,425,97,98,469,103,395,105,7,8,107,108,109,110,111,112,113,321,114,115,116,322,117,118,119,289,120,121,290,291,122,292,293,294,123,295,124,296,297,125,298,126,299,127,128,129,300,130,323,324,396,397,470,398,131,399,471,132,400,472,473,401,302,133,134,135,34,312,358,136,35,303,474,304,36,137,305,359,306,307,37,308,360,361,309,310,138,325,326,139,475],"tindex":"55d9d4a5-da2d-11e4-893d-1ddbdda48edb","variableMapping":{"oldValueIndex":"bytePos"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[31,32,332],"tindex":"55d9d4a6-da2d-11e4-893d-058d4967026a","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[119,123],"tindex":"55d9d4a7-da2d-11e4-893d-5580eba76e75","variableMapping":{"shift":"flags","flags":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"55d9d4a8-da2d-11e4-893d-1537bb27b296","variableMapping":{"high":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"55d9d4a9-da2d-11e4-893d-85a42e473825","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":0},{"failures":[],"tindex":"55d9d4aa-da2d-11e4-893d-f386c06b5c76","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[],"tindex":"55d9d4ab-da2d-11e4-893d-cf1de9947163","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[],"tindex":"55d9d4ac-da2d-11e4-893d-bffcd5fb25c7","variableMapping":{"val":"distance"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:109","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[],"tindex":"55d9d4ad-da2d-11e4-893d-b352f305f1f9","variableMapping":{"allBits":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":0},{"failures":[],"tindex":"55d9d4ae-da2d-11e4-893d-27fd82711586","variableMapping":{"weight":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"55d9d4af-da2d-11e4-893d-0f29539b2810","variableMapping":{"freeIndex":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-2},{"failures":[476,433,402,403,404,442,405,406,407,408,409,410,411,477,412,478,413,414,415,416,417],"tindex":"55d9d4b0-da2d-11e4-893d-e1f3ad21293f","variableMapping":{"cap":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"55d9fbc1-da2d-11e4-893d-03df0e32e7b5","variableMapping":{"hasOther":"closed","hasRel":"closed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:78","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[479],"tindex":"55d9fbc2-da2d-11e4-893d-67c8caa15010","variableMapping":{"costs":"lastPrio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[38,143,150,41,42,158,47,173,51,52,107,109,110,114,115,116,118,289,296,130,133],"tindex":"55d9fbc3-da2d-11e4-893d-09c7d522ce21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.next()"},"status":-1},{"failures":[],"tindex":"55d9fbc4-da2d-11e4-893d-8f9a44bdd411","variableMapping":{"i":"endNode","child":"endNode"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"55d9fbc5-da2d-11e4-893d-79ca99ad8b87","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:132","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[95,469],"tindex":"55d9fbc6-da2d-11e4-893d-c168f1aa0650","variableMapping":{"value":"removed","numberOfBits":"removed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:251","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n    com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n    int++;\n}"},"status":-1},{"failures":[311,276,304],"tindex":"55d9fbc7-da2d-11e4-893d-43664726fb1b","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"55d9fbc8-da2d-11e4-893d-376643c62867","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,304,36,137,305,306,307,37,308,309,310,138],"tindex":"55d9fbc9-da2d-11e4-893d-f5c72e298ebe","variableMapping":{"bytes":"directionBitMask","capacity":"relationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-1},{"failures":[107,114,115,120,291,122,126,127,129],"tindex":"55d9fbca-da2d-11e4-893d-511fc57f3ede","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[107,109,114,115,118,119,289,120,121,290,291,122,292,293,294,123,295,124,296,297,125,298,126,127,128,129,300,130,133,134,135,34,312,136,35,139,475],"tindex":"55d9fbcb-da2d-11e4-893d-c99c4bdd2d7a","variableMapping":{"this":"this","to":"from"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[],"tindex":"55d9fbcc-da2d-11e4-893d-2380d0804a9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[480,481,9,10,12,482,13,14,15,16,483,17,18,20,484,21,22,25,26,28,485,29,30,31,32,35],"tindex":"55d9fbcd-da2d-11e4-893d-db10a5bc7c4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[146,42,159,160,161,165,171,172,341,67,220,221,222,226,232,233,81,252,253,254,258,264,265,425,97,138],"tindex":"55d9fbce-da2d-11e4-893d-6d1fd600cfbc","variableMapping":{"segmentCount":"remainingSegments","segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:163","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[int][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"55d9fbcf-da2d-11e4-893d-0ddc91236ad0","variableMapping":{"resultOrientation":"midLat","orientation":"maxLatTmp","java.lang.Math.PI":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"55d9fbd0-da2d-11e4-893d-457fc130d7bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[486,487,479,488,489,114,117],"tindex":"55d9fbd1-da2d-11e4-893d-4b6fe91b767d","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":299,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":397,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":145,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":301,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":53,"com.graphhopper.reader.OSMReaderTest.testFerry":304,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":314,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":11,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":367,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":357,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":1,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":30,"com.graphhopper.storage.MMapDataAccessTest.testSegments":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":252,"com.graphhopper.coll.CompressedArrayTest.testCompress":409,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":237,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":111,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":197,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":432,"com.graphhopper.util.AngleCalcTest.testOrientation":4,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":116,"com.graphhopper.GraphHopperTest.testPrepare":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":204,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":107,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":489,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":123,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":21,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":468,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":150,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":433,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":98,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":140,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":120,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":370,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":78,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":415,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":152,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":479,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":118,"com.graphhopper.GraphHopperTest.testLoadOSM":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":446,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":462,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":371,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":318,"com.graphhopper.reader.OSMReaderTest.testSort":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":419,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":361,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":241,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":377,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":234,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":65,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":413,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":205,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":132,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":474,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":89,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":170,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":217,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":239,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":82,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":26,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":421,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":436,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":297,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":313,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":435,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":291,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":290,"com.graphhopper.coll.OSMIDMapTest.testGetLong":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":255,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":259,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":164,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":40,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":165,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":6,"com.graphhopper.coll.CompressedArrayTest.testCompress2":408,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":227,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":420,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":83,"com.graphhopper.GraphHopperAPITest.testLoad":139,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":151,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":373,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":283,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":221,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":67,"com.graphhopper.storage.LevelGraphStorageTest.testClone":154,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":80,"com.graphhopper.reader.OSMReaderTest.testBarriers":359,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":469,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":351,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":55,"com.graphhopper.util.GHUtilityTest.testCopy":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":292,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":178,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":330,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":384,"com.graphhopper.routing.PathTest.testFindInstruction":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":484,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":81,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":486,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":24,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":94,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":174,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":457,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":75,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":70,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":88,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":463,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":113,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":256,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":0,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":185,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":211,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":337,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":375,"com.graphhopper.util.InstructionListTest.testWayList2":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":447,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":77,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":477,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":268,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":316,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":395,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":157,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":426,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":253,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":430,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":122,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":306,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":128,"com.graphhopper.coll.OSMIDMapTest.testGet":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":251,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":286,"com.graphhopper.routing.PathBidirRefTest.testExtract":323,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":167,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":392,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":438,"com.graphhopper.storage.RAMDataAccessTest.testCopy":381,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":270,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":201,"com.graphhopper.storage.RAMDataAccessTest.testSegments":356,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":179,"com.graphhopper.util.GHUtilityTest.testSort2":464,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":125,"com.graphhopper.reader.OSMReaderTest.testMain":137,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":482,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":416,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":328,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":439,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":47,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":242,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":44,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":163,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":52,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":481,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":131,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":485,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":86,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":141,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":461,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":46,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":310,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":353,"com.graphhopper.storage.GraphHopperStorageTest.testClone":215,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":101,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":223,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":277,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":329,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":186,"com.graphhopper.routing.PathTest.testTime":106,"com.graphhopper.routing.util.EncodingManagerTest.testFixWayName":333,"com.graphhopper.util.BitUtilLittleTest.testToFloat":386,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":175,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":449,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":196,"com.graphhopper.reader.OSMReaderTest.testRelation":332,"com.graphhopper.util.GHUtilityTest.testSortDirected":466,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":488,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":423,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":379,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":398,"com.graphhopper.GraphHopperTest.testFootOnly":35,"com.graphhopper.util.BitUtilLittleTest.testToInt":388,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":362,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":402,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":32,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":450,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":57,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":355,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":396,"com.graphhopper.routing.QueryGraphTest.testOneWay":472,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":412,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":369,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":410,"com.graphhopper.reader.OSMReaderTest.testWithBounds":309,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":385,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":331,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":352,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":267,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":399,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":198,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":287,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":31,"com.graphhopper.util.BitUtilLittleTest.testToDouble":387,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":41,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":149,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":22,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":262,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":100,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":84,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":213,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":400,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":289,"com.graphhopper.util.InstructionListTest.testWayList":2,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":235,"com.graphhopper.GraphHopperAPITest.testDisconnected179":475,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":187,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":478,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":442,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":183,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":326,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":64,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":135,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":216,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":363,"com.graphhopper.routing.util.EncodedValueTest.testSwap":480,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":322,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":72,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":115,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":279,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":243,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":300,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":340,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":208,"com.graphhopper.routing.PathTest.testWayList":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":206,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":483,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":275,"com.graphhopper.coll.OSMIDMapTest.testGet2":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":130,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":261,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":225,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":284,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":249,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":45,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":403,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":404,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":382,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":437,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":487,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":15,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":335,"com.graphhopper.util.GHUtilityTest.testSort":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":445,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":91,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":244,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":434,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":459,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":365,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":453,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":342,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":27,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":471,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":105,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":451,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":240,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":317,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":257,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":95,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":374,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":60,"com.graphhopper.routing.PathTest.testFound":319,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":33,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":303,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":50,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":345,"com.graphhopper.util.AngleCalcTest.testAtan2":5,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":143,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":467,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":254,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":348,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":56,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":440,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":296,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":273,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":272,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":422,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":298,"com.graphhopper.reader.PrinctonReaderTest.testRead":325,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":76,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":368,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":189,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":394,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":182,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":85,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":372,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":25,"com.graphhopper.reader.OSMReaderTest.testFoot":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":59,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":401,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":406,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":414,"com.graphhopper.reader.OSMReaderTest.testOneWay":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":407,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":222,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":233,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":266,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":347,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":58,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":112,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":476,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":117,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":110,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":346,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":454,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":103,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":350,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":192,"com.graphhopper.util.BitUtilLittleTest.testToLong":389,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":470,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":210,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":429,"com.graphhopper.routing.PathBidirRefTest.testExtract2":324,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":341,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":448,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":73,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":37,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":207,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":444,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":74,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":156,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":280,"com.graphhopper.GraphHopperTest.testFootAndCar":34,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":228,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":161,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":16,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":441,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":184,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":288,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":334,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":127,"com.graphhopper.GraphHopperTest.testPrepareOnly":302,"com.graphhopper.GraphHopperTest.testVia":133,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":460,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":54,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":360,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":39,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":231,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":327,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":104,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":194,"com.graphhopper.util.AngleCalcTest.testCombined":424,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":271,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":173,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":172,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":79}}]
