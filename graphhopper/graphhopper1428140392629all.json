[{"failures":[],"tindex":"8c300800-daae-11e4-9c6b-8bb5eca9ae6f","variableMapping":{"defaultUTurnCost":"currDistToGoal","weight":"currDistToGoal"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:33","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"8c314081-daae-11e4-9c6b-9956dd2c87ed","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"8c314082-daae-11e4-9c6b-23733162f99c","variableMapping":{"intVal":"start","degree":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:264","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30],"tindex":"8c316793-daae-11e4-9c6b-dffa23994f09","variableMapping":{"weightApproximation":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"8c316794-daae-11e4-9c6b-958cc163cf7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[31],"tindex":"8c316795-daae-11e4-9c6b-ab783ae10e80","variableMapping":{"byteCount":"directionBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtIfImpl","sourcecode":"if ((this.long) != (com.graphhopper.routing.util.AbstractFlagEncoder.long))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"8c316796-daae-11e4-9c6b-1be8dd47583a","variableMapping":{"nanoTime":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[32],"tindex":"8c316797-daae-11e4-9c6b-e75176cee7f8","variableMapping":{"high":"acceptBit","highKey":"acceptBit","key":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[33],"tindex":"8c316798-daae-11e4-9c6b-2ff4bfd58d55","variableMapping":{"bs":"bs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:76","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[],"tindex":"8c316799-daae-11e4-9c6b-1f4f8cd9a122","variableMapping":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[34,35,36,37,38,39,40],"tindex":"8c31679a-daae-11e4-9c6b-91929b6da41e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"8c31679b-daae-11e4-9c6b-67985fee96d4","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[41,42],"tindex":"8c31679c-daae-11e4-9c6b-cf87849b8ab7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"8c31679d-daae-11e4-9c6b-4385d6491dad","variableMapping":{"line":"trackType","key":"trackType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:242","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[],"tindex":"8c31679e-daae-11e4-9c6b-e32e36767e01","variableMapping":{"need":"minElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[43],"tindex":"8c31679f-daae-11e4-9c6b-2dd18d65dd00","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[23,27],"tindex":"8c3167a0-daae-11e4-9c6b-5ba3741994c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[44,0,3,45,46,47,6,7,8,48,49,9,50,51,52,10,53,11,12,54,13,14,15,16,17,18,19,20,36,37,38,55,39,56,57,58,59],"tindex":"8c318eb1-daae-11e4-9c6b-ff1b1ae1b78e","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n"},"status":-1},{"failures":[],"tindex":"8c318eb2-daae-11e4-9c6b-b5af9bc5b31f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"8c318eb3-daae-11e4-9c6b-27f0d5eb7a31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"8c318eb4-daae-11e4-9c6b-a38f874065a1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.QueryResult:166","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Calculate snapped point only once\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[60,61,62],"tindex":"8c318eb5-daae-11e4-9c6b-b3b0d9093c8d","variableMapping":{"length":"index","factor":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:432","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    int = java.lang.String.indexOf(\":\");\n    int int = 0;\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + 1));\n        int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n    } \n    int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n    int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int;\n} else {\n    return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n}"},"status":-1},{"failures":[63,3,5,52,64],"tindex":"8c318eb6-daae-11e4-9c6b-73f9487c508c","variableMapping":{"segmentSizeInBytes":"size","length":"size","index":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:362","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"8c318eb7-daae-11e4-9c6b-a13c8d36aa0e","variableMapping":{"tmp":"tmp","initializedCounter":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:294","type":"CtReturnImpl","sourcecode":"return int - int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8c318eb8-daae-11e4-9c6b-d33660135f70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"8c318eb9-daae-11e4-9c6b-914a4757626f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1080","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:625","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"status":-2},{"failures":[],"tindex":"8c31dcda-daae-11e4-9c6b-d9002b6fda59","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"status":-2},{"failures":[],"tindex":"8c3203eb-daae-11e4-9c6b-25fd28db5036","variableMapping":{"slice":"maxSpeed","azimuth":"maxSpeed","cp":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:114","type":"CtIfImpl","sourcecode":"if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[44,65,0,1,2,66,63,3,45,4,67,5,46,47,6,7,8,48,49,9,50,51,52,10,53,11,12,54,13,14,15,68,16,17,18,19,20,69,70,71,72,73,74,75,76,77,78,79,32,80,81,82,83,84,36,37,39,85,57,86,87,88,89,90,91,92,93,94,95,96,97,40,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,58],"tindex":"8c3203ec-daae-11e4-9c6b-077116844833","variableMapping":{"shift":"shift","backwardBit":"forwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"8c3203ed-daae-11e4-9c6b-5f4860fbf799","variableMapping":{"nextNodeBit":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","usedBits":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","encoder":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":0},{"failures":[34,35,144],"tindex":"8c3203ee-daae-11e4-9c6b-2f23e1e5aaed","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[0,1,2,66,63,145,3,4,5,46,6,7,8,48,49,9,50,52,10,53,11,12,54,13,14,15,68,16,17,18,19,20,36,146,147,148,64,149,150],"tindex":"8c322aff-daae-11e4-9c6b-a32c8961430d","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"i","edgeTo":"i","edgeFrom":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-1},{"failures":[],"tindex":"8c322b00-daae-11e4-9c6b-cd65cce7efe1","variableMapping":{"locs":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[151,152,43,153],"tindex":"8c322b01-daae-11e4-9c6b-4f53a7eff806","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[],"tindex":"8c325212-daae-11e4-9c6b-213230b302b7","variableMapping":{"bytePos":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:91","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"8c325213-daae-11e4-9c6b-e1cdcf22510b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:88","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DAType com.graphhopper.storage.DAType = java.util.Map<java.lang.String, com.graphhopper.storage.DAType>.get(java.lang.String)"},"status":-2},{"failures":[78],"tindex":"8c325214-daae-11e4-9c6b-4153e90b08fe","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:669","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"8c325215-daae-11e4-9c6b-692cc0496a96","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:201","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[62,154,155,156,157,158,159,160,161,162,163,164,82,83,36,37,38,39,85,56,57,165,166,167,168,169,102,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"tindex":"8c325216-daae-11e4-9c6b-cdb7311a1315","variableMapping":{"mSize":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:216","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"8c325217-daae-11e4-9c6b-0745800a342b","variableMapping":{"compressionLevel":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":0},{"failures":[72,92,191,192,193,194,195,196,197,198,105,199,200,201,202,203,204,205,206,118,207,208,209,210,211,212,213,214,215,133,216,217,218,219,220,221,222,223],"tindex":"8c325218-daae-11e4-9c6b-f94399c0a338","variableMapping":{"elem":"mKeys","i":"key","child":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:172","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"8c325219-daae-11e4-9c6b-9fd1cdf684a1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:592","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:307","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long)"},"status":-2},{"failures":[],"tindex":"8c32521a-daae-11e4-9c6b-410922f56e76","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"8c32521b-daae-11e4-9c6b-a54002db0484","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-2},{"failures":[224,225,226,227],"tindex":"8c32521c-daae-11e4-9c6b-c10ce23dc330","variableMapping":{"endX":"maxTurnCosts","reachedX":"restricted","stepX":"maxTurnCosts","x":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:83","type":"CtIfImpl","sourcecode":"if (int > 0.0) {\n    if (int >= int)\n        boolean = true;\n    \n} else if (int <= int) {\n    boolean = true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:618","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || java.lang.Double.(java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"status":-1},{"failures":[],"tindex":"8c32521d-daae-11e4-9c6b-7791f3bf6082","variableMapping":{"edgeState":"edgeState"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:39","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[],"tindex":"8c32792e-daae-11e4-9c6b-ddc17606d681","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"8c32792f-daae-11e4-9c6b-8d67997238ca","variableMapping":{"orientation":"longTripsSpeed","resultOrientation":"shortTripsSpeed","baseOrientation":"durationInHours","java.lang.Math.PI":"longTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":0},{"failures":[],"tindex":"8c327930-daae-11e4-9c6b-a74979d3fcbb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-2},{"failures":[72,75,228],"tindex":"8c327931-daae-11e4-9c6b-970e17734610","variableMapping":{"elem":"nodeIndex","size":"nodes","i":"nodes","element":"nodes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[44,65,229,0,1,2,66,63,145,3,45,4,67,5,46,47,6,7,8,48,49,9,50,51,52,10,53,11,12,54,13,14,15,68,16,17,18,19,20,69,70,230,231,232,233,71,234,235,236,34,237,238,239,240,241,242,224,151,243,244,245,246,247,248,249,250,251,252,253,254,255,256,35,257,258,259,260,261,262,225,152,263,264,265,266,267,268,269,270,271,272,273,274,72,73,275,74,75,228,276,277,278,76,279,77,280,281,282,283,43,284,285,286,287,288,289,290,291,292,293,294,295,296,297,153,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,78,316,61,79,317,318,32,144,319,226,80,320,31,321,227,322,323,324,62,81,154,155,156,157,158,159,160,325,161,162,163,164,326,82,327,328,83,84,36,37,38,55,39,85,56,57,329,330,86,87,88,331,332,333,89,90,334,91,92,335,336,93,337,338,339,340,191,94,192,193,341,194,95,342,96,195,196,343,344,345,97,346,40,197,198,98,347,99,100,348,349,350,101,351,102,352,353,103,354,355,356,357,358,104,105,359,360,106,361,362,363,364,199,107,200,201,365,202,108,366,109,203,204,367,368,369,110,370,111,205,206,112,371,113,114,372,373,374,115,375,376,377,378,379,380,381,116,382,383,384,385,386,117,118,387,388,119,389,390,391,392,207,120,208,209,393,210,121,394,122,211,212,395,396,397,123,398,124,213,214,125,399,126,127,400,401,402,128,403,129,404,405,406,130,407,215,408,131,409,410,411,412,413,132,133,414,415,134,416,417,418,419,216,135,217,218,420,219,136,421,137,220,221,422,423,424,138,425,139,222,223,140,426,141,142,427,428,429,143,430,58,59],"tindex":"8c327932-daae-11e4-9c6b-c3866dad646b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:211","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-1},{"failures":[],"tindex":"8c327933-daae-11e4-9c6b-4b3e0943e9f4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:293","type":"CtReturnImpl","sourcecode":"return \"car\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:61","type":"CtReturnImpl","sourcecode":"return \"PREPARE+\" + (com.graphhopper.routing.util.Weighting.toString())"},"status":-2},{"failures":[],"tindex":"8c327934-daae-11e4-9c6b-7dfc44f01138","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[44,0,3,45,4,46,47,6,48,49,51,53,12,54,17,20,36,90,131,411,413,132,133,416,419,136,422,138,222,140,426,142,143],"tindex":"8c327935-daae-11e4-9c6b-cbabb2ec65d6","variableMapping":{"nodeThis":"b","nextEdgeOther":"b","nodeOther":"a","nextEdge":"b"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[237,257,286],"tindex":"8c327936-daae-11e4-9c6b-4170cc98a1fb","variableMapping":{"nodeThis":"speed","nextEdgeOther":"speed","nodeOther":"speed","nextEdge":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:338","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"8c327937-daae-11e4-9c6b-cf5fc7729c57","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"8c32a048-daae-11e4-9c6b-a3cb2cfb1de6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"8c32a049-daae-11e4-9c6b-a7a2d194d43f","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"8c32a04a-daae-11e4-9c6b-4198b8b1f0f1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[159,36,37,38,39,57,40],"tindex":"8c32a04b-daae-11e4-9c6b-55e05d259a05","variableMapping":{"size":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:152","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:781","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-1},{"failures":[],"tindex":"8c32a04c-daae-11e4-9c6b-a7da0820d8f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[224,225,226,227,159,431],"tindex":"8c32a04d-daae-11e4-9c6b-6fddfb0381d1","variableMapping":{"nodeB":"shift","edgeId":"shift","nodeA":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-1},{"failures":[324],"tindex":"8c32a04e-daae-11e4-9c6b-798fd4854139","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:162","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[237,257,298],"tindex":"8c32a04f-daae-11e4-9c6b-b9aef5d97bff","variableMapping":{"red":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:331","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[84,36,39,432,85,56,329,433,334,336,344,197,198,434],"tindex":"8c32a050-daae-11e4-9c6b-8d3135dc93ea","variableMapping":{"message":"_location"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"8c32a051-daae-11e4-9c6b-49254980b3df","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[324,434],"tindex":"8c32a052-daae-11e4-9c6b-ad6b3825518c","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-1},{"failures":[435,251,271,295,309,317,318,434],"tindex":"8c32a053-daae-11e4-9c6b-6d59ca8fc5ba","variableMapping":{"min":"speed","dist":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[47,6,10,11,12,233,71,435,436,237,241,242,251,256,257,261,262,271,276,278,77,284,286,295,298,300,309,315,61,317,318,320,324,62,164,36,37,38,55,39,56,331,94,107,120,434,135],"tindex":"8c32a054-daae-11e4-9c6b-19217f560c00","variableMapping":{"nanoTime":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:111","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[279,282,434],"tindex":"8c32a055-daae-11e4-9c6b-bd424e377bfa","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"sidewalks","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[46,47,6,17,18,20,434],"tindex":"8c32a056-daae-11e4-9c6b-45c4d426b839","variableMapping":{"edge":"edgeState"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:392","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"setWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[435,238,240,241,242,151,250,252,254,258,260,261,262,152,270,272,274,276,279,281,282,284,286,294,296,297,153,299,300,308,310,312,315,78,316,61,317,318,32,321,322,324,62,81,154,155,156,157,158,159,160,161,162,163,164,326,82,83,84,36,37,38,55,39,85,56,57,329,331,434],"tindex":"8c32a057-daae-11e4-9c6b-fbc1c08b968d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[238,240,242,245,250,254,437,438,258,260,262,265,270,274,286,290,294,297,299,300,303,308,312,321,322,325,434],"tindex":"8c32a058-daae-11e4-9c6b-c9884506b778","variableMapping":{"flags":"flags","nodeFlags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-1},{"failures":[237,241,242,253,257,261,262,273,284,286,287,298,300,311,434],"tindex":"8c32c669-daae-11e4-9c6b-8dc9578b2802","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:348","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n    int = java.lang.Integer;\nelse\n    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n"},"status":-1},{"failures":[],"tindex":"8c32c66a-daae-11e4-9c6b-1186f4faa9e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"8c32c66b-daae-11e4-9c6b-875c9ea21700","variableMapping":{"acceptBit":"oldRelationFlags","ferryBit":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[434],"tindex":"8c32c66c-daae-11e4-9c6b-7f2ec131a90b","variableMapping":{"distInMeter":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-1},{"failures":[],"tindex":"8c32c66d-daae-11e4-9c6b-819671954ada","variableMapping":{"value":"x1","numberOfBits":"y2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:395","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    int = int >> 1;\n    int++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"8c32c66e-daae-11e4-9c6b-855e74bb3bbf","variableMapping":{"parentNodes":"elem","endNode":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-2},{"failures":[44,3,45,46,47,6,7,49,9,15,16,17,18,20,434],"tindex":"8c32c66f-daae-11e4-9c6b-d772cceecb48","variableMapping":{"width":"skippedEdge1","lonSimilar":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:93","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[],"tindex":"8c32c670-daae-11e4-9c6b-f3d339b804fb","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"8c32c671-daae-11e4-9c6b-aba913d73435","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:123","type":"CtLocalVariableImpl","sourcecode":"int int = boolean ? 1 : -1"},"status":-2},{"failures":[],"tindex":"8c32c672-daae-11e4-9c6b-adddbce8b137","variableMapping":{"lastKey":"encoded","key":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[434],"tindex":"8c32c673-daae-11e4-9c6b-7db1d55c2626","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:354","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHTBitSet(10)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-1},{"failures":[],"tindex":"8c32c674-daae-11e4-9c6b-a1603516c64b","variableMapping":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[434],"tindex":"8c32c675-daae-11e4-9c6b-93f1ee372079","variableMapping":{"flags":"flags","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:122","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[33,434],"tindex":"8c32c676-daae-11e4-9c6b-13dd075acbef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[435,434],"tindex":"8c32c677-daae-11e4-9c6b-a3a567f04811","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[236,434],"tindex":"8c32c678-daae-11e4-9c6b-a7460b60a79d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"8c32c679-daae-11e4-9c6b-d53c6a38df7a","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:917","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:407","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[434],"tindex":"8c32c67a-daae-11e4-9c6b-c3f9ef8610ce","variableMapping":{"com.graphhopper.util.Constants.VERSION":"key","tmp":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:101","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[434],"tindex":"8c333bab-daae-11e4-9c6b-e11ea57ff293","variableMapping":{"newSegs":"segments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"8c333bac-daae-11e4-9c6b-779ff3407317","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"status":-2},{"failures":[],"tindex":"8c333bad-daae-11e4-9c6b-b542c500eb99","variableMapping":{"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","flags":"flags","roundaboutBit":"flags","com.graphhopper.routing.util.FlagEncoder.K_FORWARD":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","forwardBit":"flags","key":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","com.graphhopper.routing.util.FlagEncoder.K_BACKWARD":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","backwardBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[],"tindex":"8c333bae-daae-11e4-9c6b-1de2a4d731dd","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:108","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:274","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8c333baf-daae-11e4-9c6b-3f463fcb34b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:143","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[17,439,440,441,69,442,443,70,444,445,446,71,234,255,256,62,81,154,155,156,157,158,159,160,161,162,163,164,82,447,448,449,450,451,83,36,37,38,55,39,85,56,57,329,165,166,167,168,169,86,87,88,331,90,334,91,92,335,336,93,337,338,339,340,191,192,193,341,194,95,342,96,195,196,343,344,345,97,346,40,197,198,98,347,99,100,348,349,350,101,351,102,352,103,354,358,367,205,114,373,374,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,170,469,171,172,173,174,175,470,176,177,178,179,471,180,472,181,182,183,184,185,473,186,187,188,189,116,382,386,395,213,127,401,402,474,434,190,475,476,477,478,479,480,481,482,483,484,485,486,407,131,409,413,422,222,142,428,429,487,488,489,490],"tindex":"8c3362c0-daae-11e4-9c6b-797345994894","variableMapping":{"importance":"segmentSizePower","hash":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"8c3362c1-daae-11e4-9c6b-f53d8f261952","variableMapping":{"val":"ele"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:43","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[39,434,486],"tindex":"8c3362c2-daae-11e4-9c6b-bf914636e6ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:72","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":68,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":440,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":407,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":435,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":91,"com.graphhopper.reader.OSMReaderTest.testFerry":62,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":332,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":241,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":454,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":84,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":430,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":274,"com.graphhopper.storage.MMapDataAccessTest.testSegments":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":199,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":451,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":468,"com.graphhopper.coll.CompressedArrayTest.testCompress":22,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":293,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":402,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":2,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":343,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":120,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":170,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":4,"com.graphhopper.GraphHopperTest.testPrepare":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":44,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":122,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":10,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":86,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":294,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":411,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":75,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":286,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":237,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":7,"com.graphhopper.coll.BitSetImplTest.testCopy":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":51,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":207,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":480,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":459,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":374,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":242,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":102,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":481,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":413,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":46,"com.graphhopper.GraphHopperTest.testLoadOSM":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":460,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":323,"com.graphhopper.reader.OSMReaderTest.testSort":155,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":251,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":162,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":275,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":354,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":399,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":116,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":349,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":70,"com.graphhopper.storage.RAMDataAccessTest.testHeader":473,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":113,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":190,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":482,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":425,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":390,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":404,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":352,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":106,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":260,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":358,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":312,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":309,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":377,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":48,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":133,"com.graphhopper.coll.OSMIDMapTest.testGetLong":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":365,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":359,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":421,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":131,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":220,"com.graphhopper.coll.CompressedArrayTest.testCompress2":21,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":107,"com.graphhopper.GraphHopperAPITest.testLoad":58,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":412,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":277,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":208,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":118,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":60,"com.graphhopper.storage.LevelGraphStorageTest.testClone":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":104,"com.graphhopper.reader.OSMReaderTest.testBarriers":156,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":50,"com.graphhopper.util.GHUtilityTest.testCopy":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":93,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":378,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":296,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":457,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":188,"com.graphhopper.routing.PathTest.testFindInstruction":234,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":290,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":105,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":146,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":89,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":281,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":427,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":259,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":126,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":202,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":268,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":337,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":384,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":483,"com.graphhopper.util.InstructionListTest.testWayList2":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":98,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":128,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":361,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":240,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":373,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":255,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":382,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":418,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":183,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":469,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":224,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":200,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":462,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":9,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":117,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":157,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":17,"com.graphhopper.coll.OSMIDMapTest.testGet":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":364,"com.graphhopper.routing.PathBidirRefTest.testExtract":230,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":282,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":167,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":244,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":422,"com.graphhopper.storage.RAMDataAccessTest.testCopy":181,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":284,"com.graphhopper.storage.RAMDataAccessTest.testSegments":187,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":13,"com.graphhopper.reader.OSMReaderTest.testMain":154,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":409,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":245,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":252,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":355,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":135,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":219,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":143,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":438,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":69,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":257,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":137,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":164,"com.graphhopper.storage.StorablePropertiesTest.testStore":474,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":472,"com.graphhopper.storage.GraphHopperStorageTest.testClone":388,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":347,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":317,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":393,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":129,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":338,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":406,"com.graphhopper.routing.PathTest.testTime":233,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":305,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":428,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":320,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":196,"com.graphhopper.reader.OSMReaderTest.testRelation":325,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":424,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":149,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":271,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":178,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":441,"com.graphhopper.GraphHopperTest.testFootOnly":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":463,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":95,"com.graphhopper.search.NameIndexTest.testCreate":490,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":186,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":461,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":26,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":289,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":450,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":458,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":23,"com.graphhopper.reader.OSMReaderTest.testWithBounds":163,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":189,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":180,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":372,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":442,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":344,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":321,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":132,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":410,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":153,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":269,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":369,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":79,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":108,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":386,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":444,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":6,"com.graphhopper.util.InstructionListTest.testWayList":87,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":400,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":476,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":151,"com.graphhopper.GraphHopperAPITest.testDisconnected179":59,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":339,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":370,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":485,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":335,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":266,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":328,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":249,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":38,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":389,"com.graphhopper.routing.util.EncodedValueTest.testSwap":437,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":67,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":34,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":123,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":45,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":144,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":302,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":250,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":19,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":385,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":456,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":254,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":381,"com.graphhopper.routing.PathTest.testWayList":71,"com.graphhopper.storage.MMapDataAccessTest.testCopy":479,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":192,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":316,"com.graphhopper.coll.OSMIDMapTest.testGet2":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":20,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":470,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":140,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":368,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":248,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":394,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":278,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":362,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":136,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":182,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":263,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":148,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":299,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":478,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":346,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":247,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":288,"com.graphhopper.search.NameIndexTest.testPut":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":357,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":387,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":467,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":261,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":256,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":353,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":301,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":236,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":448,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":366,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":72,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":40,"com.graphhopper.routing.PathTest.testFound":232,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":324,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":329,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":141,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":201,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":147,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":489,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":94,"com.graphhopper.util.InstructionListTest.testEmptyList":330,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":392,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":471,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":314,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":313,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":14,"com.graphhopper.reader.PrinctonReaderTest.testRead":327,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":127,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":486,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":455,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":419,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":363,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":24,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":334,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":264,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":292,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":475,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":227,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":258,"com.graphhopper.reader.OSMReaderTest.testFoot":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":97,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":446,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":449,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":29,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":429,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":43,"com.graphhopper.reader.OSMReaderTest.testOneWay":82,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":209,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":214,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":371,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":291,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":177,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":96,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":391,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":5,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":1,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":176,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":76,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":341,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":326,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":383,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":42,"com.graphhopper.routing.PathBidirRefTest.testExtract2":231,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":465,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":308,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":379,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":487,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":124,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":452,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":311,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":159,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":351,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":267,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":125,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":417,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":319,"com.graphhopper.GraphHopperTest.testFootAndCar":55,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":395,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":218,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":300,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":184,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":336,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":477,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":360,"com.graphhopper.storage.StorablePropertiesTest.testLoad":434,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":16,"com.graphhopper.GraphHopperTest.testPrepareOnly":83,"com.graphhopper.GraphHopperTest.testVia":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":92,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":161,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":130,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":331,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":398,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":77,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":342,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":276,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":426,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":223,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":103}}]
