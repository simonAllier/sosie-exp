[{"failures":[0,1],"tindex":"9bfce5fb-da3d-11e4-b611-d9ace17a4bb7","variableMapping":{"allBits":"skippedEdge2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"9c087ebc-da3d-11e4-b611-9b0c6fce3ff4","variableMapping":{"value":"endIndexPlusOne"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"9c087ebd-da3d-11e4-b611-45cc6b98a6d0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,5,55,56,6,57,7,8,58,9,59,60,61,62,63,64,10,11,65,66,12,67,13,68,69,14,70,71,15,16,17,18,72,19,73,74,75,76,23,77,24,78,79,25,80,81,26,27,28,29,82,30,83,31,32,84,33,34,85,35,36,86,87,88,37,89,41,42,43],"tindex":"9c087ebe-da3d-11e4-b611-f395c40e36fc","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[54,90],"tindex":"9c087ebf-da3d-11e4-b611-871c4681c86f","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-1},{"failures":[91],"tindex":"9c087ec0-da3d-11e4-b611-25b4dfc8fb14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtWhileImpl","sourcecode":"while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n    gnu.trove.list.array.TIntArrayList.add(int);\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"9c08a5d1-da3d-11e4-b611-abe4d39410ca","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[8,92,93,94,95,96,97,98,99,100],"tindex":"9c08a5d2-da3d-11e4-b611-d1f10e986ba8","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[44,45,46,47,48,49,50,53,63,64],"tindex":"9c08a5d3-da3d-11e4-b611-b38b23d43547","variableMapping":{"res":"initialBits","maxBits":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:261","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"9c08a5d4-da3d-11e4-b611-d724674be510","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[8],"tindex":"9c08a5d5-da3d-11e4-b611-f1477851d122","variableMapping":{"time":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:62","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"9c08a5d6-da3d-11e4-b611-4972ba8342cb","variableMapping":{"byteCount":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"9c08a5d7-da3d-11e4-b611-9546e6b13c15","variableMapping":{"segmentSizeInBytes":"x2","length":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:357","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":0},{"failures":[],"tindex":"9c08a5d8-da3d-11e4-b611-57bcddea3816","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"9c08a5d9-da3d-11e4-b611-effc52ee088b","variableMapping":{"hasOther":"defaultB","hasRel":"defaultB"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:735","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"9c08a5da-da3d-11e4-b611-81d691f1cbf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:454","type":"CtLocalVariableImpl","sourcecode":"java.lang.Exception java.lang.Exception"},"status":0},{"failures":[54,5,55,56,57,7,58,60,61,62,84,35,88,37,101,102,103],"tindex":"9c08a5db-da3d-11e4-b611-4bd2a24ea32f","variableMapping":{"high":"value","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:332","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-1},{"failures":[],"tindex":"9c08a5dc-da3d-11e4-b611-133e4c871e9e","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:60","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getAdjNode()"},"status":-2},{"failures":[5,35,88,101,104],"tindex":"9c08a5dd-da3d-11e4-b611-9fc5d4846db8","variableMapping":{"scDirMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:210","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"9c08a5de-da3d-11e4-b611-b5c2d6498637","variableMapping":{"acceptBit":"tmpValue","ferryBit":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"9c08a5df-da3d-11e4-b611-29558a535898","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:39","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.RacingBikeFlagEncoder.this(com.graphhopper.routing.util.AbstractFlagEncoder.((int)(com.graphhopper.routing.util.AbstractFlagEncoder.parseLong(java.lang.String, \"speedBits\", 4))), com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseDouble(java.lang.String, \"speedFactor\", 2), (com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseBoolean(java.lang.String, \"turnCosts\", false) ? 3 : 0))"},"status":-2},{"failures":[],"tindex":"9c08a5e0-da3d-11e4-b611-d94b2d401acb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"9c08a5e1-da3d-11e4-b611-df1e2a5e7b2a","variableMapping":{"bit":"dLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"9c08ccf2-da3d-11e4-b611-3567296b85de","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"9c08ccf3-da3d-11e4-b611-9d24c0c7db36","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[105,106,107,108,109,110,111,112,113,114],"tindex":"9c08ccf4-da3d-11e4-b611-531f594a2e5a","variableMapping":{"dir":"wayTypeName","tr":"tr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:257","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"left\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"9c08ccf5-da3d-11e4-b611-afe16f3b5f31","variableMapping":{"y1":"edgeEntryBytes","y2":"lastEdgeIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[],"tindex":"9c08ccf6-da3d-11e4-b611-e5ba7a6fc9da","variableMapping":{"tmp":"key","tmpNo":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:145","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-2},{"failures":[54],"tindex":"9c08ccf7-da3d-11e4-b611-e9b28a245871","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"9c08ccf8-da3d-11e4-b611-3177e616309b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:94","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)))"},"status":-2},{"failures":[115,116,117,118,106,108,119,111,120],"tindex":"9c08ccf9-da3d-11e4-b611-8337f7c2f5ce","variableMapping":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[],"tindex":"9c08ccfa-da3d-11e4-b611-0900e4a42f91","variableMapping":{"entry":"entryVal","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.BIKE","entryVal":"com.graphhopper.routing.util.EncodingManager.CAR","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:170","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"9c08ccfb-da3d-11e4-b611-3f9a59c7507b","variableMapping":{"str":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:181","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":0},{"failures":[],"tindex":"9c08ccfc-da3d-11e4-b611-7db3b5c00968","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:106","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[121,122,123,124,125,126,127,128,129,130,131],"tindex":"9c08ccfd-da3d-11e4-b611-cd9a6e5449f9","variableMapping":{"initLeafSize":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[31],"tindex":"9c08ccfe-da3d-11e4-b611-11e1c81215c9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:190","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-1},{"failures":[123,125],"tindex":"9c08ccff-da3d-11e4-b611-87743df93dae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[5,55,56,6,7,8,58,9,59,60,61,132,62,133,33,34,85,35,36,86,87,37,134,135,90,136,137,138],"tindex":"9c08f410-da3d-11e4-b611-311bcbf71e4b","variableMapping":{"tt":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:181","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[],"tindex":"9c08f411-da3d-11e4-b611-79a0e1b4e42b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || boolean) {\n        if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2},{"failures":[2,3,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,54,5,55,56,6,57,7,8,58,9,59,60,61,62,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,10,11,266,65,66,12,67,13,68,69,14,70,71,15,16,17,18,19,73,267,20,21,268,22,269,270,271,272,273,274,75,76,23,77,24,78,79,25,80,81,26,27,28,29,30,83,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,31,32,84,133,33,34,85,35,36,86,87,88,37,320,321,38,39,40,91,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,127,343,344,128,129,345,130,346,347,348,131,349,350,351,352,353,354,355,356,357,358,89,359,360,361,41,42,362,363,43,364,0,365,1,366,367],"tindex":"9c08f412-da3d-11e4-b611-1f02ab599c33","variableMapping":{"segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[141,145,146,147,54,55,56,6,57,7,8,58,9,59,60,61,62,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,174,178,199,205,210,213,216,218,222,243,249,254,257,12,67,13,267,20,21,268,22,23,77,24,278,282,303,309,314,317,84,133,33,34,85,36,86,87,88,323,324,325,329,330,332,333,334,336,337,340,365],"tindex":"9c08f413-da3d-11e4-b611-c7b282021b25","variableMapping":{"i":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"9c08f414-da3d-11e4-b611-ed8774bc19a4","variableMapping":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:89","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[387,388,133,33,36,389,86,87,37,390],"tindex":"9c08f415-da3d-11e4-b611-9d9823564261","variableMapping":{"dataAccess":"_location"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:163","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:47","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[],"tindex":"9c091b26-da3d-11e4-b611-5dccb3fc5f7d","variableMapping":{"value":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:397","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"9c091b27-da3d-11e4-b611-e7ef3137b976","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:181","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(com.graphhopper.util.EdgeSkipIterState.getEdge())"},"status":-2},{"failures":[],"tindex":"9c091b28-da3d-11e4-b611-f397e09c7ade","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:84","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-1},{"failures":[],"tindex":"9c091b29-da3d-11e4-b611-cd02bb8bdfc6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:486","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[104],"tindex":"9c091b2a-da3d-11e4-b611-bfcf5fc85b94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:192","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[44,45,46,47,48,49,50,51,52,53,54,5,55,56,6,57,7,8,58,9,59,60,61,62,63,64,10,11,65,66,12,67,13,68,69,14,70,71,15,16,17,18,72,19,73,74,75,76,23,77,24,78,79,25,80,81,26,27,28,29,82,30,83,31,32,84,33,34,85,35,36,86,87,88,37,89,41,42,43],"tindex":"9c091b2b-da3d-11e4-b611-4d7b01164cbd","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[],"tindex":"9c091b2c-da3d-11e4-b611-85e574894a8d","variableMapping":{"need":"minutes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:196","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"9c091b2d-da3d-11e4-b611-173375093aad","variableMapping":{"edgePointer":"acceptBit","maxEdges":"internalFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:656","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[324],"tindex":"9c091b2e-da3d-11e4-b611-016bbddd95b5","variableMapping":{"ref":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"9c091b2f-da3d-11e4-b611-8567ae60cb39","variableMapping":{"flags":"encoded","mask":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long)"},"status":0},{"failures":[],"tindex":"9c091b30-da3d-11e4-b611-499f98bc7fb9","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:118","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[118,391,392,119,393,394],"tindex":"9c091b31-da3d-11e4-b611-b5d86aca7e1a","variableMapping":{"pos":"shift","mSize":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:199","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"9c091b32-da3d-11e4-b611-b91c9d380b66","variableMapping":{"elem":"a","size":"start","value":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:300","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        return int;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[124],"tindex":"9c091b33-da3d-11e4-b611-3947127976dc","variableMapping":{"periodicUpdates":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"9c091b34-da3d-11e4-b611-2162a776eac6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"9c091b35-da3d-11e4-b611-6d21678b29d4","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:349","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"9c091b36-da3d-11e4-b611-b57abe121de6","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:98","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[351],"tindex":"9c094247-da3d-11e4-b611-6bf68ad88ba8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"9c094248-da3d-11e4-b611-9f6e8876eaf2","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"9c094249-da3d-11e4-b611-2f64434e874d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:110","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[141,145,146,147,151,152,153,54,5,55,6,8,58,9,60,62,174,179,180,183,187,189,194,196,202,204,207,209,210,214,216,218,223,224,227,231,233,238,240,246,248,251,253,254,258,265,73,274,83,395,396,397,398,275,399,400,401,276,402,403,404,405,278,283,284,287,291,293,298,300,306,308,311,313,314,318,31,33,34,85,35,36,87,320,321,38,40,91,325,333,336,341,127,343,344,128,129,130,346,347,131,349,350,351,352,353,356,359,361,41,362,43,0,365,1,367],"tindex":"9c09424a-da3d-11e4-b611-05d691888a38","variableMapping":{"oldValueIndex":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:348","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[],"tindex":"9c09424b-da3d-11e4-b611-25ca53999e83","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"9c09424c-da3d-11e4-b611-8b96d44d30d1","variableMapping":{"factor":"fwdSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[406,407,408],"tindex":"9c09424d-da3d-11e4-b611-f5674e352b6d","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:434","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\\t\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[90,409],"tindex":"9c09424e-da3d-11e4-b611-299b138a7210","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"9c09424f-da3d-11e4-b611-8b6738d743a9","variableMapping":{"str":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[324],"tindex":"9c094250-da3d-11e4-b611-23ca5fcd44f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[105,107,108,109,110,112,113,120,114],"tindex":"9c094251-da3d-11e4-b611-f1a50431b4c1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:409","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[54,409],"tindex":"9c094252-da3d-11e4-b611-77bfe0da6680","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:449","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"9c094253-da3d-11e4-b611-f78bceb20607","variableMapping":{"delta_lat":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","r_lat":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","a_lat":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","delta_lon":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","r_lon":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","a_lon":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR","norm":"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:201","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[104],"tindex":"9c096964-da3d-11e4-b611-e783991a7edb","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"9c096965-da3d-11e4-b611-bd653b334904","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:374","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"9c096966-da3d-11e4-b611-8de7391fda44","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:325","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-2},{"failures":[],"tindex":"9c096967-da3d-11e4-b611-5b8a76cd925c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDirectory:31","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDirectory.this(\"\", false)"},"status":-2},{"failures":[121,124,126],"tindex":"9c096968-da3d-11e4-b611-b5787b36f479","variableMapping":{"edgeId":"child","nextEdge":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:762","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[104,90,137,94,95,98,100],"tindex":"9c096969-da3d-11e4-b611-6f6eb9ac5e91","variableMapping":{"newName":"key","name":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:232","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[104,135,90,137,410,94,411,95,412,98,413,100],"tindex":"9c0aa1ea-da3d-11e4-b611-0d7146ac9b17","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[141,145,146,147,148,414,415,416,54,5,55,56,6,57,7,8,58,9,59,60,61,62,368,369,417,370,371,418,419,420,421,422,373,374,375,423,424,376,377,378,379,425,426,427,380,381,382,428,429,383,384,385,386,171,174,175,178,199,205,210,212,213,216,218,219,222,243,249,254,256,257,12,67,13,267,20,21,268,22,23,77,24,276,278,279,282,303,309,314,316,317,430,431,432,433,84,133,33,34,85,35,36,86,87,88,37,323,324,325,326,329,330,332,333,334,335,336,337,339,340,365],"tindex":"9c0aa1eb-da3d-11e4-b611-9742afba598a","variableMapping":{"segments":"segments"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:303","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:116","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-1},{"failures":[],"tindex":"9c0aa1ec-da3d-11e4-b611-2b869e568d1e","variableMapping":{"mKeys":"mKeys","com.graphhopper.coll.SparseIntIntArray.DELETED":"index","i":"index","mSize":"index","value":"index","mValues":"mKeys","key":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:165","type":"CtIfImpl","sourcecode":"if ((int < (int)) && ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    int[][int] = int;\n    int[][int] = int;\n    return int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"9c0aa1ed-da3d-11e4-b611-fb01df8d9bcf","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:342","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[54,409],"tindex":"9c0aa1ee-da3d-11e4-b611-5160b51ddfef","variableMapping":{"compressionLevel":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:447","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60"},"status":-1},{"failures":[93,434,97,99],"tindex":"9c0aa1ef-da3d-11e4-b611-0f658929c75c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"9c0aa1f0-da3d-11e4-b611-e55e17eae03b","variableMapping":{"node":"node","directionBitMask":"directionBitMask","intendedValues":"intendedValues","restrictedValues":"intendedValues","potentialBarriers":"intendedValues","restrictions":"restrictions","blockByDefault":"blockFords"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:214","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.HashSet<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":0},{"failures":[],"tindex":"9c0ac901-da3d-11e4-b611-4dedf7a3f0b2","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[44,45,46,47,49,50,51,52,53,63,64,65,69,70,71,74,75,79,80,81],"tindex":"9c0ac902-da3d-11e4-b611-a1ad0ff78c98","variableMapping":{"bits":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:190","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"9c0ac903-da3d-11e4-b611-ef1b46a92bf7","variableMapping":{"high":"turnRestrictionBit","highKey":"turnRestrictionBit","key":"turnRestrictionBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-2},{"failures":[],"tindex":"9c0ac904-da3d-11e4-b611-3579abe3b6ca","variableMapping":{"item":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:260","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.reader.OSMWay.hasTags()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:70","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"9c0ac905-da3d-11e4-b611-61636b25636c","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[44,45,47,49,50,51,52,63,64,65,69,70,71,74,75,79,80,81],"tindex":"9c0ac906-da3d-11e4-b611-ef3d0a0c880a","variableMapping":{"byteCount":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"9c0ac907-da3d-11e4-b611-3b1b2b5252f3","variableMapping":{"edgeKey1":"com.graphhopper.routing.util.FlagEncoder.K_BACKWARD","edgeKey2":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:521","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:50","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int))) || ((boolean) && (com.graphhopper.routing.util.FlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)))"},"status":-2},{"failures":[55,56,6,65,67,70,71,16,17,18,19,435,436,437,75,77,80,81,26,27,28,29,30,31,33,34,85,35,36,87,41,42,43],"tindex":"9c0ac908-da3d-11e4-b611-792a15549d8f","variableMapping":{"size":"sLon","from":"dLat","end":"tmpErr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-1},{"failures":[2,3,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,54,5,55,56,6,57,7,8,58,9,59,60,61,62,157,158,160,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,10,11,266,65,66,12,67,13,68,69,14,70,71,15,16,17,18,19,73,267,20,21,268,22,269,270,271,272,273,274,75,76,23,77,24,78,79,25,80,81,26,27,28,29,30,83,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,31,32,84,133,33,34,85,35,36,86,87,88,37,320,321,38,39,40,91,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,127,343,344,128,129,345,130,346,347,348,131,349,350,351,352,353,354,355,356,357,358,89,359,360,361,41,42,362,363,43,364,0,365,1,366,367],"tindex":"9c0ac909-da3d-11e4-b611-fde1fee19291","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[44,45,47,49,50,51,52,63,64,65,69,70,71,74,75,79,80,81],"tindex":"9c0ac90a-da3d-11e4-b611-4d2fc117f8be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[],"tindex":"9c0ac90b-da3d-11e4-b611-f50cd9581d83","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[],"tindex":"9c0af01c-da3d-11e4-b611-57762aad84b5","variableMapping":{"len":"acceptBit","start":"ferryBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:176","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[154,54,5,55,56,6,57,7,8,58,115,9,59,60,61,62,166,167,168,169,170,171,172,173,174,175,176,177,438,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,439,217,218,219,220,221,440,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,265,73,274,83,441,395,396,442,443,397,444,445,446,398,447,275,448,449,450,451,399,452,400,453,454,455,387,456,401,457,276,388,458,402,459,403,404,460,461,462,405,463,277,278,279,280,281,464,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,84,35,88,37,465,466,320,101,467,468,102,104,469,470,471,134,472,135,90,473,136,406,137,474,475,476,477,478,479,116,480,481,117,103,39,138,482,483,118,484,105,92,106,485,93,486,487,488,489,490,410,491,107,492,94,493,391,434,494,495,108,496,497,498,499,500,411,501,109,502,95,392,323,324,503,504,119,505,110,96,111,506,97,507,508,509,510,511,412,512,112,513,98,514,393,99,515,113,120,516,517,518,519,520,413,521,114,522,100,523,394,524,525,526,527,528,329,529,350,351,352,353,354,355,356,357,358,89,359,360,361,41,42,362,363,43,364,0,365,1,366,367],"tindex":"9c0af01d-da3d-11e4-b611-f1e4f251e0a5","variableMapping":{"from":"encoderCount","hash":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[65,69,70,71,75,79,80,81],"tindex":"9c0af01e-da3d-11e4-b611-39044dedfe64","variableMapping":{"len":"allBits","start":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":204,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":364,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":171,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":408,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":395,"com.graphhopper.reader.OSMReaderTest.testFerry":54,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":149,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":92,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":435,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":496,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":67,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":133,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":215,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":232,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":420,"com.graphhopper.coll.CompressedArrayTest.testCompress":64,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":501,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":317,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":455,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":293,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":266,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":421,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":428,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":347,"com.graphhopper.GraphHopperTest.testPrepare":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":460,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":300,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":341,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":484,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":359,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":109,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":3,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":177,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":65,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":91,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":483,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":352,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":358,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":77,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":106,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":216,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":51,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":178,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":349,"com.graphhopper.GraphHopperTest.testLoadOSM":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":26,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":24,"com.graphhopper.reader.OSMReaderTest.testSort":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":492,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":39,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":219,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":374,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":312,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":278,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":461,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":336,"com.graphhopper.storage.RAMDataAccessTest.testHeader":429,"com.graphhopper.routing.DijkstraTest.initializationError":527,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":253,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":418,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":203,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":289,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":439,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":110,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":394,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":522,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":14,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":297,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":42,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":68,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":398,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":355,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":354,"com.graphhopper.coll.OSMIDMapTest.testGetLong":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":236,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":242,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":195,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":174,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":197,"com.graphhopper.coll.CompressedArrayTest.testCompress2":63,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":302,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":515,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":233,"com.graphhopper.GraphHopperAPITest.testLoad":31,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":438,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":158,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":465,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":294,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":284,"com.graphhopper.storage.LevelGraphStorageTest.testClone":182,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":409,"com.graphhopper.reader.OSMReaderTest.testBarriers":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":322,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":506,"com.graphhopper.util.GHUtilityTest.testCopy":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":413,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":95,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":385,"com.graphhopper.routing.PathTest.testFindInstruction":326,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":499,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":200,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":224,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":102,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":151,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":211,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":505,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":313,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":298,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":129,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":237,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":412,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":481,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":526,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":184,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":444,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":165,"com.graphhopper.util.InstructionListTest.testWayList2":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":514,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":27,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":318,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":256,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":279,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":323,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":186,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":422,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":485,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":234,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":267,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":356,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":57,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":373,"com.graphhopper.routing.AStarTest.initializationError":525,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":365,"com.graphhopper.coll.OSMIDMapTest.testGet":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":231,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":104,"com.graphhopper.routing.PathBidirRefTest.testExtract":327,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":199,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":487,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":16,"com.graphhopper.storage.RAMDataAccessTest.testCopy":380,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":388,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":494,"com.graphhopper.storage.RAMDataAccessTest.testSegments":384,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":486,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":83,"com.graphhopper.util.GHUtilityTest.testSort2":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":362,"com.graphhopper.reader.OSMReaderTest.testMain":55,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":488,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":52,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":94,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":134,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":403,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":189,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":193,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":214,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":190,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":509,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":246,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":504,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":196,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":61,"com.graphhopper.storage.StorablePropertiesTest.testStore":419,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":427,"com.graphhopper.storage.GraphHopperStorageTest.testClone":286,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":459,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":137,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":136,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":296,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":100,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":445,"com.graphhopper.routing.PathTest.testTime":528,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":520,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":212,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":183,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":478,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":29,"com.graphhopper.reader.OSMReaderTest.testRelation":115,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":454,"com.graphhopper.util.GHUtilityTest.testSortDirected":143,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":513,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":378,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":332,"com.graphhopper.GraphHopperTest.testFootOnly":88,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":437,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":495,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":20,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":90,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":69,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":353,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":342,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":503,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":399,"com.graphhopper.search.NameIndexTest.testCreate":433,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":383,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":329,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":161,"com.graphhopper.routing.QueryGraphTest.testOneWay":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":82,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":47,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":498,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":23,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":44,"com.graphhopper.reader.OSMReaderTest.testWithBounds":60,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":98,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":426,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":255,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":449,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":469,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":116,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":179,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":176,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":512,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":392,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":245,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":274,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":473,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":238,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":282,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":351,"com.graphhopper.util.InstructionListTest.testWayList":146,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":93,"com.graphhopper.GraphHopperAPITest.testDisconnected179":32,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":446,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":442,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":510,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":153,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":40,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":453,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":491,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":85,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":348,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":482,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":361,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":524,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":346,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":474,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":517,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":107,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":366,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":72,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":160,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":391,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":277,"com.graphhopper.routing.PathTest.testWayList":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":462,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":518,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":448,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":407,"com.graphhopper.coll.OSMIDMapTest.testGet2":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":367,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":424,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":207,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":410,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":299,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":466,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":229,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":287,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":70,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":194,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":71,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":381,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":379,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":507,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":113,"com.graphhopper.util.GHUtilityTest.testSort":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":457,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":490,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":497,"com.graphhopper.search.NameIndexTest.testPut":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":258,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":66,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":22,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":271,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":96,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":335,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":269,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":324,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":516,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":415,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":468,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":239,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":321,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":164,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":276,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":37,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":103,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":209,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":489,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":235,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":122,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":432,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":275,"com.graphhopper.util.InstructionListTest.testEmptyList":144,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":291,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":425,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":89,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":521,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":41,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":477,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":471,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":470,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":502,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":363,"com.graphhopper.reader.PrinctonReaderTest.testRead":152,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":314,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":13,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":230,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":45,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":447,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":441,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":240,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":508,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":372,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":480,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":519,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":119,"com.graphhopper.reader.OSMReaderTest.testFoot":5,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":401,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":416,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":80,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":213,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":434,"com.graphhopper.reader.OSMReaderTest.testOneWay":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":81,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":295,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":310,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":252,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":500,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":377,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":97,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":128,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":406,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":343,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":376,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":320,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":450,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":331,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":132,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":280,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":162,"com.graphhopper.routing.PathBidirRefTest.testExtract2":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":28,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":114,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":265,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":430,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":308,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":523,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":8,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":436,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":463,"com.graphhopper.util.SimpleIntDequeTest.testPush":4,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":511,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":78,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":311,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":185,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":475,"com.graphhopper.GraphHopperTest.testFootAndCar":35,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":303,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":191,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":120,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":19,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":443,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":479,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":476,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":0,"com.graphhopper.GraphHopperTest.testPrepareOnly":84,"com.graphhopper.GraphHopperTest.testVia":33,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":493,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":396,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":170,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":148,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":307,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":467,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":452,"com.graphhopper.routing.AStarBidirectionTest.initializationError":529,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":138,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":208,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":206,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":218}}]
