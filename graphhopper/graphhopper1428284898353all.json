[{"failures":[0,1,2,3],"tindex":"019ce3a9-dbff-11e4-8ff7-d386fd2a5462","variableMapping":{"size":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[],"tindex":"019da6fa-dbff-11e4-8ff7-f3b40cccf64e","variableMapping":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:156","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"019da6fb-dbff-11e4-8ff7-b388f1ea29ca","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:194","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[4,5,6,7,8],"tindex":"019da6fc-dbff-11e4-8ff7-97269476f259","variableMapping":{"mainEdgeState":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-1},{"failures":[],"tindex":"019da6fd-dbff-11e4-8ff7-0f4f0361fa9a","variableMapping":{"precision":"java.lang.Math.PI","lat":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:75","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[],"tindex":"019da6fe-dbff-11e4-8ff7-85c6bcefdbe9","variableMapping":{"arg":"s","index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:98","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:750","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,0,42,1,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,4,5,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,2,425,426,427,428,429,430,431,3,432,433,434,435,436,437,6,438,439,440,441,442,443,444,445,7,446,447,8,448,449,450,451,452,453,454,455,456,457],"tindex":"019dce0f-dbff-11e4-8ff7-b58f8ba06533","variableMapping":{"str":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"019dce10-dbff-11e4-8ff7-05c80a536298","variableMapping":{"high":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:120","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"019dce11-dbff-11e4-8ff7-4551513b1e8a","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.Circle:52","type":"CtReturnImpl","sourcecode":"return double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:55","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"019dce12-dbff-11e4-8ff7-8f34150650f8","variableMapping":{"scDirMask":"oldRelationFlags","flags":"oldRelationFlags","dir":"oldRelationFlags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[344,360,382,398],"tindex":"019dce13-dbff-11e4-8ff7-5bdf7ae5da38","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"019dce14-dbff-11e4-8ff7-715fef13636b","variableMapping":{"min":"start","tmpSize":"connectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:94","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"019dce15-dbff-11e4-8ff7-77b9d30abd69","variableMapping":{"cap":"flags","bytes":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"019dce16-dbff-11e4-8ff7-dbaa349853c2","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"019dce17-dbff-11e4-8ff7-eb71e9a61173","variableMapping":{"distInMeter":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 1000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"019dce18-dbff-11e4-8ff7-a1271a3d9d48","variableMapping":{"min":"lastPrio","dist":"lastPrio"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":0},{"failures":[],"tindex":"019dce19-dbff-11e4-8ff7-87ef34c67b13","variableMapping":{"sacScale":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":0},{"failures":[],"tindex":"019dce1a-dbff-11e4-8ff7-797cacba0714","variableMapping":{"fromX":"maxLon","toX":"maxLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,37,38,39,40,41,458,459,460,461,279,280,281,282,283,284,285,287,288,289,290],"tindex":"019dce1b-dbff-11e4-8ff7-09ac17cca45b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:133","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.storage.DataAccess>.put(java.lang.String, com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"019df52c-dbff-11e4-8ff7-d9bd6650bcf1","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"019df52d-dbff-11e4-8ff7-731c3aff7b6e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"019df52e-dbff-11e4-8ff7-651e2ff0d011","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[462,426,428,3,433,435],"tindex":"019df52f-dbff-11e4-8ff7-afe2d8905b28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[463,464],"tindex":"019df530-dbff-11e4-8ff7-4f82ef7c6696","variableMapping":{"maxLeafEntries":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:52","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"019df531-dbff-11e4-8ff7-af645b93386c","variableMapping":{"str":"pavementName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:274","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.substring(0, ((java.lang.String.length()) - 2))) + \":\") + (java.lang.String.substring(((java.lang.String.length()) - 2)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[28,284,289],"tindex":"019df532-dbff-11e4-8ff7-cfdac73211cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:281","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"019df533-dbff-11e4-8ff7-776d6acbc220","variableMapping":{"lastKey":"shift","key":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>= long"},"status":-2},{"failures":[],"tindex":"019df534-dbff-11e4-8ff7-83d7e4938634","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:249","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = long > (((long)(int)) * (int))"},"status":-2},{"failures":[],"tindex":"019df535-dbff-11e4-8ff7-3172e333f118","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"019df536-dbff-11e4-8ff7-05e20a7730a6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:77","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()"},"status":-2},{"failures":[],"tindex":"019df537-dbff-11e4-8ff7-6166d42cd5d6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"019df538-dbff-11e4-8ff7-c9826d52136c","variableMapping":{"lastKey":"initialBits","key":"initialBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":0},{"failures":[220],"tindex":"019df539-dbff-11e4-8ff7-37c5e8a81dc8","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n    return true;\n"},"status":-1},{"failures":[465,463,466,467,3,435,6,438,439,442,443,445,7,8,450,451,452,453,455,456,457],"tindex":"019e1c4a-dbff-11e4-8ff7-0bd8f446f69d","variableMapping":{"id":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:487","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"019e1c4b-dbff-11e4-8ff7-9df047fc9e0a","variableMapping":{"tmp":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:138","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[21,40,281,303,308,309,325,468],"tindex":"019e1c4c-dbff-11e4-8ff7-df311c5d5c6c","variableMapping":{"midLat":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[],"tindex":"019e1c4d-dbff-11e4-8ff7-791ca364a31f","variableMapping":{"is3D":"reverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:65","type":"CtIfImpl","sourcecode":"if (boolean)\n    return 3;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:89","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean)"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,0,42,1,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,4,5,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,2,425,426,427,428,429,430,431,3,432,433,434,435,436,437,6,438,439,440,441,442,443,444,445,7,446,447,8,448,449,450,451,452,453,454,455,456,457],"tindex":"019e1c4e-dbff-11e4-8ff7-9170de9e5178","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":-1},{"failures":[42,43,46,144,146,281,289,2,3,433,435,442,445,451,453,455],"tindex":"019e1c4f-dbff-11e4-8ff7-1b0c31e411ed","variableMapping":{"strLen":"index","bLen":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-1},{"failures":[],"tindex":"019e1c50-dbff-11e4-8ff7-0f05ec28f2ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"019e1c51-dbff-11e4-8ff7-a12864cd292a","variableMapping":{"weight":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-2},{"failures":[],"tindex":"019e1c52-dbff-11e4-8ff7-73251092be4e","variableMapping":{"param":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:65","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:402","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"way\")"},"status":0},{"failures":[],"tindex":"019e1c53-dbff-11e4-8ff7-8f889c30721e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:108","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.flagsDefault(boolean, boolean)"},"status":-2},{"failures":[],"tindex":"019e4364-dbff-11e4-8ff7-9bbcbf90e10f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:541","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[],"tindex":"019e4365-dbff-11e4-8ff7-1fdd3fb22618","variableMapping":{"size":"edgeId","from":"edgeId","end":"edgeId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setEdgeId(int)"},"status":0},{"failures":[],"tindex":"019e4366-dbff-11e4-8ff7-f10fb57eedfe","variableMapping":{"heights":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:72","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getHeader(0)) == 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"019e4367-dbff-11e4-8ff7-f74c69cc16ee","variableMapping":{"lastTime":"nodeBitMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:59","type":"CtAssignmentImpl","sourcecode":"long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:533","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[],"tindex":"019e4368-dbff-11e4-8ff7-8fa0913b8196","variableMapping":{"freeIndex":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"019e4369-dbff-11e4-8ff7-f116978b6633","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:345","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[],"tindex":"019e436a-dbff-11e4-8ff7-353bb9294dec","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:332","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:backward\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[281,426,3,435,6,439,447,450,453,454,455,457],"tindex":"019e436b-dbff-11e4-8ff7-cbb9f507d519","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:285","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeSkipIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"019e436c-dbff-11e4-8ff7-6791ef17bd78","variableMapping":{"size":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.remove(int, int)"},"status":0},{"failures":[318,327,365,386],"tindex":"019e436d-dbff-11e4-8ff7-55c45199a552","variableMapping":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"speed","way":"way","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[],"tindex":"019e436e-dbff-11e4-8ff7-35f8c94fed7b","variableMapping":{"index":"minOnewayNetworkSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:164","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"019e436f-dbff-11e4-8ff7-ffbccb51e7c6","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"019e4370-dbff-11e4-8ff7-55e91c140d6b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:107","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"019e4371-dbff-11e4-8ff7-5be3054524b1","variableMapping":{"leafEntry":"component","nodeId":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:111","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"019e4372-dbff-11e4-8ff7-eb55c17f4209","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"019e4373-dbff-11e4-8ff7-0f8fef5a10e2","variableMapping":{"additionalEdgeFilter":"com.graphhopper.routing.util.EdgeFilter.ALL_EDGES"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[13,469,470,32,74,120,154,471,472,473,474,475,476,477,478,184,215,259,281,283,284,288,289,412,414,415,416,419,420,422,443,445,8,448,451,454],"tindex":"019e6a84-dbff-11e4-8ff7-e75f927f4b90","variableMapping":{"ab_rb":"d1","ab_ar":"d1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:246","type":"CtReturnImpl","sourcecode":"return (double > 0) && (double > 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-1},{"failures":[],"tindex":"019e6a85-dbff-11e4-8ff7-33d3a25ee1d0","variableMapping":{"java.lang.Integer.MAX_VALUE":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:163","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-2},{"failures":[],"tindex":"019e6a86-dbff-11e4-8ff7-2d0ae4c6deb5","variableMapping":{"lockFile":"osmValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:159","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[],"tindex":"019e6a87-dbff-11e4-8ff7-4f41f5eaf1c7","variableMapping":{"allBits":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[19,20,21,479,480,481,482,407,408],"tindex":"019e6a88-dbff-11e4-8ff7-4d528ee50af6","variableMapping":{"dist":"lat1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:61","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.AngleCalc.com.graphhopper.util.AngleCalc.atan2((double - double), (double - double))"},"status":-1},{"failures":[],"tindex":"019e6a89-dbff-11e4-8ff7-db1debbe9d61","variableMapping":{"maxSpeed":"defaultD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:719","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"019e6a8a-dbff-11e4-8ff7-e103eb1f92a3","variableMapping":{"flags":"oldRelationFlags","nodeFlags":"oldRelationFlags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:258","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":0},{"failures":[],"tindex":"019e6a8b-dbff-11e4-8ff7-352f35dbc1cf","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[483],"tindex":"019e6a8c-dbff-11e4-8ff7-3df53c26d635","variableMapping":{"fileDetails":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[27,28,29,30,32,33,34,35,39,40,41,484,485,318,328,330,331,332,342,346,348,350,358,361,366,368,369,370,380,384,387,388,396,400],"tindex":"019e6a8d-dbff-11e4-8ff7-ffb912e8481c","variableMapping":{"versionHint":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"019e6a8e-dbff-11e4-8ff7-ef3cf7a73c39","variableMapping":{"nodeB":"high","edgeId":"high","nodeA":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"019e6a8f-dbff-11e4-8ff7-21a6fe5cb400","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:160","type":"CtReturnImpl","sourcecode":"return java.lang.Integer"},"status":-2},{"failures":[486,487,488,489,490,491,492,493,494,495],"tindex":"019e6a90-dbff-11e4-8ff7-a52e1a49440b","variableMapping":{"lastKey":"bits","key":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[],"tindex":"019e6a91-dbff-11e4-8ff7-a902bdb6dbc1","variableMapping":{"str":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:143","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"019e6a92-dbff-11e4-8ff7-6bf358d3bf6e","variableMapping":{"entries":"elem","length":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:184","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:109","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[9,10,11,12,13,14,16,18,19,20,21,22,23,24,25,26,496],"tindex":"019e6a93-dbff-11e4-8ff7-5df1515e729a","variableMapping":{"id":"indexDivisor"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"status":-2},{"failures":[],"tindex":"019e6a94-dbff-11e4-8ff7-8f32aa36075a","variableMapping":{"i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"019e6a95-dbff-11e4-8ff7-4d120391de55","variableMapping":{"i":"x1","lastIndex":"x2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"019e6a96-dbff-11e4-8ff7-87a3f15db7cb","variableMapping":{"additionalEdgeFilter":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:62","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"status":-2},{"failures":[],"tindex":"019e91a7-dbff-11e4-8ff7-cba642489edc","variableMapping":{"nodeFlags":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:279","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"019e91a8-dbff-11e4-8ff7-d7fc7b13db29","variableMapping":{"maxSpeed":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"019e91a9-dbff-11e4-8ff7-db2aae31fcb3","variableMapping":{"nodeB":"high","edgeId":"high","nodeA":"high"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:511","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:415","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"019e91aa-dbff-11e4-8ff7-9badfd21b333","variableMapping":{"elem":"nodeIndex","size":"start","i":"start","element":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[303],"tindex":"019e91ab-dbff-11e4-8ff7-53c337a3879e","variableMapping":{"osmFileStr":"tt","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:379","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"OSM file cannot be empty.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[485],"tindex":"019e91ac-dbff-11e4-8ff7-41e03362f937","variableMapping":{"edgePointer":"relBitMask","edgeEntryBytes":"usedBits","nextEdge":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[344,360,382,398],"tindex":"019e91ad-dbff-11e4-8ff7-31d36acf8246","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:238","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[13,18,19,20,21,29,30,31,32,33,497,498,499,500,501,502,503,504,45,48,53,74,80,85,87,88,91,94,99,120,126,131,133,134,149,150,151,179,180,181,220,233,238,259,265,270,272,273,505,506,507,279,281,282,283,284,285,287,288,289,290,362,363,407,408,411,412,414,415,416,418,419,422,454],"tindex":"019e91ae-dbff-11e4-8ff7-bf2a03639862","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"019e91af-dbff-11e4-8ff7-17e7eb05e64b","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[34],"tindex":"019e91b0-dbff-11e4-8ff7-9f4717232ea4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:585","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\"))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"no\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"cycleway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\"))\n        long |= long;\n    else\n        long |= long;\n    \n} else {\n    long |= long;\n}"},"status":-1},{"failures":[],"tindex":"019e91b1-dbff-11e4-8ff7-315b90bc1757","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:720","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"01a45e12-dbff-11e4-8ff7-7b1033cec1fe","variableMapping":{"pointIndex":"tmpErr","index":"tmpErr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:354","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"01a45e13-dbff-11e4-8ff7-33908c40d9c8","variableMapping":{"i":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:200","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[464],"tindex":"01a45e14-dbff-11e4-8ff7-b74361a37d82","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"01a45e15-dbff-11e4-8ff7-6d9ae7fa80b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[27,28,29,30,32,33,34,35,39,40,41,484,485,328,330,331,332,342,346,358,361,366,368,369,370,380,384,387,388,396,400],"tindex":"01a45e16-dbff-11e4-8ff7-c5d113d4e1ae","variableMapping":{"allowWrites":"isPusingSection"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1085","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[],"tindex":"01a45e17-dbff-11e4-8ff7-b5a28401694c","variableMapping":{"high":"length"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-2},{"failures":[],"tindex":"01a45e18-dbff-11e4-8ff7-e5b9dabd3b66","variableMapping":{"edgePointer":"wayBitMask","edgeEntryBytes":"shift"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:522","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:512","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[28,29,31,34,35,37,38,39,40,508,41,280,281,282,283,284,285,287,288,290,303,308,310,325],"tindex":"01a45e19-dbff-11e4-8ff7-57688e2f17d2","variableMapping":{"size":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:207","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"01a45e1a-dbff-11e4-8ff7-01de96a261f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":79,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":452,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":45,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":468,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":139,"com.graphhopper.GraphHopperAPITest.testNoLoad":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":195,"com.graphhopper.reader.OSMReaderTest.testFerry":27,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":22,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":331,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":351,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":471,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":150,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":280,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":482,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":109,"com.graphhopper.coll.CompressedArrayTest.testCompress":495,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":357,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":273,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":215,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":249,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":146,"com.graphhopper.util.AngleCalcTest.testOrientation":479,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":433,"com.graphhopper.GraphHopperTest.testPrepare":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":451,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":424,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":467,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":7,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":358,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":10,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":51,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":323,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":350,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":327,"com.graphhopper.util.PointListTest.testEquals":470,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":438,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":180,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":134,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":332,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":91,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":53,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":466,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":436,"com.graphhopper.GraphHopperTest.testLoadOSM":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":181,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":317,"com.graphhopper.reader.OSMReaderTest.testSort":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":343,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":95,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":268,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":233,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":491,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":228,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":418,"com.graphhopper.routing.DijkstraTest.initializationError":404,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":496,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":130,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":78,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":472,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":245,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":92,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":104,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":368,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":400,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":154,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":253,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":448,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":152,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":441,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":440,"com.graphhopper.coll.OSMIDMapTest.testGetLong":500,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":113,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":119,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":70,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":48,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":72,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":480,"com.graphhopper.coll.CompressedArrayTest.testCompress2":494,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":258,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":386,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":110,"com.graphhopper.GraphHopperAPITest.testLoad":276,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":52,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":292,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":250,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":240,"com.graphhopper.storage.LevelGraphStorageTest.testClone":57,"com.graphhopper.reader.OSMReaderTest.testBarriers":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":371,"com.graphhopper.util.GHUtilityTest.testCopy":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":163,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":394,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":141,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":360,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":473,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":354,"com.graphhopper.routing.PathTest.testFindInstruction":408,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":101,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":465,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":24,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":298,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":367,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":269,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":254,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":128,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":430,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":378,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":403,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":200,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":236,"com.graphhopper.util.InstructionListTest.testWayList2":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":188,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":274,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":330,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":133,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":328,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":362,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":477,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":61,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":503,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":333,"com.graphhopper.util.shapes.GHPoint3DTest.testEquals":469,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":111,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":164,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":442,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":32,"com.graphhopper.routing.AStarTest.initializationError":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":454,"com.graphhopper.coll.OSMIDMapTest.testGet":497,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":108,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":299,"com.graphhopper.routing.PathBidirRefTest.testExtract":409,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":336,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":499,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":221,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":348,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":335,"com.graphhopper.util.GHUtilityTest.testSort2":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":449,"com.graphhopper.reader.OSMReaderTest.testMain":29,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":337,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":159,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":344,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":77,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":225,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":64,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":68,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":89,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":65,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":123,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":365,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":71,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":40,"com.graphhopper.storage.StorablePropertiesTest.testStore":502,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":504,"com.graphhopper.storage.GraphHopperStorageTest.testClone":242,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":224,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":310,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":458,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":252,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":308,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":398,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":201,"com.graphhopper.routing.PathTest.testTime":406,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":393,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":87,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":315,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":190,"com.graphhopper.reader.OSMReaderTest.testRelation":36,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":214,"com.graphhopper.util.GHUtilityTest.testSortDirected":16,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":464,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":381,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":460,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":414,"com.graphhopper.GraphHopperTest.testFootOnly":289,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":478,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":349,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":165,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":153,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":485,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":439,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":364,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":210,"com.graphhopper.search.NameIndexTest.testCreate":507,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":411,"com.graphhopper.routing.QueryGraphTest.testOneWay":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":191,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":489,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":179,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":486,"com.graphhopper.reader.OSMReaderTest.testWithBounds":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":207,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":320,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":416,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":216,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":300,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":484,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":54,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":379,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":361,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":122,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":176,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":115,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":238,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":6,"com.graphhopper.util.InstructionListTest.testWayList":19,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":271,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":334,"com.graphhopper.GraphHopperAPITest.testDisconnected179":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":202,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":490,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":197,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":376,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":230,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":341,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":283,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":434,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":262,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":326,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":447,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":401,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":432,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":342,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":97,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":456,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":161,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":346,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":232,"com.graphhopper.routing.PathTest.testWayList":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":206,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":305,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":483,"com.graphhopper.coll.OSMIDMapTest.testGet2":498,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":457,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":121,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":340,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":255,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":106,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":243,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":69,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":156,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":373,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":463,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":387,"com.graphhopper.util.GHUtilityTest.testSort":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":219,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":493,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":352,"com.graphhopper.search.NameIndexTest.testPut":505,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":135,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":241,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":140,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":148,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":169,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":369,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":417,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":93,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":389,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":5,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":455,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":319,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":220,"com.graphhopper.routing.PathTest.testFound":405,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":290,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":318,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":84,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":1,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":338,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":112,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":462,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":506,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":205,"com.graphhopper.util.InstructionListTest.testEmptyList":17,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":445,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":395,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":314,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":301,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":359,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":450,"com.graphhopper.reader.PrinctonReaderTest.testRead":25,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":270,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":151,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":204,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":487,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":194,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":374,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":459,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":366,"com.graphhopper.reader.OSMReaderTest.testFoot":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":218,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":422,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":185,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":492,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":347,"com.graphhopper.reader.OSMReaderTest.testOneWay":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":186,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":251,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":266,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":129,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":355,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":260,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":212,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":429,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":309,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":426,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":435,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":427,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":475,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":208,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":413,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":235,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":508,"com.graphhopper.routing.PathBidirRefTest.testExtract2":410,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":437,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":396,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":264,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":399,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":34,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":476,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":474,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":231,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":295,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":182,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":267,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":15,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":60,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":312,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":259,"com.graphhopper.GraphHopperTest.testFootAndCar":284,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":388,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":198,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":316,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":431,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":103,"com.graphhopper.GraphHopperTest.testPrepareOnly":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":453,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":142,"com.graphhopper.GraphHopperTest.testVia":281,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":196,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":37,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":44,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":21,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":263,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":296,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":211,"com.graphhopper.routing.AStarBidirectionTest.initializationError":423,"com.graphhopper.util.AngleCalcTest.testCombined":481,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":325,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":83,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":81,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":94}}]
