[{"failures":[0,1,2,3,4,5],"tindex":"4b21efe5-db1c-11e4-a873-6f170eb78e8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:222","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.HashSet<java.lang.String>)))\n    return 0;\n"},"status":-1},{"failures":[6],"tindex":"4b239d96-db1c-11e4-a873-2b50be2f6deb","variableMapping":{"cp":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:401","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"4b24d617-db1c-11e4-a873-cb255cbd3892","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"4b24fd28-db1c-11e4-a873-e3547c00a1bc","variableMapping":{"weightApproximation":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"4b24fd29-db1c-11e4-a873-2968f39e3f2b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[49],"tindex":"4b254b4a-db1c-11e4-a873-95b4e916bfa8","variableMapping":{"nodeId":"encoded","nodeIdOffset":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:285","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"4b254b4b-db1c-11e4-a873-9b0193759942","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:47","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59],"tindex":"4b254b4c-db1c-11e4-a873-cf5571bd03af","variableMapping":{"oldValueIndex":"unpavedBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:196","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"status":-1},{"failures":[],"tindex":"4b254b4d-db1c-11e4-a873-c11c1a3b6872","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:157","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"4b254b4e-db1c-11e4-a873-69994d6d30f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:358","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[60,61],"tindex":"4b254b4f-db1c-11e4-a873-398a5bcd2e29","variableMapping":{"towerNodeDistance":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[],"tindex":"4b254b50-db1c-11e4-a873-bdcd6f956e75","variableMapping":{"line":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:505","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"4b254b51-db1c-11e4-a873-733425ceeadb","variableMapping":{"distance":"costs","integ":"maxTurnCosts"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:225","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException((((\"Distance cannot be empty: \" + double) + \", maybe overflow issue? integer: \") + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":0},{"failures":[],"tindex":"4b254b52-db1c-11e4-a873-0f808e76cd05","variableMapping":{"speedVal":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":0},{"failures":[],"tindex":"4b254b53-db1c-11e4-a873-bdc77c471e7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"4b254b54-db1c-11e4-a873-f3d84229baab","variableMapping":{"str":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:274","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0},{"failures":[],"tindex":"4b254b55-db1c-11e4-a873-97fbd8269384","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:111","type":"CtLocalVariableImpl","sourcecode":"byte[][] byte[][] = java.util.Arrays.java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int))"},"status":-2},{"failures":[],"tindex":"4b254b56-db1c-11e4-a873-f308e962a3d9","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"4b254b57-db1c-11e4-a873-6d314f9f6011","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[62,63,64,65,66,67,68,69,70,71,49,72,73,74,75,76,77,78,79,7,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"4b257268-db1c-11e4-a873-ffd36d535d57","variableMapping":{"len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-1},{"failures":[],"tindex":"4b257269-db1c-11e4-a873-ff80b8043275","variableMapping":{"heap":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:30","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.this(1000)"},"status":-2},{"failures":[145],"tindex":"4b25726a-db1c-11e4-a873-a164da02ded2","variableMapping":{"str":"hourStr"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:200","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:442","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"4b25726b-db1c-11e4-a873-75346dbe1c7d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:98","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"4b25726c-db1c-11e4-a873-6ff277f1d7ec","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:717","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"4b25726d-db1c-11e4-a873-a5a0845a8991","variableMapping":{"this":"encoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:53","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags()) : com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[146,45,147,148,149,150,151,48],"tindex":"4b25726e-db1c-11e4-a873-2f33b1be96b2","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"err"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"status":-1},{"failures":[],"tindex":"4b25726f-db1c-11e4-a873-f3a37feed6ed","variableMapping":{"newAdjIndex":"sLon","newBaseIndex":"tmpErr"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"4b257270-db1c-11e4-a873-ab65af10ea42","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.Edge:44","type":"CtReturnImpl","sourcecode":"return java.lang.Double.java.lang.Double.compare(double, com.graphhopper.storage.Edge.double)"},"status":-2},{"failures":[],"tindex":"4b257271-db1c-11e4-a873-6d248ed8a3f6","variableMapping":{"speedEncoder":"turnCostEncoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:266","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:597","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[78,152],"tindex":"4b257272-db1c-11e4-a873-97d0dfe9e1d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[153,154,155,52,156,157,158,55,159,160,161,58,162],"tindex":"4b257273-db1c-11e4-a873-739d25c98f94","variableMapping":{"pos":"speed","mSize":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"4b257274-db1c-11e4-a873-4fd489daa3ef","variableMapping":{"baseNode":"start","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:907","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setBaseNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"4b259985-db1c-11e4-a873-913f7387a010","variableMapping":{"len":"minElem","start":"minElem"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:488","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[60,61],"tindex":"4b259986-db1c-11e4-a873-316d45b9a78d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"4b259987-db1c-11e4-a873-3941a4f98f8e","variableMapping":{"tmpNo":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:144","type":"CtAssignmentImpl","sourcecode":"int = 64"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"4b259988-db1c-11e4-a873-67cdb8e7f956","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[33,34,163,35,36,37,38,39,40,41,42,146,43,44,45,164,151,46,47,48],"tindex":"4b259989-db1c-11e4-a873-b1193dc4bcbf","variableMapping":{"oldValueIndex":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[165,65,166,167,168,169,170,171,6,172,173,158,174,175,161,176,177,178],"tindex":"4b25998a-db1c-11e4-a873-73a8ed3d244d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:405","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"4b25998b-db1c-11e4-a873-6fbad20c66e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:189","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"4b25998c-db1c-11e4-a873-251a2e3e4eb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[179,62,165,63,66,67,180,181,182,81,82,83,84,85,183,86,184,87,185,88,186,187,188,89,90,189,190,91,191,192,193,92,194,93,195,196,94,197,95,198,96,97,98,199,99,200,201,103,202,203,204,151,205,206,207,208,209,46,210,47,48,211,212,213,214,215,216,108,217,218,219,220,221,222,14,223,117,224,225,226,227,15,228,229,118,230,231,232,233,16,17,18,234,235,120,236,121,237,238,239,240,241,242,243,122,19,20,123,244,124,245,246,247,248,125,249],"tindex":"4b25998d-db1c-11e4-a873-3f8af43a9d66","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1378","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.checkInit()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:58","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"status":-1},{"failures":[],"tindex":"4b25998e-db1c-11e4-a873-dd069c557b8a","variableMapping":{"minLon":"d2","maxLat":"com.graphhopper.util.NumHelper.DEFAULT_PRECISION","minLat":"d2","maxLon":"com.graphhopper.util.NumHelper.DEFAULT_PRECISION","lon":"d2","lat":"d2"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:158","type":"CtReturnImpl","sourcecode":"return (((double < (double)) && (double >= (double))) && (double < (double))) && (double >= (double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.NumHelper:29","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.NumHelper.com.graphhopper.util.NumHelper.equalsEps(double, double, com.graphhopper.util.NumHelper.double)"},"status":-2},{"failures":[166,167,168,172,173,174,175,176,177,178],"tindex":"4b25998f-db1c-11e4-a873-f38e06734529","variableMapping":{"java.lang.Double.NaN":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:104","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-1},{"failures":[],"tindex":"4b25c0a0-db1c-11e4-a873-cfc3e9cde94d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"4b25c0a1-db1c-11e4-a873-df6aa10e7965","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:204","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"4b25c0a2-db1c-11e4-a873-2de974df2831","variableMapping":{"size":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:65","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"4b25c0a3-db1c-11e4-a873-9db275e720ed","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[60,61,145],"tindex":"4b25c0a4-db1c-11e4-a873-ed2b58d09d3d","variableMapping":{"str":"str"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:423","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception java.lang.Exception) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[250,251,252,253,254,255,256,257],"tindex":"4b25c0a5-db1c-11e4-a873-7d89acd9a1bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[],"tindex":"4b25c0a6-db1c-11e4-a873-db5a006115af","variableMapping":{"workerThreads":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:248","type":"CtIfImpl","sourcecode":"if ((int) <= 0)\n    int = 2;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-2},{"failures":[],"tindex":"4b25c0a7-db1c-11e4-a873-4b4dfeb32489","variableMapping":{"high":"directionBitMask","highKey":"flags","key":"dir"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-2},{"failures":[],"tindex":"4b25c0a8-db1c-11e4-a873-cd4a80d3e676","variableMapping":{"oldValueIndex":"bits","lastKey":"bits","key":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[258,259,260,261],"tindex":"4b25c0a9-db1c-11e4-a873-695f74d7fa9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n        if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[52],"tindex":"4b25c0aa-db1c-11e4-a873-3112c044675a","variableMapping":{"edgeTo":"code","edgeFrom":"code"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:287","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0, int)"},"status":-1},{"failures":[],"tindex":"4b25c0ab-db1c-11e4-a873-51594d9cf4ac","variableMapping":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.PREFER","highway":"highway","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"4b25c0ac-db1c-11e4-a873-27a4e8adeaf5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"4b25c0ad-db1c-11e4-a873-19dbce96059b","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"4b25c0ae-db1c-11e4-a873-df105e0e8e91","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"4b25c0af-db1c-11e4-a873-8fd788dd35d2","variableMapping":{"line":"com.graphhopper.routing.util.EncodingManager.FOOT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:235","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:152","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"4b25c0b0-db1c-11e4-a873-7913d547f149","variableMapping":{"high":"directionBitMask","highKey":"directionBitMask","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:230","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"4b25c0b1-db1c-11e4-a873-192059f90e06","variableMapping":{"elem":"elem","keys":"elem","i":"size","lastPrio":"element","child":"element"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:118","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    int[][int] = int[][int];\n    int[][int] = int[][int];\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"4b25e7c2-db1c-11e4-a873-7d54d6b7f05b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:35","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.(java.lang.Math.abs(double)) + 1.0E-10"},"status":-2},{"failures":[75,262,101,102,263,264,265,266],"tindex":"4b25e7c3-db1c-11e4-a873-cb13bb578fee","variableMapping":{"lat":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[267],"tindex":"4b25e7c4-db1c-11e4-a873-a7732616eb0c","variableMapping":{"size":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"4b25e7c5-db1c-11e4-a873-fdcab771f1a6","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:255","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:393","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-2},{"failures":[65,268,269,270,271,153,50,154,1,272,76,273,274,275,276,277,278,2,169,170,279,280,61,281,171,282,283,284,285,286,77,287,288,289,290,291,52,156,187,188,89,90,189,190,91,191,192,193,92,194,93,195,196,94,197,95,198,96,97,98,199,99,105,106,107,108,292,293,8,294,295,109,296,297,298,299,9,110,10,11,300,301,111,302,112,303,304,305,306,307,308,309,113,12,13,114,310,115,311,312,313,314,116,315,217,218,219,220,221,222,14,223,117,224,316,225,317,226,227,15,228,229,118,230,231,232,233,16,119,17,18,234,235,120,236,121,237,238,239,240,241,242,243,122,19,20,123,244,124,245,246,247,248,125,249,126,318,319,127,320,321,322,323,324,325,21,326,327,128,328,329,330,331,22,129,23,24,332,333,130,334,131,335,336,337,338,339,340,341,132,25,26,133,342,134,343,344,345,346,135,347,348,136,349,350,351,352,353,354,27,355,356,137,357,358,359,360,28,138,29,30,361,362,139,363,140,364,365,366,367,368,369,370,141,31,32,142,371,143,372,373,374,375,144,376],"tindex":"4b25e7c6-db1c-11e4-a873-d355edebfa2c","variableMapping":{"encoder":"encoder"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:232","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"4b25e7c7-db1c-11e4-a873-21c8443a3d3b","variableMapping":{"prepareAlgo":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.close()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[],"tindex":"4b25e7c8-db1c-11e4-a873-2f7bc86b432d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getHighwaySpeed(\"cycleway\")"},"status":-2},{"failures":[165,166,170,171,282,377,178],"tindex":"4b25e7c9-db1c-11e4-a873-2583e9c0fba1","variableMapping":{"angle":"speed","com.graphhopper.util.AngleCalc.PI3_4":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[181,184,187,188,99],"tindex":"4b25e7ca-db1c-11e4-a873-23ab0b05974a","variableMapping":{"red":"from"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtAssignmentImpl","sourcecode":"int = 255"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:64","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[78,80],"tindex":"4b260edb-db1c-11e4-a873-976b754e8a08","variableMapping":{"index":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:746","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"4b260edc-db1c-11e4-a873-8d8503e72655","variableMapping":{"index":"nextTurnBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:206","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":0},{"failures":[],"tindex":"4b260edd-db1c-11e4-a873-655ee617c5a3","variableMapping":{"i":"x1","lastIndex":"x2"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"4b260ede-db1c-11e4-a873-83909548f556","variableMapping":{"entries":"arr","length":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:184","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:72","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[279],"tindex":"4b260edf-db1c-11e4-a873-53fe977c51c0","variableMapping":{"byteCount":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"4b260ee0-db1c-11e4-a873-ed751583707e","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[49],"tindex":"4b260ee1-db1c-11e4-a873-392ed85e0cf1","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"4b260ee2-db1c-11e4-a873-ff9611761efa","variableMapping":{"turnCostIndex":"element","NO_TURN_ENTRY":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:185","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"4b260ee3-db1c-11e4-a873-a53057f53249","variableMapping":{"cap":"endNode"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"4b260ee4-db1c-11e4-a873-13fc05dc2713","variableMapping":{"turnCosts":"angle","weight":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[],"tindex":"4b260ee5-db1c-11e4-a873-a5882abcf804","variableMapping":{"index":"size"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"4b260ee6-db1c-11e4-a873-fb8437ce2703","variableMapping":{"factor":"maxLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:45","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"4b260ee7-db1c-11e4-a873-a5a309bf1d84","variableMapping":{"graphHopperFolder":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:669","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"4b260ee8-db1c-11e4-a873-055459f20e23","variableMapping":{"costs":"orientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[],"tindex":"4b260ee9-db1c-11e4-a873-b57f3b123541","variableMapping":{"offset":"offset","bytes":"bytes","value":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":0},{"failures":[179,165,63,64,65,66,67,68,180,378,60,69,70,379,71,380,381,49,72,73,382,74,166,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,75,262,403,267,97,100,101,102,178,201,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,206,207,208,215,292,293,8,294,295,109,296,297,298,299,9,10,11,300,301,111,302,112,303,304,305,306,307,308,309,113,12,13,114,310,115,311,312,313,314,116,315,222,117,224,226,239,19,245,247,248,421,422,423,424,425,426,427,428,429,430,431,432,433,126,318,127,320,324,337,25,343,345,346,136,349,353,366,31,372,374,375,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"tindex":"4b2635fa-db1c-11e4-a873-415d1a75d93b","variableMapping":{"size":"segmentSizePower","hash":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:387","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:185","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))))"},"status":-1},{"failures":[165,65,461,462,69,383,396,399,278,77,79,7,181,81,82,86,184,87,186,187,188,195,196,99,201,293,8,299,110,308,114,311,116,227,15,233,119,242,123,245,125,325,21,331,129,340,133,343,135,354,27,360,138,369,142,372,144],"tindex":"4b2635fb-db1c-11e4-a873-eb7aede84a92","variableMapping":{"high":"directionBitMask","highKey":"dir","key":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[179,378,70],"tindex":"4b2635fc-db1c-11e4-a873-f3a530247848","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:83","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":-1},{"failures":[165,180,193,95,202],"tindex":"4b2635fd-db1c-11e4-a873-5fad546d61fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[33,34,163,35,463,36,37,40,41,42],"tindex":"4b2635fe-db1c-11e4-a873-cbc7b036b61d","variableMapping":{"eleDelta":"midLon","decEleSum":"midLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:169","type":"CtAssignmentImpl","sourcecode":"double = -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"4b2635ff-db1c-11e4-a873-d5b6d7acae41","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:940","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:124","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[60,61,283],"tindex":"4b263600-db1c-11e4-a873-4ff8b7691c3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-1},{"failures":[179,65,180,69,273,276,277],"tindex":"4b263601-db1c-11e4-a873-496ca6e5bfc8","variableMapping":{"nanoTime":"acceptBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:238","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"4b263602-db1c-11e4-a873-398f715c2f4b","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"4b263603-db1c-11e4-a873-51c81d69408d","variableMapping":{"com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:36","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[],"tindex":"4b263604-db1c-11e4-a873-8b6523ff1f7a","variableMapping":{"numTiles":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:107","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":0},{"failures":[258,277,283,259,260,261],"tindex":"4b263605-db1c-11e4-a873-2b9e4e14fe1d","variableMapping":{"sacScale":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtReturnImpl","sourcecode":"return (\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[153,157,160],"tindex":"4b263606-db1c-11e4-a873-33626ea03242","variableMapping":{"freeIndex":"speed","currentIndex":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[69,70,71,49,72,73,382,74,279,283],"tindex":"4b263607-db1c-11e4-a873-fb74f7a2fc2d","variableMapping":{"size":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:89","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"4b263608-db1c-11e4-a873-87eb46fa07b2","variableMapping":{"longTripsSpeed":"longTripsSpeed","shortTripsSpeed":"shortTripsSpeed","this":"this","durationInHours":"durationInHours","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:477","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception java.lang.Exception) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":198,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":394,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":222,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":293,"com.graphhopper.reader.OSMReaderTest.testFerry":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":158,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":156,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":207,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":62,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":266,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":59,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":257,"com.graphhopper.storage.MMapDataAccessTest.testSegments":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":22,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":385,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":434,"com.graphhopper.coll.CompressedArrayTest.testCompress":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":172,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":375,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":305,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":138,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":204,"com.graphhopper.util.AngleCalcTest.testOrientation":263,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":435,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":454,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":87,"com.graphhopper.GraphHopperTest.testPrepare":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":312,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":92,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":100,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":53,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":225,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":80,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":52,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":89,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":192,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":427,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":412,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":126,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":38,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":428,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":186,"com.graphhopper.GraphHopperTest.testLoadOSM":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":413,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":269,"com.graphhopper.reader.OSMReaderTest.testSort":379,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":175,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":320,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":438,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":371,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":136,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":313,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":399,"com.graphhopper.storage.RAMDataAccessTest.testHeader":455,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":134,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":421,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":429,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":243,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":358,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":318,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":57,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":252,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":168,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":210,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":196,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":203,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":190,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":189,"com.graphhopper.coll.OSMIDMapTest.testGetLong":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":332,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":336,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":236,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":117,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":237,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":265,"com.graphhopper.coll.CompressedArrayTest.testCompress2":41,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":365,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":129,"com.graphhopper.GraphHopperAPITest.testLoad":104,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":317,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":1,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":29,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":27,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":145,"com.graphhopper.storage.LevelGraphStorageTest.testClone":229,"com.graphhopper.reader.OSMReaderTest.testBarriers":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":325,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":191,"com.graphhopper.util.GHUtilityTest.testCopy":201,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":439,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":108,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":259,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":409,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":458,"com.graphhopper.routing.PathTest.testFindInstruction":262,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":21,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":103,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":276,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":246,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":143,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":133,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":85,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":333,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":296,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":351,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":430,"com.graphhopper.util.InstructionListTest.testWayList2":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":114,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":144,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":328,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":54,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":345,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":149,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":403,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":232,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":452,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":436,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":440,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":23,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":91,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":354,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":380,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":437,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":97,"com.graphhopper.coll.OSMIDMapTest.testGet":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":331,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":277,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":239,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":406,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":212,"com.graphhopper.storage.RAMDataAccessTest.testCopy":450,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":441,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":290,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":4,"com.graphhopper.storage.RAMDataAccessTest.testSegments":457,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":94,"com.graphhopper.reader.OSMReaderTest.testMain":70,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":224,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":335,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":39,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":213,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":260,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":170,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":321,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":119,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":235,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":125,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":17,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":160,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":121,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":166,"com.graphhopper.storage.StorablePropertiesTest.testStore":460,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":449,"com.graphhopper.storage.GraphHopperStorageTest.testClone":356,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":310,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":283,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":171,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":361,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":258,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":297,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":247,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":287,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":419,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":177,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":445,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":395,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":150,"com.graphhopper.GraphHopperTest.testFootOnly":180,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":291,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":46,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":111,"com.graphhopper.search.NameIndexTest.testCreate":392,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":456,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":393,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":414,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":35,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":411,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":33,"com.graphhopper.reader.OSMReaderTest.testWithBounds":74,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":459,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":261,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":344,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":397,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":306,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":250,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":227,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":316,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":271,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":176,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":339,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":130,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":353,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":400,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":188,"com.graphhopper.util.InstructionListTest.testWayList":101,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":373,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":298,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":463,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":146,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":432,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":294,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":462,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":116,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":174,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":64,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":357,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":185,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":369,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":184,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":284,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":56,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":199,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":352,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":215,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":255,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":348,"com.graphhopper.routing.PathTest.testWayList":75,"com.graphhopper.storage.MMapDataAccessTest.testCopy":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":10,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":280,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":6,"com.graphhopper.coll.OSMIDMapTest.testGet2":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":99,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":442,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":123,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":338,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":363,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":272,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":329,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":47,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":120,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":48,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":451,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":446,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":211,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":5,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":50,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":309,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":40,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":3,"com.graphhopper.search.NameIndexTest.testPut":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":323,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":355,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":205,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":420,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":161,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":267,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":0,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":334,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":78,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":113,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":270,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":378,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":124,"com.graphhopper.util.AngleCalcTest.testAtan2":264,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":24,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":391,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":110,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":360,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":167,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":214,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":169,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":2,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":173,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":197,"com.graphhopper.reader.PrinctonReaderTest.testRead":461,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":372,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":433,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":208,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":9,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":34,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":292,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":131,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":256,"com.graphhopper.reader.OSMReaderTest.testFoot":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":308,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":388,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":402,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":44,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":248,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":289,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":45,"com.graphhopper.reader.OSMReaderTest.testOneWay":383,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":30,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":32,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":342,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":444,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":112,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":84,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":82,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":147,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":443,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":76,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":300,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":350,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":418,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":187,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":105,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":389,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":141,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":410,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":155,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":49,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":148,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":86,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":142,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":231,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":285,"com.graphhopper.GraphHopperTest.testFootAndCar":65,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":366,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":154,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":216,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":453,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":295,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":424,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":96,"com.graphhopper.GraphHopperTest.testPrepareOnly":179,"com.graphhopper.GraphHopperTest.testVia":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":8,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":73,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":221,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":178,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":274,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":302,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":288,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":244,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":20,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":127}}]
