[{"failures":[],"tindex":"8398821c-daea-11e4-89ad-990b74d7c7bb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:62","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"8398a92d-daea-11e4-89ad-3f2682f7ba5d","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"8398a92e-daea-11e4-89ad-89fcbea90ae3","variableMapping":{"factor":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtAssignmentImpl","sourcecode":"double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"8398a92f-daea-11e4-89ad-8fb6ab366021","variableMapping":{"str":"pavementName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:281","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:406","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    if ((int == 0) || (int == 3))\n        return \"\";\n    \n    return java.lang.String;\n} else {\n    if (java.lang.String.isEmpty())\n        return java.lang.String;\n    else\n        return (java.lang.String + \", \") + java.lang.String;\n    \n}"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,0,72,73,74,75,76,77,78,1,2,79,80,81,82,83,84,3,85,86,87,88,89,90,91,4,5,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319],"tindex":"8398d040-daea-11e4-89ad-8d36b8cc43dd","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"8398d041-daea-11e4-89ad-2733bdb45eee","variableMapping":{"graph":"osmValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:718","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.GraphStorage.loadExisting()))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-2},{"failures":[],"tindex":"8398d042-daea-11e4-89ad-49c56ba79389","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:244","type":"CtLocalVariableImpl","sourcecode":"java.util.List<gnu.trove.list.array.TIntArrayList> java.util.List<gnu.trove.list.array.TIntArrayList> = new com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm(com.graphhopper.storage.GraphStorage , com.graphhopper.routing.util.EdgeFilter).findComponents()"},"status":-2},{"failures":[],"tindex":"8398d043-daea-11e4-89ad-510006d47663","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[13,17,21,25,26,27,29,30,33,34,36,41,43,49,51,54,56,57,61,320,321,322,323,324,325,326,121,327,328,329,122,330,331,332,333,124,128,129,130,132,133,136,137,139,144,146,152,154,157,159,160,164,166,168,172,173,174,176,177,180,181,183,188,190,196,198,201,203,204,208,212,216,217,218,220,223,224,225,229,334,335,336,231,337,233,235,236,237,238,240,241,242,243,244,246,247,250,251,252,253,254,255,256,257,259,260,261,262,264,265,266,268,269,271,272,273,274,275,276,277,282,285,316,318],"tindex":"8398d044-daea-11e4-89ad-c54995ca0ea4","variableMapping":{"scDirMask":"flags","flags":"forwardBit","dir":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"8398d045-daea-11e4-89ad-8507b4246410","variableMapping":{"acceptedRailways":"ferries","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":0},{"failures":[],"tindex":"8398d046-daea-11e4-89ad-e388696ceffc","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:452","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[338,339],"tindex":"8398d047-daea-11e4-89ad-57f4b9aa4958","variableMapping":{"currentEntry":"priorityFromRelation"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:303","type":"CtAssignmentImpl","sourcecode":"int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-1},{"failures":[290,295,299,300,302,303,308,314,315],"tindex":"8398d048-daea-11e4-89ad-117abcfd2817","variableMapping":{"allSegments":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"8398d049-daea-11e4-89ad-ef66fe5677f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[],"tindex":"8398d04a-daea-11e4-89ad-e15d16914e8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[64,65,66,68,221,222,340,341,226,227,228,295,300,303,306,308,309,311],"tindex":"8398d04b-daea-11e4-89ad-0ded75b59f7f","variableMapping":{"index":"frontIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1029","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[342,0,77,1,2,3,90,4,5,6,7,261,343,8,344,9,10,11,345,12,346],"tindex":"8398f75c-daea-11e4-89ad-d196b5525a8b","variableMapping":{"bytePos":"hash"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:196","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[347],"tindex":"8398f75d-daea-11e4-89ad-3d8d754a8ee0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"8398f75e-daea-11e4-89ad-6508770970fc","variableMapping":{"min":"costs","dist":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:759","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:624","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":0},{"failures":[342,0,77,1,2,3,90,4,5,6,7,343,8,9,10,11,12],"tindex":"8398f75f-daea-11e4-89ad-599889ed782e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"8398f760-daea-11e4-89ad-3f5daa99f97a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:403","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.util.EdgeSkipIterState.getFlags()) & com.graphhopper.routing.ch.PrepareEncoder.(com.graphhopper.routing.ch.PrepareEncoder.getScDirMask())"},"status":-2},{"failures":[342,0,77,1,2,3,90,4,5,6,7,343,8,9,10,11,345,12],"tindex":"8398f761-daea-11e4-89ad-3500143c435d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-1},{"failures":[],"tindex":"8398f762-daea-11e4-89ad-cd1d84c9cfcf","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-2},{"failures":[],"tindex":"8398f763-daea-11e4-89ad-1b94f9f693ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:380","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[227,290,292,293,294,295,296,297,298,299,300,303,304,305,306,307,308,309,310,311,312,313,315],"tindex":"8398f764-daea-11e4-89ad-cd1d3189cf63","variableMapping":{"preparation":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1021","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(java.util.Map<java.lang.Integer, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"8398f765-daea-11e4-89ad-fba2f644fd9e","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8398f766-daea-11e4-89ad-4d33b9575535","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-2},{"failures":[],"tindex":"8398f767-daea-11e4-89ad-1b32cc760257","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[338,348,349,350,351,352,353,354,355,339,356,357,358,359,360],"tindex":"8398f768-daea-11e4-89ad-357ed58b8967","variableMapping":{"bytePos":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:582","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,361,68,69,70,71,0,72,73,74,75,76,77,78,1,2,79,80,81,82,362,83,84,3,85,86,87,88,89,90,91,4,5,92,93,94,95,363,96,97,98,99,100,101,364,102,103,104,105,106,107,365,108,109,320,321,322,366,323,324,367,368,325,326,369,121,370,371,372,373,327,374,328,375,376,377,378,379,329,380,122,381,382,330,383,331,332,384,385,386,333,387,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,388,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319],"tindex":"83991e79-daea-11e4-89ad-133ffc954355","variableMapping":{"properties":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"83991e7a-daea-11e4-89ad-3ddfd1e2527c","variableMapping":{"segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":0},{"failures":[],"tindex":"83991e7b-daea-11e4-89ad-b9d1a3d79e8c","variableMapping":{"offset":"offset","bytes":"bytes","value":"offset"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >> 24))"},"status":0},{"failures":[],"tindex":"83991e7c-daea-11e4-89ad-21a4121d3408","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[],"tindex":"83991e7d-daea-11e4-89ad-ff44ce32aa6f","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"factor","speed":"factor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:75","type":"CtReturnImpl","sourcecode":"return long * (double)"},"status":-2},{"failures":[],"tindex":"83991e7e-daea-11e4-89ad-e36f387a21a9","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:81","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[73,80,81,83,269],"tindex":"83991e7f-daea-11e4-89ad-97a254c6dfdd","variableMapping":{"need":"nodeA","i":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:198","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[389],"tindex":"83991e80-daea-11e4-89ad-37d46e73c3f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:751","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"83991e81-daea-11e4-89ad-51bd07c85287","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[21,25,26,27,34,36,41,49,54,57,61,320,321,322,326,121,327,329,330,332,333,124,128,129,130,137,139,144,152,157,160,164,166,168,172,173,174,181,183,188,196,201,204,208,212,220,223,225,229,230,335,336,337,240,241,246,248,251,253,263,265,266,275,282,285,316,317,318],"tindex":"83994592-daea-11e4-89ad-8bd63cc370cc","variableMapping":{"flags":"backwardBit","tmpValue":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:667","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-1},{"failures":[],"tindex":"83994593-daea-11e4-89ad-4544c2c70a25","variableMapping":{"edgePointer":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:629","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":0},{"failures":[],"tindex":"83994594-daea-11e4-89ad-d3da3a7254fd","variableMapping":{"java.lang.Double.MAX_VALUE":"speed","existingDirectWeight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-2},{"failures":[390],"tindex":"83994595-daea-11e4-89ad-ab0d25c43563","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:151","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"83994596-daea-11e4-89ad-2154243d952e","variableMapping":{"indexCopy":"da","index":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":0},{"failures":[],"tindex":"83994597-daea-11e4-89ad-011c535f3639","variableMapping":{"cap":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.round((long * (double)))"},"status":-2},{"failures":[20,21,26,37,38,39,41,45,49,55,240,242,243,244,246,248,250,251],"tindex":"83994598-daea-11e4-89ad-7174e963a389","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[],"tindex":"83994599-daea-11e4-89ad-250802668d38","variableMapping":{"radiusInMeter":"minLonTmp","com.graphhopper.util.DistanceCalcEarth.C":"maxLonTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:112","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"8399459a-daea-11e4-89ad-512b5bd3b4ea","variableMapping":{"size":"to","from":"to","end":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":0},{"failures":[391,349,392,393,351,394,353,354,395,396,357,397,360],"tindex":"8399459b-daea-11e4-89ad-f71683e567c1","variableMapping":{"shift":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","backwardBit":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:157","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"8399459c-daea-11e4-89ad-ddfbdf5757aa","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[398,217,218,219,399,400,401,402,236,237],"tindex":"8399459d-daea-11e4-89ad-07368e32fdef","variableMapping":{"orientation":"angle","java.lang.Math.PI":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[398,217,218,399,400,401,236,237],"tindex":"8399459e-daea-11e4-89ad-c1724da5bd0f","variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"angle","speed":"angle"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"8399459f-daea-11e4-89ad-594fe7fada41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2},{"failures":[],"tindex":"839945a0-daea-11e4-89ad-598a02f8af01","variableMapping":{"weightToPrioMap":"weightToPrioMap","highway":"highway","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:125","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[252],"tindex":"839945a1-daea-11e4-89ad-d3827c924834","variableMapping":{"res":"flags","value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:257","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[21,25,46,52,57,60,64,65,66,67,68,73,74,75,86,87,88,403,124,128,149,155,160,163,404,405,406,407,408,409,410,411,166,168,172,193,199,204,207,412,413,414,415,416,417,418,419,212,216,217,218,420,421,422,423,232,233,236,272,278,279,281,282,283,285,286,289,290,292,293,294,296,297,298,299,302,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"83996cb2-daea-11e4-89ad-e3bc2672d378","variableMapping":{"size":"indexDivisor","i":"indexDivisor"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:151","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"83996cb3-daea-11e4-89ad-65916354324a","variableMapping":{"edgeId":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"status":0},{"failures":[424,425,426,427,342,428,429,69,70,0,73,74,75,76,78,1,2,79,80,81,82,83,84,3,86,87,88,89,91,4,5,92,93,94,95,96,97,261,265,266,269,292,293,294,295,296,298,299,304,305,306,318,319],"tindex":"83996cb4-daea-11e4-89ad-bf5c4b475108","variableMapping":{"ref":"y1"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"83996cb5-daea-11e4-89ad-797443940eca","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[391,392,393,351,394,354,395,396,397],"tindex":"83996cb6-daea-11e4-89ad-533624bd4e94","variableMapping":{"str":"message","name":"message"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:82","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[430],"tindex":"83996cb7-daea-11e4-89ad-09e59e2bd62b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:70","type":"CtReturnImpl","sourcecode":"return ((int)(long >>> 32))"},"status":-2},{"failures":[69,70,75,76,78,79,80,81,82,83,84,261,265,266,269,293,296],"tindex":"83996cb8-daea-11e4-89ad-f903ad9ea71b","variableMapping":{"high":"nodeB","len":"nodeA","start":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:486","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:62","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.LevelGraph.getLevel(int)) < (com.graphhopper.storage.LevelGraph.getLevel(int)))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"83996cb9-daea-11e4-89ad-7d3ae3562644","variableMapping":{"weight":"maxLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:327","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.this.setWeight(this, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[431],"tindex":"83996cba-daea-11e4-89ad-b9467781d89c","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:220","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[2,5],"tindex":"83996cbb-daea-11e4-89ad-efc751293cd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"83996cbc-daea-11e4-89ad-0f26ed8982ee","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:204","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":0},{"failures":[225],"tindex":"83996cbd-daea-11e4-89ad-fd7ed1f50b4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-1},{"failures":[233],"tindex":"83996cbe-daea-11e4-89ad-9f19f3681e8c","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.WEIGHT_FACTOR":"maxSpeed","weight":"speedReverse","weightLong":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:222","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"83996cbf-daea-11e4-89ad-1b26cda6608f","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"83996cc0-daea-11e4-89ad-c974b1b55389","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[432,433,246],"tindex":"83996cc1-daea-11e4-89ad-03611a8929bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-1},{"failures":[225,229],"tindex":"839993d2-daea-11e4-89ad-6b8d7f333858","variableMapping":{"i":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:201","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[434,240,242,246,248,250],"tindex":"839993d3-daea-11e4-89ad-a7a23bf1c823","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"839993d4-daea-11e4-89ad-8f7bf44523b5","variableMapping":{"size":"subNetworks"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:89","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.Integer, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"839acc55-daea-11e4-89ad-fb76998c3563","variableMapping":{"lastKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:276","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":0},{"failures":[],"tindex":"839acc56-daea-11e4-89ad-e97907dfbf8d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:725","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"839acc57-daea-11e4-89ad-23059c08ab0d","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"839acc58-daea-11e4-89ad-cb934a38437d","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"839acc59-daea-11e4-89ad-2d45ed71fde2","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"importance","sign":"importance"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[13,17,21,25,26,27,29,30,33,34,36,41,43,49,51,54,56,57,61,84,97,103,109,320,321,322,323,324,325,326,121,327,328,329,122,330,331,332,333,124,128,129,130,132,133,136,137,139,144,146,152,154,157,159,160,164,166,168,172,173,174,176,177,180,181,183,188,190,196,198,201,203,204,208,216,217,218,219,220,223,224,225,227,229,334,335,435,336,231,337,233,235,236,237,238,239,240,241,242,243,244,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,271,272,273,274,275,276,277,282,285,292,293,294,295,296,298,299,303,304,306,309,310,311,312,313,315,316,317,318],"tindex":"839acc5a-daea-11e4-89ad-8b6ace8ecf54","variableMapping":{"c":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:228","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:678","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return (long & (long)) != 0;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[],"tindex":"839acc5b-daea-11e4-89ad-eb03c7c841cb","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"839af36c-daea-11e4-89ad-d940c8b7a9f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:70","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"839af36d-daea-11e4-89ad-11bda4bf2593","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"839af36e-daea-11e4-89ad-dfc1ca9f2409","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:123","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[436],"tindex":"839af36f-daea-11e4-89ad-8fbdc51ae379","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[437,425,427,342,428],"tindex":"839af370-daea-11e4-89ad-ff6344ca8488","variableMapping":{"currentEntry":"err"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"839af371-daea-11e4-89ad-0b5c4d1757e0","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,438,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,84,97,103,109,320,321,322,366,323,324,367,368,325,326,369,121,370,371,372,373,327,374,328,375,376,377,378,379,329,380,122,381,382,330,383,331,332,384,385,386,333,387,123,124,125,126,127,439,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,388,167,168,169,170,171,440,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,441,442,338,443,391,348,349,444,445,446,447,448,449,450,451,452,392,453,454,455,350,456,457,393,351,458,459,460,461,462,463,464,394,465,466,467,352,468,390,353,469,354,470,471,472,473,474,475,476,395,477,478,355,479,480,481,334,482,483,335,484,485,435,486,487,488,336,489,490,491,231,492,337,493,494,431,495,232,233,496,497,339,498,396,356,357,499,500,501,502,503,504,505,506,507,397,508,509,510,358,511,347,512,513,514,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,515,516,278,290,295,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"839af372-daea-11e4-89ad-c9a760eeb29b","variableMapping":{"versionHint":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:117","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:158","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-1},{"failures":[],"tindex":"839af373-daea-11e4-89ad-6d9e5763e93b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:154","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:557","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[],"tindex":"839af374-daea-11e4-89ad-e51226ec869f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"839af375-daea-11e4-89ad-6b94324ff9cf","variableMapping":{"store":"storing"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:135","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:120","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"839af376-daea-11e4-89ad-0d7f80360cc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[238,247,252,253,275],"tindex":"839af377-daea-11e4-89ad-a583a156af8f","variableMapping":{"enableIfAssert":"reverse"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1371","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"839af378-daea-11e4-89ad-f758ec93a926","variableMapping":{"locs":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:180","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":0},{"failures":[],"tindex":"839b1a89-daea-11e4-89ad-5707f1e02354","variableMapping":{"way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:249","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"839b1a8a-daea-11e4-89ad-9351bfc32b74","variableMapping":{"periodicUpdates":"mSize"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:114","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":0},{"failures":[233],"tindex":"839b1a8b-daea-11e4-89ad-b57ff907d847","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,438,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,361,68,69,70,71,0,72,73,74,75,76,77,78,1,2,79,80,81,82,83,84,3,85,86,87,88,89,90,91,4,5,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,121,122,123,124,125,126,127,439,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,517,518,519,520,521,522,166,167,168,169,170,171,440,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,523,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,420,421,524,422,423,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,278,279,279,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,289,290,291,292,293,294,295,296,525,297,298,299,300,526,301,302,303,304,305,306,307,308,309,310,527,311,312,313,314,528,315,529,530,531,316,317,318,319,532,533,534,535],"tindex":"839b1a8c-daea-11e4-89ad-ed9bdb0b84ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[442,391,349,392,457,393,394,395,497,396,357,397],"tindex":"839b1a8d-daea-11e4-89ad-17c416238048","variableMapping":{"intKey":"speed","str":"s","key":"s"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:120","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            int = java.lang.Integer;\n        \n    } else {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n        if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n            java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n            if (java.lang.Integer != null) {\n                if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                    int = java.lang.Integer;\n                else\n                    int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n                \n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"839b1a8e-daea-11e4-89ad-4daaf08b321f","variableMapping":{"maxTurnCosts":"length","turnRestrictionBit":"cap","flags":"todoBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:582","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) != 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:112","type":"CtTryImpl","sourcecode":"try {\n    int[][] int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], ((int[][].int) + int));\n    for (int int = int[][].int ; int < (int[][].int) ; int++) {\n        int[][][int] = new int[1 << (int)];\n    }\n    int[][] = int[][];\n    return true;\n} catch (java.lang.OutOfMemoryError java.lang.OutOfMemoryError) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (int[][].int)));\n}"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":270,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":279,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":18,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":321,"com.graphhopper.reader.OSMReaderTest.testFerry":302,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":223,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":224,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":348,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":437,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":470,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":74,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":291,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":398,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":397,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":182,"com.graphhopper.coll.CompressedArrayTest.testCompress":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":476,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":163,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":377,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":139,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":71,"com.graphhopper.util.AngleCalcTest.testOrientation":399,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":404,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":248,"com.graphhopper.GraphHopperTest.testPrepare":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":384,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":238,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":433,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":443,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":262,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":63,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":395,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":222,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":24,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":0,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":229,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":442,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":254,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":87,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":207,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":349,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":526,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":166,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":345,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":25,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":432,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":251,"com.graphhopper.GraphHopperTest.testLoadOSM":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":92,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":88,"com.graphhopper.reader.OSMReaderTest.testSort":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":453,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":227,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":169,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":406,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":158,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":124,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":385,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":285,"com.graphhopper.routing.DijkstraTest.initializationError":515,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":203,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":50,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":424,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":135,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":388,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":396,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":172,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":352,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":465,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":78,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":143,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":266,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":76,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":525,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":257,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":256,"com.graphhopper.coll.OSMIDMapTest.testGetLong":422,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":186,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":192,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":42,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":430,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":21,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":44,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":401,"com.graphhopper.coll.CompressedArrayTest.testCompress2":6,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":148,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":457,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":183,"com.graphhopper.GraphHopperAPITest.testLoad":318,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":438,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":113,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":490,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":140,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":130,"com.graphhopper.storage.LevelGraphStorageTest.testClone":29,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":173,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":230,"com.graphhopper.reader.OSMReaderTest.testBarriers":306,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":499,"com.graphhopper.util.GHUtilityTest.testCopy":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":84,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":463,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":365,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":425,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":478,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":418,"com.graphhopper.routing.PathTest.testFindInstruction":237,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":473,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":174,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":220,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":494,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":58,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":498,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":159,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":201,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":210,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":244,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":506,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":516,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":31,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":367,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":120,"com.graphhopper.util.InstructionListTest.testWayList2":218,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":510,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":93,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":164,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":391,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":519,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":338,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":232,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":428,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":444,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":373,"com.graphhopper.storage.RAMDirectoryTest.testSynched":520,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":184,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":64,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":258,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":307,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":405,"com.graphhopper.routing.AStarTest.initializationError":513,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":272,"com.graphhopper.coll.OSMIDMapTest.testGet":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":181,"com.graphhopper.routing.PathBidirRefTest.testExtract":276,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":431,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":447,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":524,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":80,"com.graphhopper.storage.RAMDataAccessTest.testCopy":413,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":209,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":381,"com.graphhopper.storage.RAMDataAccessTest.testSegments":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":446,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":97,"com.graphhopper.util.GHUtilityTest.testSort2":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":267,"com.graphhopper.reader.OSMReaderTest.testMain":304,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":191,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":448,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":12,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":454,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":481,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":331,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":36,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":40,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":340,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":61,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":37,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":282,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":196,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":497,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":43,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":314,"com.graphhopper.storage.StorablePropertiesTest.testStore":517,"com.graphhopper.storage.GraphHopperStorageTest.testClone":132,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":383,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":435,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":521,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":142,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":484,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":466,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":368,"com.graphhopper.routing.PathTest.testTime":235,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":462,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":59,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":489,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":95,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":376,"com.graphhopper.reader.OSMReaderTest.testRelation":527,"com.graphhopper.util.GHUtilityTest.testSortDirected":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":508,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":410,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":281,"com.graphhopper.GraphHopperTest.testFootOnly":299,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":429,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":469,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":65,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":483,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":522,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":77,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":255,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":426,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":239,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":496,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":327,"com.graphhopper.search.NameIndexTest.testCreate":535,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":416,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":278,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":116,"com.graphhopper.routing.QueryGraphTest.testOneWay":287,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":363,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":472,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":343,"com.graphhopper.reader.OSMReaderTest.testWithBounds":313,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":419,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":412,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":509,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":205,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":226,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":378,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":495,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":359,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":26,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":456,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":507,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":355,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":195,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":188,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":128,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":253,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":161,"com.graphhopper.util.InstructionListTest.testWayList":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":445,"com.graphhopper.GraphHopperAPITest.testDisconnected179":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":325,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":366,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":504,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":317,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":228,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":333,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":452,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":294,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":134,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":249,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":441,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":264,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":512,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":247,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":486,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":459,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":392,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":274,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":439,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":362,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":350,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":123,"com.graphhopper.routing.PathTest.testWayList":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":386,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":460,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":370,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":482,"com.graphhopper.coll.OSMIDMapTest.testGet2":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":275,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":54,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":529,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":451,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":145,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":491,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":1,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":41,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":2,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":414,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":411,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":501,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":393,"com.graphhopper.util.GHUtilityTest.testSort":213,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":380,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":471,"com.graphhopper.search.NameIndexTest.testPut":533,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":440,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":72,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":107,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":68,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":100,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":356,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":284,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":167,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":298,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":458,"com.graphhopper.storage.MMapDirectoryTest.testSynched":523,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":530,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":493,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":273,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":225,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":119,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":122,"com.graphhopper.routing.PathTest.testFound":234,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":300,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":347,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":56,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":389,"com.graphhopper.util.AngleCalcTest.testAtan2":400,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":449,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":185,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":434,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":534,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":121,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":137,"com.graphhopper.util.InstructionListTest.testEmptyList":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":261,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":464,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":265,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":480,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":477,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":479,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":268,"com.graphhopper.reader.PrinctonReaderTest.testRead":316,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":160,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":75,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":180,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":369,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":320,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":475,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":502,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":403,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":339,"com.graphhopper.reader.OSMReaderTest.testFoot":303,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":329,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":531,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":4,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":11,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":390,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":5,"com.graphhopper.reader.OSMReaderTest.testOneWay":315,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":141,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":156,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":202,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":474,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":409,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":150,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":500,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":243,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":250,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":485,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":241,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":408,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":427,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":231,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":372,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":280,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":126,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":528,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":117,"com.graphhopper.routing.PathBidirRefTest.testExtract2":277,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":94,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":109,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":394,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":532,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":154,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":364,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":467,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":492,"com.graphhopper.util.SimpleIntDequeTest.testPush":341,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":505,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":89,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":157,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":487,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":149,"com.graphhopper.GraphHopperTest.testFootAndCar":295,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":351,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":83,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":415,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":323,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":511,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":488,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":176,"com.graphhopper.storage.StorablePropertiesTest.testLoad":518,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":271,"com.graphhopper.GraphHopperTest.testPrepareOnly":290,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":108,"com.graphhopper.GraphHopperTest.testVia":292,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":322,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":311,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":17,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":153,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":219,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":337,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":374,"com.graphhopper.util.AngleCalcTest.testCombined":402,"com.graphhopper.routing.AStarBidirectionTest.initializationError":514,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":468,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":55,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":53,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":168}}]
