[{"failures":[],"tindex":"59774cc9-dc12-11e4-9835-3b9235e7a33b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:500","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"5978fa7a-dc12-11e4-9835-4d04a8f3ace5","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:363","type":"CtIfImpl","sourcecode":"if (((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 20))) || (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"5978fa7b-dc12-11e4-9835-5122551f5573","variableMapping":{"java.lang.Double.MAX_VALUE":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","java.lang.Integer.MAX_VALUE":"val","storedInt":"mpInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:371","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:377","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.java.lang.Integer.parseInt(java.lang.String);\n    return int * (com.graphhopper.util.DistanceCalcEarth.double);\n} "},"status":-2},{"failures":[],"tindex":"5978fa7c-dc12-11e4-9835-ffca46325a62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:271","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-2},{"failures":[],"tindex":"5978fa7d-dc12-11e4-9835-6f4dd03c6294","variableMapping":{"latlon":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:464","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || (double > 80)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.HashSet<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[0,1,2],"tindex":"5979218e-dc12-11e4-9835-a9be490fac11","variableMapping":{"keys":"keys","i":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:133","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[],"tindex":"5979218f-dc12-11e4-9835-8175614b5f1a","variableMapping":{"this":"this","unknownSpeed":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"59792190-dc12-11e4-9835-05509972d4c2","variableMapping":{"neighborUpdates":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.setSkippedEdges(com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"59792191-dc12-11e4-9835-bf70021ff670","variableMapping":{"byteCount":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,316],"tindex":"59792192-dc12-11e4-9835-6580f655c00b","variableMapping":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[317,318,319,320],"tindex":"59792193-dc12-11e4-9835-03cb40a8c649","variableMapping":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:116","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.HashSet<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcycle\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"59792194-dc12-11e4-9835-5d6caad81c3a","variableMapping":{"bytePointer":"bits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:90","type":"CtIfImpl","sourcecode":"if ((long) < 0) {\n    throw new java.lang.IllegalStateException(\"Way index is too large. Cannot contain more than 2GB\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":0},{"failures":[],"tindex":"597948a5-dc12-11e4-9835-c7ebb9abc3b1","variableMapping":{"nodeB":"bufferIndex","edgeId":"bufferIndex","nodeA":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:234","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[],"tindex":"597948a6-dc12-11e4-9835-912721aba13b","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:227","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:69","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[66,67,70,71,72,73,75,321,84,86,87,90,91,92,93,95,322,323,324],"tindex":"597948a7-dc12-11e4-9835-075c0b3172b5","variableMapping":{"costs":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[28,43,325,326,327],"tindex":"597948a8-dc12-11e4-9835-69527e7aabfa","variableMapping":{"r":"speed","angle":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:227","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true)"},"status":-1},{"failures":[328,329,330,331],"tindex":"597948a9-dc12-11e4-9835-e7fc03a9b8de","variableMapping":{"weightLong":"directionBitMask","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[113,299,303],"tindex":"597948aa-dc12-11e4-9835-e9018046adce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:275","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeSkipIterator.next()) {\n    if ((com.graphhopper.util.EdgeSkipIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge())) {\n        boolean = true;\n        break;\n    } \n    int = com.graphhopper.util.EdgeSkipIterator.getEdge();\n}"},"status":-1},{"failures":[],"tindex":"597948ab-dc12-11e4-9835-772bd6eb7887","variableMapping":{"splitIndex":"dLat","entrySize":"dLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:260","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"597948ac-dc12-11e4-9835-3bf81bf451a7","variableMapping":{"byteCount":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:681","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"597948ad-dc12-11e4-9835-a3ca5a34766a","variableMapping":{"finishedTo":"edgeBased","finishedFrom":"edgeBased"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:102","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"597948ae-dc12-11e4-9835-bde91db30588","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,13,16,17,18,19,20,21,22,23,24,25,26,27,28,332,29,31,43,333,334,335,46,336,337,53,59,82,84,102,113,115,117,125,131,133,136,155,157,168,174,176,179,198,200,212,218,220,223,242,244,338,252,339,325,326,340,341,327,342,343,344,345,346,347,348,349,350,351,352,328,329,353,354,355,356,330,357,358,359,360,361,362,259,260,363,331,364,365,366,367,368,369,370,371,372,264,265,266,267,268,277,279,280,291,300,312],"tindex":"597948af-dc12-11e4-9835-3d1e80639270","variableMapping":{"costs":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:612","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[373,374,66,74,75,86,94,95,375,376,322,377,324],"tindex":"597948b0-dc12-11e4-9835-b93a926f5396","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"59796fc1-dc12-11e4-9835-ad0b156e88b7","variableMapping":{"tmp":"key","tmpNo":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:148","type":"CtIfImpl","sourcecode":"if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-2},{"failures":[260],"tindex":"59796fc2-dc12-11e4-9835-ed79cb34b4f7","variableMapping":{"i":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:211","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double))"},"status":-1},{"failures":[],"tindex":"59796fc3-dc12-11e4-9835-05393fa95d72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:331","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[326],"tindex":"59796fc4-dc12-11e4-9835-25cd7ec70f4c","variableMapping":{"systemProperty":"tt"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:152","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[16,341],"tindex":"59796fc5-dc12-11e4-9835-47f3ec12e7e4","variableMapping":{"weightApproximation":"shortTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"59796fc6-dc12-11e4-9835-39bb3f804a57","variableMapping":{"mGarbage":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[29,378,379,380,381,382,383,384,385,386,119,127,135,137,138,140,144,145,152,153,170,178,180,181,183,187,188,195,196,214,222,224,225,227,231,232,239,240,253,255,256],"tindex":"59796fc7-dc12-11e4-9835-df39b95b5f5e","variableMapping":{"oldPriorities":"mKeys"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:411","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:47","type":"CtAssignmentImpl","sourcecode":"int[] = new int[int]"},"status":-1},{"failures":[267],"tindex":"59796fc8-dc12-11e4-9835-d987f92b30b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:133","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"59796fc9-dc12-11e4-9835-b93d3434acf6","variableMapping":{"obtained":"synched"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:138","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[3,4,5,6,7,8,9,387,10,11,12,13,388,14,15,16,17,18,19,20,21,22,23,24,389,25,26,27,28,332,29,30,31,32,33,34,35,36,37,390,38,39,40,41,42,43,44,45,333,391,378,392,393,394,334,395,335,396,379,46,380,381,397,382,398,399,400,383,384,401,402,403,404,405,47,385,386,406,336,407,337,408,409,410,411,412,48,49,50,51,413,52,53,54,55,56,57,414,58,59,61,62,63,64,415,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,113,114,115,116,117,118,119,120,121,122,123,124,416,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,417,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,418,207,208,209,210,211,419,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,420,421,422,338,252,423,339,424,425,426,427,253,254,255,256,257,258,325,428,429,326,340,430,341,431,327,342,343,432,433,434,435,344,436,345,346,347,437,438,439,440,441,442,443,348,349,317,444,350,351,352,445,446,328,447,329,448,449,450,451,452,453,454,353,354,318,355,455,356,330,456,357,358,359,457,458,459,460,461,462,463,464,465,360,361,319,466,362,259,260,467,363,331,468,364,365,366,469,470,471,472,473,474,475,476,477,367,368,320,478,369,479,370,480,481,371,482,372,261,262,263,264,265,266,483,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,484,293,294,295,296,297,298,299,300,301,302,303,304,485,305,306,307,308,309,310,311,312,313,314,315,316,486,487],"tindex":"597996da-dc12-11e4-9835-0771338592df","variableMapping":{"size":"usedBits","capacity":"nextWayBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setWayBitMask((int - (int)), int)"},"status":-1},{"failures":[],"tindex":"597996db-dc12-11e4-9835-61afa40c1992","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-2},{"failures":[3,8,12,13,16,17,22,28,29],"tindex":"597996dc-dc12-11e4-9835-ff323e3d341b","variableMapping":{"latSimilar":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:341","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[],"tindex":"597996dd-dc12-11e4-9835-355427f43649","variableMapping":{"segmentsToMap":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:117","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null) {\n            if ((com.graphhopper.reader.OSMWay.getTag(\"service\")) == null)\n                int = java.lang.Integer;\n            else\n                int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n            \n        } \n    } \n}"},"status":0},{"failures":[],"tindex":"597996de-dc12-11e4-9835-93dad9eae78d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:283","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"597996df-dc12-11e4-9835-eb2e47b2da4d","variableMapping":{"latlon":"highwayValue"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:423","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:149","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!com.graphhopper.util.Helper.(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,389,25,26,27,28,332,29,30,31,32,33,36,39,40,41,42,43,333,391,378,392,393,394,334,395,335,396,379,46,380,381,397,382,398,399,400,383,384,401,402,403,404,405,47,385,386,406,336,407,337,408,409,410,411,412,53,59,82,84,102,113,114,115,116,117,118,119,120,121,122,123,124,416,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,417,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,418,207,208,209,210,211,419,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,422,338,252,423,339,424,425,426,427,253,254,255,256,257,258,325,428,429,326,340,430,341,431,327,342,343,432,433,434,435,344,436,345,346,347,437,438,439,440,441,442,443,348,349,317,444,350,351,352,445,446,328,447,329,448,449,450,451,452,453,454,353,354,318,355,455,356,330,456,357,358,359,457,458,459,460,461,462,463,464,465,360,361,319,466,362,259,260,467,363,331,468,364,365,366,469,470,471,472,473,474,475,476,477,367,368,320,478,369,479,370,480,481,371,482,372,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,484,293,294,295,296,297,298,299,300,301,302,303,304,309,312],"tindex":"5979bcf0-dc12-11e4-9835-4d39066c25b7","variableMapping":{"encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:138","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"Encoding manager was not set.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[488],"tindex":"5979bcf1-dc12-11e4-9835-75da32c54313","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[345,356,363,372],"tindex":"5979bcf2-dc12-11e4-9835-239edb6f278e","variableMapping":{"ref":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:81","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:359","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[489,41,42,43,490,491,492,493,265,266],"tindex":"5979bcf3-dc12-11e4-9835-4d80330fb4cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"5979bcf4-dc12-11e4-9835-bf517bcac202","variableMapping":{"orientation":"absY","resultOrientation":"com.graphhopper.util.AngleCalc.PI3_4","baseOrientation":"absY","java.lang.Math.PI":"com.graphhopper.util.AngleCalc.PI3_4"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[115,259,260,372,264,267,277],"tindex":"5979bcf5-dc12-11e4-9835-a31d5839b224","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:54","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,488,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,316],"tindex":"5979bcf6-dc12-11e4-9835-b7abd5d09fbe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:66","type":"CtReturnImpl","sourcecode":"return 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:307","type":"CtReturnImpl","sourcecode":"return int[][].int"},"status":-1},{"failures":[],"tindex":"5979bcf7-dc12-11e4-9835-f5c193aa5aa5","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:733","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.getStr(java.lang.String, java.lang.String)"},"status":-2},{"failures":[3,4,5,6,7,8,9,387,10,11,12,13,388,14,15,16,17,18,19,20,21,22,23,24,389,25,26,27,28,332,29,30,494,494,495,495,496,497,498,499,500,501,502,503,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,504,505,506,507,333,391,378,392,393,394,334,395,335,396,379,46,380,381,397,382,398,399,400,383,384,401,402,403,404,405,47,385,386,406,336,407,337,408,409,410,411,412,48,49,50,51,413,52,53,54,55,56,57,414,58,59,60,61,62,63,64,415,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,508,509,510,511,512,513,113,114,115,116,117,118,119,120,121,122,123,124,416,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,417,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,418,207,208,209,210,211,419,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,514,515,516,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,316],"tindex":"5979e408-dc12-11e4-9835-a7110135f277","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:107","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-1},{"failures":[253,257,258],"tindex":"597b91b9-dc12-11e4-9835-3f8f35d30de0","variableMapping":{"size":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:107","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-1},{"failures":[436,446,458,470],"tindex":"597b91ba-dc12-11e4-9835-834ff0331fcb","variableMapping":{"name":"sacScale"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[257],"tindex":"597b91bb-dc12-11e4-9835-ed2cd44db3c6","variableMapping":{"from":"connectedId","end":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"597b91bc-dc12-11e4-9835-9f3cb56b6fc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:37","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"597b91bd-dc12-11e4-9835-f986a0839ddb","variableMapping":{"nodeThis":"i","nextEdgeOther":"size","nodeOther":"size","nextEdge":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:397","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":0},{"failures":[],"tindex":"597b91be-dc12-11e4-9835-cf0a419d319f","variableMapping":{"ghLocation":"flagEncodersStr","this":"this","encodingManager":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:690","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.create(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.parseEncoderString(java.lang.String), int)"},"status":-2},{"failures":[],"tindex":"597b91bf-dc12-11e4-9835-c50e499f2141","variableMapping":{"size":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:194","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException((java.lang.String.(java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)));\n"},"status":0},{"failures":[],"tindex":"597b91c0-dc12-11e4-9835-87c6512ee540","variableMapping":{"mask":"capacity"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-2},{"failures":[],"tindex":"597b91c1-dc12-11e4-9835-9bb8fd516f75","variableMapping":{"high":"flags","len":"roundaboutBit","start":"forwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[348,353,360,367],"tindex":"597b91c2-dc12-11e4-9835-cb82be6c5df4","variableMapping":{"str":"wayTypeName"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:420","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:399","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-1},{"failures":[],"tindex":"597b91c3-dc12-11e4-9835-790f6f4a040f","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[],"tindex":"597bb8d4-dc12-11e4-9835-75714dc58d6a","variableMapping":{"factor":"java.lang.Math.PI"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:207","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[389,345,347,438,440,441,348,349,444,447,329,448,450,452,353,354,356,330,456,359,460,462,463,360,361,466,363,331,468,366,472,474,475,367,368,478,370,371],"tindex":"597bb8d5-dc12-11e4-9835-2f2523a8f08f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:199","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"597bb8d6-dc12-11e4-9835-1b680a9fcbf5","variableMapping":{"turnCostsCount":"com.graphhopper.routing.util.PriorityWeighting.KEY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:63","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.BikeCommonFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, false);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleSpeed(com.graphhopper.reader.OSMWay, double, long);\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"));\n    long |= long;\n}"},"status":-2},{"failures":[422],"tindex":"597bb8d7-dc12-11e4-9835-5b94e9d2ecaa","variableMapping":{"mGarbage":"locked"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"597bb8d8-dc12-11e4-9835-8b0cbbfa4983","variableMapping":{"distance":"fwdSlower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:73","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:209","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[],"tindex":"597bb8d9-dc12-11e4-9835-436b4a286ef1","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"597bb8da-dc12-11e4-9835-d3d01f103445","variableMapping":{"pl":"pl"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:162","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":-2},{"failures":[373,374,66,74,75,86,94,95,375,376,322,377,324],"tindex":"597bb8db-dc12-11e4-9835-6f56c9b711e3","variableMapping":{"angle":"midLat","com.graphhopper.util.AngleCalc.PI3_4":"maxLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"597bb8dc-dc12-11e4-9835-49abad499730","variableMapping":{"bytesForFlags":"i"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1399","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"status":-2},{"failures":[16,517],"tindex":"597bb8dd-dc12-11e4-9835-7302c5f0bfc4","variableMapping":{"allBits":"minutes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:438","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = (java.lang.Integer.(java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-1},{"failures":[],"tindex":"597bb8de-dc12-11e4-9835-0727fac8fe73","variableMapping":{"distance":"costs","speed":"costs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:633","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-2},{"failures":[518,293,295,299,301,303],"tindex":"597bb8df-dc12-11e4-9835-6f0634fa243e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-1},{"failures":[],"tindex":"597bb8e0-dc12-11e4-9835-f525865f0377","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:226","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[356,330,357,359,363,331,364,366,370,371],"tindex":"597bb8e1-dc12-11e4-9835-a7a8df1d45d2","variableMapping":{"edgeId":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:429","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, int);\n"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,23,24,25,26,27,28,29,43,370,371,372],"tindex":"597bb8e2-dc12-11e4-9835-1d6ad3e2d41d","variableMapping":{"nanoTime":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:68","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"597bdff3-dc12-11e4-9835-61b952783a75","variableMapping":{"shift":"shift","preferWayEncoder":"preferWayEncoder"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[16,341,343],"tindex":"597bdff4-dc12-11e4-9835-a9900af09d18","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"status":-1},{"failures":[],"tindex":"597bdff5-dc12-11e4-9835-db649778ffd8","variableMapping":{"y1":"allBits","y2":"i","x1":"i","x2":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[],"tindex":"597bdff6-dc12-11e4-9835-b7e64a31ff2a","variableMapping":{"fwdFaster":"bwFaster","incDist2DSum":"bwFaster","fwdSlower":"bwFaster","fullDist2D":"bwFaster","restDist2D":"bwFaster","speed":"bwFaster","decDist2DSum":"bwFaster"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":0},{"failures":[348,353,330,360,331,367],"tindex":"597bdff7-dc12-11e4-9835-eff8701fb7f7","variableMapping":{"graphHopperFolder":"highway","removeZipped":"isPusingSection"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:661","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"-gh\")) {\n} else if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    throw new java.lang.IllegalArgumentException(\"To import an osm file you need to use importOrLoad\");\n} else if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException java.io.IOException) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[3,4,5,6,9,10,12,14,15,31,32,33,36,40,41,42,333,391,378,393,394,335,396,46,398,400,404,47,406,407,337,411,53,59,82,102,113,117,121,125,126,127,129,130,133,134,136,141,143,149,151,154,156,157,161,164,168,169,170,172,173,176,177,179,184,186,192,194,197,199,200,204,206,208,212,213,214,216,217,220,221,223,228,230,236,238,241,243,244,248,250,251,338,252,339,427,253,254,255,256,257,340,431,435,345,352,328,356,260,363,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,309,312],"tindex":"597bdff8-dc12-11e4-9835-1d9ded979a31","variableMapping":{"turnRestrictionBit":"roundaboutBit","restricted":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:615","type":"CtReturnImpl","sourcecode":"return boolean ? long : 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[],"tindex":"597bdff9-dc12-11e4-9835-8f04ba0fa905","variableMapping":{"size":"to","capacity":"to"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:60","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initTo(int, 0)"},"status":0},{"failures":[],"tindex":"597bdffa-dc12-11e4-9835-1377d0cfc97c","variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-1},{"failures":[],"tindex":"597bdffb-dc12-11e4-9835-47d1520cbb43","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:144","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,104,105,106,107,108,488,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,316],"tindex":"597c070c-dc12-11e4-9835-9be575543ca6","variableMapping":{"edgeTo":"segmentSizeInBytes","edgeFrom":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:157","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:301","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.RAMIntDataAccess.((long)(getSegments())) * (int)"},"status":-1},{"failures":[345,346,347],"tindex":"597c070d-dc12-11e4-9835-ef621c4d5857","variableMapping":{"systemProperty":"trackType"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[253,258],"tindex":"597c070e-dc12-11e4-9835-89278a61b8b0","variableMapping":{"size":"minOnewayNetworkSize","index":"removed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:84","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:248","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if ((gnu.trove.list.array.TIntArrayList.size()) < (int)) {\n        for (int int = 0 ; int < (gnu.trove.list.array.TIntArrayList.size()) ; int++) {\n            com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int));\n            int++;\n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"597c070f-dc12-11e4-9835-dd25d3ad13b7","variableMapping":{"d":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:270","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[260],"tindex":"597c0710-dc12-11e4-9835-3bfdaa0e49be","variableMapping":{"tmp":"incEleSum"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"597c0711-dc12-11e4-9835-5d6bb7488df2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:711","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:412","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.EdgeSkipIterState.getFlags()) >> 2) / (com.graphhopper.storage.LevelGraphStorage.double)"},"status":-2},{"failures":[],"tindex":"597c0712-dc12-11e4-9835-770d01857185","variableMapping":{"elem":"nodeLowLink","size":"start","keys":"nodeLowLink","i":"start","child":"start","lastPrio":"start"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:111","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n    } else {\n        break;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:91","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((int[][int]) == 0) {\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n        java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n        continue nextState;\n    } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    } \n}"},"status":-2},{"failures":[],"tindex":"597c0713-dc12-11e4-9835-7198e2d6d332","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1521","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:93","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"597c2e24-dc12-11e4-9835-b5e2c76643b6","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"length","edgeTo":"length","edgeFrom":"segmentSizePower"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-2},{"failures":[433,481],"tindex":"597c2e25-dc12-11e4-9835-5bc4f488d045","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:152","type":"CtIfImpl","sourcecode":"if ((long) != 0)\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-1},{"failures":[519],"tindex":"597c2e26-dc12-11e4-9835-e9d1e97a45d8","variableMapping":{"k":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"graphhopper.\".length())"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[373,374,520,375,376,521,322,377,522],"tindex":"597c2e27-dc12-11e4-9835-45b4152ff529","variableMapping":{"towerNodeDistance":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"597c2e28-dc12-11e4-9835-312e33ea6e0e","variableMapping":{"keyIndex":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:240","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:259","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.java.util.Arrays.fill(float[], int, ((int) + 1), 0.0F)"},"status":-2},{"failures":[],"tindex":"597c2e29-dc12-11e4-9835-c3e3ef2090e9","variableMapping":{"this":"this","index":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1126","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getRemovedNodes().add(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(int)"},"status":-2},{"failures":[],"tindex":"597c2e2a-dc12-11e4-9835-057c234616e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"597c2e2b-dc12-11e4-9835-4d5aa6aa0003","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:64","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":285,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":306,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":118,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":351,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":56,"com.graphhopper.GraphHopperAPITest.testNoLoad":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":391,"com.graphhopper.reader.OSMReaderTest.testFerry":16,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":32,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":358,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":448,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":89,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":4,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":489,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":222,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":495,"com.graphhopper.coll.CompressedArrayTest.testCompress":374,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":454,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":203,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":401,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":179,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":85,"com.graphhopper.util.AngleCalcTest.testOrientation":490,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":301,"com.graphhopper.GraphHopperTest.testPrepare":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":408,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":291,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":456,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":277,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":353,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":45,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":124,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":356,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":269,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":69,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":247,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":359,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":206,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":323,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":125,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":304,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":76,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":70,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":482,"com.graphhopper.reader.OSMReaderTest.testSort":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":361,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":209,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":198,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":164,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":409,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":312,"com.graphhopper.routing.DijkstraTest.initializationError":486,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":243,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":150,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":175,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":484,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":418,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":364,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":350,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":93,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":183,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":281,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":91,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":272,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":271,"com.graphhopper.coll.OSMIDMapTest.testGetLong":502,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":226,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":232,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":142,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":121,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":144,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":492,"com.graphhopper.coll.CompressedArrayTest.testCompress2":373,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":345,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":223,"com.graphhopper.GraphHopperAPITest.testLoad":250,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":416,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":106,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":422,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":180,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":170,"com.graphhopper.storage.LevelGraphStorageTest.testClone":129,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":517,"com.graphhopper.reader.OSMReaderTest.testBarriers":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":213,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":258,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":83,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":469,"com.graphhopper.util.GHUtilityTest.testCopy":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":394,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":442,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":318,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":414,"com.graphhopper.routing.PathTest.testFindInstruction":266,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":451,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":147,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":214,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":31,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":425,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":158,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":468,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":199,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":184,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":241,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":476,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":481,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":485,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":131,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":334,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":112,"com.graphhopper.util.InstructionListTest.testWayList2":42,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":478,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":406,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":77,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":218,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":357,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":516,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":330,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":352,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":259,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":133,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":457,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":382,"com.graphhopper.storage.RAMDirectoryTest.testSynched":511,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":224,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":61,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":273,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":21,"com.graphhopper.routing.AStarTest.initializationError":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":287,"com.graphhopper.coll.OSMIDMapTest.testGet":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":221,"com.graphhopper.routing.PathBidirRefTest.testExtract":261,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":426,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":460,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":501,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":249,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":459,"com.graphhopper.util.GHUtilityTest.testSort2":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":282,"com.graphhopper.reader.OSMReaderTest.testMain":18,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":231,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":461,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":324,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":319,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":407,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":136,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":140,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":161,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":137,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":236,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":363,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":143,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":28,"com.graphhopper.storage.StorablePropertiesTest.testStore":514,"com.graphhopper.storage.GraphHopperStorageTest.testClone":172,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":343,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":512,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":327,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":113,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":317,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":395,"com.graphhopper.routing.PathTest.testTime":264,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":441,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":159,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":130,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":344,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":415,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":79,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":384,"com.graphhopper.reader.OSMReaderTest.testRelation":389,"com.graphhopper.util.GHUtilityTest.testSortDirected":38,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":368,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":509,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":308,"com.graphhopper.GraphHopperTest.testFootOnly":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":447,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":341,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":513,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":92,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":292,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":467,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":398,"com.graphhopper.search.NameIndexTest.testCreate":507,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":305,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":109,"com.graphhopper.routing.QueryGraphTest.testOneWay":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":80,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":376,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":450,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":494,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":68,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":520,"com.graphhopper.reader.OSMReaderTest.testWithBounds":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":245,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":254,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":402,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":427,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":370,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":126,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":355,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":235,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":228,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":168,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":268,"com.graphhopper.util.InstructionListTest.testWayList":41,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":458,"com.graphhopper.GraphHopperAPITest.testDisconnected179":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":335,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":521,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":392,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":474,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":256,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":465,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":7,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":174,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":302,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":192,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":455,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":279,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":487,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":300,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":157,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":432,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":438,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":360,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":289,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":417,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":100,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":362,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":163,"com.graphhopper.routing.PathTest.testWayList":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":410,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":430,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":519,"com.graphhopper.coll.OSMIDMapTest.testGet2":500,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":290,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":154,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":496,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":464,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":185,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":338,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":219,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":94,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":141,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":95,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":471,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":346,"com.graphhopper.util.GHUtilityTest.testSort":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":405,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":522,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":449,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":463,"com.graphhopper.search.NameIndexTest.testPut":505,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":419,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":57,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":87,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":65,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":50,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":110,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":365,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":311,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":260,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":207,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":437,"com.graphhopper.storage.MMapDirectoryTest.testSynched":508,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":445,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":497,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":424,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":288,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":253,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":111,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":47,"com.graphhopper.routing.PathTest.testFound":263,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":13,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":372,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":156,"com.graphhopper.util.AngleCalcTest.testAtan2":491,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":462,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":225,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":518,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":506,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":46,"com.graphhopper.util.InstructionListTest.testEmptyList":39,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":276,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":443,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":280,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":435,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":429,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":428,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":283,"com.graphhopper.reader.PrinctonReaderTest.testRead":14,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":200,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":90,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":220,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":379,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":503,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":333,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":230,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":453,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":472,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":480,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":331,"com.graphhopper.reader.OSMReaderTest.testFoot":17,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":404,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":498,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":74,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":160,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":377,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":446,"com.graphhopper.reader.OSMReaderTest.testOneWay":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":75,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":181,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":196,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":242,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":452,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":470,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":296,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":342,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":294,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":252,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":397,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":307,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":166,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":332,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":510,"com.graphhopper.routing.PathBidirRefTest.testExtract2":262,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":488,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":267,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":348,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":504,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":194,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":413,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":444,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":412,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":423,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":475,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":71,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":197,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":390,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":433,"com.graphhopper.GraphHopperTest.testFootAndCar":8,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":189,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":138,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":347,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":393,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":479,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":434,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":216,"com.graphhopper.storage.StorablePropertiesTest.testLoad":515,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":286,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":378,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":25,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":117,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":43,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":193,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":339,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":399,"com.graphhopper.routing.AStarBidirectionTest.initializationError":483,"com.graphhopper.util.AngleCalcTest.testCombined":493,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":325,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":155,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":153,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":208}}]
