[{"failures":[],"tindex":"973bc57d-db2f-11e4-8a1c-b395f87d7d2a","variableMapping":{"elem":"elem","size":"i","keys":"elem","i":"child","key":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (int[][(int / 2)]) > int ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"974896be-db2f-11e4-8a1c-b5399d003df4","variableMapping":{"leafEntry":"component","nodeId":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:114","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"974896bf-db2f-11e4-8a1c-fd08701c13b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:44","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.com.graphhopper.util.shapes.BBox.double = java.lang.Double.double"},"status":-1},{"failures":[],"tindex":"974896c0-db2f-11e4-8a1c-1bd16bf61727","variableMapping":{"time":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[7,8,9,10],"tindex":"974896c1-db2f-11e4-8a1c-7963fa903c2c","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:256","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[],"tindex":"974896c2-db2f-11e4-8a1c-99bec568b47c","variableMapping":{"calcPoints":"finishedTo"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:127","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:73","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":0},{"failures":[11],"tindex":"974896c3-db2f-11e4-8a1c-8f3c871eba2f","variableMapping":{"i":"start","to":"prevConnectedId","lonSize":"prevConnectedId"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:257","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[12,13,14,15,16,0,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,3,54,55,56,57,58,59,60,61,62,6,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"974896c4-db2f-11e4-8a1c-533e8a6f6000","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:56","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.GraphHopperStorage.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"974896c5-db2f-11e4-8a1c-c366d8045e42","variableMapping":{"byteCount":"todoBytes"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return false;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[104],"tindex":"974896c6-db2f-11e4-8a1c-b326ca3968aa","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:67","type":"CtReturnImpl","sourcecode":"return 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"9748bdd7-db2f-11e4-8a1c-c5f4773b48d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[105,106,107,108,109,110,111,112,113],"tindex":"9748bdd8-db2f-11e4-8a1c-43c4ffe3d38d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[114],"tindex":"9748bdd9-db2f-11e4-8a1c-a5a15d8a84d2","variableMapping":{"time":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:136","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[],"tindex":"9748bdda-db2f-11e4-8a1c-61472be293de","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:217","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"9748bddb-db2f-11e4-8a1c-fb474fefeeb3","variableMapping":{"lastTime":"nanoTime","this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.lang.System.(java.lang.System.nanoTime()) - (long)"},"status":0},{"failures":[115],"tindex":"9748bddc-db2f-11e4-8a1c-0380f5b090c3","variableMapping":{"closestEdge":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:138","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[116,117,118],"tindex":"9748bddd-db2f-11e4-8a1c-93ee91701533","variableMapping":{"high":"allowed","len":"allowed","start":"allowed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:264","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[119,120],"tindex":"9748bdde-db2f-11e4-8a1c-3f88c55d81d8","variableMapping":{"str":"str","i":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:429","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (\"\\n\" + int) + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[105,106,121,107,108,109,110,122,123,111,124,116,125,126,127,128,129,130,131,132,133,134,135,136,112,113,46,47,48,137,49,50,51,52,138,53,3,54,55,56,57,58,139,59,60,140,141,142,143,144,145,146,147,148,4,149,150,151,152,153,154,155,156,157,158,61,6,63,159,117,64,65,160,66,161,89,93,94,97],"tindex":"9748bddf-db2f-11e4-8a1c-db3e4962996d","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[162,163,164,165],"tindex":"9748e4f0-db2f-11e4-8a1c-1b9e5996d12e","variableMapping":{"ret":"size","retBucket":"size","i":"size","bucketSize":"size"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:122","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[105,106,121,107,109,110,122,123,111,127,112,113,48,138,3,54,57,140,141,147,4,149,152,6,117,97],"tindex":"97490c01-db2f-11e4-8a1c-c72d6238467a","variableMapping":{"edgeId":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:400","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[61,62,6,63,159,64,65,160,66,166,167,168],"tindex":"97493312-db2f-11e4-8a1c-f7a838101d5e","variableMapping":{"edgeFilter":"edgeFilter","com.graphhopper.routing.util.EdgeFilter.ALL_EDGES":"edgeFilter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:57","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle())"},"status":-1},{"failures":[],"tindex":"97493313-db2f-11e4-8a1c-11ee1a64dbe2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:130","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[119,169,170,124,116,125,126,127,128,129,130,131,171,132,133,134,135,172,136,173,61,62,6,63,159,117,64,65,160,66,161,174,118,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,7,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,9,222,223,224,225,226,227,228,229,230,10,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"97493314-db2f-11e4-8a1c-c357f882deb6","variableMapping":{"value":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:87","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"97493315-db2f-11e4-8a1c-19299ccd78d5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:150","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:235","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[105,106,107,108,109,110,111,112,113],"tindex":"97493316-db2f-11e4-8a1c-aba8c85a1660","variableMapping":{"orientation":"lon","resultOrientation":"midLon","baseOrientation":"lon","java.lang.Math.PI":"midLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:229","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"status":-1},{"failures":[124,182],"tindex":"97493317-db2f-11e4-8a1c-ddf76b802d90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:486","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4))"},"status":-1},{"failures":[244],"tindex":"97498138-db2f-11e4-8a1c-9bbb084a2932","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[245],"tindex":"97498139-db2f-11e4-8a1c-dbecf1ae27a9","variableMapping":{"initLeafSize":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:59","type":"CtAssignmentImpl","sourcecode":"int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:130","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"9749813a-db2f-11e4-8a1c-ab4f403d773f","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"9749813b-db2f-11e4-8a1c-af13076bc7da","variableMapping":{"cap":"start"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:101","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:75","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-2},{"failures":[124],"tindex":"9749813c-db2f-11e4-8a1c-7bb99f1acf2c","variableMapping":{"longTripsSpeed":"longTripsSpeed","shortTripsSpeed":"longTripsSpeed","this":"this","durationInHours":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-1},{"failures":[192,194,199,206,211,219,221,226,232,238],"tindex":"9749813d-db2f-11e4-8a1c-b5edc07d9966","variableMapping":{"str":"wayTypeName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:396","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-1},{"failures":[],"tindex":"9749813e-db2f-11e4-8a1c-fd2b70bd9212","variableMapping":{"index":"priorityFromRelation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:239","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:302","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-2},{"failures":[105,106,121,107,108,109,110,111,112,113],"tindex":"9749813f-db2f-11e4-8a1c-3b6dbe8ac0d6","variableMapping":{"tmp":"lon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:135","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:231","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[67,75,76,79,80,81,82,85,86,97,99,100,101,103],"tindex":"97498140-db2f-11e4-8a1c-e31cca931e5e","variableMapping":{"err":"skippedEdge1","dLat":"from","tmpErr":"skippedEdge2","x1":"to","sLon":"to"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:69","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n} else {\n    com.graphhopper.util.EdgeSkipIterState com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    boolean boolean = com.graphhopper.util.EdgeSkipIterState == null;\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, true);\n    if (boolean)\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    else\n        com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n    \n    com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false);\n}"},"status":-1},{"failures":[6,67,69,76,79,80,81,82,83,84,86,87,90,92,93,94,95,96,97,99,101,103],"tindex":"97498141-db2f-11e4-8a1c-21748bb6e40a","variableMapping":{"angle":"distance","com.graphhopper.util.AngleCalc.PI3_4":"dist"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[187],"tindex":"97498142-db2f-11e4-8a1c-9bc7a89b277a","variableMapping":{"bytePos":"relBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:522","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[181],"tindex":"9749a853-db2f-11e4-8a1c-7b1eeb6b584d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:233","type":"CtIfImpl","sourcecode":"if (((boolean) && ((com.graphhopper.reader.OSMNode.hasTag(\"highway\", \"ford\")) || (com.graphhopper.reader.OSMNode.hasTag(\"ford\")))) && (!(com.graphhopper.reader.OSMNode.hasTag(java.util.List<java.lang.String>, java.util.HashSet<java.lang.String>))))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"9749a854-db2f-11e4-8a1c-455b481a6c74","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[246,247,248,249,12,250,251,252,253,254,255,119,256,257,13,258,259,260,124,116,125,126,127,128,129,130,131,132,133,134,135,136,261,14,262,15,16,263,264,265,266,0,267,268,17,18,19,20,21,22,23,24,25,26,27,269,270,28,29,271,30,31,272,32,33,34,35,273,274,36,275,37,38,39,40,276,41,42,277,43,278,44,45,1,279,280,2,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,46,47,329,48,137,49,50,51,52,138,53,3,54,55,56,57,58,139,59,60,330,331,332,333,334,335,336,337,338,339,340,341,342,343,141,142,143,144,145,146,147,148,4,149,150,151,152,153,154,155,156,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,5,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,157,158,61,62,6,63,159,117,64,65,160,66,161,424,425,166,167,168,11,244,215,115,426,427,428,429,430,431,432,432,433,433,434,434,435,435,436,436,437,437,438,438,439,439,440,440,441,441,442,442,443,443,67,68,69,70,71,72,73,74,75,76,77,444,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"9749a855-db2f-11e4-8a1c-b14cae4d6629","variableMapping":{"properties":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"9749a856-db2f-11e4-8a1c-93bfde52c457","variableMapping":{"a_lon_deg":"minLat","factor":"minLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:224","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"9749a857-db2f-11e4-8a1c-ffab7e3e6c5a","variableMapping":{"size":"node","capacity":"node"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":0},{"failures":[246,247,248,249,12,250,445,251,252,253,254,255,119,256,257,13,258,259,124,116,125,126,127,128,129,130,131,171,132,133,134,135,136,14,262,15,16,263,264,265,266,0,267,268,17,446,18,19,20,21,22,23,24,25,26,27,269,270,28,29,271,30,31,272,32,33,34,35,273,274,36,275,37,38,39,40,276,41,42,277,43,278,44,45,1,279,280,2,281,282,283,447,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,46,47,329,48,137,49,50,51,52,138,53,3,54,55,56,57,58,139,59,60,331,332,333,334,335,336,337,338,339,340,341,342,343,141,142,143,144,145,146,147,148,4,149,150,151,152,153,154,155,156,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,5,383,384,385,448,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,157,158,449,61,62,6,63,159,117,64,450,65,160,66,161,451,174,452,424,118,453,454,175,176,455,177,178,179,180,181,182,456,183,184,185,457,458,459,460,461,462,463,464,425,166,167,168,11,244,188,465,189,190,191,192,193,194,466,7,195,196,467,197,198,468,469,199,200,201,202,203,8,204,205,206,207,208,209,470,210,471,472,211,212,213,214,215,115,473,216,217,218,219,220,221,474,9,222,223,475,224,225,476,477,226,227,228,229,230,478,10,231,232,233,234,235,479,236,237,480,481,238,239,240,241,242,482,483,484,485,486,487,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,488,67,68,489,69,70,71,72,73,74,75,76,77,444,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"9749cf68-db2f-11e4-8a1c-eb08a93e3f5d","variableMapping":{"str":"s"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:185","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:745","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-1},{"failures":[],"tindex":"9749cf69-db2f-11e4-8a1c-e3bdf6e42b9d","variableMapping":{"this":"g"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1258","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:219","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.GraphStorage.createEdgeExplorer()"},"status":0},{"failures":[],"tindex":"974a1d8a-db2f-11e4-8a1c-13cf8ce0fbd1","variableMapping":{"newUniqueOsmId":"value"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:569","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"974a1d8b-db2f-11e4-8a1c-5d526bf2ddd0","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:201","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-2},{"failures":[],"tindex":"974a1d8c-db2f-11e4-8a1c-2503785305d6","variableMapping":{"high":"len"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:497","type":"CtReturnImpl","sourcecode":"return ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:410","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"974a1d8d-db2f-11e4-8a1c-a1b457d34c18","variableMapping":{"currentEntry":"child"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[],"tindex":"974a449e-db2f-11e4-8a1c-8bfb598af5df","variableMapping":{"weightLong":"encoded","com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT_LONG":"encoded"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:233","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[266,0,19,28,29,271,31,34,36,276,69,71,72,73,75,77,78,79],"tindex":"974a449f-db2f-11e4-8a1c-059db85028de","variableMapping":{"size":"a","from":"a","end":"a"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.ensureNodeIndex(java.lang.Math.java.lang.Math.max(int, int))"},"status":-1},{"failures":[20,28,29,30,33,34,38,39,286,296,297,299,303,304,311,312,346,356,357,359,363,364,371,372,388,398,399,401,405,406,413,414,425,168],"tindex":"974a44a0-db2f-11e4-8a1c-9fca0a96f00f","variableMapping":{"elem":"a","size":"high"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:90","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-1},{"failures":[119,135,6,179,183,184,193,220,243],"tindex":"974a44a1-db2f-11e4-8a1c-5778dc00b117","variableMapping":{"force":"force","maxSpeed":"speed","speed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:766","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:764","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (boolean || (double < double))\n        return double * 0.9;\n    \n} "},"status":-1},{"failures":[130],"tindex":"974a44a2-db2f-11e4-8a1c-05c499506983","variableMapping":{"flags":"directionBitMask","mask":"directionBitMask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:596","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[],"tindex":"974a44a3-db2f-11e4-8a1c-933778d6bdc0","variableMapping":{"acceptBit":"encoded","ferryBit":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:225","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[180],"tindex":"974a44a4-db2f-11e4-8a1c-a78288ab49ce","variableMapping":{"encoded":"roundaboutBit","backwardBit":"roundaboutBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:160","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[462],"tindex":"974a44a5-db2f-11e4-8a1c-87b6cf4264cf","variableMapping":{"i":"hash","child":"hash"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:343","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"status":-1},{"failures":[],"tindex":"974a44a6-db2f-11e4-8a1c-a76d0350f4bd","variableMapping":{"gradient":"minLatTmp","yend":"minLatTmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[69,79,103],"tindex":"974a44a7-db2f-11e4-8a1c-1d26778726fa","variableMapping":{"flags":"flags","tmpValue":"scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:259","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"status":-1},{"failures":[],"tindex":"974a44a8-db2f-11e4-8a1c-5d514c09ca01","variableMapping":{"precision":"absY","lat":"x"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:132","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"status":0},{"failures":[],"tindex":"974a44a9-db2f-11e4-8a1c-214615d7a7f2","variableMapping":{"mask":"weightLong"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[],"tindex":"974a44aa-db2f-11e4-8a1c-95be35344586","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:255","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[164,165],"tindex":"974a44ab-db2f-11e4-8a1c-a3e72a584918","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:126","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"status":-1},{"failures":[],"tindex":"974a44ac-db2f-11e4-8a1c-1d89b0dc572c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:170","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:254","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[490,69,71,75,77,78],"tindex":"974a44ad-db2f-11e4-8a1c-4f9390380171","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"974a44ae-db2f-11e4-8a1c-6d2264a76565","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:215","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"974a6bbf-db2f-11e4-8a1c-d3b145d02eab","variableMapping":{"flags2":"flags","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"backwardBit","flags1":"backwardBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"974a6bc0-db2f-11e4-8a1c-41177e2a1374","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:85","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[176,182,185,201,213,228,240],"tindex":"974a6bc1-db2f-11e4-8a1c-f76f2606e80b","variableMapping":{"str":"key"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:271","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:175","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))\n    return true;\n"},"status":-1},{"failures":[425,11],"tindex":"974a6bc2-db2f-11e4-8a1c-01bc142f5158","variableMapping":{"this":"g","iter":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1330","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.getAllEdges()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-1},{"failures":[67,75,76,82,85,86,97,99,101],"tindex":"974a6bc3-db2f-11e4-8a1c-3bfda5ec25c4","variableMapping":{"edge":"iter"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:409","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeSkipIterState.isShortcut()))\n    throw new java.lang.IllegalStateException(\"getWeight is only available for shortcuts\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.EdgeSkipIterState, false)"},"status":-1},{"failures":[254,255,119,491,492,493,494,495,428,429],"tindex":"974a6bc4-db2f-11e4-8a1c-ede30e84d5d4","variableMapping":{"resultOrientation":"angle","orientation":"r"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:77","type":"CtAssignmentImpl","sourcecode":"double = double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:47","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[],"tindex":"974a6bc5-db2f-11e4-8a1c-2d7b686cb6ea","variableMapping":{"fileDetails":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:229","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":0},{"failures":[],"tindex":"974a6bc6-db2f-11e4-8a1c-454d453a4ef1","variableMapping":{"file":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:208","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists())) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:361","type":"CtReturnImpl","sourcecode":"return java.lang.Object.toString().equals(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"974a6bc7-db2f-11e4-8a1c-f5570d8aba7b","variableMapping":{"wayTypeEncoder":"this","shift":"maxValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:198","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.this(java.lang.String, int, int, double, long, int, true)"},"status":-2},{"failures":[],"tindex":"974a6bc8-db2f-11e4-8a1c-3fdf5c661ccf","variableMapping":{"em":"this","encodingManager":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[12,256,13,258,259,116,136,0,18,19,20,27,270,36,40,42,44,1,2,284,285,286,293,295,308,313,316,320,344,345,346,353,355,368,373,376,380,5,386,387,388,395,397,410,415,418,422,6,455,460,425,11,244,436,439,69,70,75,77,79,80,81,91,93,94,103],"tindex":"974a6bc9-db2f-11e4-8a1c-6304a7ec46b0","variableMapping":{"high":"directionBitMask","highKey":"dir","key":"dir"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"974a6bca-db2f-11e4-8a1c-13ee4dc5458e","variableMapping":{"min":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD","tmpSize":"com.graphhopper.routing.util.FlagEncoder.K_FORWARD"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:168","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.BikeCommonFlagEncoder.isBool(long, com.graphhopper.routing.util.FlagEncoder.int)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-2},{"failures":[],"tindex":"974a6bcb-db2f-11e4-8a1c-13d37d11a61f","variableMapping":{"weightToPrioMap":"weightToPrioMap","highway":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.VERY_NICE"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:146","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"974a6bcc-db2f-11e4-8a1c-e1562d9eefb3","variableMapping":{"this":"this","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"974a6bcd-db2f-11e4-8a1c-e9a414b4b8c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:121","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"status":-2},{"failures":[],"tindex":"974a6bce-db2f-11e4-8a1c-d7aafb86b641","variableMapping":{"storedKey":"spatialKey","key":"spatialKey"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:124","type":"CtIfImpl","sourcecode":"if (long > long) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[256,257,13,258,259,14,262,15,16,263,264,265,266,0,267,268,17,446,18,19,20,21,22,23,24,25,26,27,269,270,28,29,271,30,31,272,32,33,34,35,273,274,36,275,37,38,39,40,276,41,42,277,43,278,44,45,1,279,280,2,281,282,283,447,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,328,47,60,343,156,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,5,383,384,385,448,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,157,158,6,63,159,117,64,160,66,174,452,424,118,453,454,175,176,455,177,178,179,180,181,182,456,183,184,185,457,458,459,460,461,462,463,464,188,465,189,190,191,192,193,194,466,7,195,196,467,197,198,468,469,199,200,201,202,203,8,204,205,206,207,208,209,470,210,471,472,211,212,213,214,215,115,473,216,217,218,219,220,221,474,9,222,223,475,224,225,476,477,226,227,228,229,230,10,231,232,233,234,235,479,236,237,480,481,238,239,240,241,242,482,483,426,427,428,429,430,431,436,67,68,489,69,70,71,72,73,74,75,76,77,444,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"974a92df-db2f-11e4-8a1c-d931fa7c916a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:231","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[],"tindex":"974a92e0-db2f-11e4-8a1c-5fe6aaabb566","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[120],"tindex":"974a92e1-db2f-11e4-8a1c-55459d9f560c","variableMapping":{"lazyUpdates":"kmInteger"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:130","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:399","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n} "},"status":-1},{"failures":[],"tindex":"974a92e2-db2f-11e4-8a1c-ff608bf8c5da","variableMapping":{"ar_y":"minLat","ab_y":"minLat","ar_x":"maxLat","ab_x":"maxLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:215","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[104],"tindex":"974a92e3-db2f-11e4-8a1c-dfdeef87d494","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1487","type":"CtReturnImpl","sourcecode":"return 7"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:458","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"974a92e4-db2f-11e4-8a1c-7f2d2cf0b26e","variableMapping":{"inner":"da","da":"da"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[],"tindex":"974a92e5-db2f-11e4-8a1c-9115f9b434a2","variableMapping":{"time":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:235","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[202,207,229,241],"tindex":"974a92e6-db2f-11e4-8a1c-711738b5d2fe","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:264","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:446","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"service\")"},"status":-1},{"failures":[],"tindex":"974ab9f7-db2f-11e4-8a1c-fd3dce411c1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:454","type":"CtLocalVariableImpl","sourcecode":"java.lang.Exception java.lang.Exception"},"status":0},{"failures":[254,255,491,492,493,495,428,429],"tindex":"974ab9f8-db2f-11e4-8a1c-0942c2e01966","variableMapping":{"lat":"y"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[183,184,200,212,227,239,243],"tindex":"974ab9f9-db2f-11e4-8a1c-fd3975f19b90","variableMapping":{"factor":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:206","type":"CtAssignmentImpl","sourcecode":"double = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[],"tindex":"974ab9fa-db2f-11e4-8a1c-6129c306b645","variableMapping":{"java.lang.Integer.MAX_VALUE":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:360","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[246,247,248,249,12,250,251,252,253,254,255,119,256,257,13,258,259,260,124,116,125,126,127,128,129,130,131,132,133,134,135,136,496,497,498,15,264,266,0,267,268,270,1,280,2,281,282,295,322,323,324,325,327,328,46,47,329,48,137,49,50,51,52,138,53,3,54,55,56,57,58,139,59,60,330,331,332,333,334,336,337,338,339,340,342,343,141,142,143,144,145,146,147,148,4,149,150,151,152,153,154,155,156,355,370,382,5,383,384,397,157,158,61,6,63,159,117,64,65,160,66,161,424,425,166,167,168,11,244,215,115,426,427,428,429,430,431],"tindex":"974ab9fb-db2f-11e4-8a1c-ff1b40e63f7b","variableMapping":{"size":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:118","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:108","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"974ab9fc-db2f-11e4-8a1c-8f6a80839336","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"974ae10d-db2f-11e4-8a1c-0323001f5452","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:94","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.internalEdgeAdd(int, int)"},"status":-2},{"failures":[176,182,185,201,213,228,240],"tindex":"974ae10e-db2f-11e4-8a1c-2feb03cf9eef","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:176","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"974ae10f-db2f-11e4-8a1c-3fd38283ba3b","variableMapping":{"com.graphhopper.storage.DAType.MMAP":"defaultType","type":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:166","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":0},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":98,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":433,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":243,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":264,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":324,"com.graphhopper.GraphHopperAPITest.testNoLoad":449,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":345,"com.graphhopper.reader.OSMReaderTest.testFerry":124,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":256,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":207,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":50,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":62,"com.graphhopper.util.InstructionTest.testGetAzimuthAndGetDirection":495,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":294,"com.graphhopper.coll.CompressedArrayTest.testCompress":113,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":472,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":421,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":71,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":365,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":397,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":329,"com.graphhopper.util.AngleCalcTest.testOrientation":491,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":77,"com.graphhopper.GraphHopperTest.testPrepare":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":67,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":404,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":90,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":253,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":211,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":247,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":17,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":206,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":189,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":496,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":88,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":396,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":144,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":319,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":194,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":1,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":122,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":18,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":79,"com.graphhopper.GraphHopperTest.testLoadOSM":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":145,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":463,"com.graphhopper.reader.OSMReaderTest.testSort":126,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":200,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":281,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":416,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":5,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":378,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":439,"com.graphhopper.routing.DijkstraTest.initializationError":487,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":315,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":275,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":393,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":279,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":289,"com.graphhopper.reader.OSMNodeTest.testSetTags":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":219,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":284,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":242,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":239,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":53,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":401,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":94,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":52,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":450,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":85,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":298,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":304,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":272,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":0,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":33,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":493,"com.graphhopper.coll.CompressedArrayTest.testCompress2":112,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":406,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":231,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":295,"com.graphhopper.GraphHopperAPITest.testLoad":157,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":174,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":398,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":388,"com.graphhopper.storage.LevelGraphStorageTest.testClone":22,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":104,"com.graphhopper.reader.OSMReaderTest.testBarriers":127,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":285,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":474,"com.graphhopper.util.GHUtilityTest.testCopy":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":349,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":480,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":213,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":326,"com.graphhopper.routing.PathTest.testFindInstruction":429,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":470,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":273,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":286,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":13,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":175,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":277,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":218,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":323,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":417,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":402,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":73,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":476,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":245,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":486,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":350,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":385,"com.graphhopper.util.InstructionListTest.testWayList2":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":373,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":151,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":422,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":290,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":192,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":261,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":318,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":482,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":215,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":383,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":296,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":86,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":387,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":128,"com.graphhopper.routing.AStarTest.initializationError":485,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":293,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":176,"com.graphhopper.routing.PathBidirRefTest.testExtract":430,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":196,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":321,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":371,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":156,"com.graphhopper.util.GHUtilityTest.testSort2":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":95,"com.graphhopper.reader.OSMReaderTest.testMain":125,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":267,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":303,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":467,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":123,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":201,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":36,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":375,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":270,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":30,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":44,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":28,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":216,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":32,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":135,"com.graphhopper.storage.GraphHopperStorageTest.testClone":390,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":374,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":185,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":183,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":400,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":240,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":351,"com.graphhopper.routing.PathTest.testTime":427,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":237,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":43,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":461,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":153,"com.graphhopper.reader.OSMReaderTest.testRelation":171,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":364,"com.graphhopper.util.GHUtilityTest.testSortDirected":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":227,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":435,"com.graphhopper.GraphHopperTest.testFootOnly":66,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":205,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":182,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":332,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":138,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":83,"com.graphhopper.reader.OSMElementTest.testSetTags":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":473,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":360,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":432,"com.graphhopper.routing.QueryGraphTest.testOneWay":441,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":154,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":209,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":143,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":105,"com.graphhopper.reader.OSMReaderTest.testWithBounds":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":228,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":357,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":437,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":366,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":455,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":186,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":19,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":268,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":477,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":214,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":307,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":300,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":386,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":81,"com.graphhopper.util.InstructionListTest.testWayList":254,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":7,"com.graphhopper.GraphHopperAPITest.testDisconnected179":158,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":352,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":347,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":224,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":380,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":469,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":159,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":392,"com.graphhopper.routing.util.EncodedValueTest.testSwap":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":444,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":410,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":465,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":409,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":92,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":484,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":76,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":42,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":457,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":199,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":102,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":448,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":203,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":382,"com.graphhopper.routing.PathTest.testWayList":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":379,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":479,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":356,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":103,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":306,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":468,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":403,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":291,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":391,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":3,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":31,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":54,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":222,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":163,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":232,"com.graphhopper.util.GHUtilityTest.testSort":250,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":369,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":198,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":320,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":447,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":137,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":325,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":336,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":339,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":498,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":220,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":337,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":280,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":234,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":483,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":301,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":425,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":370,"com.graphhopper.routing.PathTest.testFound":426,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":161,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":464,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":41,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":478,"com.graphhopper.util.AngleCalcTest.testAtan2":492,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":197,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":297,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":490,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":355,"com.graphhopper.util.InstructionListTest.testEmptyList":252,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":395,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":89,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":481,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":460,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":177,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":212,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":96,"com.graphhopper.reader.PrinctonReaderTest.testRead":258,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":51,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":292,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":344,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":302,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":471,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":236,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":217,"com.graphhopper.reader.OSMReaderTest.testFoot":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":368,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":443,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":4,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":110,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":278,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":8,"com.graphhopper.reader.OSMReaderTest.testOneWay":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":149,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":399,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":414,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":413,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":314,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":210,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":362,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":394,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":72,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":340,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":424,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":358,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":434,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":172,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":384,"com.graphhopper.routing.PathBidirRefTest.testExtract2":431,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":497,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":238,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":328,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":412,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":341,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":241,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":130,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":381,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":146,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":415,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":445,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":25,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":458,"com.graphhopper.GraphHopperTest.testFootAndCar":117,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":407,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":233,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":348,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":462,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":459,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":288,"com.graphhopper.GraphHopperTest.testPrepareOnly":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":99,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":346,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":132,"com.graphhopper.reader.OSMElementTest.testHasTag":169,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":263,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":119,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":411,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":453,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":361,"com.graphhopper.routing.AStarBidirectionTest.initializationError":488,"com.graphhopper.util.AngleCalcTest.testCombined":494,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":188,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":276,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":39,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":2}}]
