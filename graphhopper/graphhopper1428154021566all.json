[{"failures":[],"tindex":"477e878e-dace-11e4-89ef-cbe59af3d454","variableMapping":{"time":"acceptBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:211","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"477fc00f-dace-11e4-89ef-cf0bd488aef0","variableMapping":{"directionBitMask":"flags","blockByDefault":"backward"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:229","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:119","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"477fc010-dace-11e4-89ef-d7e249938162","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:219","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-1},{"failures":[],"tindex":"477fc011-dace-11e4-89ef-45259d1ada7e","variableMapping":{"nodeB":"nodeB","edgeId":"nodeB","nodeA":"nodeB"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:512","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTreeSC:64","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"477fc012-dace-11e4-89ef-993e6b24c79a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:566","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return com.graphhopper.routing.util.EncodedValue.setValue(long, long);\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setLong(long, int, long);\n}"},"status":-2},{"failures":[],"tindex":"477fc013-dace-11e4-89ef-af474072eccd","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:273","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"477fc014-dace-11e4-89ef-9d539747cbd2","variableMapping":{"com.graphhopper.storage.LevelGraphStorage.MAX_WEIGHT":"speed","java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.POSITIVE_INFINITY","weight":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:413","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.LevelGraphStorage.double))\n    return java.lang.Double.double;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:54","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"477fc015-dace-11e4-89ef-b1326d89f9c9","variableMapping":{"towerNodeDistance":"fullDist2D"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:745","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:166","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"477fc016-dace-11e4-89ef-b785daed03c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"477fc017-dace-11e4-89ef-c1a79d8c579d","variableMapping":{"distance":"eleDelta","dist":"eleDelta"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:165","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"477fe728-dace-11e4-89ef-e5509b167896","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:155","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"477fe729-dace-11e4-89ef-a9f39f4a11c8","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:59","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeSkipIterState.getSkippedEdge2()"},"status":-2},{"failures":[10,11,0,1,2,3,4,12,5,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"477fe72a-dace-11e4-89ef-2fd442a6c305","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:111","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"477fe72b-dace-11e4-89ef-39ceb65dd103","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:762","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"477fe72c-dace-11e4-89ef-5f54979ea640","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:99","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[10,11,0,1,2,3,4,12,5,6,13,7,8,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,14,15,16,17,18,19,20,21,22,23,24,48,25,49,50,51,52,26,27,28,53,54,55,56,57,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"477fe72d-dace-11e4-89ef-11b5db51fa4d","variableMapping":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[3,6,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,51,336,337,338,339,340,341,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,111,112,113,114,115,342,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,173,179,191,208,343,344,345,346,347,348,349,350,351,352,353,209,354,355,356,357,358,359,360,361,362,363,364,365,366,367,210,368,369,370,371,372,373,374,375,376,377,378,211,379,212,213,214,215,216,380,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,266,267,268,269,270,271,272,273,274,275,276,277,381,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"47800e3e-dace-11e4-89ef-392f312ab97e","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"47800e3f-dace-11e4-89ef-5baf48c6e880","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"47800e40-dace-11e4-89ef-3396e04dd92b","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.EdgeSkipIterState.isShortcut())\n    return com.graphhopper.util.EdgeSkipIterState.getWeight();\n"},"status":-2},{"failures":[10,11,0,1,2,3,4,12,5,6,13,7,8,31,32,33,34,35,36,39,42,43,45,46,382,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,383,384,49,50,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,332,9,333,334,335,51,336,337,338,339,340,341,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,52,26,27,28,53,54,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,55,56,57,58,63,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,458,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,342,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,173,179,191,208,343,344,345,346,347,348,349,350,351,352,353,209,354,355,356,357,358,359,360,361,362,363,364,365,366,367,210,368,369,370,371,372,373,374,375,376,377,378,211,379,212,213,214,215,216,380,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,266,267,268,269,270,271,272,273,274,275,276,277,381,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"47803551-dace-11e4-89ef-a543505bf473","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"47803552-dace-11e4-89ef-27c038726425","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:554","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":-2},{"failures":[],"tindex":"47803553-dace-11e4-89ef-bf37dc194454","variableMapping":{"size":"ferryBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:132","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:196","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[459],"tindex":"47803554-dace-11e4-89ef-e18c58eedb27","variableMapping":{"dx":"val","dy":"val"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:305","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:389","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"status":-1},{"failures":[],"tindex":"47803555-dace-11e4-89ef-2f762e38c2f1","variableMapping":{"longTripsSpeed":"shortTripsSpeed","shortTripsSpeed":"durationInHours","this":"this","durationInHours":"durationInHours"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"47803556-dace-11e4-89ef-597d3fd8d5f4","variableMapping":{"edgePointer":"flags1","maxEdges":"com.graphhopper.routing.ch.PrepareEncoder.scDirMask"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:528","type":"CtReturnImpl","sourcecode":"return (long) < (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareEncoder:58","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"status":-2},{"failures":[],"tindex":"47803557-dace-11e4-89ef-3532839e215e","variableMapping":{"str":"str","edgeEncoders":"edgeEncoders"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:291","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:305","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString());\n    java.lang.StringBuilder.append(\"|\");\n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString());\n}"},"status":0},{"failures":[393,406,445],"tindex":"47803558-dace-11e4-89ef-574fa37f8572","variableMapping":{"tt":"sacScale"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:184","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\"))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"47803559-dace-11e4-89ef-9570f3d5e2f2","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:216","type":"CtLocalVariableImpl","sourcecode":"double double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 2"},"status":-2},{"failures":[460,461,462,463,464,465,466,467,468,379,256,469,262,263,470,471,472,473,474,475,476,477,478,479],"tindex":"4780355a-dace-11e4-89ef-cd38a15f3a7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:179","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)(java.lang.Math.(java.lang.Math.log(int)) / java.lang.Math.(java.lang.Math.log(2))));\n    int = java.lang.Math.java.lang.Math.max(java.lang.Math.((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"status":-1},{"failures":[17,22,316,394,334,410,427,446],"tindex":"4780355b-dace-11e4-89ef-67b332135c24","variableMapping":{"synched":"locked"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:74","type":"CtIfImpl","sourcecode":"if (!boolean)\n    throw new java.lang.IllegalStateException(\"constructor can only be used with synched=true\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"4780355c-dace-11e4-89ef-d749fdfc815c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"4780355d-dace-11e4-89ef-b320f6e56bcf","variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:168","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound())\n    throw new java.lang.IllegalStateException(\"Extract can only be called once\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:59","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[],"tindex":"4780355e-dace-11e4-89ef-3792974f1a41","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxCount","edge":"biggestStart"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:445","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:161","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey();\n    int = java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getValue();\n    continue;\n} "},"status":0},{"failures":[],"tindex":"4780355f-dace-11e4-89ef-613cd0086b44","variableMapping":{"segmentSizeInBytes":"prevConnectedId","this":"this","segmentSizeIntsPower":"prevConnectedId"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)(java.lang.Math.(java.lang.Math.log(((int) / 4))) / java.lang.Math.(java.lang.Math.log(2))))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int])"},"status":0},{"failures":[],"tindex":"47803560-dace-11e4-89ef-357262b8f05f","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:279","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"47805b71-dace-11e4-89ef-3fe4d3796063","variableMapping":{"width":"sLon","lonSimilar":"sLon"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"47805b72-dace-11e4-89ef-23b5c00293c1","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:381","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:186","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2},{"failures":[389,391,401,408,409,417,425,433,441,443,453],"tindex":"47805b73-dace-11e4-89ef-d5f23604cbf5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:200","type":"CtReturnImpl","sourcecode":"return \"\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[49,50,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,332,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457],"tindex":"47805b74-dace-11e4-89ef-cd4840e6a977","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:323","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[25,28,118,126,128,129,135,143,144,345,353,354,355,361,368,369,219,227,229,230,236,244,245,272,280,288,290,291,297,305,306],"tindex":"47805b75-dace-11e4-89ef-8b048ca58cd1","variableMapping":{"arr":"mValues","length":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:57","type":"CtReturnImpl","sourcecode":"return int[].int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:259","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"47805b76-dace-11e4-89ef-13c457142dfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:206","type":"CtLocalVariableImpl","sourcecode":"double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[157,163,165,166,192,198,200,201],"tindex":"47805b77-dace-11e4-89ef-03df10b88884","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[52,53],"tindex":"47805b78-dace-11e4-89ef-fb65b6494678","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-1},{"failures":[],"tindex":"47805b79-dace-11e4-89ef-058df3810893","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.LevelGraphStorage:334","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.LevelGraphStorage.this.getWeight(this)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:53","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeSkipIterState.getWeight()"},"status":-2},{"failures":[],"tindex":"47805b7a-dace-11e4-89ef-dfa12b1c22ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:246","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[11,0,1,4,12,480,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,107,108,109,110],"tindex":"47805b7b-dace-11e4-89ef-911d739b9f53","variableMapping":{"initLeafSize":"toSize"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"47805b7c-dace-11e4-89ef-596f5d39a7af","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:864","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:100","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"status":-2},{"failures":[481,482,483],"tindex":"47805b7d-dace-11e4-89ef-cf7fae8f104f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"4780828e-dace-11e4-89ef-bd8a0926570d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:401","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.LevelGraphStorage.double)))) << 2"},"status":-2},{"failures":[403,419,435,455],"tindex":"4780828f-dace-11e4-89ef-01eb07db75ca","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:241","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[328,392,484,444],"tindex":"47808290-dace-11e4-89ef-ff198acb66d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[],"tindex":"47808291-dace-11e4-89ef-e7e11a5754ed","variableMapping":{"distance":"shortTripsSpeed","speed":"shortTripsSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:226","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:505","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"47808292-dace-11e4-89ef-752ad2099469","variableMapping":{"high":"flags","len":"flags","start":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[485,486,487,488,489,490,491,492,493,494,158,193],"tindex":"47808293-dace-11e4-89ef-8dc2af0a9f1b","variableMapping":{"r":"midLat","x":"midLat","absY":"midLat"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:39","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[393,406,422,445],"tindex":"47808294-dace-11e4-89ef-7bcd8e7a33d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:259","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"47808295-dace-11e4-89ef-7717a5affb6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"status":-2},{"failures":[],"tindex":"47808296-dace-11e4-89ef-6d8284198e53","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:156","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"47808297-dace-11e4-89ef-3dcd2a462126","variableMapping":{"bm":"bits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:214","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"47808298-dace-11e4-89ef-af9799ee22a9","variableMapping":{"counts":"maxTurnCosts","counter":"maxTurnCosts"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:158","type":"CtIfImpl","sourcecode":"if (((int)++) > int) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:579","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-2},{"failures":[],"tindex":"47808299-dace-11e4-89ef-c3f2037a5ad2","variableMapping":{"obtained":"empty"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:170","type":"CtReturnImpl","sourcecode":"return !boolean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[485,486,488,490,492,493,495,496,163,166,198,201],"tindex":"4780829a-dace-11e4-89ef-3161ca61c32e","variableMapping":{"distance":"minLatTmp","dist":"midLat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:51","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"4780829b-dace-11e4-89ef-7f6511f79e8d","variableMapping":{"this":"this","unknownSpeed":"longTripsSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:498","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:499","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":0},{"failures":[20,328,392,484,444],"tindex":"4780829c-dace-11e4-89ef-4d27ec82a4c1","variableMapping":{"len":"turnRestrictionBit","start":"turnRestrictionBit"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:610","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[485,486,487,488,489,490,491,492,493,494],"tindex":"4780a9ad-dace-11e4-89ef-1d5a129a5af5","variableMapping":{"edgePointer":"initialBits","edgeEntryBytes":"allBits","nextEdge":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:797","type":"CtAssignmentImpl","sourcecode":"long = ((long)(int)) * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"4780a9ae-dace-11e4-89ef-a965972042ed","variableMapping":{"flags":"mask","nodeFlags":"mask"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:846","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[],"tindex":"4780a9af-dace-11e4-89ef-3db2fbf7baea","variableMapping":{"sacScale":"val"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:202","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:726","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"status":0},{"failures":[326,385,437],"tindex":"4780a9b0-dace-11e4-89ef-d3d0383e6a31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:607","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1) {\n    if (double != 0)\n        throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n    \n    return boolean ? long : 0;\n} "},"status":-1},{"failures":[],"tindex":"4780a9b1-dace-11e4-89ef-f7c6ca29c5e0","variableMapping":{"encoded":"shift","backwardBit":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:89","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-2},{"failures":[],"tindex":"4780a9b2-dace-11e4-89ef-eb8fc809489b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:454","type":"CtLocalVariableImpl","sourcecode":"java.lang.Exception java.lang.Exception"},"status":0},{"failures":[52,53],"tindex":"4780a9b3-dace-11e4-89ef-f10bc396c6e4","variableMapping":{"tmpNo":"index"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtAssignmentImpl","sourcecode":"int = 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[481,482,483],"tindex":"4780a9b4-dace-11e4-89ef-d51bb59bff43","variableMapping":{"from":"i","hash":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:918","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"4780a9b5-dace-11e4-89ef-738ed65bc7b1","variableMapping":{"time":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:161","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:102","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[323,324,402,418,434,454,497],"tindex":"4780a9b6-dace-11e4-89ef-e7129a6393d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-1},{"failures":[47,321],"tindex":"4780a9b7-dace-11e4-89ef-79b737cc9b73","variableMapping":{"speedVal":"durationInHours"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:476","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception java.lang.Exception) {\n    }\n"},"status":-1},{"failures":[403,419,435,455],"tindex":"4780a9b8-dace-11e4-89ef-9b18fe0000f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[389,391,401,408,409,417,425,433,441,443,453],"tindex":"4780a9b9-dace-11e4-89ef-9bbb6333f20d","variableMapping":{"index":"paveType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"4780a9ba-dace-11e4-89ef-a5b51b730105","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[3,13,29,30,498,499],"tindex":"4780a9bb-dace-11e4-89ef-7b6aad2d106d","variableMapping":{"initLeafSize":"frontIndex"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:63","type":"CtAssignmentImpl","sourcecode":"int = 4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[403,419,435,455],"tindex":"4780a9bc-dace-11e4-89ef-495040efdc31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"status":-1},{"failures":[],"tindex":"4780a9bd-dace-11e4-89ef-65bcb86ef826","variableMapping":{"algo":"com.graphhopper.routing.util.EncodingManager.CAR"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:103","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"4780d0ce-dace-11e4-89ef-5bbfbd016e75","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:657","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting.isAssignableFrom(java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"4780d0cf-dace-11e4-89ef-8b34883a1454","variableMapping":{"tr":"tr","n":"pavementName"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:247","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Translation.tr(\"continue_onto\", java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:387","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":0},{"failures":[],"tindex":"4780d0d0-dace-11e4-89ef-632bed2ee490","variableMapping":{"byteCount":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:109","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:411","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.routing.util.AbstractFlagEncoder.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation, com.graphhopper.reader.OSMReader)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"4780d0d1-dace-11e4-89ef-e50382626c23","variableMapping":{"weightToPrioMap":"weightToPrioMap","highway":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.VERY_NICE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:142","type":"CtIfImpl","sourcecode":"if (\"grade1\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[0,1,2,3,4,12,5,13,35,47,14,15,16,17,18,19,20,21,22,23,24,48,500,25,318,319,323,324,325,331,497],"tindex":"4780d0d2-dace-11e4-89ef-57bb91a2f373","variableMapping":{"edgePointer":"encoded","edgeId":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","baseNode":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","adjNode":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","nextEdge":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:804","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.lang.AssertionError((((((((\"endless loop detected for \" + (int)) + \", \") + (int)) + \", \") + (long)) + \", \") + (int)));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n"},"status":-1},{"failures":[],"tindex":"4780d0d3-dace-11e4-89ef-4bef0a775b80","variableMapping":{"finishedTo":"integ","finishedFrom":"integ"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:179","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:128","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[487,491],"tindex":"4780d0d4-dace-11e4-89ef-77dd11552f3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"4780d0d5-dace-11e4-89ef-69d22af046f6","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder = ((com.graphhopper.routing.util.AbstractFlagEncoder)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"4781bb36-dace-11e4-89ef-3585b9f4fad0","variableMapping":{"bytesForFlags":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:500","type":"CtAssignmentImpl","sourcecode":"int = 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"4781bb37-dace-11e4-89ef-a5409ddad348","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[403,419,435,455],"tindex":"4781bb38-dace-11e4-89ef-199614ffbc0e","variableMapping":{"acceptedRailways":"intendedValues","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:234","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[75,78,79,90,92,94,97,105,106],"tindex":"4781bb39-dace-11e4-89ef-a9e2ce6a27ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\nelse\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-1},{"failures":[25,27,28,118,126,128,129,135,143,144,219,227,229,230,236,244,245,262,272,280,288,290,291,297,305,306],"tindex":"4781bb3a-dace-11e4-89ef-1ba4b43653b2","variableMapping":{"segmentCount":"remainingSegments","segments":"segments"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:163","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[int][]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"4781bb3b-dace-11e4-89ef-65b24283ffed","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:359","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:159","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"4781bb3c-dace-11e4-89ef-5dc379f16492","variableMapping":{"graphBounds":"this"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:295","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Bounding box is not valid to calculate index size: \" + com.graphhopper.util.shapes.BBox))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-2},{"failures":[],"tindex":"4781bb3d-dace-11e4-89ef-830f8c4b8d30","variableMapping":{"line":"highway"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:503","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[50,333,56,73],"tindex":"4781e24e-dace-11e4-89ef-45ea070ebf57","variableMapping":{"newUniqueOsmId":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:837","type":"CtReturnImpl","sourcecode":"return (long)++"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:75","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-1},{"failures":[0,3,13,35,47,14,19,48,25,318,323,324,390,442,497],"tindex":"4781e24f-dace-11e4-89ef-abbd06e5b113","variableMapping":{"angle":"maxSpeed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:50","type":"CtReturnImpl","sourcecode":"return -double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":304,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":91,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":271,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":497,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":344,"com.graphhopper.reader.OSMReaderTest.testFerry":47,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":42,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":43,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":442,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":426,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":160,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":11,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":315,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":405,"com.graphhopper.storage.MMapDataAccessTest.testSegments":479,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":227,"com.graphhopper.coll.CompressedArrayTest.testCompress":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":432,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":101,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":363,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":127,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":156,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":470,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":107,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":374,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":97,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":134,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":483,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":440,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":83,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":180,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":433,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":30,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":277,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":157,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":53,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":425,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":438,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":81,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":195,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":211,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":495,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":278,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":482,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":110,"com.graphhopper.GraphHopperTest.testLoadOSM":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":202,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":196,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":9,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":454,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":214,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":146,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":112,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":492,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":375,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":66,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":248,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":303,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":123,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":379,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":217,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":288,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":421,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":418,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":164,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":87,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":155,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":77,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":280,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":237,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":295,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":274,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":297,"com.graphhopper.coll.CompressedArrayTest.testCompress2":485,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":136,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":407,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":228,"com.graphhopper.GraphHopperAPITest.testLoad":7,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":381,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":258,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":334,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":128,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":118,"com.graphhopper.storage.LevelGraphStorageTest.testClone":282,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":218,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":463,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":392,"com.graphhopper.util.GHUtilityTest.testCopy":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":348,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":415,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":435,"com.graphhopper.routing.PathTest.testFindInstruction":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":429,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":219,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":481,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":36,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":339,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":311,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":388,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":147,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":132,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":466,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":232,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":399,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":284,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":349,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":478,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":265,"com.graphhopper.util.InstructionListTest.testWayList2":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":203,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":152,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":489,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":251,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":383,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":49,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":113,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":286,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":471,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":229,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":79,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":117,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":226,"com.graphhopper.routing.PathBidirRefTest.testExtract":71,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":340,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":447,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":369,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":368,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":423,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":446,"com.graphhopper.storage.RAMDataAccessTest.testSegments":468,"com.graphhopper.util.GHUtilityTest.testSort2":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":88,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":275,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":448,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":496,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":455,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":372,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":289,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":293,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":498,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":314,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":63,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":290,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":241,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":386,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":296,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":48,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":465,"com.graphhopper.storage.GraphHopperStorageTest.testClone":120,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":371,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":325,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":130,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":323,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":266,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":419,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":350,"com.graphhopper.routing.PathTest.testTime":56,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":414,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":312,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":283,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":330,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":205,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":362,"com.graphhopper.reader.OSMReaderTest.testRelation":382,"com.graphhopper.util.GHUtilityTest.testSortDirected":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":402,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":62,"com.graphhopper.GraphHopperTest.testFootOnly":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":424,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":321,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":163,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":477,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":385,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":358,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":467,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":59,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":261,"com.graphhopper.routing.QueryGraphTest.testOneWay":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":206,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":490,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":194,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":487,"com.graphhopper.reader.OSMReaderTest.testWithBounds":24,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":461,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":403,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":464,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":26,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":355,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":364,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":279,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":276,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":406,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":400,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":436,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":240,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":191,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":233,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":116,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":74,"com.graphhopper.util.InstructionListTest.testWayList":33,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":445,"com.graphhopper.GraphHopperAPITest.testDisconnected179":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":351,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":491,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":242,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":397,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":46,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":28,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":452,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":2,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":122,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":108,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":437,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":106,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":310,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":216,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":95,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":342,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":171,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":260,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":469,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":457,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":111,"com.graphhopper.routing.PathTest.testWayList":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":376,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":412,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":354,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":459,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":96,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":307,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":239,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":451,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":133,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":335,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":224,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":165,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":294,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":166,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":394,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":408,"com.graphhopper.util.GHUtilityTest.testSort":40,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":476,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":367,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":494,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":427,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":450,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":380,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":158,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":177,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":185,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":188,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":390,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":50,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":186,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":410,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":384,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":234,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":52,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":264,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":292,"com.graphhopper.routing.PathTest.testFound":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":210,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":13,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":333,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":309,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":472,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":268,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":449,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":230,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":480,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":460,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":209,"com.graphhopper.util.InstructionListTest.testEmptyList":31,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":82,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":416,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":86,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":329,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":434,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":89,"com.graphhopper.reader.PrinctonReaderTest.testRead":45,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":148,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":161,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":353,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":488,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":343,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":395,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":431,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":484,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":413,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":387,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":366,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":200,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":313,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":493,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":422,"com.graphhopper.reader.OSMReaderTest.testOneWay":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":201,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":129,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":144,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":247,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":430,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":474,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":393,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":109,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":100,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":189,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":473,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":51,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":462,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":356,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":61,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":114,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":500,"com.graphhopper.routing.PathBidirRefTest.testExtract2":72,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":262,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":73,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":204,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":417,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":420,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":378,"com.graphhopper.util.SimpleIntDequeTest.testPush":499,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":398,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":197,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":145,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":327,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":137,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":409,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":172,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":347,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":475,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":221,"com.graphhopper.GraphHopperTest.testPrepareOnly":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":92,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":345,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":270,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":35,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":141,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":337,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":359,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":331,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":308,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":306,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":213}}]
