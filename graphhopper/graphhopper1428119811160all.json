[{"failures":[],"tindex":"a02a0407-da7e-11e4-83f2-f357921e612a","variableMapping":{"retBucket":"tmp","bucketSize":"tmp"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:109","type":"CtReturnImpl","sourcecode":"return int * (int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:87","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a02a7938-da7e-11e4-83f2-a164bbbbbbf5","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:291","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"a02a7939-da7e-11e4-83f2-9f2e7317ba7c","variableMapping":{"weightToPrioMap":"weightToPrioMap","trackType":"service","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:144","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"a02aa04a-da7e-11e4-83f2-83b90effe8d4","variableMapping":{"from":"i","end":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:358","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"a02aa04b-da7e-11e4-83f2-0959a4223cd6","variableMapping":{"lastKey":"encoded","key":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:86","type":"CtAssignmentImpl","sourcecode":"long = long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:99","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[],"tindex":"a02aa04c-da7e-11e4-83f2-d9a28e93cae5","variableMapping":{"str":"name","this":"type"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:154","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    java.lang.String += \"_STORE\";\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":0},{"failures":[],"tindex":"a02aa04d-da7e-11e4-83f2-6742bc1b30cd","variableMapping":{"dx":"minLon","dy":"minLon"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:157","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"a02aa04e-da7e-11e4-83f2-ff81f3d73e0a","variableMapping":{"length":"shift","factor":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:140","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a02aa04f-da7e-11e4-83f2-a3ec5a9315bd","variableMapping":{"id":"usedBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:492","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"a02aa050-da7e-11e4-83f2-b9d7922fd29c","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:437","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[],"tindex":"a02aa051-da7e-11e4-83f2-c77ca6ebad78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2},{"failures":[],"tindex":"a02aa052-da7e-11e4-83f2-a36c8945faac","variableMapping":{"high":"encoded","len":"encoded","start":"encoded"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:117","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[3,12,21,33],"tindex":"a02aa053-da7e-11e4-83f2-9da9644baab2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:471","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"a02aa054-da7e-11e4-83f2-fb7fb547c643","variableMapping":{"lat":"java.lang.Double.POSITIVE_INFINITY"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:129","type":"CtIfImpl","sourcecode":"if ((double > 60) || (double < (-60)))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:598","type":"CtIfImpl","sourcecode":"if (long == (int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"a02aa055-da7e-11e4-83f2-5b8040516bf0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:78","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[5,7,9,15,18,24,27,30,36,39],"tindex":"a02ac766-da7e-11e4-83f2-1d0eeed9c7e0","variableMapping":{"systemProperty":"highway"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:450","type":"CtIfImpl","sourcecode":"if (\"cycleway\".equals(java.lang.String))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"a02ac767-da7e-11e4-83f2-f3d341ae85ab","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:71","type":"CtLocalVariableImpl","sourcecode":"double double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:483","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Number.doubleValue()) / 1000"},"status":-2},{"failures":[],"tindex":"a02ac768-da7e-11e4-83f2-078bd94a350d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:472","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"a02ac769-da7e-11e4-83f2-7385612cb91d","variableMapping":{"this":"em"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:320","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.(getVehicleCount()) > 1)\n    throw new java.lang.IllegalStateException((\"Multiple encoders are active. cannot return one:\" + com.graphhopper.routing.util.EncodingManager.(toString())));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:56","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager.getVehicleCount()) > 1)\n    com.graphhopper.routing.util.EdgeFilter = com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter;\nelse\n    com.graphhopper.routing.util.EdgeFilter = new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.EncodingManager.getSingle());\n"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,41,42,43,44,45,46,47,48,49,50,51,76,52,77,78,79,80,81,53,82,83,84,85,54,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"tindex":"a02ac76a-da7e-11e4-83f2-ed998a216aa7","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizePower"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"a02ac76b-da7e-11e4-83f2-a3652c288d96","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:472","type":"CtLocalVariableImpl","sourcecode":"int int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:301","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[135,136,137],"tindex":"a02ac76c-da7e-11e4-83f2-fbfafac04beb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:287","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.GraphHopperStorage.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), (((long)(int)) * (int)), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n"},"status":-1},{"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"a02ac76d-da7e-11e4-83f2-31ad445cd220","variableMapping":{"midLat":"lat","spatialKey":"hash","bits":"hash","lat":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:222","type":"CtIfImpl","sourcecode":"if ((long & long) != 0) {\n    double += double;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[152,153],"tindex":"a02ac76e-da7e-11e4-83f2-ddf3a7d347b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:74","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"a02ac76f-da7e-11e4-83f2-dbea13f12a40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\");\n    if (java.lang.String != null) {\n        if (\"hiking\".equals(java.lang.String))\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        else\n            long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n        \n    } else {\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(0, com.graphhopper.routing.util.FootFlagEncoder.int);\n    }\n    long |= long;\n    int int = 0;\n    if (long != 0)\n        int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n    \n    long = com.graphhopper.routing.util.FootFlagEncoder.setLong(long, com.graphhopper.routing.util.PriorityWeighting.int, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int));\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"a02ac770-da7e-11e4-83f2-93f2994346f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-2},{"failures":[59,154],"tindex":"a02ac771-da7e-11e4-83f2-4dbb33a0e8b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[155,156,157,158,159],"tindex":"a02ac772-da7e-11e4-83f2-5de2f52abf41","variableMapping":{"value":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[28,160],"tindex":"a02ac773-da7e-11e4-83f2-27902dddbb9d","variableMapping":{"high":"flags"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:126","type":"CtReturnImpl","sourcecode":"return ~long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:261","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"a02ac774-da7e-11e4-83f2-3db14cfb788e","variableMapping":{"directionBitMask":"flags","flags":"flags"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:258","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:256","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[161,162,163,164,101,165,166,141,167,168,169,170,171,172,173,174,104,175,176,143,177,178,179,180,181,182,148,151],"tindex":"a02aee85-da7e-11e4-83f2-4fd2e92438fb","variableMapping":{"costs":"lat"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:628","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:165","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} else {\n    long |= 1;\n    double = double;\n}"},"status":-1},{"failures":[183,19,184,20,185,21,186,22,23,187,188,24,25,189,26,27],"tindex":"a02aee86-da7e-11e4-83f2-11a911d3273a","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:171","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String)"},"status":-1},{"failures":[],"tindex":"a02aee87-da7e-11e4-83f2-b1d4699a1578","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:170","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:85","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[55,190,56,57,58,59,191,192,193,194,195,0,1,2,196,3,197,4,198,199,5,6,200,7,201,202,8,9,10,203,204,11,205,206,207,12,208,13,14,209,210,15,16,211,17,18,152,212,40,213,153,214,183,19,184,20,185,21,186,22,23,187,188,24,25,189,26,27,215,216,217,60,61,218,29,30,31,219,220,32,221,222,223,33,224,34,35,225,226,36,37,227,38,39,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,135,265,266,267,136,268,155,156,269,270,271,272,273,274,275,276,157,277,158,278,161,279,280,162,281,282,62,283,284,159,66,69,285,286,73,74,160,287,288,77,78,79,80,81,53,82,83,84,85,54,289,290,291,292,172,173,182,106,293,294,107,108,295,296,297,109,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,110,318,319,320,321,322,111,323,324,325,326,112,327,113,114,328,329,330,115,116,331,332,333,117,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,118,354,355,356,357,358,119,359,360,361,362,120,363,121,122,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,123,392,393,394,395,396,397,398,399,400,401,402,137,403,404,405,406,125,407,408,126,127,409,410,411,128,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,129,432,433,434,435,436,130,437,438,439,440,131,441,132,133,442,443],"tindex":"a02aee88-da7e-11e4-83f2-210905678e3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:138","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(java.lang.String);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(java.lang.String);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[],"tindex":"a02aee89-da7e-11e4-83f2-7bf218d73b8b","variableMapping":{"maxMCSpeed":"java.lang.Math.PI","speed":"baseOrientation"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:173","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:72","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[444,445,55,446,447,448,449,190,56,57,58,59,191,192,193,152,212,40,213,153,214,60,61,232,254,255,256,257,259,260,261,262,263,264,135,265,266,267,136,268,155,156,269,270,271,272,273,274,275,276,157,277,158,278,161,279,280,162,281,282,62,283,284,159,63,63,64,64,450,450,65,65,66,66,67,67,68,68,69,69,70,70,451,451,71,71,72,72,285,286,73,74,75,41,42,43,44,45,46,47,48,49,50,51,76,52,287,288,452,77,78,79,80,81,53,82,83,84,85,54,289,290,453,454,455,456,457,291,458,94,95,96,97,98,459,460,461,462,463,292,164,464,99,100,101,165,465,166,140,141,167,168,169,170,171,172,466,173,467,174,468,102,103,104,175,469,176,142,143,177,178,179,180,181,182,106,294,107,108,295,296,109,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,110,318,319,320,321,322,111,323,324,325,326,112,327,113,114,328,329,330,115,116,331,332,117,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,118,354,355,356,357,358,119,359,360,361,362,120,363,121,122,364,365,470,471,472,473,474,475,476,477,478,479,480,377,123,137,403,404,405,406,125,407,408,126,127,409,410,128,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,129,432,433,434,435,436,130,437,438,439,440,131,441,132,133,442,443],"tindex":"a02b159a-da7e-11e4-83f2-518df9fb8aa8","variableMapping":{"segNumber":"i","segments":"newSegs"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"a02b159b-da7e-11e4-83f2-695eba91f320","variableMapping":{"keys":"keys","i":"i","child":"i"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[481,75],"tindex":"a02b159c-da7e-11e4-83f2-09d5d27954e7","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1527","type":"CtReturnImpl","sourcecode":"return 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[308,344,377,422],"tindex":"a02b159d-da7e-11e4-83f2-19a9f4838dbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:109","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[],"tindex":"a02b159e-da7e-11e4-83f2-bdbf87471dfe","variableMapping":{"allBits":"element"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"status":-2},{"failures":[244,41,46,47,79,53,54],"tindex":"a02b159f-da7e-11e4-83f2-8df347ca0ca6","variableMapping":{"name":"highwayValue"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (!(java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"a02b15a0-da7e-11e4-83f2-1f3dfb797220","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:300","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"a02b15a1-da7e-11e4-83f2-9b64adeddf47","variableMapping":{"this":"g"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1470","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.initNodeAndEdgeEntrySize()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.markNodeRemoved(gnu.trove.list.array.TIntArrayList.get(int))"},"status":-2},{"failures":[136,482,483,484,485],"tindex":"a02b15a2-da7e-11e4-83f2-ab8bd4ae482b","variableMapping":{"com.graphhopper.util.Instruction.REACHED_VIA":"child","sign":"child"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.FinishInstruction:47","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Instruction.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"a02b15a3-da7e-11e4-83f2-5f66b0bf7a91","variableMapping":{"neighborUpdates":"wayType"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:145","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:390","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":0},{"failures":[],"tindex":"a02b15a4-da7e-11e4-83f2-5f62e7e834ed","variableMapping":{"this":"this","way":"way"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:172","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:328","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:forward\"))"},"status":-2},{"failures":[191,61,232,234,245,256,265,155,156,158,278,69,73,74,109,305,308,112,117,341,344,120,366,374,377,397,137,406,128,419,422,131],"tindex":"a02b3cb5-da7e-11e4-83f2-4720f247b47f","variableMapping":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed","unknownSpeed":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:313","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,73,74,42,43,44,45,46,77,79,80,81,53,82,83,84,85,54,87,88,89,90,91,486,92,93,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134],"tindex":"a02b3cb6-da7e-11e4-83f2-f5f95c77a237","variableMapping":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"segmentSizeInBytes"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:88","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[444,445,55,446,447,448,449,190,56,57,58,59,191,192,193,152,212,40,213,153,214,60,61,232,254,255,256,257,259,260,261,262,263,264,135,265,266,267,136,268,155,156,269,270,271,272,273,274,275,276,157,277,158,278,161,279,280,162,281,282,62,283,284,159,63,63,64,64,450,450,65,65,66,66,67,67,68,68,69,69,70,70,451,451,71,71,72,72,285,286,73,74,75,41,42,43,44,45,46,47,48,49,50,51,76,52,287,288,452,77,78,79,80,81,53,82,83,84,85,54,289,290,453,454,455,456,457,291,458,94,95,96,97,98,459,460,461,462,463,292,164,464,99,100,101,165,465,166,140,141,167,168,169,170,171,172,466,173,467,174,468,102,103,104,175,469,176,142,143,177,178,179,180,181,182,106,294,107,108,295,296,109,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,110,318,319,320,321,322,111,323,324,325,326,112,327,113,114,328,329,330,115,116,331,332,117,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,118,354,355,356,357,358,119,359,360,361,362,120,363,121,122,364,365,471,472,473,474,475,477,478,479,480,377,123,137,403,404,405,406,125,407,408,126,127,409,410,128,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,129,432,433,434,435,436,130,437,438,439,440,131,441,132,133,442,443],"tindex":"a02b3cb7-da7e-11e4-83f2-a5291391ff07","variableMapping":{"flags":"bytePos","mask":"bytePos"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[61],"tindex":"a02b3cb8-da7e-11e4-83f2-29eb6fce2336","variableMapping":{"closestEdge":"edge","detach":"edge"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setFlags(long)"},"status":-1},{"failures":[487],"tindex":"a02b3cb9-da7e-11e4-83f2-f746f671d5a4","variableMapping":{"cp":"key"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:113","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:741","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"status":-1},{"failures":[],"tindex":"a02b3cba-da7e-11e4-83f2-370cb5e34caf","variableMapping":{"line":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:456","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":-2},{"failures":[444,445,55,446,488,447,448,449,190,56,57,58,59,191,192,193,194,195,0,1,2,196,3,197,4,198,199,5,6,200,7,201,202,8,9,10,203,204,11,205,206,207,12,208,13,14,209,210,15,16,211,17,18,152,212,40,213,153,214,183,19,184,20,185,21,186,22,23,187,188,24,25,189,26,27,215,216,217,60,61,218,29,30,31,219,220,32,221,222,223,33,224,34,35,225,226,36,37,227,38,39,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,489,254,255,490,256,257,258,259,260,261,262,263,264,135,265,266,267,136,268,155,156,269,270,271,272,273,274,275,276,157,277,158,278,161,279,280,162,281,282,62,283,284,159,63,64,450,65,66,67,68,69,70,451,71,72,491,492,285,286,73,74,493,75,41,42,43,44,45,46,47,48,160,49,50,51,76,52,287,288,77,78,79,80,81,53,82,494,83,84,85,54,495,289,290,496,453,454,455,456,497,457,291,94,95,96,97,498,98,459,460,461,462,499,463,292,164,464,99,100,101,165,465,166,140,141,167,168,169,170,500,171,172,466,173,467,174,468,102,103,104,175,469,176,142,143,177,178,179,180,501,181,182,106,293,294,107,108,295,296,297,109,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,110,318,319,320,321,322,111,323,324,325,326,112,327,113,114,328,329,330,115,116,331,332,333,117,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,118,354,355,356,357,358,119,359,360,361,362,120,363,121,122,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,123,392,393,394,395,396,397,398,399,400,401,402,137,403,404,405,406,125,407,408,126,127,409,410,411,128,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,129,432,433,434,435,436,130,437,438,439,440,131,441,132,133,442,443],"tindex":"a02b63cb-da7e-11e4-83f2-e7a291342177","variableMapping":{"cp":"entry"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SE\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[1],"tindex":"a02b63cc-da7e-11e4-83f2-1fcfaa8883c5","variableMapping":{"motorcarTag":"highway","way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:172","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:128","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[195,0,1,2,3,4,5,6,7,8,9,10,203,204,11,12,13,14,15,16,17,18,19,184,20,21,22,23,24,25,26,27,28,502,217,29,30,31,219,220,32,33,34,35,36,37,38,39,75,41,42,43,45,46,47,48,51,76,52],"tindex":"a02b63cd-da7e-11e4-83f2-4f28dc0a9d9d","variableMapping":{"val":"highway","existing":"highway","key":"service"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:210","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[154],"tindex":"a02b63ce-da7e-11e4-83f2-4d849414d0a4","variableMapping":{"importance":"kmInteger","hash":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:398","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\"kph\")"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,41,42,43,44,45,46,47,48,49,50,51,76,52,503,504,505,77,78,79,80,81,53,82,83,84,85,54,86,87,88,89,90,91,486,92,93,94,95,96,97,98,99,100,101,102,103,104,506,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,507,508,124,509,510,511,512,513,514,515,516,517,125,126,127,128,129,130,131,132,133,518,519,134,520,521,522,523,524,525,526,527,528],"tindex":"a02b63cf-da7e-11e4-83f2-71517019491f","variableMapping":{"len":"cap","start":"cap"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-1},{"failures":[1,197,5,7,529,530,9,203,11,205,208,15,18,184,20,186,24,27,28,531,502,30,219,32,221,224,36,39,251,47,160],"tindex":"a02b8ae0-da7e-11e4-83f2-277483c6d61e","variableMapping":{"bytePos":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"a02b8ae1-da7e-11e4-83f2-e9b6bb9e5f13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[47],"tindex":"a02b8ae2-da7e-11e4-83f2-cdc18b001bfe","variableMapping":{},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:473","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"a02b8ae3-da7e-11e4-83f2-2fd76089be88","variableMapping":{"i":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:149","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:65","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        gnu.trove.stack.array.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n        int int;\n        while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n            gnu.trove.list.array.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n    } \n}"},"status":0},{"failures":[532,217,41],"tindex":"a02b8ae4-da7e-11e4-83f2-c7d67941dc38","variableMapping":{"bit":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:93","type":"CtAssignmentImpl","sourcecode":"int = (int / 2) + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:202","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[],"tindex":"a02b8ae5-da7e-11e4-83f2-8918e5acdd09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:216","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"a02b8ae6-da7e-11e4-83f2-7b59dfa6f882","variableMapping":{"entryVal":"entryVal","fe":"fe"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"a02b8ae7-da7e-11e4-83f2-8be76fc8110e","variableMapping":{"java.lang.Double.MAX_VALUE":"speed","existingDirectWeight":"speed"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:610","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Double.double))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:279","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-2},{"failures":[],"tindex":"a02b8ae8-da7e-11e4-83f2-4dc0046c2464","variableMapping":{"com.graphhopper.storage.GraphHopperStorage.NO_NODE":"index","nodeId":"bufferIndex"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:1267","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.GraphHopperStorage.int))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:218","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-2},{"failures":[1,5,529,203,11,15,184,20,24,219,32,36],"tindex":"a02b8ae9-da7e-11e4-83f2-ef8f12fe8737","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-1},{"failures":[],"tindex":"a02b8aea-da7e-11e4-83f2-ab7bcbe43bb8","variableMapping":{"id":"allBits"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:474","type":"CtReturnImpl","sourcecode":"return (-int) - 3"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:107","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[2,8,17,19,26,29,38],"tindex":"a02b8aeb-da7e-11e4-83f2-f192412acff2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (\"parking_aisle\".equals(java.lang.String)))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"a02b8aec-da7e-11e4-83f2-c3a0a6b0a2ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:417","type":"CtOperatorAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long"},"status":0},{"failures":[213,299,307,309,310,111,323,335,343,345,346,119,359,368,376,378,379,392,393,407,413,421,423,424,130,437],"tindex":"a02b8aed-da7e-11e4-83f2-d53c60531049","variableMapping":{"cap":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:102","type":"CtAssignmentImpl","sourcecode":"int = 15"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"a02b8aee-da7e-11e4-83f2-e9a8316a2032","variableMapping":{"max":"angle"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:75","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:51","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"a02b8aef-da7e-11e4-83f2-fdbe205ab145","variableMapping":{"bytes":"bytes","this":"this"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:93","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.ensureCapacity(java.lang.Math.java.lang.Math.max((10 * 4), long))"},"status":0},{"failures":[],"tindex":"a02bb200-da7e-11e4-83f2-8dbc9c4fe75b","variableMapping":{"edgeId":"edge","nodeId":"edge"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:686","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage.SingleEdge(int , int)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:341","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.LevelGraphStorage.SingleLevelEdge(int , int)"},"status":-2},{"failures":[0,1,3,5,200,9,11,12,13,15,211,21,22,24,189,28,502,60,30,32,33,34,36,227,230,237,242,47,160,52,533],"tindex":"a02bb201-da7e-11e4-83f2-57ad8085d87b","variableMapping":{"sacScale":"value"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String))"},"status":-1},{"failures":[138,139,163,164,140,141,174,142,143,144,145,147,148,149,150,151,534],"tindex":"a02bb202-da7e-11e4-83f2-a3e5980d0b01","variableMapping":{"gradient":"minLatTmp","yend":"minLatTmp"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-1},{"failures":[],"tindex":"a02bb203-da7e-11e4-83f2-03bf5f18c931","variableMapping":{"graph":"graph"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1032","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.flush()"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:73","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.EdgeSkipIterState = ((com.graphhopper.util.EdgeSkipIterState)(com.graphhopper.storage.Graph.getEdgeProps(int, int)));\n"},"status":-2},{"failures":[],"tindex":"a02bb204-da7e-11e4-83f2-6356b893ee43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2},{"failures":[535,6,16,25,37,246,247],"tindex":"a02bb205-da7e-11e4-83f2-19a5457e9eb1","variableMapping":{"fwdFaster":"speed","incDist2DSum":"speed","fwdSlower":"speed","fullDist2D":"speed","restDist2D":"speed","speed":"speed","decDist2DSum":"speed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:210","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[198,209,187,225],"tindex":"a02bb206-da7e-11e4-83f2-55e2dc136a56","variableMapping":{"way":"way"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\"))\n    return 0;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.HashSet<java.lang.String>))))\n    return 0;\n"},"status":-1},{"failures":[59,191,535,197,7,8,204,11,16,186,27,532,217,61,29,220,32,37,228,232,247,155,156,157,158,278,159,286,73,75,41,76,52,79,80,81,53,82,84,85,289,303,308,339,344,372,377,417,422],"tindex":"a02bb207-da7e-11e4-83f2-893ff4d9d97c","variableMapping":{"index":"shift"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:195","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:159","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,41,42,43,44,45,46,47,48,49,50,51,76,52,503,504,505,77,78,79,80,81,53,82,83,84,85,54,86,87,88,89,90,91,486,92,93,94,95,96,97,98,99,100,101,102,103,104,506,105,106,107,108,109,301,110,322,111,112,113,114,115,116,117,337,118,358,119,120,121,122,536,123,507,508,124,509,510,511,512,513,514,515,516,517,125,126,127,128,415,129,130,131,132,133,518,519,134,520,521,522,523,524,525,526,527,528],"tindex":"a02bb208-da7e-11e4-83f2-0d57c9f37262","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:112","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"status":-1},{"failures":[],"tindex":"a02bb209-da7e-11e4-83f2-d15543cd2354","variableMapping":{"elem":"nodeLowLink","keys":"nodeIndex","i":"index","key":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:180","type":"CtWhileImpl","sourcecode":"while ((int[][(int / 2)]) > int) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n    int /= 2;\n}"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:70","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n    int[][int] = int;\n    int[][int] = int;\n    (int)++;\n    gnu.trove.stack.array.TIntArrayStack.push(int);\n    com.graphhopper.coll.GHBitSetImpl.set(int);\n    com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n} else {\n    com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int[][int] = java.lang.Math.java.lang.Math.min(int[][int], int[][int]);\n}"},"status":0},{"failures":[],"tindex":"a02bb20a-da7e-11e4-83f2-3f41f345a435","variableMapping":{},"series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:303","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:45","type":"CtReturnImpl","sourcecode":"return \"SHORTEST\""},"status":-2},{"failures":[531,47],"tindex":"a02bb20b-da7e-11e4-83f2-5bbbac5a193a","variableMapping":{"compressionLevel":"usedBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:71","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:209","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"a02bb20c-da7e-11e4-83f2-cd08ad2fad7d","variableMapping":{"value":"lastTime"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:235","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:49","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.java.lang.System.nanoTime()"},"status":0},{"failures":[],"tindex":"a02bd91d-da7e-11e4-83f2-8fe14fd63d3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:566","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return com.graphhopper.routing.util.EncodedValue.setValue(long, long);\n    default :\n        return com.graphhopper.routing.util.AbstractFlagEncoder.setLong(long, int, long);\n}"},"status":-2},{"failures":[],"tindex":"a02bd91e-da7e-11e4-83f2-dfbd63f33884","variableMapping":{"name":"str"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4))"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:435","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String.substring((int + 1))"},"status":-2},{"failures":[],"tindex":"a02bd91f-da7e-11e4-83f2-d1596b127282","variableMapping":{"distance":"maxSpeed","maxSpeed":"maxSpeed"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:47","type":"CtReturnImpl","sourcecode":"return double / (double)"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:767","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[59,154],"tindex":"a02bd920-da7e-11e4-83f2-9f5d3c4259df","variableMapping":{"str":"str","i":"kmInteger"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:429","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (\"\\n\" + int) + \": \""},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:395","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-1},{"failures":[],"tindex":"a02bd921-da7e-11e4-83f2-833aa03b715f","variableMapping":{"newAdjIndex":"index","newBaseIndex":"index"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:253","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:266","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n} else {\n    java.lang.System.java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n}"},"status":-2},{"failures":[],"tindex":"a02bd922-da7e-11e4-83f2-dd1ad5ae1ae4","variableMapping":{"size":"weightLong"},"series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:124","type":"CtAssignmentImpl","sourcecode":"long = 0"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.LevelGraphStorage:399","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.LevelGraphStorage.long"},"status":-2},{"failures":[481,75],"tindex":"a02bd923-da7e-11e4-83f2-b34dd0b05a4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:448","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"a02c7564-da7e-11e4-83f2-b91d8164ebf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:594","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"a02c7565-da7e-11e4-83f2-931f706c6d0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:108","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.BikeFlagEncoder.flagsDefault(boolean, boolean)"},"status":-2},{"failures":[],"tindex":"a02c7566-da7e-11e4-83f2-6d1274b209fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:50","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeSkipIterState.getDistance()"},"status":-2},{"failures":[],"tindex":"a02c7567-da7e-11e4-83f2-270f9e7f2baa","variableMapping":{"line":"highway","lat":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String.substring(0, 1).charAt(0)) == 'S')\n    int = -int;\n"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:490","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[55,56,57,58,191,192,193,152,153,61,232,234,242,245,252,254,255,256,257,259,260,261,262,263,135,265,266,267,136,268,155,156,269,270,271,272,273,274,275,276,157,277,158,278,161,279,280,162,281,282,62,283,284,159,66,69,286,73,74,52,287,77,78,79,80,82,83,85,289,106,107,109,298,299,301,302,305,306,308,313,315,320,322,324,326,112,328,115,117,334,335,337,338,341,342,344,349,351,356,358,360,362,120,364,366,367,368,370,371,374,375,377,382,384,390,123,394,396,397,401,137,406,126,128,412,413,415,416,419,420,422,427,429,434,436,438,440,131,442],"tindex":"a02c7568-da7e-11e4-83f2-4d6e8a09bc85","variableMapping":{"flags":"flags","tmpValue":"backwardBit"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtReturnImpl","sourcecode":"return long | long"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:662","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[138,139,163,465,140,469,142,144,145,146,147,148,149,150,151,534],"tindex":"a02c7569-da7e-11e4-83f2-c7a9b0fa340d","variableMapping":{"arrayLength":"allBits","maxGeoRef":"allBits"},"series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failureDictionary":{"com.graphhopper.storage.LevelGraphStorageTest.testCopyTo":436,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":281,"com.graphhopper.storage.LevelGraphStorageTest.testCannotBeLoadedViaDifferentClass":125,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":535,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":461,"com.graphhopper.GraphHopperAPITest.testNoLoad":496,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":367,"com.graphhopper.reader.OSMReaderTest.testFerry":75,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":192,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":204,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":2,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testMoreReal":103,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":78,"com.graphhopper.storage.LevelGraphStorageTest.testSetNodes":443,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":307,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":507,"com.graphhopper.coll.CompressedArrayTest.testCompress":139,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":199,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":261,"com.graphhopper.storage.LevelGraphStorageTest.testPriosWhileDeleting":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":387,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":344,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSortHighLevelFirst":467,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":508,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":523,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":266,"com.graphhopper.GraphHopperTest.testPrepare":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":398,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":256,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":351,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":485,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":10,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":157,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":458,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":449,"com.graphhopper.storage.LevelGraphStorageTest.internalDisconnect":410,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex":174,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":153,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":8,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":471,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":275,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":343,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":100,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":114,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":11,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":495,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat_withTurnCostEntries":106,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":150,"com.graphhopper.storage.LevelGraphStorageTest.testDetachEdge":128,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":484,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":268,"com.graphhopper.GraphHopperTest.testLoadOSM":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":167,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":474,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":101,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":216,"com.graphhopper.reader.OSMReaderTest.testSort":43,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxAndMinSpeed":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":40,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":108,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":510,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":361,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":115,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":399,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":69,"com.graphhopper.storage.RAMDataAccessTest.testHeader":524,"com.graphhopper.routing.DijkstraTest.initializationError":489,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":326,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":506,"com.graphhopper.storage.LevelGraphStorageTest.testBounds":435,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":340,"com.graphhopper.storage.LevelGraphStorageTest.testPrios":403,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":293,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":109,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteAndOptimize":421,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testMaxAndMinSpeed":25,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSnappedPointAndGeometry":176,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":161,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraph":173,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testEdgeFilter":175,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":494,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":272,"com.graphhopper.coll.OSMIDMapTest.testGetLong":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":271,"com.graphhopper.storage.LevelGraphStorageTest.testDeleteNodeForUnidir":413,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":317,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes":428,"com.graphhopper.storage.LevelGraphStorageTest.testSave_and_fileFormat":126,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode2":430,"com.graphhopper.coll.CompressedArrayTest.testCompress2":138,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":353,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":459,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":308,"com.graphhopper.GraphHopperAPITest.testLoad":289,"com.graphhopper.storage.LevelGraphStorageTest.testNoCreateCalled":411,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":473,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":230,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":345,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":335,"com.graphhopper.storage.LevelGraphStorageTest.testClone":415,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":481,"com.graphhopper.reader.OSMReaderTest.testBarriers":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":298,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testLevelGraphBug":466,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":221,"com.graphhopper.util.GHUtilityTest.testCopy":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":371,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testDifferentVehicles":182,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":187,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":200,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":499,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":527,"com.graphhopper.routing.PathTest.testFindInstruction":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":197,"com.graphhopper.storage.LevelGraphStorageTest.testPropertiesWithNoInit":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":299,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":482,"com.graphhopper.util.EdgeSkipIteratorTest.testUpdateFlags":191,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":236,"com.graphhopper.storage.LevelGraphStorageTest.testInfinityWeight":441,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":31,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":460,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":362,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":324,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":444,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":312,"com.graphhopper.storage.LevelGraphStorageTest.testEnsureSize":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":225,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":532,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":490,"com.graphhopper.storage.LevelGraphStorageTest.testFlags":417,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":372,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":480,"com.graphhopper.util.InstructionListTest.testWayList2":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":168,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":364,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":303,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":113,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":60,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":116,"com.graphhopper.storage.LevelGraphStorageTest.testFootMix":419,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":205,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":511,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":309,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBug1":273,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":334,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":45,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":509,"com.graphhopper.routing.AStarTest.initializationError":493,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":62,"com.graphhopper.coll.OSMIDMapTest.testGet":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":306,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":237,"com.graphhopper.routing.PathBidirRefTest.testExtract":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":12,"com.graphhopper.storage.LevelGraphStorageTest.testEnabledElevation":129,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":486,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints120":178,"com.graphhopper.storage.RAMDataAccessTest.testCopy":520,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":512,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":329,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":392,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":207,"com.graphhopper.storage.RAMDataAccessTest.testSegments":526,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":172,"com.graphhopper.util.GHUtilityTest.testSort2":445,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":279,"com.graphhopper.reader.OSMReaderTest.testMain":42,"com.graphhopper.storage.LevelGraphStorageTest.testDoThrowExceptionIfDimDoesNotMatch":127,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":242,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":316,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":151,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testGrid":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":211,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":241,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectional":434,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":396,"com.graphhopper.storage.LevelGraphStorageTest.test8BytesFlags":422,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdgesWithDelete":426,"com.graphhopper.storage.LevelGraphStorageTest.testDirectional":442,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":530,"com.graphhopper.routing.QueryGraphTest.testIterationBug_163":66,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete":423,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":29,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":472,"com.graphhopper.storage.LevelGraphStorageTest.testAddLocation":429,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":76,"com.graphhopper.storage.StorablePropertiesTest.testStore":105,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":134,"com.graphhopper.storage.GraphHopperStorageTest.testClone":337,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":246,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":347,"com.graphhopper.storage.LevelGraphStorageTest.testDisconnectEdge":137,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":373,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeFilter":405,"com.graphhopper.routing.PathTest.testTime":286,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":23,"com.graphhopper.storage.LevelGraphStorageTest.testNameIndex":132,"com.graphhopper.storage.LevelGraphStorageTest.testEdges":416,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":253,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":498,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":170,"com.graphhopper.reader.OSMReaderTest.testRelation":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":386,"com.graphhopper.storage.LevelGraphStorageTest.testCheckFirstNode":433,"com.graphhopper.util.GHUtilityTest.testSortDirected":447,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxAndMinSpeed":37,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":516,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":65,"com.graphhopper.GraphHopperTest.testFootOnly":85,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":0,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":95,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":244,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":536,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testReverseSpatialKey":469,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":502,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":270,"com.graphhopper.reader.OSMElementTest.testSetTags":533,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":257,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":382,"com.graphhopper.search.NameIndexTest.testCreate":89,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":525,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":63,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":476,"com.graphhopper.routing.QueryGraphTest.testOneWay":451,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":500,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":147,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":99,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":144,"com.graphhopper.reader.OSMReaderTest.testWithBounds":51,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":528,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":227,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":519,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":67,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":379,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":388,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":28,"com.graphhopper.storage.LevelGraphStorageTest.testUnidirectionalEdgeFilter":412,"com.graphhopper.storage.LevelGraphStorageTest.testBigDataEdge":409,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":226,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":7,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":454,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":319,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":245,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":313,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":117,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":156,"com.graphhopper.util.InstructionListTest.testWayList":57,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":363,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":206,"com.graphhopper.GraphHopperAPITest.testDisconnected179":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":374,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":369,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":34,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":288,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":385,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":401,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":81,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":339,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":96,"com.graphhopper.routing.util.EncodedValueTest.testSwap":529,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":202,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":356,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":158,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":491,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":265,"com.graphhopper.storage.LevelGraphStorageTest.testPillarNodes":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":249,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":296,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeProperties":431,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":284,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":333,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testNoErrorOnEdgeCase_lastIndex":501,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":475,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":18,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":330,"com.graphhopper.routing.PathTest.testWayList":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":400,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":378,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":154,"com.graphhopper.coll.OSMIDMapTest.testGet2":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":159,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":513,"com.graphhopper.storage.LevelGraphStorageTest.testCreateDuplicateEdges":438,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":503,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":464,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":318,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":209,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":350,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":304,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":338,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex2":142,"com.graphhopper.storage.LevelGraphStorageTest.testDozendEdges":427,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testInMemIndex3":143,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":521,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":517,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph":177,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":223,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":483,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":184,"com.graphhopper.util.GHUtilityTest.testSort":446,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":391,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":534,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":196,"com.graphhopper.search.NameIndexTest.testPut":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":328,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":336,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":462,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testRMin":468,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":98,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":455,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":478,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":220,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":61,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":453,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":185,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":229,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":504,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":314,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":152,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":479,"com.graphhopper.storage.LevelGraphStorageTest.testGetLocations":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":123,"com.graphhopper.routing.PathTest.testFound":285,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":54,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":217,"com.graphhopper.storage.LevelGraphStorageTest.testCreateLocation":440,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseProperties":487,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeightIfAdvancedEncoder":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":13,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":448,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":310,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":88,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":377,"com.graphhopper.util.InstructionListTest.testEmptyList":190,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":342,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":518,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":276,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":188,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSimpleGraph2":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":278,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":240,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testMaxAndMinSpeed":6,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":239,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":280,"com.graphhopper.reader.PrinctonReaderTest.testRead":287,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":120,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testWayGeometry":104,"com.graphhopper.storage.LevelGraphStorageTest.testUpdateUnidirectional":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":305,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":93,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":366,"com.graphhopper.storage.LevelGraphStorageTest.testIdenticalNodes2":414,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":33,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":315,"com.graphhopper.routing.util.EncodingManagerTest.testTurnFlagCombination":531,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":30,"com.graphhopper.reader.OSMReaderTest.testFoot":41,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":390,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":505,"com.graphhopper.storage.LevelGraphStorageTest.testCopyProperties":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":140,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":149,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":194,"com.graphhopper.reader.OSMReaderTest.testOneWay":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":141,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":346,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":359,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":325,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":4,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":515,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":222,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":384,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":262,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":259,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":260,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":456,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":514,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":232,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testFindingWayGeometry":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":380,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":450,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":331,"com.graphhopper.routing.PathBidirRefTest.testExtract2":255,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":477,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":155,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":169,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":292,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":86,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":358,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":497,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":26,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":47,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":402,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":457,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":165,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":360,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":488,"com.graphhopper.storage.LevelGraphStorageTest.testGetAllEdges":418,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":250,"com.graphhopper.GraphHopperTest.testFootAndCar":53,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":118,"com.graphhopper.storage.LevelGraphStorageTest.testComplexDeleteNode":424,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":20,"com.graphhopper.storage.index.LocationIndexTreeSCTest.testSinglePoints32":181,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":522,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":370,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":301,"com.graphhopper.GraphHopperTest.testPrepareOnly":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCorrectWeight":282,"com.graphhopper.GraphHopperTest.testVia":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":463,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":368,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":49,"com.graphhopper.storage.LevelGraphStorageTest.testGetWeight":406,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":59,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":357,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":234,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":383,"com.graphhopper.routing.AStarBidirectionTest.initializationError":492,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":201,"com.graphhopper.storage.LevelGraphStorageTest.testEdgeReturn":439,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete3":437,"com.graphhopper.storage.LevelGraphStorageTest.testSimpleDelete2":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":107}}]
